/* Date :- 17-JAN-98  */
  
#include <stdio.h>
#include <string.h>
#include "gl.h"    

#define LAST_ROW (sqlca.sqlcode == 1403)  
                                                         
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

EXEC SQL BEGIN DECLARE SECTION; 
                                                                  
   VARCHAR uid_pwd          			 [132],
           hosp_name       				 [120],
           date_time       				 [20],
           user_id          			 [20],
           nd_facility_id                [3],
		   nd_pgm_date     				 [35],
           nd_rep_type     				 [3],
           nd_session_id                 [16],
   		   nd_fm_doc_date				 [11],
   		   nd_to_doc_date				 [11],
   		   nd_fm_doc_type				 [7],
   		   nd_to_doc_type				 [7],
           nd_fm_cust_code               [9],
           nd_to_cust_code               [9],
           nd_order                      [11],
           nd_doc_date                   [11],
           nd_cust_code         		 [9],
           nd_doc_type_code              [7],
           nd_cheque_num				 [11],
		   nd_cheque_date                [11],
		   nd_bank_desc				     [31],
		   nd_org_doc_type_code          [7],
		   nd_org_doc_type_code1		 [7],
		   nd_org_doc_type_code2		 [7],		   
		   nd_org_doc_type_code3		 [7],		   
           nd_ar_select   			     [3000],
           nd_cust_name         		 [61],
  		   nd_fm_doc_num				 [9],
           nd_to_doc_num                 [9],
           ar_customer_long_name         [101],   -- CRF-0120
           ar_customer_short_name        [61],   -- CRF-0120
           ar_customer_alpha_code        [11];

   VARCHAR file_name_arg				 [101];
   VARCHAR p_language_id				 [4];


   int          counter = 0,
    			cnt  	= 1,
    			x = 0,
				nd_no_of_decimal, 
   				nd_rec;

   long int	   	nd_doc_num_hdr,
   				nd_doc_num_line,
           		nd_org_doc_num,
           		nd_org_doc_num1,
           		nd_org_doc_num2,
           		nd_org_doc_num3,
           		nd_total_recs = 0;
           
   double  		nd_amt_local_hdr,
           		nd_amt_local_line,
           		nd_amt_local_line1,
           		nd_amt_local_line2,
           		nd_amt_local_line3,
           		nd_total_amt = 0;        
   
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

char string_var [100];

FILE *fp;
 
int lctr = 0,pctr =0;
char file_name[50];

void proc_main(argc,argv)
char *argv[];
int argc;
{
   char mesg1[50];
   

   strcpy(file_name,WORKING_DIR);

   if (argc != 7)
   {
    int i = 0;
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr); 

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"ARRRECLI");

   strcpy(nd_rep_type.arr,argv[6]);

   strcpy(file_name_arg.arr,argv[5]);

   if (nd_rep_type.arr[0] == 'S')
     strcpy(g_pgm_id,"ARRRECLS");
   else if (nd_rep_type.arr[0] == 'D')
      strcpy(g_pgm_id,"ARRRECLD");

   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle");
      sprintf(mesg1,"Error is %s\n",sqlca.sqlerrm.sqlerrmc);
      disp_message(ERR_MESG,mesg1);
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd");
      proc_exit();
   }

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);
   strcpy(g_facility_id,argv[4]);

 
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);
 
   set_meduser_role();
   strcpy(p_language_id.arr,l_language_id.arr);
   p_language_id.len = l_language_id.len;
 
    
   fetch_param();
   start_prog_msg();
   fetch_desc();

   decl_curs();
   declare_line_cursors();
         
   open_files();
   print_title();
   print_head();

   if (nd_rep_type.arr[0] == 'S')
    { 
        fetch_hdr_cur(); 
    }                
    
   else if (nd_rep_type.arr[0] == 'D')
    { 
     fetch_hdr_cur();
     fetch_line_cur();  
    }

    print_total();
    print_end();

    EXEC SQL DELETE FROM SY_PROG_PARAM
                   WHERE PGM_ID     = 'ARRRECLI'
                     AND SESSION_ID = :nd_session_id
                     AND PGM_DATE   = :nd_pgm_date;

    if (OERROR)
         err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

    end_prog_msg();
    EXEC SQL COMMIT WORK RELEASE;
}

fetch_desc()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   user_id.arr[0]        = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   user_id.len        = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'), USER,NO_OF_DECIMAL
              INTO :hosp_name, :date_time, :user_id,:nd_no_of_decimal
              FROM SY_ACC_ENTITY
			 WHERE ACC_ENTITY_ID = :nd_facility_id;

   if (OERROR)
         err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   user_id.arr[user_id.len]               = '\0';
}

fetch_param()
{
   nd_fm_doc_date.arr[0]		 = '\0';
   nd_to_doc_date.arr[0]		 = '\0';   
   nd_fm_cust_code.arr[0]        = '\0';
   nd_to_cust_code.arr[0]        = '\0';
   nd_fm_doc_type.arr[0]         = '\0';
   nd_to_doc_type.arr[0]         = '\0';
   nd_rep_type.arr[0]            = '\0';
   nd_order.arr[0]               = '\0';
   
   nd_fm_doc_date.len 	 		 = 0;
   nd_to_doc_date.len    		 = 0;   
   nd_fm_cust_code.len           = 0;
   nd_to_cust_code.len           = 0;
   nd_fm_doc_type.len			 = 0;
   nd_to_doc_type.len			 = 0;
   nd_rep_type.len               = 0;
   nd_order.len                  = 0;

   EXEC SQL SELECT OPERATING_FACILITY_ID,
				   PARAM1,PARAM2,
   				   NVL(PARAM3,'!!!!!!!!'),
   				   NVL(PARAM4,'~~~~~~~~'),
                   PARAM5,
                   PARAM6,
                   PARAM7,
                   PARAM8,
                   NVL(PARAM9,'S'),
                   NVL(PARAM10,'D')
              INTO :nd_facility_id,
				   :nd_fm_doc_date,
                   :nd_to_doc_date,
                   :nd_fm_cust_code,
                   :nd_to_cust_code,
                   :nd_fm_doc_type,
                   :nd_to_doc_type,
                   :nd_fm_doc_num,
                   :nd_to_doc_num,
                   :nd_rep_type,
                   :nd_order
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARRRECLI'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;  
               
   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_fm_doc_date.arr[nd_fm_doc_date.len]          = '\0';
   nd_to_doc_date.arr[nd_to_doc_date.len]          = '\0';
   nd_fm_cust_code.arr[nd_fm_cust_code.len]        = '\0';
   nd_to_cust_code.arr[nd_to_cust_code.len]        = '\0';
   nd_fm_doc_type.arr[nd_fm_doc_type.len]          = '\0';
   nd_to_doc_type.arr[nd_to_doc_type.len]          = '\0';
   nd_rep_type.arr[nd_rep_type.len]                = '\0';
   nd_order.arr[nd_order.len]                      = '\0';
}

open_files()
{
  //file_name[50], 
  char err_stmt[70];

   if (nd_rep_type.arr[0] == 'S')
     {
	 //strcpy(file_name,"arrrecls.lis");
	 //strcat(file_name,"arrrecls.lis");
	 //strcpy(OUTPUT_FILE_NAME,"arrrecls.lis");
	   strcpy(OUTPUT_FILE_NAME,file_name_arg.arr);
	   strcat(file_name,OUTPUT_FILE_NAME);
	 }
   else if (nd_rep_type.arr[0] == 'D')
     {
	 //strcpy(file_name,"arrrecld.lis");
	 //strcat(file_name,"arrrecld.lis");
	 //strcpy(OUTPUT_FILE_NAME,"arrrecld.lis");
	   strcpy(OUTPUT_FILE_NAME,file_name_arg.arr);
	   strcat(file_name,OUTPUT_FILE_NAME);
	 }

   if ((fp = fopen(file_name,"w")) == NULL) 
   {
        sprintf(err_stmt,"Error while opening File %s",file_name);
        err_mesg(err_stmt,0,"");
        proc_exit();
   } 
}

decl_curs()
{
strcpy(nd_ar_select.arr,
 "SELECT  to_char(DOC_DATE,'DD/MM/YYYY'), \
  CUST_CODE, DOC_TYPE_CODE, DOC_NUM, CHEQUE_NUM, \
  to_char(CHEQUE_DATE,'DD/MM/YYYY'), \
  BANK_DESC, AMT_LOCAL \
  FROM AR_REC_HDR \
  WHERE           \
  DOC_DATE BETWEEN \
  TO_DATE(NVL(:nd_fm_doc_date,'01/01/1800'),'DD/MM/YYYY') \
  AND  TO_DATE(NVL(:nd_to_doc_date,'31/12/4712'),'DD/MM/YYYY') \
  AND  CUST_CODE BETWEEN \
  NVL(:nd_fm_cust_code,'!!!!!!!!') AND  \
  NVL(:nd_to_cust_code,'~~~~~~~~') \
  AND  DOC_TYPE_CODE between nvl(:nd_fm_doc_type,'!!!!!!') \
  AND  nvl(:nd_to_doc_type,'~~~~~~') \
  AND  to_char(DOC_NUM) BETWEEN DECODE(:nd_fm_doc_num,NULL,0,:nd_fm_doc_num) \
  AND  DECODE(:nd_to_doc_num,NULL,99999999,:nd_to_doc_num) \
  AND  NVL(POSTED_FLAG,'N') = 'Y' \
 ");

      prep_order_by();   /* Append ORDER BY Clause */

      nd_ar_select.len = strlen(nd_ar_select.arr);

     EXEC SQL PREPARE AR_REC_HDR_SELECT FROM :nd_ar_select;

    if(OERROR)
	err_mesg("PREPARE failed on AR_REC_HDR_SELECT",0,"");

    EXEC SQL DECLARE  AR_REC_HDR_CUR CURSOR FOR AR_REC_HDR_SELECT;

    if(OERROR)
	err_mesg("DECLARE failed on AR_REC_HDR_CUR",0,""); 
	
	open_ar_cursor();  
} 

prep_order_by()
{
  switch (nd_order.arr[0])
  {
     case  'D' :  
                  strcat(nd_ar_select.arr,
                     " ORDER BY DOC_DATE ");
                  break;
     case  'C' :  
                  strcat(nd_ar_select.arr,
                     " ORDER BY CUST_CODE ");
                  break;       
     case  'N' :  
                  strcat(nd_ar_select.arr,
                     " ORDER BY DOC_NUM ");
                  break;       
                  
  }
}
  
open_ar_cursor()
{  
   EXEC SQL OPEN AR_REC_HDR_CUR USING 
   				   :nd_fm_doc_date, :nd_to_doc_date,
   				   :nd_fm_cust_code,:nd_to_cust_code,
   				   :nd_fm_doc_type,
   				   :nd_to_doc_type,
                   :nd_fm_doc_num,:nd_fm_doc_num,
                   :nd_to_doc_num,:nd_to_doc_num;
                   
   if (OERROR)
      err_mesg("OPEN failed on Cursor AR_REC_HDR_CUR",0,"");
}
   
fetch_hdr_cur()
{ 
   for(;;)
   {
   nd_doc_date.arr       [0] = '\0';
   nd_cust_code.arr      [0] = '\0';
   nd_doc_type_code.arr  [0] = '\0';
   nd_cheque_num.arr     [0] = '\0';
   nd_cheque_date.arr    [0] = '\0';
   nd_bank_desc.arr      [0] = '\0';

   nd_doc_date.len      = 0;
   nd_cust_code.len     = 0;
   nd_doc_type_code.len = 0;
   nd_cheque_num.len    = 0;
   nd_cheque_date.len   = 0;
   nd_bank_desc.len     = 0;
   
       {
           EXEC SQL FETCH AR_REC_HDR_CUR INTO 
           				  :nd_doc_date,
                          :nd_cust_code,
                          :nd_doc_type_code,
                          :nd_doc_num_hdr,
                          :nd_cheque_num,
                          :nd_cheque_date,
                          :nd_bank_desc,
                          :nd_amt_local_hdr;

           if (OERROR)
                 err_mesg("FETCH failed on cursor AR_REC_HDR_CUR",0,"");
        }

    nd_doc_date.arr[nd_doc_date.len]           = '\0';
    nd_cust_code.arr[nd_cust_code.len]         = '\0';
    nd_doc_type_code.arr[nd_doc_type_code.len] = '\0';
    nd_cheque_num.arr[nd_cheque_num.len]       = '\0';
    nd_cheque_date.arr[nd_cheque_date.len]     = '\0';
    nd_bank_desc.arr[nd_bank_desc.len]         = '\0'; 

    if (LAST_ROW)
       return(0);
    else
        nd_total_amt = nd_total_amt+nd_amt_local_hdr;
        nd_total_recs++;
        fetch_description();
        print_hdr();

    if (nd_rep_type.arr[0] == 'D')    
    {                                                                        
        fetch_line_cur();
    }     
        
    }
     return(1);
}

declare_line_cursors()
{
         EXEC SQL DECLARE AR_REC_LINE_CUR CURSOR FOR
                   SELECT ORG_DOC_TYPE_CODE, ORG_DOC_NUM, AMT_LOCAL
                     FROM AR_REC_LINE
                    WHERE DOC_TYPE_CODE = :nd_doc_type_code
                      AND DOC_NUM = :nd_doc_num_hdr    
                    ORDER BY ORG_DOC_TYPE_CODE, ORG_DOC_NUM;
}

fetch_line_cur()
{
   int count,cunt,mj;
   
       EXEC SQL OPEN AR_REC_LINE_CUR;

         if (OERROR)
            err_mesg("OPEN failed on cursor AR_REC_LINE_CUR",0,"");  
             
       EXEC SQL SELECT COUNT(*) INTO :nd_rec
            FROM AR_REC_LINE
            WHERE DOC_TYPE_CODE = :nd_doc_type_code
            AND DOC_NUM = :nd_doc_num_hdr;   

  count=nd_rec;
  cunt=1;           
  mj = 0;
  mj = count;

  //sprintf(string_var, "count value %d",nd_rec);
  //disp_message(ERR_MESG,string_var);

   if (mj != 0)
   {
     fprintf(fp,"\n");
   }
   


   while(count!=0)
   {
   	nd_org_doc_type_code.arr   [0] = '\0';
   	nd_org_doc_type_code1.arr  [0] = '\0';
   	nd_org_doc_type_code2.arr  [0] = '\0';   
   	nd_org_doc_type_code3.arr  [0] = '\0';   
    nd_org_doc_type_code.len       = 0;
   	nd_org_doc_type_code1.len      = 0;
   	nd_org_doc_type_code2.len      = 0;
   	nd_org_doc_type_code3.len      = 0;   	
    
           EXEC SQL FETCH AR_REC_LINE_CUR
                     INTO :nd_org_doc_type_code,
                          :nd_org_doc_num,
                          :nd_amt_local_line;
                          
           nd_org_doc_type_code.arr[nd_org_doc_type_code.len] = '\0';

           if(count>1)
           {                                                        
                EXEC SQL FETCH AR_REC_LINE_CUR
                     INTO :nd_org_doc_type_code1,
                          :nd_org_doc_num1,
                          :nd_amt_local_line1;
              nd_org_doc_type_code1.arr[nd_org_doc_type_code1.len] = '\0';
              cunt++;
           }

     	   if(count>2)
     	   {
                EXEC SQL FETCH AR_REC_LINE_CUR
                    INTO :nd_org_doc_type_code2,
                         :nd_org_doc_num2,
                         :nd_amt_local_line2;
                nd_org_doc_type_code2.arr[nd_org_doc_type_code2.len] = '\0';
                cunt++;
            }          
              
     	   if(count>3)
     	   {
                EXEC SQL FETCH AR_REC_LINE_CUR
                    INTO :nd_org_doc_type_code3,
                         :nd_org_doc_num3,
                         :nd_amt_local_line3;
                nd_org_doc_type_code3.arr[nd_org_doc_type_code3.len] = '\0';
                cunt++;
            }          

           if (OERROR)
                 err_mesg("FETCH failed on cursor AR_REC_LINE_CUR",0,"");

           print_det_line(cunt);
           count=count-cunt;               
           cunt=1;        
     }

   if (mj != 0)
   {
     fprintf(fp,"\n");
   }
   
  return(1);
}


ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

sql_connect() 
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

fetch_description()
{
     nd_cust_name.arr[0]  = '\0';
     nd_cust_name.len     = 0;
     
  EXEC SQL SELECT LONG_NAME 
           INTO   :nd_cust_name
           FROM   AR_CUSTOMER
           WHERE  CUST_CODE = :nd_cust_code;

     if (OERROR)
         err_mesg("SELECT failed on table AR_CUSTOMER",0,"");

     nd_cust_name.arr[nd_cust_name.len]='\0';
}

        /************ PRINT THE REPORT FRONT PAGE ************/
        
print_title()
{
  void print_hospital_name();
  /*
  fprintf(fp,
"\n\nMDL : AR                                         %-30s                                        %-15s\n",
      hosp_name.arr,date_time.arr);
  */
  print_hospital_name(136,"AR",hosp_name.arr,date_time.arr);

     fprintf(fp,
"OPR : %-10s\n",
user_id.arr);

  fprintf(fp,
"REP : %-8s                                         %-28s                                          PAGE : %4d\n",
    g_pgm_id,
    (nd_rep_type.arr[0] == 'S')? "RECEIPTS LIST - SUMMARY":
     "RECEIPTS LIST - DETAIL ",
     ++pctr);
 {
fprintf(fp,
"----------------------------------------------------------------------------------------------------------------------------------------\n");
 }
//fprintf(fp,"VER : 1.10.01\n");
  fflush(fp); 

fprintf(fp,"\n\n\n\n        INPUT PARAMETERS :\n        ----------------\n\n");

       if (nd_order.arr[0] == "D")   
			fprintf(fp,"                REPORT ORDER         : %-10s\n\n","DOC DATE");
       else if (nd_order.arr[0] == "C")
			fprintf(fp,"                REPORT ORDER         : %-10s\n\n","CUST CODE");
       else  
	   fprintf(fp,"                REPORT ORDER         : %-10s\n\n","DOC NUMBER");
 
fprintf(fp,"                DOC DATE      - FROM : %-10s\n",nd_fm_doc_date.arr);
fprintf(fp,"                DOC DATE      - TO   : %-10s\n\n",nd_to_doc_date.arr);

     if (strcmp(nd_fm_cust_code.arr,"!!!!!!!!")!=0)
       strcpy(nd_fm_cust_code.arr,nd_fm_cust_code.arr);
     else                                            
       strcpy(nd_fm_cust_code.arr,"LOWEST");  

fprintf(fp,"                CUSTOMER CODE - FROM : %-8s\n",nd_fm_cust_code.arr);

     if (strcmp(nd_to_cust_code.arr,"~~~~~~~~")!=0)
       strcpy(nd_to_cust_code.arr,nd_to_cust_code.arr);
     else                                            
       strcpy(nd_to_cust_code.arr,"HIGHEST");  

fprintf(fp,"                CUSTOMER CODE - TO   : %-8s\n\n",nd_to_cust_code.arr);
                                                    
fprintf(fp,"                DOC TYPE CODE        : %-6s\n\n",
strcmp(nd_fm_doc_type.arr,"!!!!!!")?nd_fm_doc_type.arr:"      ");
fprintf(fp,"                DOC NUMBER    - FROM : %-8s\n",nd_fm_doc_num.arr);
fprintf(fp,"                DOC NUMBER    - TO   : %-8s\n\n",nd_to_doc_num.arr);

fprintf(fp,"                REPORT TYPE          : %s\n\n",
   (nd_rep_type.arr[0] == 'D')?"DETAIL":"SUMMARY");
fprintf(fp,"\f");   
  fflush(fp);  
} 

            /************ PRINT THE PAGE HEADING ************/
        
print_head()
{
  /*
  fprintf(fp,
"MDL : AR                                     %-30s                                          %-15s\n",
      hosp_name.arr,date_time.arr);
  */

  print_hospital_name(136,"AR",hosp_name.arr,date_time.arr);

     fprintf(fp,
"OPR : %-10s\n",
user_id.arr);
  fprintf(fp,
"REP : %-8s                                         %-28s                                          PAGE : %4d\n",
    g_pgm_id,
    (nd_rep_type.arr[0] == 'S')?"RECEIPTS LIST - SUMMARY":
                                "RECEIPTS LIST - DETAIL ",
    ++pctr);

fprintf(fp,
"----------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,
"DATE       CUSTOMER                                          DOC NUMBER      CHEQUE NO. CHEQUE DATE             RECEIPT AMOUNT \n");
fprintf(fp,
"                                                                             BANK\n");
fprintf(fp,
"----------------------------------------------------------------------------------------------------------------------------------------\n");

  fflush(fp);
  lctr = 10;
}

            /************ PRINT THE HEADER RECORDS ************/
            
print_hdr()
{
 fprintf(fp, "%-10s %-8s %-40.40s %6s/%-8ld %-10s %-10s              ",
             nd_doc_date.arr, nd_cust_code.arr, nd_cust_name.arr, 
             nd_doc_type_code.arr, nd_doc_num_hdr, nd_cheque_num.arr, 
             nd_cheque_date.arr); 
 print_formated(nd_amt_local_hdr); 

 fprintf(fp, "\n");
 fprintf(fp, "                                                                             %-30s ",nd_bank_desc.arr); 
 fprintf(fp, "\n");   
 lctr+= 2;
 chk_break(1);
}

            /************ PRINT THE DETAIL HEADING ************/

print_detail()
{

if (nd_rec == 1) 
{
fprintf(fp,
"-----------------------------------\n");

fprintf(fp,
"CUSTOMER                 AMOUNT\n");

fprintf(fp,
"-----------------------------------\n");
}

if (nd_rec == 2)
{
fprintf(fp,
"-----------------------------------          -----------------------------------\n");

fprintf(fp,
"CUSTOMER                 AMOUNT              CUSTOMER                 AMOUNT\n");

fprintf(fp,
"-----------------------------------          -----------------------------------\n");
}

if (nd_rec > 2) 
{
fprintf(fp,
"-----------------------------------          -----------------------------------          -----------------------------------\n");
       
fprintf(fp,
"CUSTOMER                 AMOUNT              CUSTOMER                 AMOUNT              CUSTOMER                 AMOUNT\n");

fprintf(fp,
"-----------------------------------          -----------------------------------          -----------------------------------\n");
} 
lctr+=3;
}

            /************ PRINT THE DETAIL RECORDS ************/
            
print_det_line(int nd_recs)
{
   char out_str[30],out_str1[30];
   if (nd_rep_type.arr[0] == 'S')
         return(0);

  if (nd_recs == 1)
  {  
    fprintf(fp,"      %6s%-8ld ",
               nd_org_doc_type_code.arr,
               nd_org_doc_num);
    print_formated(nd_amt_local_line);
  }
    
  if (nd_recs == 2)
  {
    fprintf(fp,"      %6s/%-8ld ",
               nd_org_doc_type_code.arr,
               nd_org_doc_num);
    print_formated(nd_amt_local_line); 
    fprintf(fp, "   ");
    
    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code1.arr,
               nd_org_doc_num1);
    print_formated(nd_amt_local_line1); 
  }

  if (nd_recs == 3)
  {
    fprintf(fp,"      %6s/%-8ld ",
               nd_org_doc_type_code.arr,
               nd_org_doc_num);
    print_formated(nd_amt_local_line); 
    fprintf(fp, "   ");

    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code1.arr,
               nd_org_doc_num1);
    print_formated(nd_amt_local_line1); 
    fprintf(fp, "   ");

    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code2.arr,
               nd_org_doc_num2);
    print_formated(nd_amt_local_line2);

/*
    if ((cnt%3) == 1) 
    {
    fprintf(fp,"\n");   
    }
    cnt++;
*/
  }

  if (nd_recs > 3)
  {
    fprintf(fp,"      %6s/%-8ld ",
               nd_org_doc_type_code.arr,
               nd_org_doc_num);
    print_formated(nd_amt_local_line); 
    fprintf(fp, "   ");

    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code1.arr,
               nd_org_doc_num1);
    print_formated(nd_amt_local_line1); 
    fprintf(fp, "   ");    

    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code2.arr,
               nd_org_doc_num2);
    print_formated(nd_amt_local_line2);
    fprintf(fp, "   ");
    
    fprintf(fp,"%6s/%-8ld ",
               nd_org_doc_type_code3.arr,
               nd_org_doc_num3);
    print_formated(nd_amt_local_line3);

    if ((cnt%4) == 1) 
    {
    fprintf(fp,"");   
    }
    cnt++;
  }

   	fprintf(fp, "\n");
  
  fflush(fp);
  lctr +=3;
  chk_break(3);
}

            /************ PRINT THE TOTALS ************/

print_total()
{
 fprintf(fp,
"                                                                                                                ------------------------\n");

 fprintf(fp, "                                                                                        TOTAL AMOUNT         :  "); 
 print_formated(nd_total_amt); 
 fprintf(fp, "\n");
 fprintf(fp,
"                                                                                                                ------------------------\n");
 fprintf(fp, "                                                                                        TOTAL  TRANSACTIONS  :  ");  
 fprintf(fp, "   %ld\n", nd_total_recs);
}

            /************ PRINT THE REPORT FOOTER ************/
            
print_end()
{
fprintf(fp,
"\n\n                                                      **   END  OF  REPORT   ** \n\n");
  fflush(fp);
  fclose(fp);
}

print_formated(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];
   if (nd_no_of_decimal==3)
      sprintf(out_str,"%11.3f",loc_amount);
   else
      sprintf(out_str,"%11.2f",loc_amount);

      format_amt(out_str,nd_no_of_decimal);

   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {
      fprintf(fp,"%14s",out_str);
   }
   else
   {
      fprintf(fp,"%14s-",out_str);
   }

   
   /*
   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {
      sprintf(out_str,"%11.2f",loc_amount);
      ltrim(out_str);put_comma(out_str);
      sprintf(out_str1,"%14s",out_str);
      fprintf(fp,"%-14s",out_str1);
   }
   else
   {
      sprintf(out_str,"%11.2f",-loc_amount);
      ltrim(out_str);put_comma(out_str);
      sprintf(out_str1,"%14s",out_str);
      fprintf(fp,"%-14s-",out_str1);
   }
   */
}

void print_hospital_name(nd_rep_width    ,
                         nd_mod_id       ,
                         nd_hospital_name,
                         nd_date          )
int  nd_rep_width;
char nd_mod_id[3];
char nd_hospital_name[31];
char nd_date[17];
{
    int i = 0 , pos = 0 , len = 0, len_date = 0 , pos_date = 0, len1=0;

    /*Find the length of Hospital Name*/
    for(len = 0; nd_hospital_name[len] != '\0'; len++);

    /*Find the length of Date*/
    for(len_date = 0; nd_date[len_date] != '\0'; len_date++);

    len1 = (len % 2);

    if (len1==0)
       len1=9;
    else
       len1=10;

    len = len / 2;

    pos = (nd_rep_width / 2	) - len;

	pos_date = nd_rep_width - len_date;

	fprintf(fp,"MDL : %2s",nd_mod_id);

	for(i = len1; i < pos ; fprintf(fp," "),i++);

	fprintf(fp,"%s",nd_hospital_name);

	for(i = i + (len * 2) ; i < pos_date + 1; fprintf(fp," "),i++);

    fprintf(fp,"%s\n",nd_date);
}

chk_break(nol)
int nol;
{    
   if(lctr + nol >= 55)
   {
      fprintf(fp,"\f");  
      lctr = 1;
      print_head();
   }
}