/************************************************************************/
/* OCS MEDICOM VER 1.0                                                   */
/************************************************************************/
/* PROGRAM NAME          : ARRCONIN.PC                                  */
/* AUTHOR                : S. SRIRAM                                    */
/* DATE WRITTEN          : 22-MAR-1993                                  */
/*                                                                      */
/* CALLED FROM           :                                              */
/*                                                                                         */
/*  FUNCTION             :                                              */
/*                                                                                    */
/*  TABLE DETAILS                                                       */
/*                                                                      */
/*        S. No.       TABLENAMES             INPUT/OUTPUT              */
/*                                                                      */
/*         1.        AR_PENDING_DOC           Query/Update              */
/*         2.        SY_PROG_CONTROL           Update/Lookup            */
/*         3.        SY_PROG_MESG                Insert                 */
/*                                                                      */
/*  PARAMETERS           :            -                                 */
/*                                                                      */
/*  SUBROUTINES          :                                              */
/*                                                                      */
/*         1.        ERR_MESG            err_mesg                       */
/*                                                                      */
/*                                                                      */
/************************************************************************/

#include <stdio.h>
#include <string.h>
#include "gl.h" 
#define OERROR (sqlca.sqlcode < 0)

#define LAST_ROW      (sqlca.sqlcode == 1403)
#define RESOURCE_BUSY (sqlca.sqlcode == -54)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define DEST_NAME "arrconin.lis"

#define MAX_LINES 24

#define LEGEND 1

#define CPI15 0x67
#define CPI10 0x50
#define ESC 0x1B


#define SKIP_1   7
#define SKIP_2  18
#define SKIP_2_1 10
#define SKIP_2_2 20
#define SKIP_2_3 68
#define SKIP_3  5
#define SKIP_4  12
#define SKIP_5  32
#define SKIP_6  1
#define SKIP_7  5
#define SKIP_8  12
#define SKIP_9  8
#define SKIP_10 50
#define SKIP_11 5
#define SKIP_12 98
#define SKIP_13 72
#define LENGTH_WORDS 50 
/*
#define DEBUG 0
*/

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd      [132],
           hosp_name    [120],
           date_time    [20],
           user_id      [20],
		   cur_str      [8],
		   sub_cur_str  [8],
           nd_pgm_date  [35],
		   p_language_id [3];

   VARCHAR nd_facility_id   [3],
		   nd_session_id    [16],
           nd_cust_code     [7],
           nd_fm_doc_type   [7],
           nd_to_doc_type   [7],
           nd_fm_doc_num    [9],
           nd_to_doc_num    [9],
           nd_fm_doc_date   [11],
           nd_to_doc_date   [11],
           nd_bill_type     [3],
           nd_con_doc_type  [7],
           nd_con_date      [11],

           d_ar_inv_doc_type_code      [7],
           d_ar_inv_doc_num            [10],
           d_ar_inv_doc_date           [12],
           d_ar_inv_cust_code          [9],
           d_ar_inv_patient_id         [11],
           d_ar_inv_bill_doc_type [7],
           d_ar_inv_bill_num           [10],
           d_ar_inv_cust_ref           [16],
           d_ar_inv_bill_date          [12],
           d_ar_inv_narration          [51],
           d_ar_inv_rowid              [31],

           d_ar_cust_long_name         [101],  --CRF-0120
           d_ar_cust_short_name        [61],  --CRF-0120
           d_ar_cust_add1_desc         [61],
           d_ar_cust_add2_desc         [61],
           d_ar_cust_add3_desc         [61],
           d_ar_cust_zip_desc          [31],
           d_ar_contact_name      [101],  --CRF-0120
           d_ar_contact_name_title [61],  --CRF-0120

           d_ar_mp_patient_name        [31],
	   d_ar_mp_patient_title       [9],

	   d_misc_cust_long_name       [101],  --CRF-0120
	   d_misc_cust_short_name      [101],  --CRF-0120
	   d_misc_cust_add1_desc       [61],
	   d_misc_cust_add2_desc       [61],
	   d_misc_cust_add3_desc       [61],
	   d_misc_cust_zip_desc        [31],

	   d_misc_cust_long_name_chi   [101],  --CRF-0120
	   d_misc_cust_short_name_chi  [101],  --CRF-0120
	   d_misc_cust_add1_desc_chi   [61],
	   d_misc_cust_add2_desc_chi   [61],
	   d_misc_cust_add3_desc_chi   [61],
	   d_misc_cust_zip_desc_chi    [31],
           d_misc_cust_contact_name      [101],  --CRF-0120
           d_misc_contact_name_title [101],  --CRF-0120

           /* Variables for Next Number Generation for the given doc type */
           nd_acc_rowid                [31],
	   nd_next_num                 [9];


char       d_misc_customer_flag,
	   d_chinese_reporting_flag;

VARCHAR temp_file_name[100];

int		no_of_decimal; 

double       d_ar_inv_payable_amt,
             d_ar_inv_gross_amt,
	     d_ar_inv_discount_amt,
             d_ar_pat_amount;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

FILE *fp;
int lctr = 0,pctr =0;
int inv_lctr = 0,inv_pctr = 0,lab_flag = 0,pat_lctr = 0;
char cond_on[3], cond_off[3];

double tot_amount;

int i = 0;
char filename[150];

void proc_main(argc,argv) 
char *argv[];
int argc;
{

 strcpy(filename,WORKING_DIR);
 strcpy(temp_file_name.arr,argv[5]);
 temp_file_name.len = strlen(temp_file_name.arr);  
 

 //strcat(filename,DEST_NAME);   

   if (argc != 6) 
   {
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   sprintf(cond_on,"%c%c",ESC,CPI15); 
   sprintf(cond_off,"%c%c",ESC,CPI10); 

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"ARRCONIN"); 



   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle");
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd\n\n\n");
      proc_exit();
   }

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);

   
   set_meduser_role();

strcpy(p_language_id.arr,l_language_id.arr);
p_language_id.len = l_language_id.len;

/*
   chk_active();
*/

   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   nd_facility_id.arr[0]	= '\0';
   nd_cust_code.arr[0]      = '\0';
   nd_fm_doc_type.arr[0]    = '\0';
   nd_to_doc_type.arr[0]    = '\0';
   nd_fm_doc_num.arr[0]     = '\0';
   nd_to_doc_num.arr[0]     = '\0';
   nd_fm_doc_date.arr[0]    = '\0';
   nd_to_doc_date.arr[0]    = '\0';
   nd_con_doc_type.arr[0]   = '\0';
   nd_con_date.arr[0]       = '\0';
   nd_bill_type.arr[0]      = '\0';

   nd_facility_id.len	 = 0;
   nd_cust_code.len      = 0;
   nd_fm_doc_type.len    = 0;
   nd_to_doc_type.len    = 0;
   nd_fm_doc_num.len     = 0;
   nd_to_doc_num.len     = 0;
   nd_fm_doc_date.len    = 0;
   nd_to_doc_date.len    = 0;
   nd_con_doc_type.len   = 0;
   nd_con_date.len       = 0;
   nd_bill_type.len      = 0;

   EXEC SQL SELECT OPERATING_FACILITY_ID,PARAM1,PARAM2,PARAM3,PARAM4,PARAM5,PARAM6,PARAM7,
		   PARAM8,PARAM9,PARAM10
              INTO nd_facility_id,:nd_cust_code,:nd_fm_doc_type, :nd_to_doc_type,
		   :nd_fm_doc_num, :nd_to_doc_num,:nd_fm_doc_date,
                   :nd_to_doc_date,:nd_bill_type,:nd_con_doc_type,
		   :nd_con_date 
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARRCONIN'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_facility_id.arr[nd_facility_id.len]	 = '\0';
   nd_cust_code.arr[nd_cust_code.len]        = '\0';
   nd_fm_doc_type.arr[nd_fm_doc_type.len]    = '\0';
   nd_to_doc_type.arr[nd_to_doc_type.len]    = '\0';
   nd_fm_doc_num.arr[nd_fm_doc_num.len]      = '\0';
   nd_to_doc_num.arr[nd_to_doc_num.len]      = '\0';
   nd_fm_doc_date.arr[nd_fm_doc_date.len]    = '\0';
   nd_to_doc_date.arr[nd_to_doc_date.len]    = '\0';
   nd_con_doc_type.arr[nd_con_doc_type.len]  = '\0';
   nd_con_date.arr[nd_con_date.len]           = '\0';
   nd_bill_type.arr[nd_bill_type.len]        = '\0';


/*
   start_prog_control();
   start_prog_msg();
*/

   fetch_detls();

   open_files();

   declare_cursors();

   fetch_cust_det();

   //gen_next_doc();

   inv_lctr = inv_pctr = pat_lctr = 0;
   lab_flag = 1;
   tot_amount = 0;
   
   while(fetch_inv_hdr())
   {        
		fetch_patient_name();
	
        print_details();

        tot_amount += d_ar_inv_payable_amt;

   }

   if (pat_lctr != 0)
   {
	  print_footer();
   }

   EXEC SQL DELETE FROM SY_PROG_PARAM
                  WHERE PGM_ID     = 'ARRCONIN'
                    AND SESSION_ID = :nd_session_id
                    AND PGM_DATE   = :nd_pgm_date;
   if (OERROR)   
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
   
   fclose(fp);

/*
   end_prog_msg();
   end_prog_control();
*/
   EXEC SQL COMMIT WORK RELEASE;
}

fetch_detls()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   cur_str.arr[0]		 = '\0'; 
   sub_cur_str.arr[0]    = '\0';
   user_id.arr[0]        = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   cur_str.len		  = 0;
   sub_cur_str.len	  = 0;
   user_id.len        = 0;

   no_of_decimal      = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY'), BASE_CURRENCY,
                   USER, BASE_CURRENCY_DEC,NO_OF_DECIMAL
              INTO :hosp_name, :date_time, :cur_str, :user_id, :sub_cur_str,:no_of_decimal
              FROM SY_ACC_ENTITY
			 WHERE ACC_ENTITY_ID = :nd_facility_id;

   if (OERROR)
         err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   cur_str.arr[cur_str.len]				  = '\0';
   sub_cur_str.arr[sub_cur_str.len]		  = '\0';
   user_id.arr[user_id.len]               = '\0';

}
 
open_files()
{
   char err_stmt[80];
   strcpy(OUTPUT_FILE_NAME,temp_file_name.arr);  
   strcat(filename,OUTPUT_FILE_NAME);

   if ((fp = fopen(filename,"w")) == NULL)
   {
        sprintf(err_stmt,"\nError while opening File %s",filename);
		err_mesg(err_stmt,0,"");
		//err_mesg("\nError while opening File arrrmltr.lis\n",0,"");
        exit(0);
   }

}

declare_cursors()
{
   EXEC SQL DECLARE AR_INV_HDR_CUR CURSOR FOR
             SELECT DOC_TYPE_CODE,
                    DOC_NUM,
                    TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                    CUST_CODE,
                    PATIENT_ID,
                    BILL_DOC_TYPE_CODE,
                    BILL_NUM,
                    TO_CHAR(BILL_DATE,'DD/MM/YYYY'),
                    CUST_REF,
                    NARRATION,
		    NVL(GROSS_AMT,0),
		    NVL(DISCOUNT_AMT,0),
                    NVL(PAYABLE_AMT,0),
		    MISC_CUST_LONG_NAME,
		    MISC_CUST_SHORT_NAME,
		    MISC_CUST_ADD1_DESC,
		    MISC_CUST_ADD2_DESC,
		    MISC_CUST_ADD3_DESC,
		    MISC_CUST_ZIP_DESC,
		    MISC_CUST_LONG_NAME_CHINESE,
		    MISC_CUST_SHORT_NAME_CHINESE,
		    MISC_CUST_ADD1_DESC_CHINESE,
		    MISC_CUST_ADD2_DESC_CHINESE,
		    MISC_CUST_ADD3_DESC_CHINESE,
		    MISC_CUST_ZIP_DESC_CHINESE,
		    CONTACT_NAME,
		    CONTACT_NAME_TITLE,   
                    ROWID
               FROM AR_PENDING_DOC
              WHERE CUST_CODE      = :nd_cust_code
	        AND RPAD(DOC_TYPE_CODE,6,' ')||LTRIM(TO_CHAR(DOC_NUM,'00000009'))
	    BETWEEN RPAD(NVL(:nd_fm_doc_type,'!!!!!!'),6)||
		    NVL(:nd_fm_doc_num,'00000000') AND
	            RPAD(NVL(:nd_to_doc_type,'~~~~~~'),6)||
		    NVL(:nd_to_doc_num,'99999999')
                AND NVL(DOC_DATE,SYSDATE)      >= 
                    NVL(TO_DATE(:nd_fm_doc_date,'DD/MM/YYYY'),to_date('00010101','YYYYDDMM'))
                AND NVL(DOC_DATE,SYSDATE)      <= 
                    NVL(TO_DATE(:nd_to_doc_date,'DD/MM/YYYY'),to_date('47123112','YYYYDDMM'))
                AND BILL_TYPE_CODE = :nd_bill_type
              ORDER BY DOC_TYPE_CODE,DOC_NUM;

    EXEC SQL DECLARE AR_CUSTOMER_CUR CURSOR FOR
        SELECT DECODE(CHINESE_REPORTING_FLAG,'Y',LONG_NAME_CHINESE,LONG_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',SHORT_NAME_CHINESE,SHORT_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD1_DESC_CHINESE,ADD1_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD2_DESC_CHINESE,ADD2_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD3_DESC_CHINESE,ADD3_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ZIP_DESC_CHINESE,ZIP_DESC),
               CONTACT_NAME,
               CONTACT_NAME_TITLE,
	       MISC_CUSTOMER_FLAG,
	       CHINESE_REPORTING_FLAG
          FROM AR_CUSTOMER
         WHERE CUST_CODE = :nd_cust_code;

    EXEC SQL DECLARE AR_PATIENT_CUR CURSOR FOR
              SELECT SHORT_NAME
                FROM MP_PATIENT_MAST
               WHERE PATIENT_ID = :d_ar_inv_patient_id;

    EXEC SQL OPEN AR_INV_HDR_CUR;

    if (OERROR)
         err_mesg("OPEN failed on cursor AR_INV_HDR_CUR",0,"");

}

fetch_inv_hdr()
{

d_ar_inv_doc_type_code.arr[0]      = '\0';
d_ar_inv_doc_num.arr[0]            = '\0';
d_ar_inv_doc_date.arr[0]           = '\0';
d_ar_inv_cust_code.arr[0]          = '\0';
d_ar_inv_patient_id.arr[0]         = '\0';
d_ar_inv_bill_doc_type.arr[0] = '\0';
d_ar_inv_bill_num.arr[0]           = '\0';
d_ar_inv_bill_date.arr[0]          = '\0';
d_ar_inv_cust_ref.arr[0]           = '\0';
d_ar_inv_narration.arr[0]          = '\0';
d_ar_inv_rowid.arr[0]              = '\0';
d_misc_cust_long_name.arr[0]       = '\0';
d_misc_cust_short_name.arr[0]      = '\0';
d_misc_cust_add1_desc.arr[0]       = '\0';
d_misc_cust_add2_desc.arr[0]       = '\0';
d_misc_cust_add3_desc.arr[0]       = '\0';
d_misc_cust_zip_desc.arr[0]        = '\0';
d_misc_cust_long_name_chi.arr[0]   = '\0';
d_misc_cust_short_name_chi.arr[0]  = '\0';
d_misc_cust_add1_desc_chi.arr[0]   = '\0';
d_misc_cust_add2_desc_chi.arr[0]   = '\0';
d_misc_cust_add3_desc_chi.arr[0]   = '\0';
d_misc_cust_zip_desc_chi.arr[0]    = '\0';
d_misc_cust_contact_name.arr[0]    = '\0';
d_misc_contact_name_title.arr[0]  = '\0';


d_ar_inv_doc_type_code.len         = 0;
d_ar_inv_doc_num.len               = 0;
d_ar_inv_doc_date.len              = 0;
d_ar_inv_cust_code.len             = 0;
d_ar_inv_patient_id.len            = 0;
d_ar_inv_bill_doc_type.len    = 0;
d_ar_inv_bill_num.len              = 0;
d_ar_inv_bill_date.len             = 0;
d_ar_inv_cust_ref.len              = 0;
d_ar_inv_narration.len             = 0;
d_ar_inv_rowid.len                 = 0;
d_misc_cust_long_name.len          = 0;
d_misc_cust_short_name.len         = 0;
d_misc_cust_add1_desc.len          = 0;
d_misc_cust_add2_desc.len          = 0;
d_misc_cust_add3_desc.len          = 0;
d_misc_cust_zip_desc.len           = 0;
d_misc_cust_long_name_chi.len      = 0;
d_misc_cust_short_name_chi.len     = 0;
d_misc_cust_add1_desc_chi.len      = 0;
d_misc_cust_add2_desc_chi.len      = 0;
d_misc_cust_add3_desc_chi.len      = 0;
d_misc_cust_zip_desc_chi.len       = 0;
d_misc_cust_contact_name.len       = 0;
d_misc_contact_name_title.len  = 0;

d_ar_inv_payable_amt               = 0;
d_ar_inv_gross_amt                 = 0;
d_ar_inv_discount_amt              = 0;

    EXEC SQL FETCH AR_INV_HDR_CUR
              INTO :d_ar_inv_doc_type_code,
                   :d_ar_inv_doc_num,
                   :d_ar_inv_doc_date,
                   :d_ar_inv_cust_code,
                   :d_ar_inv_patient_id,
                   :d_ar_inv_bill_doc_type,
                   :d_ar_inv_bill_num,
                   :d_ar_inv_bill_date,
                   :d_ar_inv_cust_ref,
                   :d_ar_inv_narration,
                   :d_ar_inv_gross_amt,
                   :d_ar_inv_discount_amt,
                   :d_ar_inv_payable_amt,
		   :d_misc_cust_long_name,
		   :d_misc_cust_short_name,
		   :d_misc_cust_add1_desc,
		   :d_misc_cust_add2_desc,
		   :d_misc_cust_add3_desc,
		   :d_misc_cust_zip_desc,
		   :d_misc_cust_long_name_chi,
		   :d_misc_cust_short_name_chi,
		   :d_misc_cust_add1_desc_chi,
		   :d_misc_cust_add2_desc_chi,
		   :d_misc_cust_add3_desc_chi,
		   :d_misc_cust_zip_desc_chi,
                   :d_misc_cust_contact_name,
                   :d_misc_contact_name_title,
                   :d_ar_inv_rowid;
    if (OERROR)
         err_mesg("FETCH failed on cursor AR_INV_HDR_CUR",0,"");

d_ar_inv_doc_type_code.arr[d_ar_inv_doc_type_code.len] = '\0';
d_ar_inv_doc_num.arr[d_ar_inv_doc_num.len] = '\0';
d_ar_inv_doc_date.arr[d_ar_inv_doc_date.len] = '\0';
d_ar_inv_cust_code.arr[d_ar_inv_cust_code.len] = '\0';
d_ar_inv_patient_id.arr[d_ar_inv_patient_id.len] = '\0';
d_ar_inv_bill_doc_type.arr[d_ar_inv_bill_doc_type.len] = '\0';
d_ar_inv_bill_num.arr[d_ar_inv_bill_num.len] = '\0';
d_ar_inv_bill_date.arr[d_ar_inv_bill_date.len] = '\0';
d_ar_inv_cust_ref.arr[d_ar_inv_cust_ref.len] = '\0';
d_ar_inv_narration.arr[d_ar_inv_narration.len] = '\0';
d_misc_cust_long_name.arr[d_misc_cust_long_name.len] = '\0';
d_misc_cust_short_name.arr[d_misc_cust_short_name.len] = '\0';
d_misc_cust_add1_desc.arr[d_misc_cust_add1_desc.len] = '\0';
d_misc_cust_add2_desc.arr[d_misc_cust_add2_desc.len] = '\0';
d_misc_cust_add3_desc.arr[d_misc_cust_add3_desc.len] = '\0';
d_misc_cust_zip_desc.arr[d_misc_cust_zip_desc.len] = '\0';
d_misc_cust_long_name_chi.arr[d_misc_cust_long_name_chi.len] = '\0';
d_misc_cust_short_name_chi.arr[d_misc_cust_short_name_chi.len] = '\0';
d_misc_cust_add1_desc_chi.arr[d_misc_cust_add1_desc_chi.len] = '\0';
d_misc_cust_add2_desc_chi.arr[d_misc_cust_add2_desc_chi.len] = '\0';
d_misc_cust_add3_desc_chi.arr[d_misc_cust_add3_desc_chi.len] = '\0';
d_misc_cust_zip_desc_chi.arr[d_misc_cust_zip_desc_chi.len] = '\0';
d_misc_cust_contact_name.arr[d_misc_cust_contact_name.len]  = '\0';
d_misc_contact_name_title.arr[d_misc_contact_name_title.len]  = '\0';

   if (LAST_ROW)
       return (0);
   else
       return (1);

}

fetch_cust_det()
{
    EXEC SQL OPEN AR_CUSTOMER_CUR;

    if (OERROR)
         err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR",0,"");

    d_ar_cust_long_name.arr[0]          = '\0';
    d_ar_cust_short_name.arr[0]         = '\0';
    d_ar_cust_add1_desc.arr[0]          = '\0';
    d_ar_cust_add2_desc.arr[0]          = '\0';
    d_ar_cust_add3_desc.arr[0]          = '\0';
    d_ar_cust_zip_desc.arr[0]           = '\0';
    d_ar_contact_name.arr[0]       = '\0';
    d_ar_contact_name_title.arr[0] = '\0';
    d_misc_customer_flag                = '\0';
    d_chinese_reporting_flag            = '\0';

    d_ar_cust_long_name.len             = 0;
    d_ar_cust_short_name.len            = 0;
    d_ar_cust_add1_desc.len             = 0;
    d_ar_cust_add2_desc.len             = 0;
    d_ar_cust_add3_desc.len             = 0;
    d_ar_cust_zip_desc.len              = 0;
    d_ar_contact_name.len          = 0;
    d_ar_contact_name_title.len    = 0;

    EXEC SQL FETCH AR_CUSTOMER_CUR
              INTO :d_ar_cust_long_name,
                   :d_ar_cust_short_name,
                   :d_ar_cust_add1_desc,
                   :d_ar_cust_add2_desc,
                   :d_ar_cust_add3_desc,
                   :d_ar_cust_zip_desc,
                   :d_ar_contact_name,
                   :d_ar_contact_name_title,
		   :d_misc_customer_flag,
		   :d_chinese_reporting_flag;

     if (OERROR)
         err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR",0,"");

d_ar_cust_long_name.arr[d_ar_cust_long_name.len] = '\0';
d_ar_cust_short_name.arr[d_ar_cust_short_name.len] = '\0';
d_ar_cust_add1_desc.arr[d_ar_cust_add1_desc.len] = '\0';
d_ar_cust_add2_desc.arr[d_ar_cust_add2_desc.len] = '\0';
d_ar_cust_add3_desc.arr[d_ar_cust_add3_desc.len] = '\0';
d_ar_cust_zip_desc.arr[d_ar_cust_zip_desc.len] = '\0';
d_ar_contact_name.arr[d_ar_contact_name.len] = '\0';
d_ar_contact_name_title.arr[d_ar_contact_name_title.len] = '\0';

if(d_misc_customer_flag == 'Y') {
    if(d_chinese_reporting_flag == 'Y') {
	strcpy(d_ar_cust_long_name.arr,d_misc_cust_long_name_chi.arr);
	strcpy(d_ar_cust_short_name.arr,d_misc_cust_short_name_chi.arr);
	strcpy(d_ar_cust_add1_desc.arr,d_misc_cust_add1_desc_chi.arr);
	strcpy(d_ar_cust_add2_desc.arr,d_misc_cust_add2_desc_chi.arr);
	strcpy(d_ar_cust_add3_desc.arr,d_misc_cust_add3_desc_chi.arr);
	strcpy(d_ar_cust_zip_desc.arr,d_misc_cust_zip_desc_chi.arr);
    }
    else {
	strcpy(d_ar_cust_long_name.arr,d_misc_cust_long_name.arr);
	strcpy(d_ar_cust_short_name.arr,d_misc_cust_short_name.arr);
	strcpy(d_ar_cust_add1_desc.arr,d_misc_cust_add1_desc.arr);
	strcpy(d_ar_cust_add2_desc.arr,d_misc_cust_add2_desc.arr);
	strcpy(d_ar_cust_add3_desc.arr,d_misc_cust_add3_desc.arr);
	strcpy(d_ar_cust_zip_desc.arr,d_misc_cust_zip_desc.arr);
    }

    strcpy(d_ar_contact_name.arr,d_misc_cust_contact_name.arr);
    strcpy(d_ar_contact_name_title.arr,d_misc_contact_name_title.arr);

    d_ar_cust_long_name.len = strlen(d_ar_cust_long_name.arr);
    d_ar_cust_short_name.len = strlen(d_ar_cust_short_name.arr);
    d_ar_cust_add1_desc.len = strlen(d_ar_cust_add1_desc.arr);
    d_ar_cust_add2_desc.len = strlen(d_ar_cust_add2_desc.arr);
    d_ar_cust_add3_desc.len = strlen(d_ar_cust_add3_desc.arr);
    d_ar_cust_zip_desc.len = strlen(d_ar_cust_zip_desc.arr);
    d_ar_contact_name.len = strlen(d_ar_contact_name.arr);
    d_ar_contact_name_title.len = strlen(d_ar_contact_name_title.arr);
  }
}


fetch_patient_name()
{

d_ar_mp_patient_name.arr[0] = '\0';
d_ar_mp_patient_name.len    = 0;

     EXEC SQL OPEN AR_PATIENT_CUR;

     if (OERROR)
         err_mesg("OPEN failed on cursor AR_PATIENT_CUR",0,"");

     EXEC SQL FETCH AR_PATIENT_CUR
               INTO :d_ar_mp_patient_name;

     if (OERROR)
         err_mesg("FETCH failed on cursor AR_PATIENT_CUR",0,"");

     d_ar_mp_patient_name.arr[d_ar_mp_patient_name.len] = '\0';

}

print_page_head()
{

int i=0;
static int g_first = 1;

   pctr++;

   inv_lctr = 0;
   inv_pctr++;

   if (inv_pctr > 1)
      print_balance1();

   fprintf(fp,"%s",cond_off);

   if(!g_first)
       fprintf(fp,"\f");

   g_first=0;

   for (i=0;i<SKIP_1;i++) fprintf(fp,"\n");
   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-40s",d_ar_inv_cust_code.arr);
   for (i=0;i<SKIP_2_1;i++) fprintf(fp," ");
   fprintf(fp,"%-6s %s %-8s\n",nd_con_doc_type.arr,
       (nd_con_doc_type.len != 0 && nd_con_doc_type.len != 0)?"/":"",
                 nd_next_num.arr);

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-40s\n",d_ar_cust_long_name.arr);

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-30s",d_ar_cust_add1_desc.arr);
   for (i=0;i<SKIP_2_2;i++) fprintf(fp," ");
   fprintf(fp,"%10s\n",nd_con_date.arr);

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-30s\n",d_ar_cust_add2_desc.arr);

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-30s",d_ar_cust_add3_desc.arr);
   for (i=0;i<SKIP_2_2;i++) fprintf(fp," ");
   if (!lab_flag)
       fprintf(fp,"%s\n",d_ar_inv_patient_id.arr);
   else
       fprintf(fp,"\n");

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-30s\n",d_ar_cust_zip_desc.arr);

   for (i=0;i<SKIP_2_3;i++) fprintf(fp," ");
   if (!lab_flag)
       fprintf(fp,"%-6s %s %-8s\n",d_ar_inv_bill_doc_type.arr,
                 (d_ar_inv_bill_doc_type.len != 0 &&
                  d_ar_inv_bill_num.len != 0)?"/":"",
               d_ar_inv_bill_num.arr);
   else
       fprintf(fp,"\n");

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-40s\n",d_ar_contact_name.arr);

   for (i=0;i<SKIP_2;i++) fprintf(fp," ");
   fprintf(fp,"%-40s",d_ar_contact_name_title.arr);

/*
   for (i=0;i<SKIP_2_1;i++) fprintf(fp," ");
   fprintf(fp,"%s\n",d_ar_inv_cust_ref.arr);
*/
   fprintf(fp,"\n");
  
   for (i=0;i<SKIP_3;i++) fprintf(fp,"\n");
   fprintf(fp,"REF : HOSPITAL CHARGES\n");

/*
   if (inv_pctr > 1)
        print_balance2();
*/
}

print_details()
{

  if (pat_lctr > MAX_LINES || pat_lctr == 0)
      print_pat_head();


   for (i=0;i<SKIP_6;i++) fprintf(fp," ");
   fprintf(fp,"%-6s/%-8s %-10s %-10s %-6s/%-8s %-2s %-30s",
                  d_ar_inv_doc_type_code.arr,
                  d_ar_inv_doc_num.arr,
                  d_ar_inv_doc_date.arr,
                  d_ar_inv_bill_date.arr,
                  d_ar_inv_bill_doc_type.arr,
                  d_ar_inv_bill_num.arr,
                  nd_bill_type.arr,
		  d_ar_mp_patient_name.arr);

   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   print_formated(d_ar_inv_payable_amt);
   fprintf(fp,"\n");
   /*
   for (i=0;i<SKIP_5;i++) fprintf(fp," ");
   fprintf(fp,"%s\n",d_ar_mp_patient_name.arr);
   */
   pat_lctr += 1;

}


print_pat_head()
{

   print_page_head();

   for (i=0;i<SKIP_6;i++) fprintf(fp," ");

   fprintf(fp,"%s",cond_on);
   fprintf(fp,"INVOICE NO    INVOICE DATE BILL DATE  BILL TYPE/NO   TYPE PATIENT NAME");

/*
   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"                 AMOUNT");
*/
   fprintf(fp,"\n");
   for (i=0;i<SKIP_6;i++) fprintf(fp," ");
   fprintf(fp,"----------    ------------ ---------  -------------- ---- ------------------------------");
/*
   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"----------------");
*/
   fprintf(fp,"\n");

   if (inv_pctr > 1)
        print_balance2();


   pat_lctr = 0;
}


print_total(l_amount)
double l_amount;
{
   char out_str[10][133];
   int no_of_lines;
   fprintf(fp,"\n");
   for (i=0;i<SKIP_12;i++) fprintf(fp," ");
   for (i=0;i<18;i++) fprintf(fp,"-");
   fprintf(fp,"\n");
   for (i=0;i<SKIP_11;i++) fprintf(fp," ");
   fprintf(fp,"DETAILS AS PER ATTACHED BILL      ");
   fprintf(fp,"                                           TOTAL :      ");
   print_formated_tot(l_amount);
   fprintf(fp,"\n");
   for (i=0;i<SKIP_12;i++) fprintf(fp," ");
   for (i=0;i<18;i++) fprintf(fp,"-");
   fprintf(fp,"\n");
   for (i=0;i<SKIP_11;i++) fprintf(fp," "); 

   if (no_of_decimal == 2)
       no_of_lines = print_in_words(l_amount,LENGTH_WORDS,sub_cur_str.arr,out_str,2);
   else
       no_of_lines = print_in_words(l_amount,LENGTH_WORDS,sub_cur_str.arr,out_str,3);	    


   fprintf(fp,"\n\n");
   
   if (l_amount)
      fprintf(fp,"%-6s", cur_str.arr); 
   for (i =0;i<no_of_lines;i++)
      fprintf(fp,"     %s\n", out_str[i]);   
}

print_footer()
{
    for (i=pat_lctr;i<MAX_LINES;i++) fprintf(fp,"\n");
    print_total(tot_amount);
    fprintf(fp,"%s",cond_off);
}

print_balance1()
{ 
 int i = 0;

    fprintf(fp,"\n");
    for (i=0;i<SKIP_13;i++) fprintf(fp," ");
    fprintf(fp,"C/F BALANCE     :      ");
    print_formated_tot(tot_amount);
    fprintf(fp,"\n");
}
    
print_balance2()
{
 int i = 0;
    pat_lctr ++;
    inv_lctr ++;
    for (i=0;i<SKIP_13;i++) fprintf(fp," ");
    fprintf(fp,"B/F BALANCE     :      ");
    print_formated_tot(tot_amount);
    fprintf(fp,"\n");
}

ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

//suresh
print_formated(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];

   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {      
      if (no_of_decimal == 3)
	      sprintf(out_str,"%10.3f",loc_amount);
      else
	      sprintf(out_str,"%10.2f",loc_amount);
	  
	  //sprintf(out_str,"%10.2f",loc_amount);
      //ltrim(out_str);	  
	  //l_put_comma(out_str);

	  format_amt(out_str,no_of_decimal);

      sprintf(out_str1,"%15s",out_str);
      fprintf(fp,"%-15s ",out_str1);
   }
   else
   {
      if (no_of_decimal == 3)
	      sprintf(out_str,"%10.3f",loc_amount);
      else
	      sprintf(out_str,"%10.2f",loc_amount);
      
	  //sprintf(out_str,"%10.2f",-loc_amount);
      //ltrim(out_str);
	  
	  //l_put_comma(out_str);
	  format_amt(out_str,no_of_decimal);

      sprintf(out_str1,"%15s",out_str);
      fprintf(fp,"%-15s-",out_str1);
   }
}

print_formated_tot(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];

   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {
      if (no_of_decimal == 3)
	      sprintf(out_str,"%13.3f",loc_amount);
      else
	      sprintf(out_str,"%13.2f",loc_amount);

         //ltrim(out_str);	  
	    //l_put_comma(out_str);
	     format_amt(out_str,no_of_decimal);

      sprintf(out_str1,"%20s",out_str);
      fprintf(fp,"%-20s ",out_str1);
   }
   else
   {
      if (no_of_decimal == 3)
	      sprintf(out_str,"%13.3f",-loc_amount);
      else
	      sprintf(out_str,"%13.2f",-loc_amount);

      //sprintf(out_str,"%13.2f",-loc_amount);
      //ltrim(out_str);
	  
	  //l_put_comma(out_str);
	  format_amt(out_str,no_of_decimal);

      sprintf(out_str1,"%20s",out_str);
      fprintf(fp,"%-20s-",out_str1);
   }
}

gen_next_doc()
{

     EXEC SQL SELECT ROWID, NEXT_DOC_NO
              INTO :nd_acc_rowid,:nd_next_num
              FROM SY_ACC_ENTITY_DOC_TYPE
              WHERE   DOC_TYPE_CODE = :nd_con_doc_type 
              FOR UPDATE OF NEXT_DOC_NO;
    if (OERROR)
         err_mesg("OPEN failed on cursor SY_ACC_ENTITY_DOC_TYPE",0,"");

    if (RESOURCE_BUSY)
         err_mesg("Unable to LOCK SY_ACC_ENTITY_DOC_TYPE ",0,"");

    EXEC SQL UPDATE SY_ACC_ENTITY_DOC_TYPE
             SET    NEXT_DOC_NO = :nd_next_num + 1
             WHERE  ROWID       = :nd_acc_rowid;

    if (OERROR)
         err_mesg("UPDATE failed on cursor SY_ACC_ENTITY_DOC_TYPE",0,"");

}
