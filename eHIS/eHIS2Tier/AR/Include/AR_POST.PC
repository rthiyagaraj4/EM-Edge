#include <stdio.h>
#include <math.h>
        
 
#define OERROR (sqlca.sqlcode < 0)

#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define TABLE_ALREADY_EXISTS (sqlca.sqlcode == -955)
/*
#define DEBUG 0
*/  
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR     hdr_rowid_passed                     [31],

            l_ar_hdr_doc_type_code                [7], 
            l_ar_hdr_doc_num                      [9],
            l_ar_hdr_cust_code                    [9],
            l_ar_hdr_doc_date                     [12],

            l_ar_hdr_acc_entity_code              [5],
            l_ar_hdr_doc_amt	                  [17],
            l_ar_hdr_post_month                   [3],
            l_ar_hdr_post_year                    [5],
            l_ar_hdr_misc_clong_name          [41],
            l_ar_hdr_misc_cshort_name         [16],
            l_ar_hdr_misc_cadd1_desc          [31],
            l_ar_hdr_misc_cadd2_desc          [31],
            l_ar_hdr_misc_cadd3_desc          [31],
            l_ar_hdr_misc_czip_desc           [31],
            l_ar_hdr_misc_long_chinese            [41],
            l_ar_hdr_misc_short_chinese           [16],
            l_ar_hdr_misc_add1_chinese            [31],
            l_ar_hdr_misc_add2_chinese            [31],
            l_ar_hdr_misc_add3_chinese            [31],
            l_ar_hdr_misc_zip_chinese             [31],
            l_ar_hdr_tel_num                      [31],
            l_ar_hdr_contact_name                 [41],
            l_ar_hdr_contact_name_title           [41],
            l_ar_hdr_error_flag                   [2],
            l_ar_hdr_print_flag                   [2],
            l_ar_hdr_rowid                        [31],

            l_ar_ihdr_acc_entity_code            [5],
            l_ar_ihdr_doc_type_code              [7],
            l_ar_ihdr_doc_num                    [9],
            l_ar_ihdr_org_doc_type_code          [7],
            l_ar_ihdr_org_doc_num                [9],
            l_ar_ihdr_last_line_num              [5],
            l_ar_ihdr_cust_code                  [8],
            l_ar_ihdr_narration                  [51],
            l_ar_ihdr_base_date                  [12],
            l_ar_ihdr_due_date                   [12],
            l_ar_ihdr_gross_amt                  [19],
            l_ar_ihdr_payable_amt                [19],
            l_ar_ihdr_discount_amt               [19],
            l_ar_ihdr_doc_amt                    [19],
            l_ar_ihdr_currency_code              [19],
            l_ar_ihdr_exchg_rate                 [20],
            l_ar_ihdr_pmnt_terms_code            [3],
            l_ar_ihdr_settlement_date            [12],
            l_ar_ihdr_settlement_perc            [7],
            l_ar_ihdr_cust_ref                   [16],
            l_ar_ihdr_patient_id                 [21],
            l_ar_ihdr_billing_group              [3],
            l_ar_ihdr_bill_doc_type_code         [7],
            l_ar_ihdr_bill_type_code             [2],
            l_ar_ihdr_bill_num                   [9],
            l_ar_ihdr_bill_date                  [12],
            l_ar_ihdr_doctor_fee_amt             [19],
            l_ar_ihdr_main_acc1_code             [7],
            l_ar_ihdr_main_acc2_code             [5],
            l_ar_ihdr_sub_group_code       [4],
            l_ar_ihdr_sub_line_code        [9],
            l_ar_ihdr_dept_code                  [11],
            l_ar_ihdr_product_group_code         [4],
            l_ar_ihdr_product_line_code          [5],
            l_ar_ihdr_post_month                 [3],
            l_ar_ihdr_post_year                  [5],
            l_ar_ihdr_rowid                      [31],
            l_ar_ihdr_adj_type                   [3],
			l_consolidated_yn                    [2],

            l_ar_line_acc_entity_code            [5],
            l_ar_line_doc_type_code              [7],
            l_ar_line_doc_num                    [9],
            l_ar_line_org_doc_type_code          [7],
            l_ar_line_org_doc_num                [9],
            l_ar_line_line_num                   [5],
            l_ar_line_main_acc1_code             [7],
            l_ar_line_main_acc2_code             [5],
            l_ar_line_sub_group_code       [4],
            l_ar_line_sub_line_code        [9],
            l_ar_line_dept_code                  [11],
            l_ar_line_product_group_code         [4],
            l_ar_line_product_line_code          [5],
            l_ar_line_amount                     [19],
            l_ar_line_narration                  [51],
            l_ar_line_rowid                      [31],
            l_ar_interface_code                    [2];

VARCHAR  d_pat_doc_type_code          [7],
         d_pat_doc_num                [9],
         d_pat_patient_id             [21],
         d_pat_bill_doc_type_code     [7],
         d_pat_bill_num               [9],
         d_pat_inv_doc_type_code      [7],
         d_pat_inv_doc_num            [9],
         d_pat_bill_date              [12],
         d_pat_rowid                  [31];

double       d_pat_amount ,
             d_pat_abs_amount ;


 VARCHAR    l_cust_ref1[16],
            l_narration[51];

   int      l_ar_pend_last_doc_line_num;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA;


gl_doc_insert(rowid,ar_interface,l_trn_type,l_adj_type)
char rowid[],ar_interface[],l_trn_type,l_adj_type;
{
   EXEC SQL BEGIN DECLARE SECTION;

       int     l_line_num = 0;
       char    d_ar_adj_type;

   EXEC SQL END DECLARE SECTION;

   static int decl_flg = 1;

   d_ar_adj_type = l_adj_type;

   strcpy(hdr_rowid_passed.arr,rowid);
   hdr_rowid_passed.len = strlen(hdr_rowid_passed.arr);

   strcpy(l_ar_interface_code.arr,ar_interface);
   l_ar_interface_code.len = strlen(l_ar_interface_code.arr);

   if (decl_flg) dn_post_declare_curs();
   
   decl_flg = 0;

   dn_post_select_rec(l_trn_type);

   dn_post_open_ihdr(l_trn_type);

   l_cust_ref1.arr[0] = '\0';
   l_cust_ref1.len = 0; 
   l_narration.arr[0] = '\0';
   l_narration.len = 0; 

   while (dn_post_fetch_dn_inv_hdr(l_trn_type))
   {
      if (l_trn_type == 'A')
      {
           l_adj_type    = l_ar_ihdr_adj_type.arr[0];
           d_ar_adj_type = l_ar_ihdr_adj_type.arr[0];
      }

      l_line_num ++;


      if ((strcmp(l_ar_ihdr_doc_type_code.arr,l_ar_ihdr_org_doc_type_code.arr)==0)  &&
          (strcmp(l_ar_ihdr_doc_num.arr,l_ar_ihdr_org_doc_num.arr)==0))
      {
          strcpy(l_cust_ref1.arr,l_ar_ihdr_cust_ref.arr);
          l_cust_ref1.arr[10] = '\0';
          l_cust_ref1.len = strlen(l_cust_ref1.arr);

          strcpy(l_narration.arr,l_ar_ihdr_narration.arr);
          l_narration.len = strlen(l_narration.arr);
          dn_posting(0,l_adj_type,l_trn_type);
      }
      else
	  {
         dn_posting(1,l_adj_type,l_trn_type);

	 }


  if (l_ar_interface_code.arr[0] == 'O')
  {

  EXEC SQL INSERT INTO GL_TXN_DOC_LINE
         (
           ACC_ENTITY_CODE,
           BATCH_NUM,
           DOC_TYPE_CODE,
           DOC_NUM,
           MAIN_ACC1_CODE,
           MAIN_ACC2_CODE,
           SUBLEDGER_GROUP_CODE,
           SUBLEDGER_LINE_CODE,
           DEPT_CODE,
           PRODUCT_GROUP_CODE,
           PRODUCT_LINE_CODE,
           FOREIGN_AMT,
           LOCAL_AMT,
           NARRATION,
           LINE_NUM,
           INTER_ACC_ENTITY,
		   CUST_SUPP_CODE
         )
      VALUES
         (
           :l_ar_hdr_acc_entity_code,
           0,
           :l_ar_ihdr_doc_type_code,
           :l_ar_ihdr_doc_num,
           :l_ar_ihdr_main_acc1_code,
           :l_ar_ihdr_main_acc2_code,
           :l_ar_ihdr_sub_group_code,
           :l_ar_ihdr_sub_line_code,
           :l_ar_ihdr_dept_code,
           :l_ar_ihdr_product_group_code,
           :l_ar_ihdr_product_line_code,
           NULL,
           decode(:d_ar_adj_type,'D',:l_ar_ihdr_doc_amt,-1 * :l_ar_ihdr_doc_amt),
           :l_ar_ihdr_narration,
           :l_line_num,
           NULL,
		   :l_ar_ihdr_cust_code
 
         );

     if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_LINE - 1",0,"");    
   }

      dn_post_open_line(l_trn_type);

      while (dn_post_fetch_dn_line(l_trn_type))
      {
          l_line_num++;
   
  if (l_ar_interface_code.arr[0] == 'O')
  {

  EXEC SQL INSERT INTO GL_TXN_DOC_LINE
         (
           ACC_ENTITY_CODE,
           BATCH_NUM,
           DOC_TYPE_CODE,
           DOC_NUM,
           MAIN_ACC1_CODE,
           MAIN_ACC2_CODE,
           SUBLEDGER_GROUP_CODE,
           SUBLEDGER_LINE_CODE,
           DEPT_CODE,
           PRODUCT_GROUP_CODE,
           PRODUCT_LINE_CODE,
           FOREIGN_AMT,
           LOCAL_AMT,
           NARRATION,
           LINE_NUM,
           INTER_ACC_ENTITY,
		   CUST_SUPP_CODE
         )
      VALUES
         (
           :l_ar_hdr_acc_entity_code,
           0, 
           :l_ar_line_doc_type_code,
           :l_ar_line_doc_num,   
           :l_ar_line_main_acc1_code,
           :l_ar_line_main_acc2_code,
           :l_ar_line_sub_group_code,
           :l_ar_line_sub_line_code,
           :l_ar_line_dept_code,
           :l_ar_line_product_group_code,
           :l_ar_line_product_line_code,
           NULL,
           decode(:d_ar_adj_type,'D',:l_ar_line_amount * -1,:l_ar_line_amount),
           :l_ar_line_narration,
           :l_line_num,
           null ,
		   :l_ar_ihdr_cust_code
          );

     if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_LINE - for line",0,"");    
     }
    }
   }

   dn_post_ar_insertings(l_trn_type == 'A'?'D':l_adj_type,l_trn_type);

   if (l_ar_interface_code.arr[0] == 'O')
   {
   EXEC SQL INSERT INTO GL_TXN_DOC_HDR
          (
           ACC_ENTITY_CODE,
           DOC_TYPE_CODE,
           BATCH_NUM,
           DOC_NUM,
           DOC_DATE,
           DOC_REF,
           NARRATION,
           POST_MONTH,
           POST_YEAR,
           CTRL_AMT,
           DOC_NATURE,
           UNIT_TYPE_CODE,
           CURRENCY_CODE,
           EXCHG_RATE,
           ERROR_FLAG,
           ADDED_BY_ID,
           MODIFIED_BY_ID,
           ADDED_DATE,
           MODIFIED_DATE,
           MAX_LINE_NUM,
           MODULE_ID,
           TXN_TYPE_DESC,
           STD_JV_REF,
           PRINT_FLAG
           )
      VALUES
         (
           :l_ar_hdr_acc_entity_code,
           :l_ar_hdr_doc_type_code,
           0,
           :l_ar_hdr_doc_num,
           to_date(:l_ar_hdr_doc_date,'DD/MM/YYYY'),
           SUBSTR(:l_cust_ref1,1,10),
           :l_narration,
           :l_ar_hdr_post_month,
           :l_ar_hdr_post_year,
           0,
           NULL,
           NULL,
           NULL,
           NULL,
           NULL,
           USER,
           USER,
           SYSDATE,
           SYSDATE,
           :l_line_num,
           'AR',
           NULL,
           NULL,
           NULL
         );

    if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_HDR",0,"");
  }

  ar_update_hdr(l_trn_type);

}

ar_update_hdr(l_trn_type)
char l_trn_type;
{
   if (l_trn_type == 'D')
   {
    EXEC SQL UPDATE AR_DN_HDR
                SET POSTED_FLAG               = 'Y',
                    INTERFACE_FLAG            = 
                        DECODE(:l_ar_interface_code,'O','Y','N'),
                  POSTED_DATE               = SYSDATE,
                  POSTED_BY_ID              = USER
              WHERE ROWID = :hdr_rowid_passed;

    if (OERROR)
         err_mesg("UPDATE failed on table AR_DN_HDR",0,"");
   }
   else if (l_trn_type == 'C')
   {
    EXEC SQL UPDATE AR_CN_HDR
                SET POSTED_FLAG               = 'Y',
                    INTERFACE_FLAG            = 
                        DECODE(:l_ar_interface_code,'O','Y','N'),
                  POSTED_DATE               = SYSDATE,
                  POSTED_BY_ID              = USER
              WHERE ROWID = :hdr_rowid_passed;

    if (OERROR)
         err_mesg("UPDATE failed on table AR_CN_HDR",0,"");
    }
    else
    {
    EXEC SQL UPDATE AR_ADJ_HDR
                SET POSTED_FLAG               = 'Y',
                    INTERFACE_FLAG            = 
                        DECODE(:l_ar_interface_code,'O','Y','N'),
                  POSTED_DATE               = SYSDATE,
                  POSTED_BY_ID              = USER
              WHERE ROWID = :hdr_rowid_passed;

    if (OERROR)
         err_mesg("UPDATE failed on table AR_ADJ_HDR",0,"");
      
    }

}

dn_post_declare_curs()
{
   EXEC SQL DECLARE DN_POST_INV_HDR CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    NVL(LAST_LINE_NUM,0),
                    NVL(CUST_CODE,' '),
                    NVL(NARRATION,' '),
                    TO_CHAR(BASE_DATE,'DD/MM/YYYY'),
                    TO_CHAR(DUE_DATE,'DD/MM/YYYY'),
                    NVL(GROSS_AMT,0),
                    NVL(PAYABLE_AMT,0),
                    NVL(DISCOUNT_AMT,0),
                    NVL(DOC_AMT,0),
                    NVL(CURRENCY_CODE,' '),
                    NVL(EXCHG_RATE,0),
                    NVL(PMNT_TERMS_CODE,' '),
                    TO_CHAR(SETTLEMENT_DATE,'DD/MM/YYYY'),
                    NVL(SETTLEMENT_PERC,0),
                    NVL(CUST_REF,' '),
                    NVL(PATIENT_ID,' '),
                    NVL(BILLING_GROUP,' '),
                    NVL(BILL_DOC_TYPE_CODE,' '),
                    NVL(BILL_NUM,0),
                    TO_CHAR(BILL_DATE,'DD/MM/YYYY'),
                    NVL(DOCTOR_FEE_AMT,0),
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(BILL_TYPE_CODE,' '),
                    ROWID,
					CONSOLIDATED_INV_YN
              FROM  AR_DN_INV_HDR
              WHERE DOC_TYPE_CODE = :l_ar_hdr_doc_type_code
                AND DOC_NUM       = :l_ar_hdr_doc_num;


   EXEC SQL DECLARE DN_POST_LINE  CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    LINE_NUM,
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(AMOUNT,0),
                    NVL(NARRATION,' '),
                    ROWID
               FROM AR_DN_LINE
              WHERE DOC_TYPE_CODE     = :l_ar_hdr_doc_type_code
                AND DOC_NUM           = :l_ar_hdr_doc_num
                AND ORG_DOC_TYPE_CODE = :l_ar_ihdr_org_doc_type_code
                AND ORG_DOC_NUM       = :l_ar_ihdr_org_doc_num;

   EXEC SQL DECLARE CN_POST_INV_HDR CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    NVL(LAST_LINE_NUM,0),
                    NVL(CUST_CODE,' '),
                    NVL(NARRATION,' '),
                    TO_CHAR(BASE_DATE,'DD/MM/YYYY'),
                    TO_CHAR(DUE_DATE,'DD/MM/YYYY'),
                    NVL(GROSS_AMT,0),
                    NVL(PAYABLE_AMT,0),
                    NVL(DISCOUNT_AMT,0),
                    NVL(DOC_AMT,0),
                    NVL(CURRENCY_CODE,' '),
                    NVL(EXCHG_RATE,0),
                    NVL(PMNT_TERMS_CODE,' '),
                    TO_CHAR(SETTLEMENT_DATE,'DD/MM/YYYY'),
                    NVL(SETTLEMENT_PERC,0),
                    NVL(CUST_REF,' '),
                    NVL(PATIENT_ID,' '),
                    NVL(BILLING_GROUP,' '),
                    NVL(BILL_DOC_TYPE_CODE,' '),
                    NVL(BILL_NUM,0),
                    TO_CHAR(BILL_DATE,'DD/MM/YYYY'),
                    NVL(DOCTOR_FEE_AMT,0),
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(BILL_TYPE_CODE,' '),
                    ROWID,
					CONSOLIDATED_INV_YN
               FROM AR_CN_INV_HDR
              WHERE DOC_TYPE_CODE = :l_ar_hdr_doc_type_code
                AND DOC_NUM       = :l_ar_hdr_doc_num;


   EXEC SQL DECLARE CN_POST_LINE  CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    LINE_NUM,
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(AMOUNT,0),
                    NVL(NARRATION,' '),
                    ROWID
               FROM AR_CN_LINE
              WHERE DOC_TYPE_CODE     = :l_ar_hdr_doc_type_code
                AND DOC_NUM           = :l_ar_hdr_doc_num
                AND ORG_DOC_TYPE_CODE = :l_ar_ihdr_org_doc_type_code
                AND ORG_DOC_NUM       = :l_ar_ihdr_org_doc_num;

   EXEC SQL DECLARE ADJ_POST_INV_HDR CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    NVL(LAST_LINE_NUM,0),
                    NVL(CUST_CODE,' '),
                    NVL(NARRATION,' '),
                    TO_CHAR(BASE_DATE,'DD/MM/YYYY'),
                    TO_CHAR(DUE_DATE,'DD/MM/YYYY'),
                    NVL(GROSS_AMT,0),
                    NVL(PAYABLE_AMT,0),
                    NVL(DISCOUNT_AMT,0),
                    NVL(DOC_AMT,0),
                    NVL(CURRENCY_CODE,' '),
                    NVL(EXCHG_RATE,0),
                    NVL(PMNT_TERMS_CODE,' '),
                    TO_CHAR(SETTLEMENT_DATE,'DD/MM/YYYY'),
                    NVL(SETTLEMENT_PERC,0),
                    NVL(CUST_REF,' '),
                    NVL(PATIENT_ID,' '),
                    NVL(BILLING_GROUP,' '),
                    NVL(BILL_DOC_TYPE_CODE,' '),
                    NVL(BILL_NUM,0),
                    TO_CHAR(BILL_DATE,'DD/MM/YYYY'),
                    NVL(DOCTOR_FEE_AMT,0),
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(MISC_CUST_LONG_NAME,' '),
                    NVL(MISC_CUST_SHORT_NAME,' '),
                    NVL(MISC_CUST_ADD1_DESC,' '),
                    NVL(MISC_CUST_ADD2_DESC,' '),
                    NVL(MISC_CUST_ADD3_DESC,' '),
                    NVL(MISC_CUST_ZIP_DESC,' '),
                    NVL(MISC_CUST_LONG_NAME_CHINESE,' '),
                    NVL(MISC_CUST_SHORT_NAME_CHINESE,' '),
                    NVL(MISC_CUST_ADD1_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD2_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD3_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ZIP_DESC_CHINESE,' '),
                    NVL(TEL_NUM,' '),
                    NVL(CONTACT_NAME,' '),
                    NVL(CONTACT_NAME_TITLE,' '),
                    ROWID,
                    NVL(ADJ_TYPE,' '),
                    NVL(BILL_TYPE_CODE,' '),
					CONSOLIDATED_INV_YN
               FROM AR_ADJ_INV_HDR
              WHERE DOC_TYPE_CODE = :l_ar_hdr_doc_type_code
                AND DOC_NUM       = :l_ar_hdr_doc_num;


   EXEC SQL DECLARE ADJ_POST_LINE  CURSOR FOR
             SELECT NVL(ACC_ENTITY_CODE,' '),
                    DOC_TYPE_CODE,
                    DOC_NUM,
                    ORG_DOC_TYPE_CODE,
                    ORG_DOC_NUM,
                    LINE_NUM,
                    NVL(MAIN_ACC1_CODE,' '),
                    NVL(MAIN_ACC2_CODE,' '),
                    NVL(SUBLEDGER_GROUP_CODE,' '),
                    NVL(SUBLEDGER_LINE_CODE,' '),
                    NVL(DEPT_CODE,' '),
                    NVL(PRODUCT_GROUP_CODE,' '),
                    NVL(PRODUCT_LINE_CODE,' '),
                    NVL(AMOUNT,0),
                    NVL(NARRATION,' '),
                    ROWID
               FROM AR_ADJ_LINE
              WHERE DOC_TYPE_CODE     = :l_ar_hdr_doc_type_code
                AND DOC_NUM           = :l_ar_hdr_doc_num
                AND ORG_DOC_TYPE_CODE = :l_ar_ihdr_org_doc_type_code
                AND ORG_DOC_NUM       = :l_ar_ihdr_org_doc_num;

}


/**************************************************************************/

l_alloc_pat_dtls()
{
         
   EXEC SQL DECLARE l_alloc_pat_cur CURSOR FOR		 
		  SELECT DOC_TYPE_CODE,
                      DOC_NUM,
                      INV_DOC_TYPE_CODE,
					  INV_DOC_NUM       ,     
                      BILL_DOC_TYPE_CODE,
                      BILL_NUM,
                      NVL(AMOUNT,0),
					  ABS(nvl(AMOUNT,0)),
                      ROWID
			  FROM AR_PATIENT_ALLOC_DTLS
              WHERE DOC_TYPE_CODE     = :l_ar_hdr_doc_type_code
                AND DOC_NUM           = :l_ar_hdr_doc_num
               ORDER BY DOC_TYPE_CODE , DOC_NUM;


}

l_open_pat_cur()
{
    EXEC SQL OPEN l_alloc_pat_cur;

    if (OERROR)
         err_mesg("OPEN failed on cursor l_alloc_pat_cur",0,"");
}

fetch_alloc_pat_dtls()
{
  d_pat_doc_type_code.arr[0]       = '\0';
  d_pat_doc_num.arr[0]             = '\0';
  d_pat_bill_doc_type_code.arr[0]  = '\0';
  d_pat_bill_num.arr[0]            = '\0';
  d_pat_inv_doc_type_code.arr[0] = '\0';
  d_pat_inv_doc_num.arr[0] = '\0';
  d_pat_rowid.arr[0]               = '\0';

  d_pat_doc_type_code.len          = 0;
  d_pat_doc_num.len                = 0;
  d_pat_bill_doc_type_code.len     = 0;
  d_pat_bill_num.len               = 0;
  d_pat_inv_doc_type_code.len = 0;
  d_pat_inv_doc_num.len = 0;
  d_pat_rowid.len                  = 0;

  d_pat_amount      = 0;
  d_pat_abs_amount  =0;

         EXEC SQL FETCH l_alloc_pat_cur
                INTO 
  				  :d_pat_doc_type_code,
                  :d_pat_doc_num,
                  :d_pat_inv_doc_type_code,
                  :d_pat_inv_doc_num,
                  :d_pat_bill_doc_type_code,
                  :d_pat_bill_num,
                  :d_pat_amount,
                  :d_pat_abs_amount,
                  :d_pat_rowid;

	 if (OERROR)
            err_mesg("FETCH failed on cursor l_alloc_pat_cur - ar_post",0,"");

                  
    d_pat_doc_type_code.arr[d_pat_doc_type_code.len]           = '\0';
    d_pat_doc_num.arr[d_pat_doc_num.len]                       = '\0';
    d_pat_bill_doc_type_code.arr[d_pat_bill_doc_type_code.len] = '\0';
    d_pat_bill_num.arr[d_pat_bill_num.len]                     = '\0';
    d_pat_rowid.arr[d_pat_rowid.len]                           = '\0';
    d_pat_inv_doc_type_code.arr[d_pat_inv_doc_type_code.len] = '\0';
    d_pat_inv_doc_num.arr[d_pat_inv_doc_num.len]= '\0';

	 if (LAST_ROW)
      return(0);
     else
      return(1);

}



/**************************************************************************/

dn_posting(alloc_flag,l_adj_type,l_trn_type)
int alloc_flag;
char l_adj_type,
     l_trn_type;
{
  EXEC SQL BEGIN DECLARE SECTION;
     char d_ar_adj_type,d_ar_trn_type;
  EXEC SQL END DECLARE SECTION;

  d_ar_adj_type = l_adj_type;
  d_ar_trn_type = l_trn_type;

    
  if (alloc_flag == 0)
  {      
 
	  
 EXEC SQL INSERT INTO AR_PENDING_DOC
        (
         ACC_ENTITY_CODE,
         DOC_TYPE_CODE,
         DOC_NUM,
         LAST_DOC_LINE_NUM,
         CUST_CODE,
         DOC_DATE,
         NARRATION,
         BASE_DATE,
         DUE_DATE,
         GROSS_AMT,
         PAYABLE_AMT,
         DISCOUNT_AMT,
         PENDING_AMT,
         ALLOCATED_AMT,
         CURRENCY_CODE,
         EXCHG_RATE,
         PMNT_TERMS_CODE,
         SETTLEMENT_DATE,
         SETTLEMENT_PERC,
         CUST_REF,
         PATIENT_ID,
         BILLING_GROUP,
         BILL_NUM,
         BILL_DATE,
         DOCTOR_FEE_AMT,
         MAIN_ACC1_CODE,
         MAIN_ACC2_CODE,
         SUBLEDGER_GROUP_CODE,
         SUBLEDGER_LINE_CODE,
         DEPT_CODE,
         PRODUCT_GROUP_CODE,
         PRODUCT_LINE_CODE,
         POST_MONTH,
         POST_YEAR,
         MISC_CUST_LONG_NAME,
         MISC_CUST_SHORT_NAME,
         MISC_CUST_ADD1_DESC,
         MISC_CUST_ADD2_DESC,
         MISC_CUST_ADD3_DESC,
         MISC_CUST_ZIP_DESC,
         MISC_CUST_LONG_NAME_CHINESE,
         MISC_CUST_SHORT_NAME_CHINESE,
         MISC_CUST_ADD1_DESC_CHINESE,
         MISC_CUST_ADD2_DESC_CHINESE,
         MISC_CUST_ADD3_DESC_CHINESE,
         MISC_CUST_ZIP_DESC_CHINESE,
         TEL_NUM,
         CONTACT_NAME,
         CONTACT_NAME_TITLE,
         ERROR_FLAG,
         BILL_DOC_TYPE_CODE,
         TRN_TYPE_CODE,
         LAST_UPD_DATE,
         BILL_TYPE_CODE,
		 ADDED_BY_ID,
		 ADDED_DATE,
		 MODIFIED_BY_ID,
		 MODIFIED_DATE
)
    VALUES
       (
         :l_ar_ihdr_acc_entity_code,
         :l_ar_ihdr_doc_type_code,
         :l_ar_ihdr_doc_num,
          1,
         :l_ar_ihdr_cust_code,          
         TO_DATE(:l_ar_hdr_doc_date,'DD/MM/YYYY'),
         :l_ar_ihdr_narration,
         TO_DATE(:l_ar_ihdr_base_date,'DD/MM/YYYY'),
         TO_DATE(:l_ar_ihdr_due_date,'DD/MM/YYYY'),
         decode(:d_ar_adj_type,'D',:l_ar_ihdr_gross_amt,
                                   -1 * :l_ar_ihdr_doc_amt),
         decode(:d_ar_adj_type,'D',:l_ar_ihdr_payable_amt,
                                   -1 * :l_ar_ihdr_doc_amt),
         decode(:d_ar_adj_type,'D',:l_ar_ihdr_discount_amt,0),
         decode(:d_ar_adj_type,'D',:l_ar_ihdr_doc_amt,-1 * :l_ar_ihdr_doc_amt),
         0,
         :l_ar_ihdr_currency_code,
         :l_ar_ihdr_exchg_rate,
         :l_ar_ihdr_pmnt_terms_code,
         TO_DATE(:l_ar_ihdr_settlement_date,'DD/MM/YYYY'),
         :l_ar_ihdr_settlement_perc,
         :l_ar_ihdr_cust_ref,
         :l_ar_ihdr_patient_id,
         :l_ar_ihdr_billing_group,
         :l_ar_ihdr_bill_num,
         TO_DATE(:l_ar_ihdr_bill_date,'DD/MM/YYYY'),
         :l_ar_ihdr_doctor_fee_amt,
         :l_ar_ihdr_main_acc1_code,
         :l_ar_ihdr_main_acc2_code,
         :l_ar_ihdr_sub_group_code,
         :l_ar_ihdr_sub_line_code,
         :l_ar_ihdr_dept_code,
         :l_ar_ihdr_product_group_code,
         :l_ar_ihdr_product_line_code,
         :l_ar_hdr_post_month,
         :l_ar_hdr_post_year,
         :l_ar_hdr_misc_clong_name,
         :l_ar_hdr_misc_cshort_name,
         :l_ar_hdr_misc_cadd1_desc,
         :l_ar_hdr_misc_cadd2_desc,
         :l_ar_hdr_misc_cadd3_desc,
         :l_ar_hdr_misc_czip_desc,
         :l_ar_hdr_misc_long_chinese,
         :l_ar_hdr_misc_short_chinese,
         :l_ar_hdr_misc_add1_chinese,
         :l_ar_hdr_misc_add2_chinese,
         :l_ar_hdr_misc_add3_chinese,
         :l_ar_hdr_misc_zip_chinese,
         :l_ar_hdr_tel_num,
         :l_ar_hdr_contact_name,
         :l_ar_hdr_contact_name_title,
         :l_ar_hdr_error_flag,
         :l_ar_ihdr_bill_doc_type_code,
         decode(:d_ar_trn_type,'D','2','C','3','A','4'), 
         SYSDATE,
         :l_ar_ihdr_bill_type_code,
		 USER,
		 SYSDATE,
		 USER,
		 SYSDATE
         );
        
   if (OERROR)
   {
        
        err_mesg("INSERT failed on table AR_PENDING_DOC",0,"");
   } 

       l_ar_pend_last_doc_line_num = 1;
   }
   else
   {
        EXEC SQL UPDATE AR_PENDING_DOC
                    SET PENDING_AMT = NVL(PENDING_AMT,0) + 
                           decode(:d_ar_adj_type,'D',:l_ar_ihdr_doc_amt,
                                                  -1 * :l_ar_ihdr_doc_amt),
                        LAST_DOC_LINE_NUM = NVL(LAST_DOC_LINE_NUM,0) + 1,
                        LAST_UPD_DATE     = SYSDATE
                  WHERE DOC_TYPE_CODE = :l_ar_ihdr_org_doc_type_code
                    AND DOC_NUM       = :l_ar_ihdr_org_doc_num;

        if (OERROR)
           err_mesg("UPDATE failed on table AR_PENDING_DOC",0,"");

        EXEC SQL SELECT NVL(LAST_DOC_LINE_NUM,1)
                   INTO :l_ar_pend_last_doc_line_num
                   FROM AR_PENDING_DOC
                  WHERE CUST_CODE     = :l_ar_ihdr_cust_code
                    AND DOC_TYPE_CODE = :l_ar_ihdr_org_doc_type_code
                    AND DOC_NUM       = :l_ar_ihdr_org_doc_num;
        if (OERROR)
            err_mesg("SELECT failed on table AR_PENDING_DOC",0,"");


 /************************************************************************/
    if (strcmp(l_consolidated_yn.arr , "Y") == 0)
   {
  
    l_alloc_pat_dtls();

    l_open_pat_cur();

	while(fetch_alloc_pat_dtls())
	{
    
	  
      EXEC SQL UPDATE AR_PATIENT_DTLS
	  SET PEND_AMOUNT = PEND_AMOUNT + :d_pat_amount
	  WHERE DOC_TYPE_CODE      = :d_pat_inv_doc_type_code 
      AND   DOC_NUM            =     :d_pat_inv_doc_num
      AND   BILL_DOC_TYPE_CODE =    :d_pat_bill_doc_type_code
      AND   BILL_NUM           =  :d_pat_bill_num;

	  if (OERROR)
        err_mesg("UPDATE failed on table AR_PATIENT_DTLS",0,"");

	}

   }

     /*************************************************************/



   }

  if (strcmp(l_ar_ihdr_doc_amt.arr , "0") != 0)
   {
   EXEC SQL INSERT INTO AR_CUST_TRN
        (
          ACC_ENTITY_CODE,
          CUST_CODE,
          ORG_DOC_TYPE_CODE,
          ORG_DOC_NUM,
          LINE_NUM,
          DOC_TYPE_CODE,
          DOC_NUM,
          DOC_DATE,
          NARRATION,
          AMOUNT,
          CUST_REF,
          TRN_TYPE_CODE,
		  POST_MONTH,
		  POST_YEAR
       )
    VALUES
       (
          :l_ar_ihdr_acc_entity_code,
          :l_ar_ihdr_cust_code,
          :l_ar_ihdr_org_doc_type_code,
          :l_ar_ihdr_org_doc_num,
          :l_ar_pend_last_doc_line_num,
          :l_ar_ihdr_doc_type_code,
          :l_ar_ihdr_doc_num,
          to_date(:l_ar_hdr_doc_date,'DD/MM/YYYY'),
          :l_ar_ihdr_narration,
          decode(:d_ar_adj_type,'D',:l_ar_ihdr_doc_amt,-1 * :l_ar_ihdr_doc_amt),
          :l_ar_ihdr_cust_ref,
          decode(:d_ar_trn_type,'D','2','C','3','A','4'),
		  :l_ar_ihdr_post_month,
          :l_ar_ihdr_post_year
        );


   if (OERROR)
         err_mesg("INSERT failed on table AR_CUST_TRN",0,"");
  } /* if amount != 0 */


   if (l_trn_type == 'A')
   {

   EXEC SQL UPDATE AR_CUSTOMER
               SET OUTSTANDING_BALANCE_AMT = 
                        NVL(OUTSTANDING_BALANCE_AMT,0) + 
                    decode(:d_ar_adj_type,'D',:l_ar_ihdr_doc_amt,
                                         -1 * :l_ar_ihdr_doc_amt)
             WHERE CUST_CODE = :l_ar_ihdr_cust_code;

     if (OERROR)
          err_mesg("UPDATE failed on table AR_CUSTOMER",0,"");

   }

}

dn_post_ar_insertings(l_adj_type,l_trn_type)
char l_adj_type,l_trn_type;
{
 EXEC SQL BEGIN DECLARE SECTION;
    char d_ar_adj_type;
 EXEC SQL END DECLARE SECTION;

    d_ar_adj_type = l_adj_type;

   EXEC SQL INSERT INTO SY_DOC_CONTROL
      (
         ACC_ENTITY_CODE,
         MODULE_ID,
         DOC_TYPE_CODE,
         DOC_NUM,
         DOC_DATE,
         POSTED_DATE,
         DOC_STATUS,
         NARRATION,
         POST_MONTH,
         POST_YEAR,
         ADDED_BY_ID,
         MODIFIED_BY_ID,
         ADDED_DATE,
         MODIFIED_DATE
      )
   VALUES 
      (
         :l_ar_hdr_acc_entity_code,
         'AR',
         :l_ar_hdr_doc_type_code,
         :l_ar_hdr_doc_num,
         to_date(:l_ar_hdr_doc_date,'DD/MM/YYYY'),
         SYSDATE,
         'P',
         :l_narration,
         :l_ar_hdr_post_month,
         :l_ar_hdr_post_year,
         USER,
         USER,
         SYSDATE,
         SYSDATE
       );

   if (OERROR)
         err_mesg("INSERT failed on table SY_DOC_CONTROL",0,"");

   if (l_trn_type != 'A')
   {
   EXEC SQL UPDATE AR_CUSTOMER
               SET OUTSTANDING_BALANCE_AMT = 
                        NVL(OUTSTANDING_BALANCE_AMT,0) + 
                    decode(:d_ar_adj_type,'D',:l_ar_hdr_doc_amt,
                                         -1 * :l_ar_hdr_doc_amt)
             WHERE CUST_CODE = :l_ar_hdr_cust_code;

   if (OERROR)
        err_mesg("UPDATE failed on table AR_CUSTOMER",0,"");
   }


}

dn_post_open_ihdr(l_trn_type)
char l_trn_type;
{
   if (l_trn_type == 'D')
   {
      EXEC SQL OPEN DN_POST_INV_HDR;

      if (OERROR)
            err_mesg("OPEN failed on cursor DN_POST_INV_HDR",0,"");
    }
    else if (l_trn_type == 'C')
   {
      EXEC SQL OPEN CN_POST_INV_HDR;

      if (OERROR)
            err_mesg("OPEN failed on cursor CN_POST_INV_HDR",0,"");
    }
    else
    {
      EXEC SQL OPEN ADJ_POST_INV_HDR;

      if (OERROR)
            err_mesg("OPEN failed on cursor ADJ_POST_INV_HDR",0,"");
    }

}

dn_post_open_line(l_trn_type)
char l_trn_type;
{
   if (l_trn_type == 'D')
   {
       EXEC SQL OPEN DN_POST_LINE;

       if (OERROR)
             err_mesg("OPEN failed on cursor DN_POST_LINE",0,"");
    }
    else if (l_trn_type == 'C')
    {
       EXEC SQL OPEN CN_POST_LINE;

       if (OERROR)
             err_mesg("OPEN failed on cursor CN_POST_LINE",0,"");
    }
    else 
    {
       EXEC SQL OPEN ADJ_POST_LINE;

       if (OERROR)
             err_mesg("OPEN failed on cursor ADJ_POST_LINE",0,"");
     }

}

dn_post_select_rec(l_trn_type)
char l_trn_type;
{
l_ar_hdr_acc_entity_code.arr[0]             = '\0';
l_ar_hdr_cust_code.arr[0]                   = '\0';
l_ar_hdr_doc_date.arr[0]                    = '\0';
l_ar_hdr_doc_amt.arr[0]                     = '\0';
l_ar_hdr_post_month.arr[0]                  = '\0';
l_ar_hdr_post_year.arr[0]                   = '\0';
l_ar_hdr_misc_clong_name.arr[0]         = '\0';
l_ar_hdr_misc_cshort_name.arr[0]        = '\0';
l_ar_hdr_misc_cadd1_desc.arr[0]         = '\0';
l_ar_hdr_misc_cadd2_desc.arr[0]         = '\0';
l_ar_hdr_misc_cadd3_desc.arr[0]         = '\0';
l_ar_hdr_misc_czip_desc.arr[0]          = '\0';
l_ar_hdr_misc_long_chinese.arr[0]           = '\0';
l_ar_hdr_misc_short_chinese.arr[0]          = '\0';
l_ar_hdr_misc_add1_chinese.arr[0]           = '\0';
l_ar_hdr_misc_add2_chinese.arr[0]           = '\0';
l_ar_hdr_misc_add3_chinese.arr[0]           = '\0';
l_ar_hdr_misc_zip_chinese.arr[0]            = '\0';
l_ar_hdr_tel_num.arr[0]                     = '\0';
l_ar_hdr_contact_name.arr[0]                = '\0';
l_ar_hdr_contact_name_title.arr[0]          = '\0';
l_ar_hdr_error_flag.arr[0]                  = '\0';
l_ar_hdr_print_flag.arr[0]                  = '\0';
l_ar_hdr_rowid.arr[0]                       = '\0';

l_ar_hdr_acc_entity_code.len                = 0;
l_ar_hdr_cust_code.len                      = 0;
l_ar_hdr_doc_date.len                       = 0;
l_ar_hdr_doc_amt.len                        = 0;
l_ar_hdr_post_month.len                     = 0;
l_ar_hdr_post_year.len                      = 0;
l_ar_hdr_misc_clong_name.len            = 0;
l_ar_hdr_misc_cshort_name.len           = 0;
l_ar_hdr_misc_cadd1_desc.len            = 0;
l_ar_hdr_misc_cadd2_desc.len            = 0;
l_ar_hdr_misc_cadd3_desc.len            = 0;
l_ar_hdr_misc_czip_desc.len             = 0;
l_ar_hdr_misc_long_chinese.len              = 0;
l_ar_hdr_misc_short_chinese.len             = 0;
l_ar_hdr_misc_add1_chinese.len              = 0;
l_ar_hdr_misc_add2_chinese.len              = 0;
l_ar_hdr_misc_add3_chinese.len              = 0;
l_ar_hdr_misc_zip_chinese.len               = 0;
l_ar_hdr_tel_num.len                        = 0;
l_ar_hdr_contact_name.len                   = 0;
l_ar_hdr_contact_name_title.len             = 0;
l_ar_hdr_error_flag.len                     = 0;
l_ar_hdr_print_flag.len                     = 0;
l_ar_hdr_rowid.len                          = 0;

if (l_trn_type == 'D')
{        

   l_ar_hdr_doc_date.arr[0]                    = '\0';
   l_ar_hdr_doc_date.len                       = 0;
   
   
   EXEC SQL SELECT  DOC_TYPE_CODE,
                    DOC_NUM,
                    NVL(ACC_ENTITY_CODE,' '),
                    NVL(CUST_CODE,' '),
                    TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                    NVL(DOC_AMT,0),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(MISC_CUST_LONG_NAME,' '),
                    NVL(MISC_CUST_SHORT_NAME,' '),
                    NVL(MISC_CUST_ADD1_DESC,' '),
                    NVL(MISC_CUST_ADD2_DESC,' '),
                    NVL(MISC_CUST_ADD3_DESC,' '),
                    NVL(MISC_CUST_ZIP_DESC,' '),
                    NVL(MISC_CUST_LONG_NAME_CHINESE,' '),
                    NVL(MISC_CUST_SHORT_NAME_CHINESE,' '),
                    NVL(MISC_CUST_ADD1_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD2_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD3_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ZIP_DESC_CHINESE,' '),
                    NVL(TEL_NUM,' '),
                    NVL(CONTACT_NAME,' '),
                    NVL(CONTACT_NAME_TITLE,' '),
                    NVL(ERROR_FLAG,' '),
                    NVL(PRINT_FLAG,' ')
             INTO   
                    :l_ar_hdr_doc_type_code,
                    :l_ar_hdr_doc_num,
                    :l_ar_hdr_acc_entity_code,
                    :l_ar_hdr_cust_code,
                    :l_ar_hdr_doc_date,
                    :l_ar_hdr_doc_amt,
                    :l_ar_hdr_post_month,
                    :l_ar_hdr_post_year,
                    :l_ar_hdr_misc_clong_name,
                    :l_ar_hdr_misc_cshort_name,
                    :l_ar_hdr_misc_cadd1_desc,
                    :l_ar_hdr_misc_cadd2_desc,
                    :l_ar_hdr_misc_cadd3_desc,
                    :l_ar_hdr_misc_czip_desc,
                    :l_ar_hdr_misc_long_chinese,
                    :l_ar_hdr_misc_short_chinese,
                    :l_ar_hdr_misc_add1_chinese,
                    :l_ar_hdr_misc_add2_chinese,
                    :l_ar_hdr_misc_add3_chinese,
                    :l_ar_hdr_misc_zip_chinese,
                    :l_ar_hdr_tel_num,
                    :l_ar_hdr_contact_name,
                    :l_ar_hdr_contact_name_title,
                    :l_ar_hdr_error_flag,
                    :l_ar_hdr_print_flag
               FROM AR_DN_HDR
              WHERE ROWID = :hdr_rowid_passed;
  
    if (OERROR)
         err_mesg("SELECT failed on table AR_DN_HDR - ar_posting ",0,"");
    if (NOT_FOUND)
    {
       err_mesg("Record not found in AR_DN_HDR - ar post - AR",0,"");
    }
  }
  else if (l_trn_type == 'C')
  {
   EXEC SQL SELECT  DOC_TYPE_CODE,
                    DOC_NUM,
                    NVL(ACC_ENTITY_CODE,' '),
                    NVL(CUST_CODE,' '),
                    TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                    NVL(DOC_AMT,0),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(MISC_CUST_LONG_NAME,' '),
                    NVL(MISC_CUST_SHORT_NAME,' '),
                    NVL(MISC_CUST_ADD1_DESC,' '),
                    NVL(MISC_CUST_ADD2_DESC,' '),
                    NVL(MISC_CUST_ADD3_DESC,' '),
                    NVL(MISC_CUST_ZIP_DESC,' '),
                    NVL(MISC_CUST_LONG_NAME_CHINESE,' '),
                    NVL(MISC_CUST_SHORT_NAME_CHINESE,' '),
                    NVL(MISC_CUST_ADD1_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD2_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ADD3_DESC_CHINESE,' '),
                    NVL(MISC_CUST_ZIP_DESC_CHINESE,' '),
                    NVL(TEL_NUM,' '),
                    NVL(CONTACT_NAME,' '),
                    NVL(CONTACT_NAME_TITLE,' '),
                    NVL(ERROR_FLAG,' '),
                    NVL(PRINT_FLAG,' ')
             INTO   
                    :l_ar_hdr_doc_type_code,
                    :l_ar_hdr_doc_num,
                    :l_ar_hdr_acc_entity_code,
                    :l_ar_hdr_cust_code,
                    :l_ar_hdr_doc_date,
                    :l_ar_hdr_doc_amt,
                    :l_ar_hdr_post_month,
                    :l_ar_hdr_post_year,
                    :l_ar_hdr_misc_clong_name,
                    :l_ar_hdr_misc_cshort_name,
                    :l_ar_hdr_misc_cadd1_desc,
                    :l_ar_hdr_misc_cadd2_desc,
                    :l_ar_hdr_misc_cadd3_desc,
                    :l_ar_hdr_misc_czip_desc,
                    :l_ar_hdr_misc_long_chinese,
                    :l_ar_hdr_misc_short_chinese,
                    :l_ar_hdr_misc_add1_chinese,
                    :l_ar_hdr_misc_add2_chinese,
                    :l_ar_hdr_misc_add3_chinese,
                    :l_ar_hdr_misc_zip_chinese,
                    :l_ar_hdr_tel_num,
                    :l_ar_hdr_contact_name,
                    :l_ar_hdr_contact_name_title,
                    :l_ar_hdr_error_flag,
                    :l_ar_hdr_print_flag
               FROM AR_CN_HDR
              WHERE ROWID = :hdr_rowid_passed;
  
    if (OERROR)
         err_mesg("SELECT failed on table AR_CN_HDR - ar_posting ",0,"");
    if (NOT_FOUND)
    {
       err_mesg("Record not found in AR_CN_HDR - ar post - AR",0,"");
    }
  }
  else 
  {
   EXEC SQL SELECT  DOC_TYPE_CODE,
                    DOC_NUM,
                    ACC_ENTITY_CODE,
                    TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                    NVL(DOC_AMT,0),
                    NVL(POST_MONTH,0),
                    NVL(POST_YEAR,0),
                    NVL(ERROR_FLAG,' '),
                    NVL(PRINT_FLAG,' ')
             INTO   
                    :l_ar_hdr_doc_type_code,
                    :l_ar_hdr_doc_num,
                    :l_ar_hdr_acc_entity_code,
                    :l_ar_hdr_doc_date,
                    :l_ar_hdr_doc_amt,
                    :l_ar_hdr_post_month,
                    :l_ar_hdr_post_year,
                    :l_ar_hdr_error_flag,
                    :l_ar_hdr_print_flag
              FROM AR_ADJ_HDR
              WHERE ROWID = :hdr_rowid_passed;
  
    if (OERROR)
         err_mesg("SELECT failed on table AR_ADJ_HDR - ar_posting ",0,"");

    if (NOT_FOUND)
    {
       err_mesg("Record not found in AR_ADJ_HDR - ar post - AR",0,"");
    }
  }
  

l_ar_hdr_acc_entity_code.arr[l_ar_hdr_acc_entity_code.len]               = '\0';
l_ar_hdr_cust_code.arr[l_ar_hdr_cust_code.len]                           = '\0';
l_ar_hdr_doc_date.arr[l_ar_hdr_doc_date.len]                             = '\0';
l_ar_hdr_doc_amt.arr[l_ar_hdr_doc_amt.len]                               = '\0';
l_ar_hdr_post_month.arr[l_ar_hdr_post_month.len]                         = '\0';
l_ar_hdr_post_year.arr[l_ar_hdr_post_year.len]                           = '\0';
l_ar_hdr_misc_clong_name.arr[l_ar_hdr_misc_clong_name.len]       = '\0';
l_ar_hdr_misc_cshort_name.arr[l_ar_hdr_misc_cshort_name.len]     = '\0';
l_ar_hdr_misc_cadd1_desc.arr[l_ar_hdr_misc_cadd1_desc.len]       = '\0';
l_ar_hdr_misc_cadd2_desc.arr[l_ar_hdr_misc_cadd2_desc.len]       = '\0';
l_ar_hdr_misc_cadd3_desc.arr[l_ar_hdr_misc_cadd3_desc.len]       = '\0';
l_ar_hdr_misc_czip_desc.arr[l_ar_hdr_misc_czip_desc.len]         = '\0';
l_ar_hdr_misc_long_chinese.arr[l_ar_hdr_misc_long_chinese.len]           = '\0';
l_ar_hdr_misc_short_chinese.arr[l_ar_hdr_misc_short_chinese.len]         = '\0';
l_ar_hdr_misc_add1_chinese.arr[l_ar_hdr_misc_add1_chinese.len]           = '\0';
l_ar_hdr_misc_add2_chinese.arr[l_ar_hdr_misc_add2_chinese.len]           = '\0';
l_ar_hdr_misc_add3_chinese.arr[l_ar_hdr_misc_add3_chinese.len]           = '\0';
l_ar_hdr_misc_zip_chinese.arr[l_ar_hdr_misc_zip_chinese.len]             = '\0';
l_ar_hdr_tel_num.arr[l_ar_hdr_tel_num.len]                               = '\0';
l_ar_hdr_contact_name.arr[l_ar_hdr_contact_name.len]                     = '\0';
l_ar_hdr_contact_name_title.arr[l_ar_hdr_contact_name_title.len]         = '\0';
l_ar_hdr_error_flag.arr[l_ar_hdr_error_flag.len]                         = '\0';
l_ar_hdr_print_flag.arr[l_ar_hdr_print_flag.len]                         = '\0';
l_ar_hdr_rowid.arr[l_ar_hdr_rowid.len]                                   = '\0';

   
}

dn_post_fetch_dn_inv_hdr(l_trn_type)
char l_trn_type;
{
l_ar_ihdr_acc_entity_code.arr[0]         = '\0';
l_ar_ihdr_doc_type_code.arr[0]           = '\0';
l_ar_ihdr_bill_type_code.arr[0]           = '\0';
l_ar_ihdr_doc_num.arr[0]                 = '\0';
l_ar_ihdr_org_doc_type_code.arr[0]       = '\0';
l_ar_ihdr_org_doc_num.arr[0]             = '\0';
l_ar_ihdr_last_line_num.arr[0]           = '\0';
l_ar_ihdr_cust_code.arr[0]               = '\0';
l_ar_ihdr_narration.arr[0]               = '\0';
l_ar_ihdr_base_date.arr[0]               = '\0';
l_ar_ihdr_due_date.arr[0]                = '\0';
l_ar_ihdr_gross_amt.arr[0]               = '\0';
l_ar_ihdr_payable_amt.arr[0]             = '\0';
l_ar_ihdr_discount_amt.arr[0]            = '\0';
l_ar_ihdr_doc_amt.arr[0]                 = '\0';
l_ar_ihdr_currency_code.arr[0]           = '\0';
l_ar_ihdr_exchg_rate.arr[0]              = '\0';
l_ar_ihdr_pmnt_terms_code.arr[0]         = '\0';
l_ar_ihdr_settlement_date.arr[0]         = '\0';
l_ar_ihdr_settlement_perc.arr[0]         = '\0';
l_ar_ihdr_cust_ref.arr[0]                = '\0';
l_ar_ihdr_patient_id.arr[0]              = '\0';
l_ar_ihdr_billing_group.arr[0]           = '\0';
l_ar_ihdr_bill_doc_type_code.arr[0]      = '\0';
l_ar_ihdr_bill_num.arr[0]                = '\0';
l_ar_ihdr_bill_date.arr[0]               = '\0';
l_ar_ihdr_doctor_fee_amt.arr[0]          = '\0';
l_ar_ihdr_main_acc1_code.arr[0]          = '\0';
l_ar_ihdr_main_acc2_code.arr[0]          = '\0';
l_ar_ihdr_sub_group_code.arr[0]    = '\0';
l_ar_ihdr_sub_line_code.arr[0]     = '\0';
l_ar_ihdr_dept_code.arr[0]               = '\0';
l_ar_ihdr_product_group_code.arr[0]      = '\0';
l_ar_ihdr_product_line_code.arr[0]       = '\0';
l_ar_ihdr_post_month.arr[0]              = '\0';
l_ar_ihdr_post_year.arr[0]               = '\0';
l_ar_ihdr_rowid.arr[0]                   = '\0';
l_ar_ihdr_adj_type.arr[0]                = '\0';
l_consolidated_yn.arr[0] = '\0';


l_ar_ihdr_acc_entity_code.len            = 0;
l_ar_ihdr_doc_type_code.len              = 0;
l_ar_ihdr_bill_type_code.len             = 0;
l_ar_ihdr_doc_num.len                    = 0;
l_ar_ihdr_org_doc_type_code.len          = 0;
l_ar_ihdr_org_doc_num.len                = 0;
l_ar_ihdr_last_line_num.len              = 0;
l_ar_ihdr_cust_code.len                  = 0;
l_ar_ihdr_narration.len                  = 0;
l_ar_ihdr_base_date.len                  = 0;
l_ar_ihdr_due_date.len                   = 0;
l_ar_ihdr_gross_amt.len                  = 0;
l_ar_ihdr_payable_amt.len                = 0;
l_ar_ihdr_discount_amt.len               = 0;
l_ar_ihdr_doc_amt.len                    = 0;
l_ar_ihdr_currency_code.len              = 0;
l_ar_ihdr_exchg_rate.len                 = 0;
l_ar_ihdr_pmnt_terms_code.len            = 0;
l_ar_ihdr_settlement_date.len            = 0;
l_ar_ihdr_settlement_perc.len            = 0;
l_ar_ihdr_cust_ref.len                   = 0;
l_ar_ihdr_patient_id.len                 = 0;
l_ar_ihdr_billing_group.len              = 0;
l_ar_ihdr_bill_doc_type_code.len         = 0;
l_ar_ihdr_bill_num.len                   = 0;
l_ar_ihdr_bill_date.len                  = 0;
l_ar_ihdr_doctor_fee_amt.len             = 0;
l_ar_ihdr_main_acc1_code.len             = 0;
l_ar_ihdr_main_acc2_code.len             = 0;
l_ar_ihdr_sub_group_code.len       = 0;
l_ar_ihdr_sub_line_code.len        = 0;
l_ar_ihdr_dept_code.len                  = 0;
l_ar_ihdr_product_group_code.len         = 0;
l_ar_ihdr_product_line_code.len          = 0;
l_ar_ihdr_post_month.len                 = 0;
l_ar_ihdr_post_year.len                  = 0;
l_ar_ihdr_rowid.len                      = 0;
l_ar_ihdr_adj_type.len                   = 0;
l_consolidated_yn.len  = 0;

if (l_trn_type == 'D')
{
      EXEC SQL FETCH DN_POST_INV_HDR
                INTO :l_ar_ihdr_acc_entity_code,
                     :l_ar_ihdr_doc_type_code,
                     :l_ar_ihdr_doc_num,
                     :l_ar_ihdr_org_doc_type_code,
                     :l_ar_ihdr_org_doc_num,
                     :l_ar_ihdr_last_line_num,
                     :l_ar_ihdr_cust_code,
                     :l_ar_ihdr_narration,
                     :l_ar_ihdr_base_date,
                     :l_ar_ihdr_due_date,
                     :l_ar_ihdr_gross_amt,
                     :l_ar_ihdr_payable_amt,
                     :l_ar_ihdr_discount_amt,
                     :l_ar_ihdr_doc_amt,
                     :l_ar_ihdr_currency_code,
                     :l_ar_ihdr_exchg_rate,
                     :l_ar_ihdr_pmnt_terms_code,
                     :l_ar_ihdr_settlement_date,
                     :l_ar_ihdr_settlement_perc,
                     :l_ar_ihdr_cust_ref,
                     :l_ar_ihdr_patient_id,
                     :l_ar_ihdr_billing_group,
                     :l_ar_ihdr_bill_doc_type_code,
                     :l_ar_ihdr_bill_num,
                     :l_ar_ihdr_bill_date,
                     :l_ar_ihdr_doctor_fee_amt,
                     :l_ar_ihdr_main_acc1_code,
                     :l_ar_ihdr_main_acc2_code,
                     :l_ar_ihdr_sub_group_code,
                     :l_ar_ihdr_sub_line_code,
                     :l_ar_ihdr_dept_code,
                     :l_ar_ihdr_product_group_code,
                     :l_ar_ihdr_product_line_code,
                     :l_ar_ihdr_post_month,
                     :l_ar_ihdr_post_year,
                     :l_ar_ihdr_bill_type_code,
                     :l_ar_ihdr_rowid,
					 :l_consolidated_yn;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_DN_INV_HDR",0,"");
}
else if (l_trn_type == 'C')
{
      EXEC SQL FETCH CN_POST_INV_HDR
                INTO :l_ar_ihdr_acc_entity_code,
                     :l_ar_ihdr_doc_type_code,
                     :l_ar_ihdr_doc_num,
                     :l_ar_ihdr_org_doc_type_code,
                     :l_ar_ihdr_org_doc_num,
                     :l_ar_ihdr_last_line_num,
                     :l_ar_ihdr_cust_code,
                     :l_ar_ihdr_narration,
                     :l_ar_ihdr_base_date,
                     :l_ar_ihdr_due_date,
                     :l_ar_ihdr_gross_amt,
                     :l_ar_ihdr_payable_amt,
                     :l_ar_ihdr_discount_amt,
                     :l_ar_ihdr_doc_amt,
                     :l_ar_ihdr_currency_code,
                     :l_ar_ihdr_exchg_rate,
                     :l_ar_ihdr_pmnt_terms_code,
                     :l_ar_ihdr_settlement_date,
                     :l_ar_ihdr_settlement_perc,
                     :l_ar_ihdr_cust_ref,
                     :l_ar_ihdr_patient_id,
                     :l_ar_ihdr_billing_group,
                     :l_ar_ihdr_bill_doc_type_code,
                     :l_ar_ihdr_bill_num,
                     :l_ar_ihdr_bill_date,
                     :l_ar_ihdr_doctor_fee_amt,
                     :l_ar_ihdr_main_acc1_code,
                     :l_ar_ihdr_main_acc2_code,
                     :l_ar_ihdr_sub_group_code,
                     :l_ar_ihdr_sub_line_code,
                     :l_ar_ihdr_dept_code,
                     :l_ar_ihdr_product_group_code,
                     :l_ar_ihdr_product_line_code,
                     :l_ar_ihdr_post_month,
                     :l_ar_ihdr_post_year,
                     :l_ar_ihdr_bill_type_code,
                     :l_ar_ihdr_rowid,
					 :l_consolidated_yn;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_CN_INV_HDR",0,"");
  }
  else
  {
l_ar_hdr_misc_clong_name.arr[0]            = '\0';
l_ar_hdr_misc_cshort_name.arr[0]           = '\0';
l_ar_hdr_misc_cadd1_desc.arr[0]            = '\0';
l_ar_hdr_misc_cadd2_desc.arr[0]            = '\0';
l_ar_hdr_misc_cadd3_desc.arr[0]            = '\0';
l_ar_hdr_misc_czip_desc.arr[0]             = '\0';
l_ar_hdr_misc_long_chinese.arr[0]              = '\0';
l_ar_hdr_misc_short_chinese.arr[0]             = '\0';
l_ar_hdr_misc_add1_chinese.arr[0]              = '\0';
l_ar_hdr_misc_add2_chinese.arr[0]              = '\0';
l_ar_hdr_misc_add3_chinese.arr[0]              = '\0';
l_ar_hdr_misc_zip_chinese.arr[0]               = '\0';
l_ar_hdr_tel_num.arr[0]                        = '\0';
l_ar_hdr_contact_name.arr[0]                   = '\0';
l_ar_hdr_contact_name_title.arr[0]             = '\0';


l_ar_hdr_misc_clong_name.len               = 0;
l_ar_hdr_misc_cshort_name.len              = 0;
l_ar_hdr_misc_cadd1_desc.len               = 0;
l_ar_hdr_misc_cadd2_desc.len               = 0;
l_ar_hdr_misc_cadd3_desc.len               = 0;
l_ar_hdr_misc_czip_desc.len                = 0;
l_ar_hdr_misc_long_chinese.len                 = 0;
l_ar_hdr_misc_short_chinese.len                = 0;
l_ar_hdr_misc_add1_chinese.len                 = 0;
l_ar_hdr_misc_add2_chinese.len                 = 0;
l_ar_hdr_misc_add3_chinese.len                 = 0;
l_ar_hdr_misc_zip_chinese.len                  = 0;
l_ar_hdr_tel_num.len                           = 0;
l_ar_hdr_contact_name.len                      = 0;
l_ar_hdr_contact_name_title.len                = 0;

      EXEC SQL FETCH ADJ_POST_INV_HDR
                INTO :l_ar_ihdr_acc_entity_code,
                     :l_ar_ihdr_doc_type_code,
                     :l_ar_ihdr_doc_num,
                     :l_ar_ihdr_org_doc_type_code,
                     :l_ar_ihdr_org_doc_num,
                     :l_ar_ihdr_last_line_num,
                     :l_ar_ihdr_cust_code,
                     :l_ar_ihdr_narration,
                     :l_ar_ihdr_base_date,
                     :l_ar_ihdr_due_date,
                     :l_ar_ihdr_gross_amt,
                     :l_ar_ihdr_payable_amt,
                     :l_ar_ihdr_discount_amt,
                     :l_ar_ihdr_doc_amt,
                     :l_ar_ihdr_currency_code,
                     :l_ar_ihdr_exchg_rate,
                     :l_ar_ihdr_pmnt_terms_code,
                     :l_ar_ihdr_settlement_date,
                     :l_ar_ihdr_settlement_perc,
                     :l_ar_ihdr_cust_ref,
                     :l_ar_ihdr_patient_id,
                     :l_ar_ihdr_billing_group,
                     :l_ar_ihdr_bill_doc_type_code,
                     :l_ar_ihdr_bill_num,
                     :l_ar_ihdr_bill_date,
                     :l_ar_ihdr_doctor_fee_amt,
                     :l_ar_ihdr_main_acc1_code,
                     :l_ar_ihdr_main_acc2_code,
                     :l_ar_ihdr_sub_group_code,
                     :l_ar_ihdr_sub_line_code,
                     :l_ar_ihdr_dept_code,
                     :l_ar_ihdr_product_group_code,
                     :l_ar_ihdr_product_line_code,
                     :l_ar_ihdr_post_month,
                     :l_ar_ihdr_post_year,
                     :l_ar_hdr_misc_clong_name,
                     :l_ar_hdr_misc_cshort_name,
                     :l_ar_hdr_misc_cadd1_desc,
                     :l_ar_hdr_misc_cadd2_desc,
                     :l_ar_hdr_misc_cadd3_desc,
                     :l_ar_hdr_misc_czip_desc,
                     :l_ar_hdr_misc_long_chinese,
                     :l_ar_hdr_misc_short_chinese,
                     :l_ar_hdr_misc_add1_chinese,
                     :l_ar_hdr_misc_add2_chinese,
                     :l_ar_hdr_misc_add3_chinese,
                     :l_ar_hdr_misc_zip_chinese,
                     :l_ar_hdr_tel_num,
                     :l_ar_hdr_contact_name,
                     :l_ar_hdr_contact_name_title,
                     :l_ar_ihdr_rowid,
                     :l_ar_ihdr_adj_type,
                     :l_ar_ihdr_bill_type_code,
					 :l_consolidated_yn;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_ADJ_INV_HDR",0,"");

l_ar_hdr_misc_clong_name.arr[l_ar_hdr_misc_clong_name.len]     = '\0';
l_ar_hdr_misc_cshort_name.arr[l_ar_hdr_misc_cshort_name.len]   = '\0';
l_ar_hdr_misc_cadd1_desc.arr[l_ar_hdr_misc_cadd1_desc.len]     = '\0';
l_ar_hdr_misc_cadd2_desc.arr[l_ar_hdr_misc_cadd2_desc.len]     = '\0';
l_ar_hdr_misc_cadd3_desc.arr[l_ar_hdr_misc_cadd3_desc.len]     = '\0';
l_ar_hdr_misc_czip_desc.arr[l_ar_hdr_misc_czip_desc.len]       = '\0';
l_ar_hdr_misc_long_chinese.arr[l_ar_hdr_misc_long_chinese.len]         = '\0';
l_ar_hdr_misc_short_chinese.arr[l_ar_hdr_misc_short_chinese.len]       = '\0';
l_ar_hdr_misc_add1_chinese.arr[l_ar_hdr_misc_add1_chinese.len]         = '\0';
l_ar_hdr_misc_add2_chinese.arr[l_ar_hdr_misc_add2_chinese.len]         = '\0';
l_ar_hdr_misc_add3_chinese.arr[l_ar_hdr_misc_add3_chinese.len]         = '\0';
l_ar_hdr_misc_zip_chinese.arr[l_ar_hdr_misc_zip_chinese.len]           = '\0';
l_ar_hdr_tel_num.arr[l_ar_hdr_tel_num.len]                             = '\0';
l_ar_hdr_contact_name.arr[l_ar_hdr_contact_name.len]                   = '\0';
l_ar_hdr_contact_name_title.arr[l_ar_hdr_contact_name_title.len]       = '\0';

   }

l_ar_ihdr_acc_entity_code.arr[l_ar_ihdr_acc_entity_code.len]           = '\0';
l_ar_ihdr_doc_type_code.arr[l_ar_ihdr_doc_type_code.len]               = '\0';
l_ar_ihdr_bill_type_code.arr[l_ar_ihdr_bill_type_code.len]             = '\0';
l_ar_ihdr_doc_num.arr[l_ar_ihdr_doc_num.len]                           = '\0';
l_ar_ihdr_org_doc_type_code.arr[l_ar_ihdr_org_doc_type_code.len]       = '\0';
l_ar_ihdr_org_doc_num.arr[l_ar_ihdr_org_doc_num.len]                   = '\0';
l_ar_ihdr_last_line_num.arr[l_ar_ihdr_last_line_num.len]               = '\0';
l_ar_ihdr_cust_code.arr[l_ar_ihdr_cust_code.len]                       = '\0';
l_ar_ihdr_narration.arr[l_ar_ihdr_narration.len]                       = '\0';
l_ar_ihdr_base_date.arr[l_ar_ihdr_base_date.len]                       = '\0';
l_ar_ihdr_due_date.arr[l_ar_ihdr_due_date.len]                         = '\0';
l_ar_ihdr_gross_amt.arr[l_ar_ihdr_gross_amt.len]                       = '\0';
l_ar_ihdr_payable_amt.arr[l_ar_ihdr_payable_amt.len]                   = '\0';
l_ar_ihdr_discount_amt.arr[l_ar_ihdr_discount_amt.len]                 = '\0';
l_ar_ihdr_doc_amt.arr[l_ar_ihdr_doc_amt.len]                           = '\0';
l_ar_ihdr_currency_code.arr[l_ar_ihdr_currency_code.len]               = '\0';
l_ar_ihdr_exchg_rate.arr[l_ar_ihdr_exchg_rate.len]                     = '\0';
l_ar_ihdr_pmnt_terms_code.arr[l_ar_ihdr_pmnt_terms_code.len]           = '\0';
l_ar_ihdr_settlement_date.arr[l_ar_ihdr_settlement_date.len]           = '\0';
l_ar_ihdr_settlement_perc.arr[l_ar_ihdr_settlement_perc.len]           = '\0';
l_ar_ihdr_cust_ref.arr[l_ar_ihdr_cust_ref.len]                         = '\0';
l_ar_ihdr_patient_id.arr[l_ar_ihdr_patient_id.len]                     = '\0';
l_ar_ihdr_billing_group.arr[l_ar_ihdr_billing_group.len]               = '\0';
l_ar_ihdr_bill_doc_type_code.arr[l_ar_ihdr_bill_doc_type_code.len]     = '\0';
l_ar_ihdr_bill_num.arr[l_ar_ihdr_bill_num.len]                         = '\0';
l_ar_ihdr_bill_date.arr[l_ar_ihdr_bill_date.len]                       = '\0';
l_ar_ihdr_doctor_fee_amt.arr[l_ar_ihdr_doctor_fee_amt.len]             = '\0';
l_ar_ihdr_main_acc1_code.arr[l_ar_ihdr_main_acc1_code.len]             = '\0';
l_ar_ihdr_main_acc2_code.arr[l_ar_ihdr_main_acc2_code.len]             = '\0';
l_ar_ihdr_sub_group_code.arr[l_ar_ihdr_sub_group_code.len] = '\0';
l_ar_ihdr_sub_line_code.arr[l_ar_ihdr_sub_line_code.len]   = '\0';
l_ar_ihdr_dept_code.arr[l_ar_ihdr_dept_code.len]                       = '\0';
l_ar_ihdr_product_group_code.arr[l_ar_ihdr_product_group_code.len]     = '\0';
l_ar_ihdr_product_line_code.arr[l_ar_ihdr_product_line_code.len]       = '\0';
l_ar_ihdr_post_month.arr[l_ar_ihdr_post_month.len]                     = '\0';
l_ar_ihdr_post_year.arr[l_ar_ihdr_post_year.len]                       = '\0';
l_ar_ihdr_rowid.arr[l_ar_ihdr_rowid.len]                               = '\0';
l_ar_ihdr_adj_type.arr[l_ar_ihdr_adj_type.len]                         = '\0';
l_consolidated_yn.arr[l_consolidated_yn.len]						   = '\0';

      if (LAST_ROW)
            return (0);
      else
            return (1);
}

dn_post_fetch_dn_line(l_trn_type)
char l_trn_type;
{
l_ar_line_acc_entity_code.arr[0]      = '\0';
l_ar_line_doc_type_code.arr[0]        = '\0';
l_ar_line_doc_num.arr[0]              = '\0';
l_ar_line_org_doc_type_code.arr[0]    = '\0';
l_ar_line_org_doc_num.arr[0]          = '\0';
l_ar_line_line_num.arr[0]             = '\0';
l_ar_line_main_acc1_code.arr[0]       = '\0';
l_ar_line_main_acc2_code.arr[0]       = '\0';
l_ar_line_sub_group_code.arr[0] = '\0';
l_ar_line_sub_line_code.arr[0]  = '\0';
l_ar_line_dept_code.arr[0]            = '\0';
l_ar_line_product_group_code.arr[0]   = '\0';
l_ar_line_product_line_code.arr[0]    = '\0';
l_ar_line_amount.arr[0]               = '\0';
l_ar_line_narration.arr[0]            = '\0';
l_ar_line_rowid.arr[0]                = '\0';


l_ar_line_acc_entity_code.len         = 0;
l_ar_line_doc_type_code.len           = 0;
l_ar_line_doc_num.len                 = 0;
l_ar_line_org_doc_type_code.len       = 0;
l_ar_line_org_doc_num.len             = 0;
l_ar_line_line_num.len                = 0;
l_ar_line_main_acc1_code.len          = 0;
l_ar_line_main_acc2_code.len          = 0;
l_ar_line_sub_group_code.len    = 0;
l_ar_line_sub_line_code.len     = 0;
l_ar_line_dept_code.len               = 0;
l_ar_line_product_group_code.len      = 0;
l_ar_line_product_line_code.len       = 0;
l_ar_line_amount.len                  = 0;
l_ar_line_narration.len               = 0;
l_ar_line_rowid.len                   = 0;

if (l_trn_type == 'D')
{
      EXEC SQL FETCH DN_POST_LINE
                INTO :l_ar_line_acc_entity_code,
                     :l_ar_line_doc_type_code,
                     :l_ar_line_doc_num,
                     :l_ar_line_org_doc_type_code,
                     :l_ar_line_org_doc_num,
                     :l_ar_line_line_num,
                     :l_ar_line_main_acc1_code,
                     :l_ar_line_main_acc2_code,
                     :l_ar_line_sub_group_code,
                     :l_ar_line_sub_line_code,
                     :l_ar_line_dept_code,
                     :l_ar_line_product_group_code,
                     :l_ar_line_product_line_code,
                     :l_ar_line_amount,
                     :l_ar_line_narration,
                     :l_ar_line_rowid;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_AR_DN_LINE",0,"");
}
else if (l_trn_type == 'C')
{
      EXEC SQL FETCH CN_POST_LINE
                INTO :l_ar_line_acc_entity_code,
                     :l_ar_line_doc_type_code,
                     :l_ar_line_doc_num,
                     :l_ar_line_org_doc_type_code,
                     :l_ar_line_org_doc_num,
                     :l_ar_line_line_num,
                     :l_ar_line_main_acc1_code,
                     :l_ar_line_main_acc2_code,
                     :l_ar_line_sub_group_code,
                     :l_ar_line_sub_line_code,
                     :l_ar_line_dept_code,
                     :l_ar_line_product_group_code,
                     :l_ar_line_product_line_code,
                     :l_ar_line_amount,
                     :l_ar_line_narration,
                     :l_ar_line_rowid;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_AR_CN_LINE",0,"");
 }
 else
 {
      EXEC SQL FETCH ADJ_POST_LINE
                INTO :l_ar_line_acc_entity_code,
                     :l_ar_line_doc_type_code,
                     :l_ar_line_doc_num,
                     :l_ar_line_org_doc_type_code,
                     :l_ar_line_org_doc_num,
                     :l_ar_line_line_num,
                     :l_ar_line_main_acc1_code,
                     :l_ar_line_main_acc2_code,
                     :l_ar_line_sub_group_code,
                     :l_ar_line_sub_line_code,
                     :l_ar_line_dept_code,
                     :l_ar_line_product_group_code,
                     :l_ar_line_product_line_code,
                     :l_ar_line_amount,
                     :l_ar_line_narration,
                     :l_ar_line_rowid;

      if (OERROR)
         err_mesg("FETCH failed on cursor CUR_ADJ_CN_LINE",0,"");
 }

l_ar_line_acc_entity_code.arr[l_ar_line_acc_entity_code.len]           = '\0';
l_ar_line_doc_type_code.arr[l_ar_line_doc_type_code.len]               = '\0';
l_ar_line_doc_num.arr[l_ar_line_doc_num.len]                           = '\0';
l_ar_line_org_doc_type_code.arr[l_ar_line_org_doc_type_code.len]       = '\0';
l_ar_line_org_doc_num.arr[l_ar_line_org_doc_num.len]                   = '\0';
l_ar_line_line_num.arr[l_ar_line_line_num.len]                         = '\0';
l_ar_line_main_acc1_code.arr[l_ar_line_main_acc1_code.len]             = '\0';
l_ar_line_main_acc2_code.arr[l_ar_line_main_acc2_code.len]             = '\0';
l_ar_line_sub_group_code.arr[l_ar_line_sub_group_code.len] = '\0';
l_ar_line_sub_line_code.arr[l_ar_line_sub_line_code.len]   = '\0';
l_ar_line_dept_code.arr[l_ar_line_dept_code.len]                       = '\0';
l_ar_line_product_group_code.arr[l_ar_line_product_group_code.len]     = '\0';
l_ar_line_product_line_code.arr[l_ar_line_product_line_code.len]       = '\0';
l_ar_line_amount.arr[l_ar_line_amount.len]                             = '\0';
l_ar_line_narration.arr[l_ar_line_narration.len]                       = '\0';
l_ar_line_rowid.arr[l_ar_line_rowid.len]                               = '\0';

      if (LAST_ROW)
            return (0);
      else
            return (1);

}
