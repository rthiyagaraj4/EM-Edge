
#define NO_DATA_FOUND (sqlca.sqlcode == 1403)
#define VIEW_LOG_FILE 1
#define ONLINE_PRINTING 1
#define OERROR 		  (sqlca.sqlcode < 0)
#define INIT_MESG "Label Printing"
#define ESC 0x1B

#include <stdio.h>  
#include <string.h>
#include <math.h>
#include <malloc.h> 
#include <rl.h>

EXEC SQL BEGIN DECLARE SECTION;                  

VARCHAR uid_pwd                  [42],     
		nd_source_type	         [2],
		nd_fm_source	         [7],
        d_no_copy			     [2],
        nd_facility_id		     [3],
        //nd_facility_name	     [101],
		nd_facility_name	     [300],
        nd_ws_no                 [201],
        nd_trx_ind	             [2],
        nd_printer_type          [2],

        nd_pgm_date              [41],
        nd_session_id            [41],
        nd_specimen_no           [41],
        nd_sample_id             [41],
        nd_block_seq_no          [41],
        nd_task_code             [41],
        nd_slide_seq_no          [41],
        nd_category_code         [41],
        nd_category_year         [41],
        nd_category_number       [41],
        nd_patient_id            [41],
        nd_sample_block_slide    [41],
        nd_sample_indicator      [41],
        nd_section_code          [41],
		nd_identifier_or_tests   [541],
		nd_test_code             [41],

        d_flag			   [2],

		nd_blk_slide_trim        [11],

        er_msg                   [171], 

/***************** variables added for ***********/

		a_ws_no               [41],
		a_pgm_id              [41],

/***************** variables added for enhancement ***********/

//		nd_file_no			[100],
		nd_print_source_type	[2],
		nd_print_source		[2],

/**************** variables added for CRF 0067 *****************/
		nd_episode_type	     [5],
		nd_pat_name		     [240],
		language_id			   [5]; //added for globalisation


 char string_var[100];

/*tern  char WORKING_DIR_NAME [75];*/

  int no_of_rows = 0;

  int er_msg_type = 0;	
  int err_flag = 0;
  
  char string_char[100];
  	
EXEC SQL END DECLARE SECTION; 

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;
char filename[150];
char filename1[150];

char *command;  
char gtt_yn = 'N';

void proc_main(argc,argv)
int argc;
char *argv[];
{
 err_flag = 0;

//ins_message(ERR_MESG,"rlrlbprn : Start");

  if(argc < 15) 
  {
     ins_message(ERR_MESG,"rlrhlabl : Usage - PGM_ID UID_PWD PGM_DATE SESSION_ID SPECIMEN_NO SAMPLE_ID BLOCK_SEQ_NO TASK_CODE SLIDE_SEQ_NO PATIENT_ID SAMPLE_BLOCK_SLIDE SAMPLE_INDICATOR SECTION_CODE FACILITY_ID WS_NO CATEGORY_CODE CATEGORY_YEAR CATEGORY_NUMBER arguments wrong\n");
  }

    strcpy(filename,WORKING_DIR);

    strcpy(a_pgm_id.arr,argv[0]);
    a_pgm_id.len = strlen(a_pgm_id.arr); 

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr); 

    strcpy(nd_pgm_date.arr, argv[2]);
    nd_pgm_date.len = strlen(nd_pgm_date.arr);

    strcpy(nd_session_id.arr, argv[3]);
    nd_session_id.len = strlen(nd_session_id.arr);

    strcpy(nd_specimen_no.arr, argv[4]);
    nd_specimen_no.len = strlen(nd_specimen_no.arr);

    strcpy(nd_sample_id.arr, argv[5]);
    nd_sample_id.len = strlen(nd_sample_id.arr);

    strcpy(nd_block_seq_no.arr, argv[6]);
    nd_block_seq_no.len = strlen(nd_block_seq_no.arr);

    strcpy(nd_task_code.arr, argv[7]);
    nd_task_code.len = strlen(nd_task_code.arr);

    strcpy(nd_slide_seq_no.arr, argv[8]);
    nd_slide_seq_no.len = strlen(nd_slide_seq_no.arr);

    strcpy(nd_patient_id.arr, argv[9]);
    nd_patient_id.len = strlen(nd_patient_id.arr);

	strcpy(nd_sample_block_slide.arr, argv[10]);
    nd_sample_block_slide.len = strlen(nd_sample_block_slide.arr);

    strcpy(nd_sample_indicator.arr, argv[11]);
    nd_sample_indicator.len = strlen(nd_sample_indicator.arr);

    strcpy(nd_section_code.arr, argv[12]);
    nd_section_code.len = strlen(nd_section_code.arr);

    strcpy(nd_facility_id.arr, argv[13]);
    nd_facility_id.len = strlen(nd_facility_id.arr);

    strcpy(nd_ws_no.arr, argv[14]);
    nd_ws_no.len = strlen(nd_ws_no.arr);

    if (argc>15)
	{
      strcpy(nd_category_code.arr, argv[15]);
      nd_category_code.len = strlen(nd_category_code.arr);

	  strcpy(nd_category_year.arr, argv[16]);
      nd_category_year.len = strlen(nd_category_year.arr);

      strcpy(nd_category_number.arr, argv[17]);
      nd_category_number.len = strlen(nd_category_number.arr);
	}

    strcpy(filename1, a_pgm_id.arr);

    strcat(filename, strcat(filename1, ".lis"));

    EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    EXEC SQL CONNECT :uid_pwd;

    set_meduser_role();
 /*********************** added for globalisation ******************************/
    strcpy(language_id.arr,l_language_id.arr);
	language_id.len =l_language_id.len;
	language_id.arr[l_language_id.len]='\0';
/*********************** added for globalisation ******************************/

    get_facility_name();

    get_printer_type();

    get_trans_ind();

	get_sam_anatomy_ind();

//	get_identifier_or_test();  commented by preetham on 08/10/2007 wrt SD-CRF-0067

	get_pat_name();   // added by preetham on 08/10/2007 wrt SD-CRF-0067

//	get_task_slide_no();    commented by preetham on 08/10/2007 wrt SD-CRF-0067

	trim_block_slide();     // added by preetham on 07/01/2008 wrt ML-SD-SCF-2047
    
	call_main_report();

    EXEC SQL COMMIT WORK RELEASE;

    return;

err_exit:
    EXEC SQL WHENEVER SQLERROR CONTINUE;
	fclose(f1);
    sprintf(string_var,"%s -> %s\n",nd_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
    ins_message(ORA_MESG,string_var);
    EXEC SQL COMMIT WORK RELEASE;

}

dclr_spec_anat_test_cur()
{
 
		EXEC SQL DECLARE c_spec_anat_test
                             CURSOR FOR
                             SELECT B.short_desc
                             FROM   RL_specimen_anatomy_dtls A, rl_test_code_lang_vw B
                             WHERE  A.SPECIMEN_NO = :nd_specimen_no
                             AND    A.OPERATING_FACILITY_ID = :nd_facility_id
							 AND    A.test_code = B.test_code
							 and	b.language_id = :language_id;

		EXEC SQL OPEN c_spec_anat_test;

    if (OERROR) 
    {
      ins_message (ORA_MESG, "OPEN Cursor c_spec_anat_test Failed ");
    }
}

dclr_test_cur()
{
 
		EXEC SQL DECLARE c_test
                             CURSOR FOR
                             SELECT B.short_desc
                             FROM RL_REQUEST_DETAIL A, rl_test_code_lang_vw B
                             WHERE A.SPECIMEN_NO = :nd_specimen_no
                             AND   A.OPERATING_FACILITY_ID = :nd_facility_id
							 AND   A.line_no = 1
							 AND   A.test_code =  B.test_code
							 and   b.language_id = :language_id;

		EXEC SQL OPEN c_test;

    if (OERROR) 
    {
      ins_message (ORA_MESG, "OPEN Cursor c_test Failed ");
    }
}

trim_block_slide()        // added by preetham on 07-01-2008 wrt ML-SD-SCF-2047
{

   nd_blk_slide_trim.arr[0] = '\0';
   nd_blk_slide_trim.len = 0;

   EXEC SQL select ltrim(:nd_sample_block_slide,'-') into nd_blk_slide_trim from dual;

   nd_blk_slide_trim.len = strlen(nd_blk_slide_trim.arr);
   strcpy(nd_sample_block_slide.arr, nd_blk_slide_trim.arr);
   nd_sample_block_slide.len = strlen(nd_sample_block_slide.arr);

}

get_identifier_or_test()
{

  if (strcmp(nd_sample_indicator.arr, "AT") == 0 )
  {
    EXEC SQL SELECT B.short_desc
  	          INTO   nd_identifier_or_tests
  	          FROM   RL_SAMPLE_DETAILS A, RL_TEST_CODE_lang_vw B
  	          WHERE  SPECIMEN_NO = :nd_specimen_no
  	          AND    OPERATING_FACILITY_ID = :nd_facility_id
  	          AND    SAMPLE_ID   = :nd_sample_id
			  AND	A.test_code = B.test_code
			  and	b.language_id = :language_id;


    if(OERROR)
    {
	  strcpy(nd_identifier_or_tests.arr, "");
	  sprintf(string_var,"%s get_identifier_or_test()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }
    if(NO_DATA_FOUND)
    {
	  strcpy(nd_identifier_or_tests.arr, "");
      nd_identifier_or_tests.arr[nd_identifier_or_tests.len]   = '\0';
      nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);
    }

    nd_identifier_or_tests.arr[nd_identifier_or_tests.len]   = '\0';
    nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);

    if (strlen(nd_identifier_or_tests.arr) == 0 )
	{
	  strcpy(nd_identifier_or_tests.arr, "");
	  nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);

	  dclr_spec_anat_test_cur();
      while(fetch_spec_anat_test_cur())
      {
	    if (strlen(nd_identifier_or_tests.arr) > 0 )
		{
          sprintf(nd_identifier_or_tests.arr,"%s, %s", nd_identifier_or_tests.arr, nd_test_code.arr);
          nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);
		}
		else
		{
          sprintf(nd_identifier_or_tests.arr,"%s", nd_test_code.arr);
          nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);
		}
      }


      if (no_of_rows == 0)
	  {
  	    dclr_test_cur();
        while(fetch_test_cur())
        {
	      if (strlen(nd_identifier_or_tests.arr) > 0 )
		  {
            sprintf(nd_identifier_or_tests.arr,"%s, %s", nd_identifier_or_tests.arr, nd_test_code.arr);
            nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);
		  }
		  else
		  {
            sprintf(nd_identifier_or_tests.arr,"%s", nd_test_code.arr);
            nd_identifier_or_tests.len = strlen(nd_identifier_or_tests.arr);
		  }
        }
      }
	}
  }
  else
  {
    strcpy(nd_identifier_or_tests.arr, nd_sample_block_slide.arr);
  }

//sprintf(string_var, " Identifier  %s", nd_identifier_or_tests.arr);
//disp_message(ERR_MESG, string_var);

}


int fetch_spec_anat_test_cur()
{

  nd_test_code.len = 0;
  nd_test_code.arr[nd_test_code.len] = '\0';

      EXEC SQL FETCH c_spec_anat_test INTO
                     :nd_test_code;
    if (OERROR)
	{
		sprintf(string_var,"%s fetch_spec_anat_test_cur()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
        ins_message (ORA_MESG, "FETCH failed c_test_cur ");
		return 0;
      }

    if (NO_DATA_FOUND)
      return 0;

    nd_test_code.arr[nd_test_code.len] = '\0';
    nd_test_code.len = strlen(nd_test_code.arr);

  no_of_rows = no_of_rows + 1;
  if (no_of_rows == 2)
    return 0;
  else
    return 1;
  
}

int fetch_test_cur()
{

  nd_test_code.len = 0;
  nd_test_code.arr[nd_test_code.len] = '\0';

      EXEC SQL FETCH c_test INTO
                     :nd_test_code;
    if (OERROR)
	{
		sprintf(string_var,"%s fetch_test_cur()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
        ins_message (ORA_MESG, "FETCH failed c_test_cur ");
		return 0;
      }

    if (NO_DATA_FOUND)
      return 0;

    nd_test_code.arr[nd_test_code.len] = '\0';
    nd_test_code.len = strlen(nd_test_code.arr);

  no_of_rows = no_of_rows + 1;
  if (no_of_rows == 2)
    return 0;
  else
    return 1;
  
}

get_sam_anatomy_ind()
{
  nd_sample_indicator.len = 0;
  nd_sample_indicator.arr[nd_sample_indicator.len] = '\0';

    EXEC SQL SELECT NVL(use_sample_anatomy_ind, 'NA')
             INTO   :nd_sample_indicator
             FROM   rl_section_code
             WHERE  section_code = :nd_section_code;
    if(OERROR)
    {
	  strcpy(nd_sample_indicator.arr, "");
	  sprintf(string_var,"%s get_sam_anatomy_ind()-> %s\n", nd_section_code.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }
    if(NO_DATA_FOUND)
    {
	  strcpy(nd_sample_indicator.arr, "");
      nd_sample_indicator.arr[nd_sample_indicator.len]   = '\0';
      nd_sample_indicator.len = strlen(nd_sample_indicator.arr);
    }
    nd_sample_indicator.arr[nd_sample_indicator.len]   = '\0';
    nd_sample_indicator.len = strlen(nd_sample_indicator.arr);

}

/************************** added by preetham on 08/10/2007 wrt SD-CRF-0067 ***********/
get_pat_name()
{
	nd_episode_type.arr[0]		= '\0';
	nd_pat_name.arr[0]			= '\0';

	nd_episode_type.len		= 0;
	nd_pat_name.len			= 0;
	
    EXEC SQL SELECT episode_type
             INTO   :nd_episode_type
             FROM   RL_REQUEST_HEADER
             WHERE  specimen_no = TO_NUMBER(:nd_specimen_no)
			 AND    operating_facility_id  = :nd_facility_id;
    
	if(OERROR)
    {
	  sprintf(string_var,"%s episode type()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }

    if(NO_DATA_FOUND)
    {
	  strcpy(nd_episode_type.arr, "");
      nd_episode_type.arr[nd_episode_type.len]   = '\0';
      nd_episode_type.len = strlen(nd_episode_type.arr);
  	  sprintf(string_var,"%s get_pat_name()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }

    nd_episode_type.arr[nd_episode_type.len]   = '\0';
    nd_episode_type.len = strlen(nd_episode_type.arr);

  if  ( strcmp(nd_episode_type.arr , "I") == 0  || 
			strcmp(nd_episode_type.arr , "O") == 0 || strcmp(nd_episode_type.arr , "H") == 0 )
  {
    EXEC SQL SELECT DECODE(:language_id, 'en', SHORT_NAME, 'th', SHORT_NAME_LOC_LANG) short_name
             INTO   :nd_pat_name
             FROM   MP_PATIENT_MAST
             WHERE  patient_id = :nd_patient_id;
    
  }
  else
  {
    EXEC SQL SELECT DECODE(:language_id, 'en', SHORT_NAME, 'th', SHORT_NAME_LOC_LANG) short_name
             INTO   :nd_pat_name
             FROM   RL_PATIENT_MAST
             WHERE  patient_id=:nd_patient_id;
    
  }

   if(OERROR)
   {
	  strcpy(nd_pat_name.arr, "");
	  sprintf(string_var,"%s get_pat_name()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }
    if(NO_DATA_FOUND)
    {
	  strcpy(nd_pat_name.arr, "");
      nd_pat_name.arr[nd_pat_name.len]   = '\0';
      nd_pat_name.len = strlen(nd_pat_name.arr);
	  
	  sprintf(string_var,"%s get_pat_name()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);

    }

    nd_pat_name.arr[nd_pat_name.len]   = '\0';
    nd_pat_name.len = strlen(nd_pat_name.arr);


}

/**************************** till here ***********************************************/

get_task_slide_no()
{
  if (strcmp(nd_sample_indicator.arr, "SA") == 0 )
  {
    EXEC SQL SELECT short_desc
             INTO   :nd_slide_seq_no
             FROM   RL_TASK_MAST
             WHERE  task_code=:nd_task_code
			 AND    section_code = :nd_section_code;
    if(OERROR)
    {
	  strcpy(nd_slide_seq_no.arr, "");
	  sprintf(string_var,"%s get_task_slide_no()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
      ins_message(ORA_MESG, string_var);
    }
    if(NO_DATA_FOUND)
    {
	  strcpy(nd_slide_seq_no.arr, "");
      nd_slide_seq_no.arr[nd_slide_seq_no.len]   = '\0';
      nd_slide_seq_no.len = strlen(nd_slide_seq_no.arr);
    }
    nd_slide_seq_no.arr[nd_slide_seq_no.len]   = '\0';
    nd_slide_seq_no.len = strlen(nd_slide_seq_no.arr);
  }
}

get_facility_name()
{

	nd_facility_name.arr[0]		= '\0';
	nd_facility_name.len		= 0;

	EXEC SQL  SELECT facility_short_name
	            INTO :nd_facility_name
	            FROM rl_param_for_facility
               WHERE operating_facility_id = :nd_facility_id;

	if(OERROR)
	{
		sprintf(string_var,"%s get_facility_name(1)-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);
	}

	nd_facility_name.arr[nd_facility_name.len]   = '\0';
	nd_facility_name.len = strlen(nd_facility_name.arr);

    if(NO_DATA_FOUND)
    {
      nd_facility_name.arr[nd_facility_name.len]   = '\0';
      nd_facility_name.len = strlen(nd_facility_name.arr);
    }

    if (strlen(nd_facility_name.arr) <= 0 )
	{
		EXEC SQL  SELECT facility_name
			      INTO   :nd_facility_name
				  FROM   sm_facility_param_lang_vw
				  WHERE  facility_id = :nd_facility_id
				  and language_id = :language_id;

		if(OERROR)
		{
			sprintf(string_var,"%s get_facility_name()-> %s\n", nd_facility_id.arr, sqlca.sqlerrm.sqlerrmc);
			ins_message(ORA_MESG, string_var);
		}

		nd_facility_name.arr[nd_facility_name.len]   = '\0';
		nd_facility_name.len = strlen(nd_facility_name.arr);

		if(NO_DATA_FOUND)
		{
		nd_facility_name.arr[nd_facility_name.len]   = '\0';
		nd_facility_name.len = strlen(nd_facility_name.arr);
		}
	}

}

/**************************select transaction based or not ***************/
get_trans_ind()
{

	
	nd_trx_ind.arr[0]		= '\0';
	nd_trx_ind.len		= 0;

	EXEC SQL  SELECT NVL(TRANSACTION_BASED_YN, 'N')
	            INTO :nd_trx_ind
	            FROM sy_online_print_id
               WHERE MODULE_ID = 'RL'
   		         AND ONLINE_PRINT_NAME = :a_pgm_id;

	if(OERROR)
	{
		sprintf(string_var,"%s get_trans_ind()-> %s\n", nd_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);
	}

    if(NO_DATA_FOUND)
      nd_trx_ind.arr[nd_trx_ind.len]   = '\0';
		
	 if (strcmp(nd_trx_ind.arr, "Y") == 0)
	 {
		strcpy(nd_print_source_type.arr, nd_source_type.arr);
		strcpy(nd_print_source.arr, nd_fm_source.arr);
	 }
	 else
	 {
		strcpy(nd_print_source_type.arr, "O");
		strcpy(nd_print_source.arr, " ");
	 }

}

call_main_report()
{
  call_print_label();
}

set_fonts()
{

/*	fprintf(f1,"%c&k4S",ESC); This will make the font condensed */	
/*  fprintf(fp,"%c(s4B",ESC); This will make the font bold      */
	fprintf(f1, "%c(s15H", ESC);/* Reduce the font size*/
	fprintf(f1,"%c&a0L",ESC);/* This will make the left margin to reduce to 0 */
	fprintf(f1,"%c&l0E\n",ESC);	/* This will make the top margin to reduce to 0 */
	fprintf(f1,"%c&l12D",ESC);/* This will make no. of lines per inch to 8 */
}

call_print_label()
{

    if ( ( f1 = fopen ( filename, "w" ) ) == NULL ) 
    {
      ins_message(ERR_MESG,"Error in opening output file...\n");  
    }

    print_sample_label(1);
    fclose(f1);

    if (strcmp(nd_printer_type.arr,"3")!= 0)
    {	
      fprintf(f1, "%cE", ESC);
      set_fonts();
    }
    if (err_flag == 0)
    {
       print_barcode_label(1);
    }
}

/******************* added on 28.07.2003 ********/
get_printer_type()
{

	  strcpy(nd_printer_type.arr, "3");
	  nd_printer_type.len = strlen(nd_printer_type.arr);

	  EXEC SQL SELECT NVL(printer_type, '1')
  	           INTO  :nd_printer_type
  	           FROM   SY_ONLINE_PRINT_ID
	           WHERE  module_id = 'RL'
	           AND    online_print_name = :a_pgm_id; 

        if(NO_DATA_FOUND)
   		strcpy(nd_printer_type.arr, "3");
		nd_printer_type.len = strlen(nd_printer_type.arr);
  	  if(OERROR)
   		strcpy(nd_printer_type.arr, "3");
		nd_printer_type.len = strlen(nd_printer_type.arr);

	  nd_printer_type.arr[nd_printer_type.len]  = '\0';
	  nd_printer_type.len = 0;

}

/*  added by preetham on 08/10/2007 wrt SD-CRF-0067*/
print_sample_label(int v_ind)
{
	fprintf(f1, "%-13.13s\n", nd_facility_name.arr);
	fprintf(f1, "%-13.13s\n", nd_pat_name.arr);
	fprintf(f1, "%-s\n", nd_patient_id.arr);
	if (strlen(nd_category_code.arr) > 0)
	{
      fprintf(f1, "%-s-%-c%-c-%-s\n", nd_category_code.arr, nd_category_year.arr[2], nd_category_year.arr[3], nd_category_number.arr);
	}
	fprintf(f1, "%-s %s\n", nd_sample_block_slide.arr, nd_task_code.arr );
}


/*  commented by preetham on 08/10/2007 wrt SD-CRF-0067
print_sample_label(int v_ind)
{
	fprintf(f1, "%-13.13s\n", nd_facility_name.arr);
//	fprintf(f1, "%-s\n", nd_specimen_no.arr);
	if (strlen(nd_category_code.arr) > 0)
	{
      fprintf(f1, "%-s-%-s-%-s\n", nd_category_code.arr, nd_category_year.arr, nd_category_number.arr);
	}
	fprintf(f1, "%-s\n", nd_patient_id.arr);
	fprintf(f1, "%-s\n", nd_identifier_or_tests.arr);
	fprintf(f1, "%-s\n", nd_slide_seq_no.arr);
}
*/

/***************** Print BarCode Label ********************/
print_barcode_label(int nolabel)
 {
    int i;
    int WSPrintstatus;

    for(i=0;i<nolabel;i++)
		  {

		 		if (nd_source_type.arr[0]	== '!')
				{					

					 WSPrintDocument 
						   (
							uid_pwd.arr,		//char	*PUidPwd;
							nd_session_id.arr,	//char	*PSessionID;
							nd_facility_id.arr,	//char	*PFacilityID;
							"RL",				//char	*PModuleID;
							a_pgm_id.arr,			//char	*PDocumentID;
							filename,	    	//char	*POnlinePrintFileNames;
							"O",				//char	*PLocationTypes;
							" ",				//char	*PLocationCodes;
							1,			//int	PNumOfCopies;
							1,				    //int	PPageFrom;
							9999,				//int	PPageTo;
							nd_ws_no.arr,		//char	*PWorkstationID
							WORKING_DIR			//char	*PReportOutputDir
						   );
				}						   
				else
				{


					WSPrintstatus =		 WSPrintDocument
						   (
							uid_pwd.arr,				//char	*PUidPwd;
							nd_session_id.arr,			//char	*PSessionID;
							nd_facility_id.arr,			//char	*PFacilityID;
							"RL",						//char	*PModuleID;
							a_pgm_id.arr,					//char	*PDocumentID;
							filename,	    			//char	*POnlinePrintFileNames;
							nd_print_source_type.arr,	//char	*PLocationTypes;
							nd_print_source.arr,	    //char	*PLocationCodes;
							1,					//int	PNumOfCopies;
							1,							//int	PPageFrom;
							9999,						//int	PPageTo;
							nd_ws_no.arr,				//char	*PWorkstationID
							WORKING_DIR					//char	*PReportOutputDir
						   );

				}	  					   
		  }
 
 }


/*--------------------------------------------------*/
ins_message(int msg_type,char msg[])
{
   er_msg.arr[0] = '\0';
   er_msg.len = 0;
   

   er_msg_type = 0;

   strcpy(er_msg.arr,msg);
   er_msg.len = strlen(er_msg.arr);
 
   er_msg_type = msg_type;   

   EXEC SQL

   INSERT INTO SY_PROG_MSG
         (OPERATING_FACILITY_ID,PGM_ID,MSG_TYPE,MSG_NUM,MSG_DESC,MSG_DATE_TIME,SESSION_ID,PGM_DATE)
   VALUES 
         (:nd_facility_id,'RLRHLABL',:er_msg_type,NULL, SUBSTR(:er_msg, 1, 70),SYSDATE,USERENV('sessionid'),TO_CHAR(SYSDATE,'DD/MM/YYYY'));

   err_flag = 1;
}

