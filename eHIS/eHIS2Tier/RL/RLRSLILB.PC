/*
#define DEBUG
*/

#define NO_DATA_FOUND (sqlca.sqlcode == 1403)  
#define VIEW_LOG_FILE 1
#define ONLINE_PRINTING 1
#define INIT_MESG "Slide Label Printing"
#define HLINE 40  
#define VLINE 10
#define ESC 0x1B


/*#define SPACE1 0xA1 
#define SPACE2 0x40*/   

#include <stdio.h>  
#include <string.h>
#include <gl.h>
#include <math.h>

EXEC SQL BEGIN DECLARE SECTION;  

VARCHAR nd_operating_facility_id   [3],
        nd_facility_id		 	   [3],
        uid_pwd                    [91],
		nd_session_id              [50],
        d_specimen_no              [21],
        d_no_copy                  [4],
		d_temp_no_copy			   [4],
		nd_trx_ind		           [2],
		nd_printer_type            [2],
		nd_ws_no			       [50],

	d_patient_id           [21],
	d_section_code         [6],
	d_specimen_type_code   [5],
	d_episode_type		   [2],
	d_order_id			   [15],
	d_order_type_code	   [4],
    d_test_code            [11],
	d_urgent_indicator	   [8],
	d_pat_name             [240],
	nd_specimen_no		   [21],
	parent_spec_no		   [21],
	r_child_spec_no		   [21],
	d_desc_on_label		   [31],
	d_actual_patient_id	   [21],
	d_source_type		   [2],
	d_source_code		   [11],
	d_ref_location		   [21],
	d_description		   [21],
	er_msg                 [171],
	d_category_code		   [5],
	d_category_year		   [5],
	d_category_no		   [21],
	d_test_name			   [41],	
    //d_facility_name		   [41],
	d_facility_name		   [300],
	nd_test				   [11],
	nd_interval_test	   [11],
	language_id			   [5]; //added for globalisation

 char string_var [100];
       

/*tern  char WORKING_DIR_NAME [75];*/

		int er_msg_type = 0;	
		int err_flag = 0;

		int d_count = 0;
		int i_count = 0;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;
char filename[150];
char nd_filename[150];

  char  *command;
  int i,s1,hosp_nm_len;

  char gtt_yn = 'N';

void proc_main(argc,argv)
int argc;
char *argv[];
{

   void dclr_cur();

/**** newly added on 14/01/2003 to suppress the error messages ***/
  	err_flag = 0;  

  if(argc < 11) 
  {
    ins_message(ERR_MESG,"rlrslilb : Usage -  arguments wrong\n");
  }

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(nd_session_id.arr, argv[2]);
    nd_session_id.len = strlen(nd_session_id.arr);


    strcpy(nd_facility_id.arr, argv[4]);
	nd_facility_id.len = strlen(nd_facility_id.arr);

    strcpy(d_specimen_no.arr,argv[5]);
    d_specimen_no.len = strlen(d_specimen_no.arr);

	strcpy(d_section_code.arr,argv[6]);
    d_section_code.len = strlen(d_section_code.arr);

	strcpy(d_no_copy.arr,argv[7]);
    d_no_copy.len = strlen(d_no_copy.arr);

   	strcpy(nd_printer_type.arr, argv[8]);
    nd_printer_type.len = strlen(nd_printer_type.arr); 

	strcpy(nd_ws_no.arr, argv[9]);
    nd_ws_no.len = strlen(nd_ws_no.arr); 

	strcpy(nd_test.arr, argv[10]);
    nd_test.len = strlen(nd_test.arr); 

	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

    EXEC SQL CONNECT :uid_pwd;

	/*
	* Enable or Disable tracing
	*/
	EnableOrDisableTracing();

    set_meduser_role();

/*********************** added for globalisation ******************************/
    strcpy(language_id.arr,l_language_id.arr);
	language_id.len =l_language_id.len;
	language_id.arr[l_language_id.len]='\0';
/*********************** added for globalisation ******************************/

	d_patient_id.arr[0]				= '\0';
	d_patient_id.len				= 0;
	d_episode_type.arr[0]			= '\0';
	d_episode_type.len				= 0;
	d_specimen_type_code.arr[0]		= '\0';
	d_specimen_type_code.len		= 0;
	d_urgent_indicator.arr[0]		= '\0';
	d_urgent_indicator.len			= 0;
	d_source_code.arr[0]			= '\0';
	d_source_code.len				= 0;
	d_source_type.arr[0]			= '\0';
	d_source_type.len				= 0;
	d_category_code.arr[0]			= '\0';
	d_category_code.len				= 0;
	d_category_year.arr[0]			= '\0';
	d_category_year.len				= 0;
	d_category_no.arr[0]			= '\0';
	d_category_no.len				= 0;
	nd_operating_facility_id.arr[0]	= '\0';
	nd_operating_facility_id.len	= 0;  
	    	
    
	EXEC SQL SELECT operating_facility_id,patient_id, specimen_type_code, episode_type,
				   DECODE(urgent_indicator,'S','ST','U','UR','RO'), 
				   order_type_code, 
					order_id, source_code, source_type,
					SUBSTR(category_code, 1, 4), SUBSTR(category_year, 3, 2), 
					SUBSTR(category_number, 1, 10)
			 INTO :nd_operating_facility_id,:d_patient_id, :d_specimen_type_code,
				  :d_episode_type,
				  :d_urgent_indicator, :d_order_type_code,
				  :d_order_id, :d_source_code, :d_source_type,
				  :d_category_code, :d_category_year, :d_category_no
			 FROM rl_request_header
			 WHERE specimen_no = TO_NUMBER(:d_specimen_no)
			 AND OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,
         										                   :nd_facility_id);

 	 d_order_type_code.arr[d_order_type_code.len]		= '\0';
	 d_order_id.arr[d_order_id.len]						= '\0';
	 d_patient_id.arr[d_patient_id.len]					= '\0';
	 d_episode_type.arr[d_episode_type.len]				= '\0';
	 d_specimen_type_code.arr[d_specimen_type_code.len]	= '\0';
	 d_urgent_indicator.arr[d_urgent_indicator.len]		= '\0';
	 d_source_code.arr[d_source_code.len]				= '\0';
	 d_source_type.arr[d_source_type.len]				= '\0';
 	 d_category_code.arr[d_category_code.len]			= '\0';
	 d_category_year.arr[d_category_year.len]			= '\0';
	 d_category_no.arr[d_category_no.len]				= '\0';
	 nd_operating_facility_id.arr[nd_operating_facility_id.len]	= '\0';

	
	 if(NO_DATA_FOUND)
	 {
		sprintf(string_var,"%s -> %s\n",d_specimen_no.arr, 
									sqlca.sqlerrm.sqlerrmc);
		ins_message(ERR_MESG, string_var);
     }

	 gen_file_name();
	 get_facility_name(); // Added on 30/06/2004

   	 dclr_cur();

	 //get_specimen_label();

	 get_patient_details();

	 d_count = 0;

    if (strcmp(nd_printer_type.arr,"3")!= 0)
	   set_fonts();

	//print_label(); Moved to inside "print_test_code()"

    get_trans_ind();

	print_test_code();

	fclose(f1);

	fprintf(f1, "%cE", ESC);

	if (strcmp(nd_printer_type.arr,"3")!= 0)
	   set_fonts();

	if (err_flag == 0 && i_count> 0 )
	 {  
		print_interval_specimens();
	 }


    EXEC SQL COMMIT WORK RELEASE;
    return;

err_exit:
    EXEC SQL WHENEVER SQLERROR CONTINUE;
	// EXEC SQL ROLLBACK WORK RELEASE;
    sprintf(string_var,"%s -> %s\n",d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
    ins_message(ORA_MESG,string_var);
	EXEC SQL COMMIT WORK RELEASE;
}

get_patient_details()
{

	d_pat_name.arr[0]				= '\0';
	d_actual_patient_id.arr[0]		= '\0';
	d_ref_location.arr[0]			= '\0';

	d_actual_patient_id.len			= 0;
	d_pat_name.len					= 0;
	d_ref_location.len				= 0;

	if (strcmp(d_episode_type.arr, "I") == 0 || 
				strcmp(d_episode_type.arr, "O") == 0 ||
				strcmp(d_episode_type.arr, "H") == 0)
	{
/*

DECODE(substr(SHORT_NAME_LOC_LANG,1,15),			    
						     NULL, SHORT_NAME,
							 SHORT_NAME_LOC_LANG)
*/
/*
DECODE(substr(SHORT_NAME_LOC_LANG,1,30),			    
						     NULL, SHORT_NAME,
							 SHORT_NAME_LOC_LANG)
*/
/*** CHANGED ON 21/11/2002 AS PER REQUEST  FROM THE SITE ****/
			EXEC SQL SELECT SUBSTR(DECODE(:language_id, 'en', SHORT_NAME, 'th', SHORT_NAME_LOC_LANG), 1, 30)
					 INTO :d_pat_name
					 FROM MP_PATIENT_MAST
					 WHERE PATIENT_ID = :d_patient_id;
	}
	else
	{
			EXEC SQL SELECT DECODE(:language_id, 'en', SHORT_NAME, 'th', SHORT_NAME_LOC_LANG) short_name, 
						actual_patient_id, location
					 INTO :d_pat_name, d_actual_patient_id, :d_ref_location
					 FROM RL_PATIENT_MAST
					 WHERE PATIENT_ID = :d_patient_id;
					 /* AND OPERATING_FACILITY_ID = :nd_operating_facility_id; */
	}

 

	d_pat_name.arr[d_pat_name.len]						= '\0';
	d_actual_patient_id.arr[d_actual_patient_id.len]	= '\0';
	d_ref_location.arr[d_ref_location.len]				= '\0';

}

void dclr_cur()
{
 
		EXEC SQL DECLARE c1 CURSOR FOR
			     SELECT A.test_code,nvl(B.no_of_aliquot_labels,1) 
				 FROM rl_request_detail A, rl_test_code B
				 WHERE specimen_no = TO_NUMBER(:d_specimen_no)
				 AND A.test_code = decode(:nd_test,'*A',A.test_code,:nd_test)
				 AND operating_facility_id = :nd_operating_facility_id
				 AND A.test_code = B.test_code
				 AND NVL(B.aliquot_label_yn,'N') = 'Y'
				 AND NVL(cancelled_yn, 'N') <> 'Y';

		EXEC SQL OPEN c1;
		

     return;
}


int fetch_test_code()
{

	d_test_code.arr[0]		= '\0';
	d_test_code.len			= 0;

	d_temp_no_copy.arr[0]		= '\0';
	d_temp_no_copy.len			= 0; 

      EXEC SQL FETCH c1 INTO :d_test_code,:d_temp_no_copy;
 
    if (OERROR)
	{
		sprintf(string_var,"%s  fetch_test_code() -> %s\n", d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);
     }

	 if (NO_DATA_FOUND)
        return 0;
  
    d_test_code.arr[d_test_code.len]	      = '\0';
    d_temp_no_copy.arr[d_temp_no_copy.len]    = '\0';
	strcpy(d_no_copy.arr,d_temp_no_copy.arr);
	d_no_copy.len = strlen(d_no_copy.arr);  

    return 1;
  
}


print_test_code()
{
   int test_code ;
   int count = 1;
   int spaces ;

   test_code = fetch_test_code();
 
   while(test_code)
   {
	
		print_file();
	
		if (i_count == 0)
		{
			get_interval_test();	
			//get_interval_desc();
			if (i_count> 0)
			{
			   strcpy(nd_interval_test.arr,d_test_code.arr);	
			   nd_interval_test.len = strlen(nd_interval_test.arr);
		    }
		}

    test_code = fetch_test_code();
	
   }

	EXEC SQL CLOSE c1;
    
}


get_testname()
{

     d_test_name.arr[0] = '\0';
	 d_test_name.len    = 0;

	 EXEC SQL SELECT SHORT_DESC
	            INTO :d_test_name
				FROM RL_TEST_CODE_lang_vw
			   WHERE TEST_CODE = :d_test_code
			   and language_id = :language_id;


	if(OERROR)
	{
		sprintf(string_var,"%s get_testname()-> %s\n", d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);
	}

	d_test_name.arr[d_test_name.len] = '\0';

}


print_interval_specimens()
{

    EXEC SQL DECLARE interval_curs CURSOR FOR
			SELECT test_code, TO_CHAR(specimen_no), seq_no
		    FROM RL_INTERVAL_TEST_SPECIMENS
			WHERE interval_test_specimen_no = TO_NUMBER(:d_specimen_no)
			AND operating_facility_id = :nd_operating_facility_id
			AND specimen_no <> TO_NUMBER(:d_specimen_no)
			AND test_code = :nd_interval_test
			ORDER BY specimen_no;
	EXEC SQL OPEN interval_curs;

	while(fetch_interval_curs())
	{


		gtt_yn = 'Y';
		if ( ( f1 = fopen ( filename, "w" ) ) == NULL ) 
		{
			ins_message(ERR_MESG,"Error in opening output file...\n");
		}

	if (strcmp(nd_printer_type.arr,"3")!= 0)
		set_fonts();	
		
		//get_interval_desc();

		print_file();
	}

	EXEC SQL CLOSE interval_curs;
	

}



int fetch_interval_curs()
{

	d_test_code.arr[d_test_code.len]		= '\0';
	nd_specimen_no.arr[nd_specimen_no.len]	= '\0';
	d_count = 0;


      EXEC SQL FETCH interval_curs INTO
				:d_test_code, :nd_specimen_no, d_count;
 
    if (OERROR)
	{
		sprintf(string_var,"%s fetch_interval_curs()-> %s\n", d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);

     }

	 if (NO_DATA_FOUND)
        return 0;
  
    d_test_code.arr[d_test_code.len]	       = '\0';
	nd_specimen_no.arr[nd_specimen_no.len]	   = '\0';
 
    return 1;
  
}

print_file()
{

	print_label();
	
/***** only for interval test ******************/
	fprintf(f1,"%s\n",d_test_code.arr);	
	//fprintf(f1, "%-20.20s", d_description.arr);

	fclose(f1);		
	fprintf(f1, "%cE", ESC);

	if (strcmp(nd_printer_type.arr,"3")!= 0)
	   set_fonts();

      if (strcmp(nd_trx_ind.arr,"Y") == 0)
	  {
		   for(i=0;i<atoi(d_no_copy.arr);i++)	 
		   {


			WSPrintDocument
				(
					uid_pwd.arr,					//char	*PUidPwd;
					nd_session_id.arr,				//char	*PSessionID;
					nd_operating_facility_id.arr,	//char	*PFacilityID;
					"RL",							//char	*PModuleID;
					"RLRSLILB",						//char	*PDocumentID;
					filename,						//char	*POnlinePrintFileNames;
					"O",							//char	*PLocationTypes;
					d_section_code.arr,				//char	*PLocationCodes;
					1,								//int	PNumOfCopies;
					1,								//int	PPageFrom;
					9999,							//int	PPageTo;
					nd_ws_no.arr,					//char	*PWorkstationID
					WORKING_DIR						//char	*PReportOutputDir
				);
		   }

	  }
	  else
	  {
		
		   for(i=0;i<atoi(d_no_copy.arr);i++)	 
		   {
			
			WSPrintDocument
					   (
						uid_pwd.arr,					//char	*PUidPwd;
						nd_session_id.arr,				//char	*PSessionID;
						nd_operating_facility_id.arr,	//char	*PFacilityID;
						"RL",							//char	*PModuleID;
						"RLRSLILB",						//char	*PDocumentID;
						filename,						//char	*POnlinePrintFileNames;
						"O",							//char	*PLocationTypes;
						" ",							//char	*PLocationCodes;
						1,								//int	PNumOfCopies;
						1,								//int	PPageFrom;
						9999,							//int	PPageTo;
						nd_ws_no.arr,					//char	*PWorkstationID
						WORKING_DIR						//char	*PReportOutputDir
					   );
			}
			
	   } 
}

get_specimen_label()
{

	d_desc_on_label.arr[0]		= '\0';
	d_desc_on_label.len			= 0;
    
	EXEC SQL SELECT NVL(SUBSTR(desc_on_label, 1, 22), ' ')
			 INTO :d_desc_on_label
			 FROM RL_SPECIMEN_TYPE_CODE
			 WHERE specimen_type_code = :d_specimen_type_code;


	d_desc_on_label.arr[d_desc_on_label.len]		= '\0';
}

get_interval_test()
{
	
	
	EXEC SQL SELECT seq_no, seq_no
			 INTO :i_count, :d_count
			 FROM RL_INTERVAL_TEST_SPECIMENS
			 WHERE specimen_no = TO_NUMBER(:d_specimen_no)
			 AND OPERATING_FACILITY_ID = :nd_operating_facility_id
			 AND test_code = :d_test_code;

}

get_parent()
{
	parent_spec_no.arr[0]	= '\0';
	parent_spec_no.len		= 0;

	EXEC SQL SELECT interval_test_specimen_no
			 INTO :parent_spec_no
			 FROM RL_INTERVAL_TEST_SPECIMENS
			 WHERE specimen_no = TO_NUMBER(:d_specimen_no)
			 AND OPERATING_FACILITY_ID = :nd_operating_facility_id
			 AND test_code = :d_test_code;

	parent_spec_no.arr[parent_spec_no.len]	= '\0';

}

dclr_rownum_curs()
{
 
		EXEC SQL DECLARE c2 CURSOR FOR
			     SELECT rownum, specimen_no
				 FROM RL_INTERVAL_TEST_SPECIMENS
				 WHERE interval_test_specimen_no = TO_NUMBER(:parent_spec_no)
				 AND OPERATING_FACILITY_ID = :nd_operating_facility_id
				 ORDER BY specimen_no;

		EXEC SQL OPEN c2;
		

}

int fetch_rownum_curs()
{
	
	 r_child_spec_no.arr[0]		= '\0';
	 r_child_spec_no.len		= 0;

      EXEC SQL FETCH c2 INTO :d_count, r_child_spec_no;
 
	 if (OERROR)
	{
		sprintf(string_var,"%s fetch_rownum_curs()-> %s\n", d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);

     }

	 if (NO_DATA_FOUND)
        return 0; 

	r_child_spec_no.arr[r_child_spec_no.len]		= '\0';

    return 1;
  
}


get_interval_desc()
{

	d_description.arr[0]		= '\0';
	d_description.len			= 0;

	EXEC SQL SELECT SUBSTR(description, 1, 20)
			 INTO :d_description
			 FROM RL_INTERVAL_TEST_DESC_LANG_VW
			 WHERE test_code = :d_test_code
			 AND seq_no = :d_count
			 and language_id = :language_id;
	
	
	d_description.arr[d_description.len]		= '\0';
	
}


set_fonts()
{

	/*	fprintf(f1,"%c&k4S",ESC); This will make the font condensed */	
	/*  fprintf(fp,"%c(s4B",ESC); This will make the font bold      */
	fprintf(f1, "%c(s17H", ESC);/* Reduce the font size*/ //15to17
	fprintf(f1,"%c&a0L",ESC);/* This will make the left margin to reduce to 0 */
	fprintf(f1,"%c&l0E\n",ESC);	/* This will make the top margin to reduce to 0 */
	fprintf(f1,"%c&l12D",ESC);/* This will make no. of lines per inch to 8 */

}


print_label()
{
	
	//fprintf(f1, "%s\n", d_facility_name.arr);	
	//fprintf(f1, "%-22s %s\n", d_desc_on_label.arr,d_urgent_indicator.arr);

	if (gtt_yn == 'N')
		fprintf(f1, "%-10.10s", d_specimen_no.arr);
	else
		fprintf(f1, "%-10.10s", nd_specimen_no.arr);

    fprintf(f1, " %s\n", d_urgent_indicator.arr);	

	/*if (strlen(d_actual_patient_id.arr) > 0)
		fprintf(f1, "%15.15s\n", d_actual_patient_id.arr);
	else  [Commented]*/

	    fprintf(f1, "%s\n", d_patient_id.arr);

}


/**************************select transaction based or not ***************/
get_trans_ind()
{
	
	nd_trx_ind.arr[0]		= '\0';
	nd_trx_ind.len		= 0;

	EXEC SQL  SELECT NVL(TRANSACTION_BASED_YN, 'N')
	          INTO   :nd_trx_ind
	          FROM   sy_online_print_id
              WHERE  MODULE_ID = 'RL'
			  AND    ONLINE_PRINT_NAME = 'RLRSLILB';

	if(OERROR)
	{
		sprintf(string_var,"%s get_trans_ind()-> %s\n", d_specimen_no.arr, sqlca.sqlerrm.sqlerrmc);
		ins_message(ORA_MESG, string_var);

	}

	nd_trx_ind.arr[nd_trx_ind.len]			= '\0';


    if(NO_DATA_FOUND)
		return 0;

		
	return 1;

}
/************************** gen file name ***************/
gen_file_name()
{
	strcpy(filename,WORKING_DIR);
	strcat(filename,"rlrslilb.lis");

	strcpy(nd_filename,WORKING_DIR);
	strcat(nd_filename,"rlrslil1.lis");

	if ( ( f1 = fopen ( filename, "w" ) ) == NULL ) 
	{
		ins_message(ERR_MESG,"Error in opening output file...\n");  
    }

}

/*--------------------------------------------------*/
ins_message(int msg_type,char msg[])
{
   er_msg.arr[0] = '\0';
   er_msg.len = 0;
   
   er_msg_type = 0;

   strcpy(er_msg.arr,msg);
   er_msg.len = strlen(er_msg.arr);
 
   er_msg_type = msg_type;


   EXEC SQL
   INSERT INTO SY_PROG_MSG
          (OPERATING_FACILITY_ID,PGM_ID,MSG_TYPE,MSG_NUM,MSG_DESC,MSG_DATE_TIME,SESSION_ID,PGM_DATE)
   VALUES 
          (:nd_operating_facility_id,'RLRSLILB',:er_msg_type,NULL, SUBSTR(:er_msg, 1, 70),SYSDATE,USERENV('sessionid'),
		   TO_CHAR(SYSDATE,'DD/MM/YYYY'));

   err_flag = 1;
}

/************** Hospital name **********/
get_facility_name()
{
  d_facility_name.arr[0] = '\0';
  d_facility_name.len    = 0;

  EXEC SQL
     SELECT FACILITY_NAME 
       INTO :d_facility_name
       FROM SM_FACILITY_PARAM_LANG_VW
      WHERE FACILITY_ID = :nd_facility_id
	  and language_id = :language_id;

  d_facility_name.arr[d_facility_name.len] = '\0';
}

