/*************************  REPORT ********************************
* File:			rlrrecrs.pc
* Author:		Sathish
* Date Created: 11/12/2003

* Purpose:		To generate Specimen lists Received from Referred Lab

* Input Parameters : Received Date
				   : Referred Lab				    
				   : Section Code

* Tables  Accesed:	 RL_REFERRED_SPECIMENS,RL_PATIENT_MAST
					 MP_PATIENT_MAST, RL_REQUEST_HEADER,
					 RL_REFERRED_LAB_CODE


* Output file:		 RLRRECRS.LIS    

**********************************************************************/
#include <stdio.h>
#include <string.h>
#include <math.h>
#define MAX_LINES 60
#define OERROR (sqlca.sqlcode < 0)
#define NO_DATA_FOUND sqlca.sqlcode==1403
#define VER  "VER : 1.10.01\n"
#define ESC 0x1B
#define REP_WIDTH 78

/********** Begin of the declare section *****************/

EXEC SQL BEGIN DECLARE SECTION;

	VARCHAR  uid_pwd			[42],
             comp_name1			[1000],
             comp_name2			[1000],
			 sql_stmt			[5000],
			 param_str	        [6],	
             oper_id			[31],
			 d_pgm_id			[10],
			 rep_date			[100],
			 rep_date1			[100],
			 nd_file_name		[100],
			 d_version_no		[50],
			 d_version			[50],
			 prev_lab			[6],
			 eor				[100],

/******* input parameters to main *****************/
			 
			 nd_session_id      [60],
			 nd_pgm_date	   	[50],
			 nd_recd_date		[32],			 
			 nd_facility_id		[5],
			 nd_sec_code        [5],
			 nd_spec_no         [60], 
			 nd_select          [60], 
			 nd_ref_lab         [6],
			 nd_lab_desc		[41],
			 nd_from_date		[32],
			 nd_to_date		    [32],			 
			 rl_patient_id		[25],
			 rl_expec_date		[32], 
			 rl_expec_date1		[32], 
			 rl_specimen_no		[41],
			 rl_pat_name		[240],
 			 rl_pat_alter_id	[21],
			 rl_lab_code		[6], 
			 rl_episode_type	[2],			 
			 rl_alter_type		[5],
			 rl_alter2_type		[5],
			 rl_alter3_type		[5],
			 rl_alter4_type		[5],
			 rl_alter_num		[21],
			 rl_alter2_num		[21],
			 rl_alter3_num		[21],
			 rl_alter4_num		[21],
			 rl_oth_alter_num	[21],
			 rl_alter_id		[21],
			 rl_test_code		[11],
			 rl_test_desc		[41],
			 nd_footer_line_1	[201],
			 nd_footer_line_2	[201],

/**********from mp_param********************/

 			 alt_id1_type		[5],
			 alt_id2_type		[5],
			 alt_id3_type		[5],
			 alt_id4_type		[5],
			 alt_id1_reqd		[2],
			 alt_id2_reqd		[2],
			 alt_id3_reqd		[2],
			 alt_id4_reqd		[2],
			 alt_id_legend		[21],
/***************For conversion*****************/
			l_translated_value	[100],
			language_id			[5];


int  l_tab_exists;
/**************for globalization********************/
int i;
char local_legend[100][100];
char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1];
int col;
char rep_title1[100] ;

int rec_len;


EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

/*** global variables *****/

FILE *f1;

char string_var				 [500];

char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1],
     hdr_line4[REP_WIDTH+1],
     hdr_line5[REP_WIDTH+1],
	 hdr_line6[REP_WIDTH+1];

//char rep_title1[] = "SPECIMEN LIST";/***Commented and reprot heading made same as per RL-62***/
// char rep_title1[] = "SPECIMEN LIST RECEIVED FROM REFERRAL LAB";
//char rep_title1[] = "OUTSTANDING RESULT FROM REFERRAL LAB";
char rep_title1[100];
char rep_title2[30];

int		line_no			= 0;
int		page_no			= 1;
int		i				= 0;
int     new_page        = 1;
int		ref_head		= 0;

/************* MAIN PROCEDURE *******/

void proc_main(argc, argv)
int argc;
char *argv[];   
{
	
	if(argc != 12) 
	{
    	disp_message(ERR_MESG,"Usage rlrrecrs uid/passwd session id pgm date");
    	proc_exit();
   	}
	

	strcpy(uid_pwd.arr, argv[1]);	
   	uid_pwd.len = strlen(uid_pwd.arr); 
   
	strcpy(nd_session_id.arr, argv[2]);
   	nd_session_id.len = strlen(nd_session_id.arr);
	
	strcpy(nd_facility_id.arr,argv[4]);
	nd_facility_id.len = strlen(nd_facility_id.arr);

    strcpy(OUTPUT_FILE_NAME, argv[5]);
			  
	strcpy(nd_from_date.arr, argv[6]);
   	nd_from_date.len = strlen(nd_from_date.arr);

	strcpy(nd_to_date.arr, argv[7]);
   	nd_to_date.len = strlen(nd_to_date.arr);

	strcpy(nd_ref_lab.arr, argv[8]);
   	nd_ref_lab.len = strlen(nd_ref_lab.arr); 

	strcpy(nd_sec_code.arr, argv[9]);
   	nd_sec_code.len = strlen(nd_sec_code.arr); 
   
	strcpy(nd_spec_no.arr, argv[10]);
   	nd_spec_no.len = strlen(nd_spec_no.arr);

	strcpy(nd_select.arr, argv[11]);
   	nd_select.len = strlen(nd_select.arr);

	strcpy(d_pgm_id.arr,"RLRRECRS\0");
	d_pgm_id.len  = strlen(d_pgm_id.arr);

	strcpy(prev_lab.arr,"!!!!");
	prev_lab.len  = strlen(prev_lab.arr);

	strcpy(rl_lab_code.arr,"@@@");
	rl_lab_code.len  = strlen(rl_lab_code.arr);

	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL CONNECT :uid_pwd;  

	set_meduser_role();
	strcpy(language_id.arr,l_language_id.arr);
	language_id.len =l_language_id.len;
	language_id.arr[l_language_id.len]='\0';
	get_legend_value(13);

	fetch_alter_legend();

	do_report();
	print_end_of_rep();

	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL COMMIT WORK RELEASE;

   	fclose(f1);

	return 1;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at main() occured....\n");
   proc_exit();
}   

/******************* DO REPORT FUNCTION ***************/

do_report()
{

	fetch_sys_info();
	gen_file_name();

	line_no = 0;	
	//form_hdr();

	dclr_cursor();
	open_cursor();
	
	while(fetch_dtl())
		{
			fetch_pat();
			fetch_episode();
			if(l_tab_exists ) 
			{
				if(strlen(rl_pat_alter_id.arr)==0 )
				{
				  fetch_alter();
				}
			}
			fetch_test();
			
			if (new_page)
			  {
				form_hdr();				
				put_hdr();
               }
			
			print_rep();

		 }
	close_cursor();
return 1;
}

/********************* FETCH HOSPITAL NAME ************************/
fetch_sys_info()
{

	comp_name1.arr[0] = '\0';
	comp_name1.len    =   0;

	comp_name2.arr[0] = '\0';
	comp_name2.len    =   0;

	rep_date.arr[0]  = '\0';
	rep_date.len     =   0;
    rep_date1.arr[0]  = '\0';
	rep_date1.len     =   0;

	oper_id.arr[0]	 = '\0';
	oper_id.len		 =   0;

//  COMMENTED BY AMJAD ON 21/02/2006 TO CHANGE FORMAT    
	EXEC SQL SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
					USER 
	     	   INTO :rep_date,
					:oper_id
  			   FROM SY_ACC_ENTITY_LANG_VW
 		      WHERE ACC_ENTITY_ID = :nd_facility_id
			  AND   LANGUAGE_ID = :language_id;

	
	
	
	EXEC SQL SELECT LAB_TITLE,
					LAB_TITLE_2,
		    		TO_CHAR(sysdate,'DD/MM/YYYY HH24:MI')
			   INTO :comp_name1,
					:comp_name2,
					:rep_date
			   FROM RL_PARAM_FOR_FACILITY
			  WHERE OPERATING_FACILITY_ID = :nd_facility_id;


    if(OERROR)
	    disp_message( ORA_MESG,"SELECT failed on table  RL_PARAM_FOR_FACILITY \n");

	comp_name1.arr[comp_name1.len] = '\0';
    comp_name2.arr[comp_name2.len] = '\0';

    if ((NO_DATA_FOUND) || (strcmp(comp_name1.arr,"\0") == 0) && (strcmp(comp_name2.arr,"\0") == 0))
		{
			EXEC SQL SELECT LAB_TITLE,
							LAB_TITLE_2,
		    				'Date/Time: ' || TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI')
					   INTO :comp_name1,
							:comp_name2,
							:rep_date
					   FROM RL_PARAM;
				
		

		}

    if(OERROR)
	    disp_message( ORA_MESG,"SELECT failed on table  RL_PARAM \n");
	    
    comp_name1.arr[comp_name1.len] = '\0';
    comp_name2.arr[comp_name2.len] = '\0';
    rep_date.arr[rep_date.len]	 = '\0';
    oper_id.arr[oper_id.len]	 = '\0';
return 1;
}


/*********** FUNCTION TO OPEN FILE *****************/

gen_file_name()
{
     
     nd_file_name.arr[0]   = '\0';
     nd_file_name.len      = 0;
	 strcpy(nd_file_name.arr,WORKING_DIR);
	 //strcat(nd_file_name.arr,"rlrrecrs.lis");
	 strcat(nd_file_name.arr,OUTPUT_FILE_NAME);
    

     if ((f1 = fopen(nd_file_name.arr,"w")) == NULL)
     {
       sprintf(string_var,"Error while opening file %s\n",nd_file_name.arr);
	   disp_message(ERR_MESG,string_var) ;
       proc_exit();
     }
return 1;	 
}


/********************* FORM HDR ************************/
form_hdr()
{    
    static int first = 1;
    char buf[15];
    char legend[100];
	int col;
	
	line_no=0;

    strcpy(rep_title2,"");

    memset(hdr_line1,' ',REP_WIDTH+1);
    memset(hdr_line2,' ',REP_WIDTH+1);
    memset(hdr_line4,' ',REP_WIDTH+1);
	memset(hdr_line5,'-',REP_WIDTH);
	hdr_line5[REP_WIDTH] = '\0';
	memset(hdr_line6,' ',REP_WIDTH);
	hdr_line5[REP_WIDTH] = '\0';

    strncpy(hdr_line1,"MDL : RL",8);
	//strncpy(hdr_line1," ",1);
    
	//col = (int)(REP_WIDTH+1-strlen(comp_name1.arr))/2;
    //strncpy(hdr_line1+col,comp_name1.arr,strlen(comp_name1.arr));
	
	strcpy(legend,local_legend[9]);
	EXEC SQL EXECUTE
				DECLARE
				t_date   date;
				
				BEGIN
				t_date:=GET_LOCALE_DATE.GET_CURRENT_DATE(:language_id);
				:rep_date1 := to_char(t_date,'DD/MM/YYYY HH24:MI');
				END;
			END-EXEC;

	
	
	col = (REP_WIDTH-(strlen(rep_date1.arr)+strlen(local_legend[9]))-3);
    sprintf(legend,"%s : %s",local_legend[9],rep_date1.arr);
	strcpy(hdr_line1+col,legend);
	//strncpy(hdr_line2," ",1);
	
	strncpy(hdr_line2,"OPR :",5);
  strncpy(hdr_line2+6,oper_id.arr,strlen(oper_id.arr));

   	//col = (int)(REP_WIDTH-strlen(comp_name2.arr))/2;
    //strncpy(hdr_line2+col,comp_name2.arr,strlen(comp_name2.arr));

     memset(hdr_line3,' ',REP_WIDTH+1);

     strncpy(hdr_line3,"REP : RLRRECRS",14);
	//strncpy(hdr_line3," ",1);
    strcpy(rep_title1,local_legend[10]);
	col = (int)(REP_WIDTH-strlen(rep_title1))/2;
    strncpy(hdr_line3+col,rep_title1,strlen(rep_title1));
    sprintf(buf,"%s : %4d",local_legend[1],page_no++);
    strcpy(hdr_line3+(REP_WIDTH-strlen(buf)),buf);

//    col = (int)(REP_WIDTH-strlen(rep_title2))/2;
//    strcpy(hdr_line4+col,rep_title2);

    if(first)
	{
        // added the below two lines against the Incident 17618 by srinivas  
		fprintf(f1,"%-*s%-.78s\n",(int)(((78 - comp_name1.len)/2) ),"",comp_name1.arr);
		fprintf(f1,"%-*s%-.78s\n",(int)(((78 - comp_name2.len)/2) ),"",comp_name2.arr);
		fprintf(f1,"%s\n",hdr_line1);
		}
    else
		{

		  print_line(REP_WIDTH+1);
//		  fprintf(f1,"%s\n",nd_footer_line_1.arr);	 	
//		  fprintf(f1,"%s\n",nd_footer_line_2.arr);	
		// added the below two lines against the Incident 17618 by srinivas   	
		fprintf(f1,"\f\n%-*s%-.78s\n",(int)(((78 - comp_name1.len)/2) ),"",comp_name1.arr);
		fprintf(f1,"%-*s%-.78s\n",(int)(((78 - comp_name2.len)/2) ),"",comp_name2.arr);
		  fprintf(f1,"%s\n",hdr_line1);
		}

    
	fprintf(f1,"%s\n",hdr_line2);
	fprintf(f1,"%s\n",hdr_line3);
//  fprintf(f1,"%s\n",hdr_line4);
    fprintf(f1,"%s\n",hdr_line5);
//	fprintf(f1,"%s\n",hdr_line6);
	
	line_no += 7; 

    first = 0;
return 1;
}

/******************** PUT HEADER *************************/

put_hdr()
{
	if (ref_head)
		{
			print_lab();
			/* ref_head = 0; 
			commented to print the lab name on all pages as per Mr. Cyrus 23/02/2006 
			*/
		}
	
	fprintf(f1,"%-15.15s                     %-10.10s\n",local_legend[2],local_legend[3]);	
	//fprintf(f1,"Test            Name                 NRIC/Alternate ID    Expec Date/Time  Ack\n");	
/****Added on 17/04/2004****************/
	fprintf(f1,"%-4.4s          %-14.14s        %-12.12s        ",local_legend[4],local_legend[5],local_legend[6]);
	fprintf(f1,"%-16s",alt_id_legend.arr);
	fprintf(f1," %-3.3s\n",local_legend[7]);	
/********upto here************************/

	line_no += 2;

	print_line(REP_WIDTH+1);
	new_page = 0;
return 1;
}

/********************* PRINT LAB ************************/
print_lab()
{
	
	nd_lab_desc.arr[0] = '\0';
	nd_lab_desc.len	   = 0;

	EXEC SQL SELECT long_desc
			   INTO :nd_lab_desc
			   FROM rl_referred_lab_code_lang_vw
			  WHERE referred_lab_code = :rl_lab_code
			  AND   language_id = :language_id;
	
	nd_lab_desc.arr[nd_lab_desc.len] = '\0';

	fprintf(f1,"%s : %s",local_legend[8],nd_lab_desc.arr);		
	fprintf(f1,"\n                     \n");
	line_no += 2;
return 1;
}

/********************* FOOTER LINE ************************/
get_footer_line()
{
	nd_footer_line_1.arr[0] = '\0';
	nd_footer_line_1.len	   = 0;

	nd_footer_line_2.arr[0] = '\0';
	nd_footer_line_2.len	   = 0;

	EXEC SQL SELECT FOOTER_LINE_1,
					FOOTER_LINE_2
			   INTO :nd_footer_line_1,
					:nd_footer_line_2
			   FROM rl_section_ctl
			  WHERE operating_facility_id = :nd_facility_id 
				AND section_code = :nd_sec_code; 			   
	
	nd_footer_line_1.arr[nd_footer_line_1.len] = '\0';
	nd_footer_line_2.arr[nd_footer_line_2.len] = '\0';

 return 1;
}

/********************* PRINT LINE ************************/

print_line(int no_of_lines)
{
   for (i=1;i<no_of_lines;i++)
   {
	  fprintf(f1, "-");
   }
   fprintf(f1, "\n");
   line_no++;
return 1;
}

/****************** DECLARE CURSOR ********************/
dclr_cursor()
{

	sql_stmt.arr[0] = '\0';
	sql_stmt.len    = 0;

	/* strcpy(sql_stmt.arr,"SELECT to_char(specimen_no),patient_id,TO_CHAR(expected_date,'DD/MM/YYYY HH:MI'),test_code,referred_lab_code \ */
	strcpy(sql_stmt.arr,"SELECT to_char(specimen_no),patient_id,TO_CHAR(sent_date,'DD/MM/YYYY HH24:MI'),test_code,referred_lab_code \
						   FROM rl_referred_specimens \
						  WHERE operating_facility_id = :nd_facility_id ");		 
    

   
   if (strcmp(nd_from_date.arr,"!") != 0)	
    {
		
		strcat(sql_stmt.arr," AND expected_date >= TO_DATE(:nd_from_date, 'DD/MM/YYYY')");				
		
	}
   
   if (strcmp(nd_to_date.arr,"!") != 0)	
	{
		strcat(sql_stmt.arr," AND expected_date <  TO_DATE(:nd_to_date, 'DD/MM/YYYY') + 1 ");				
		
	}

	
	if (strcmp(nd_ref_lab.arr,"!") != 0)	
	{
		strcat(sql_stmt.arr," AND referred_lab_code = :nd_ref_lab ");
	}

   if (strcmp(nd_spec_no.arr,"!") != 0)	
    {
		
		strcat(sql_stmt.arr," AND SPECIMEN_NO = :nd_spec_no ");				
		
	}

   if (strcmp(nd_select.arr,"N") == 0)	
    {
		
		strcat(sql_stmt.arr," AND specimen_no IN ( SELECT specimen_no FROM Rl_referred_spec_outstanding so WHERE so.operating_facility_id = operating_facility_id AND so.referred_lab_code = referred_lab_code) \
						      AND recd_date IS NULL ");
							  
	}

   if (strcmp(nd_select.arr,"M") == 0)	
    {
		
		strcat(sql_stmt.arr," AND recd_date IS NOT NULL ");
							  
	}
		strcat(sql_stmt.arr," AND section_code = :nd_sec_code  \
							  AND sent_date IS NOT NULL  \
							  AND NVL(process_in_house_yn,'N') = 'N' \
							  AND ((NVL(group_test_yn, 'N') = 'Y' \
							  AND test_code IN (SELECT test_code \
							  FROM RL_REQUEST_DETAIL \
							  WHERE specimen_no = RL_REFERRED_SPECIMENS.specimen_no \
							  AND operating_facility_id = RL_REFERRED_SPECIMENS.operating_facility_id \
							  AND test_code = RL_REFERRED_SPECIMENS.test_code \
							  AND NVL(result_status, 'O') IN ('O', 'H'))) \
							  	OR (NVL(group_test_yn, 'N') = 'N' \
							  AND test_code IN (SELECT test_code \
							  FROM RL_TEST_RESULT \
							  WHERE specimen_no = RL_REFERRED_SPECIMENS.specimen_no \
							  AND operating_facility_id = RL_REFERRED_SPECIMENS.operating_facility_id \
							  AND test_code = RL_REFERRED_SPECIMENS.test_code \
							  AND NVL(status, 'O') IN ('O', 'H'))) ) \
							  AND NVL(cancelled_yn, 'N') <> 'Y' \
							  ORDER BY referred_lab_code,specimen_no");
							  // ORDER BY specimen_no,referred_lab_code");

	sql_stmt.len = strlen(sql_stmt.arr);
	
	EXEC SQL PREPARE sr1 FROM :sql_stmt;

/*	
	EXEC SQL DECLARE rl_recd_spec_cur CURSOR FOR
		SELECT to_char(specimen_no),patient_id,TO_CHAR(expected_date,'DD/MM/YYYY HH:MI'),test_code
		  FROM rl_referred_specimens 
		 WHERE operating_facility_id = :nd_facility_id 
           AND expected_date >= TO_DATE(:nd_from_date, 'DD/MM/YYYY') 
           AND expected_date <  TO_DATE(:nd_to_date, 'DD/MM/YYYY') + 1 
		   AND referred_lab_code = :nd_ref_lab 
           AND section_code = :nd_sec_code 
		   ORDER BY 1;
*/

	if (OERROR)
	  {
		fprintf(f1,"Error in declare cursor");				
		disp_message(ORA_MESG,"Prepare Failed on table RL_REFERRED_SPECIMENS");
	  }

    EXEC SQL DECLARE rl_recd_spec_cur CURSOR FOR sr1;		

return 1;
}

/********************* OPEN CURSOR *******************/
open_cursor()

{

	if ((strcmp(nd_from_date.arr,"!") == 0) && (strcmp(nd_to_date.arr,"!") == 0) && (strcmp(nd_ref_lab.arr,"!") == 0) && (strcmp(nd_spec_no.arr,"!") == 0))		
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_sec_code;		
	else if((strcmp(nd_spec_no.arr,"!") != 0))			
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_spec_no, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") != 0)&&(strcmp(nd_to_date.arr,"!") != 0)&&(strcmp(nd_ref_lab.arr,"!") != 0))			
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_from_date,:nd_to_date,:nd_ref_lab,:nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") != 0)&&(strcmp(nd_to_date.arr,"!") == 0)&&(strcmp(nd_ref_lab.arr,"!") == 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_from_date, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") == 0)&&(strcmp(nd_to_date.arr,"!") != 0)&&(strcmp(nd_ref_lab.arr,"!") == 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_to_date, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") == 0)&&(strcmp(nd_to_date.arr,"!") == 0)&&(strcmp(nd_ref_lab.arr,"!") != 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_ref_lab, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") == 0)&&(strcmp(nd_to_date.arr,"!") != 0)&&(strcmp(nd_ref_lab.arr,"!") != 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_to_date,:nd_ref_lab, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") != 0)&&(strcmp(nd_to_date.arr,"!") == 0)&&(strcmp(nd_ref_lab.arr,"!") != 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_from_date,:nd_ref_lab, :nd_sec_code;
	else if((strcmp(nd_from_date.arr,"!") != 0)&&(strcmp(nd_to_date.arr,"!") != 0)&&(strcmp(nd_ref_lab.arr,"!") == 0))
		EXEC SQL OPEN rl_recd_spec_cur USING :nd_facility_id, :nd_from_date,:nd_to_date, :nd_sec_code;

return 1;
}


/********************* FETCH DETAIL ******************/
fetch_dtl()
{
  rl_specimen_no.arr[0]   =  '\0';
  rl_specimen_no.len	  =    0; 

  rl_patient_id.arr[0]	  =  '\0';
  rl_patient_id.len		  =    0;

  rl_expec_date.arr[0]	  =  '\0';
  rl_expec_date.len		  =	   0;

  rl_test_code.arr[0]	  =  '\0';
  rl_test_code.len		  =	   0;

  rl_lab_code.arr[0]	  = '\0';
  rl_lab_code.len		  =   0;	
	

	EXEC SQL FETCH rl_recd_spec_cur 
			  INTO :rl_specimen_no,:rl_patient_id,:rl_expec_date,:rl_test_code,:rl_lab_code;
	

	if(OERROR)	  
		disp_message(ORA_MESG,"FETCH failed on cursor rl_recd_spec_cur CURSOR\n");

	if(NO_DATA_FOUND)
		return 0;

	rl_specimen_no.arr[rl_specimen_no.len]	= '\0';
	rl_patient_id.arr[rl_patient_id.len]	= '\0';	
    rl_expec_date.arr[rl_expec_date.len]    = '\0';
	rl_test_code.arr[rl_test_code.len]		= '\0';
	rl_lab_code.arr[rl_lab_code.len]		= '\0';

	if (strcmp(prev_lab.arr,rl_lab_code.arr) != 0)
	{
	 new_page = 1;
	 ref_head = 1;
	}

	strcpy(prev_lab.arr,rl_lab_code.arr);
	prev_lab.arr[prev_lab.len]				= '\0';

	return 1;
}

/****************** CLOSE CURSOR **********************/

close_cursor()
{

	EXEC SQL CLOSE rl_recd_spec_cur;
return 1;
}


/******************* PRINT REP ****************/
print_rep()
{
	if(line_no + 3 >= MAX_LINES)
	{
	  line_no = 0;
	  form_hdr();
	  put_hdr();
	 }

 /********Addded by babu***************/
	        
		EXEC SQL EXECUTE
				DECLARE
				t_date   date;
				
				BEGIN
				GET_LOCALE_DATE.CONVERT_TO_LOCALE_DATE (to_date(:rl_expec_date,'DD/MM/YYYY HH24:MI'), :language_id , t_date);
				
				:rl_expec_date1 := to_char(t_date,'DD/MM/YYYY HH24:MI');
				END;
			END-EXEC;

		//End
/*****************end************************/   

 
 fprintf(f1,"%-13s %-21s %-19s %-20s \n", rl_specimen_no.arr,rl_expec_date1.arr,rl_patient_id.arr,rl_alter_id.arr);
 fprintf(f1,"%-35s %-21s\n\n",rl_test_desc.arr,rl_pat_name.arr);
 line_no += 3;
 return 1;
}

/****************** FETCH PATIENT NAME ****************/

fetch_pat()
{
	rl_pat_name.arr[0]  = '\0';
	rl_pat_name.len		=   0 ;

	rl_pat_alter_id.arr[0]  = '\0';
	rl_pat_alter_id.len		= 0;

    EXEC SQL SELECT substr(DECODE (:language_id, 'en',  SHORT_NAME,  NVL(SHORT_NAME_loc_lang, SHORT_NAME)) ,1,20), 
				national_id_num
			   INTO :rl_pat_name,:rl_pat_alter_id
			   FROM mp_patient_mast
			  WHERE patient_id = :rl_patient_id;

	if(NO_DATA_FOUND)

	EXEC SQL SELECT substr(DECODE (:language_id, 'en',  SHORT_NAME,  NVL(SHORT_NAME_loc_lang, SHORT_NAME)) ,1,20), national_id_num
			   INTO :rl_pat_name,:rl_pat_alter_id
			   FROM rl_patient_mast
			  WHERE patient_id = :rl_patient_id;


    rl_pat_name.arr[rl_pat_name.len]		 = '\0';	
	rl_pat_alter_id.arr[rl_pat_alter_id.len]		 = '\0';
	strcpy(rl_alter_id.arr, rl_pat_alter_id.arr);
	 return 1;

}


/****************** FETCH EPISODE TYPE ****************/

fetch_episode()

{

	rl_episode_type.arr[0]  = '\0';
	rl_episode_type.len		= 0;

    EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL SELECT episode_type
			   INTO :rl_episode_type
			   FROM rl_request_header
			  WHERE patient_id = :rl_patient_id
			    AND specimen_no = :rl_specimen_no
				AND operating_facility_id = :nd_facility_id;

	rl_episode_type.arr[rl_episode_type.len] = '\0';

	 return 1;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;   
   disp_message(ORA_MESG,"Oracle error at fetch_episode() occured....\n");
   proc_exit();
}

/****************** FETCH ALTERNATE ID ****************/

fetch_alter()
{
	
		rl_alter_id.arr[0]  = '\0';
		rl_alter_id.len		= 0;

		rl_alter_type.arr[0] = '\0';
		rl_alter_type.len	 = 0;

		rl_alter2_type.arr[0] = '\0';
		rl_alter2_type.len	 = 0;

		rl_alter3_type.arr[0] = '\0';
		rl_alter3_type.len	 = 0;

		rl_alter4_type.arr[0] = '\0';
		rl_alter4_type.len	 = 0;

		rl_alter_num.arr[0] = '\0';
		rl_alter_num.len	= 0;

		rl_alter2_num.arr[0] = '\0';
		rl_alter2_num.len	= 0;

		rl_alter3_num.arr[0] = '\0';
		rl_alter3_num.len	= 0;

		rl_alter4_num.arr[0] = '\0';
		rl_alter4_num.len	= 0;

		rl_oth_alter_num.arr[0] = '\0';
		rl_oth_alter_num.len	= 0;

  		if(strcmp(rl_episode_type.arr,"I")==0 || strcmp(rl_episode_type.arr,"O")==0 || strcmp(rl_episode_type.arr,"H")==0)
		{
			EXEC SQL SELECT alt_id1_type, alt_id1_no,
						    alt_id2_type, alt_id2_no,
							alt_id3_type, alt_id3_no,
							alt_id4_type, alt_id4_no, oth_alt_id_no
					INTO	:rl_alter_type,:rl_alter_num,
							:rl_alter2_type,:rl_alter2_num,
							:rl_alter3_type,:rl_alter3_num,
							:rl_alter4_type,:rl_alter4_num, :rl_oth_alter_num
					FROM	mp_patient
					WHERE  patient_id = :rl_patient_id;
		}
		else if( strcmp(rl_episode_type.arr,"R")==0 )
		{
		  if ( l_tab_exists )
		  {
			EXEC SQL SELECT alt_id1_type, alt_id1_no,
						    alt_id2_type, alt_id2_no,
							alt_id3_type, alt_id3_no,
							alt_id4_type, alt_id4_no, oth_alt_id_no
					INTO	:rl_alter_type,:rl_alter_num,
							:rl_alter2_type,:rl_alter2_num,
							:rl_alter3_type,:rl_alter3_num,
							:rl_alter4_type,:rl_alter4_num, :rl_oth_alter_num
					FROM	mp_ext_person
					WHERE  person_id = :rl_patient_id;
		  }
		}
		rl_alter_type.arr[rl_alter_type.len] = '\0';
		rl_alter2_type.arr[rl_alter2_type.len] = '\0';
		rl_alter3_type.arr[rl_alter3_type.len] = '\0';		
		rl_alter4_type.arr[rl_alter4_type.len] = '\0';

		rl_alter_num.arr[rl_alter_num.len] = '\0';
		rl_alter2_num.arr[rl_alter2_num.len] = '\0';	
		rl_alter3_num.arr[rl_alter3_num.len] = '\0';
		rl_alter4_num.arr[rl_alter4_num.len] = '\0';
		rl_oth_alter_num.arr[rl_oth_alter_num.len] = '\0';
		rl_alter_id.arr[rl_alter_id.len]  = '\0';

		/****Added on 17/04/2004 *************/
/*
		if (strlen(rl_pat_alter_id.arr))
		{
			strcpy(rl_alter_id.arr,rl_pat_alter_id.arr);
		}
		else if(strcmp(alt_id1_reqd.arr,"Y")==0) 
		{
			strcpy(rl_alter_id.arr,rl_alter_num.arr);
		}
		else if(strcmp(alt_id2_reqd.arr,"Y")==0) 
		{			
			strcpy(rl_alter_id.arr,rl_alter2_num.arr);
		}		
		else if(strcmp(alt_id3_reqd.arr,"Y")==0) 
		{
			strcpy(rl_alter_id.arr,rl_alter3_num.arr);
		}
		else if(strcmp(alt_id4_reqd.arr,"Y")==0)
		{			
			strcpy(rl_alter_id.arr,rl_alter4_num.arr);
		}
*/
		if ( strlen(rl_alter_id.arr)== 0)
		{
		  if (strlen(rl_alter_num.arr) > 0)
		  {
			strcpy(rl_alter_id.arr,rl_alter_num.arr);
		  }
		  else if (strlen(rl_alter2_num.arr) > 0)
		  {
			strcpy(rl_alter_id.arr,rl_alter2_num.arr);
		  }
		  else if (strlen(rl_alter3_num.arr) > 0)
		  {
			strcpy(rl_alter_id.arr,rl_alter3_num.arr);
		  }	
		  else if (strlen(rl_alter4_num.arr) > 0)
		  {
			strcpy(rl_alter_id.arr,rl_alter4_num.arr);
		  }
		  else if (strlen(rl_oth_alter_num.arr) > 0)
		  {
			strcpy(rl_alter_id.arr,rl_oth_alter_num.arr);
		  }
		}

		rl_alter_id.len = strlen(rl_alter_id.arr);

/********upto here**********************/




/***************COMMENTED ON 17/04/2004		
		if(strcmp(rl_alter_type.arr,"NRIC")==0) 
			strcpy(rl_alter_id.arr,rl_alter_num.arr);
		if(strcmp(rl_alter2_type.arr,"NRIC")==0) 
			strcpy(rl_alter_id.arr,rl_alter2_num.arr);
		if(strcmp(rl_alter3_type.arr,"NRIC")==0) 
			strcpy(rl_alter_id.arr,rl_alter3_num.arr);
		if(strcmp(rl_alter4_type.arr,"NRIC")==0) 
			strcpy(rl_alter_id.arr,rl_alter4_num.arr);
***************/


		
		 return 1;

}

/****************** FETCH ALTERNATE ID REQUIRED AND LEGEND ****************/

fetch_alter_legend()

{		
		alt_id1_reqd.arr[0]  = '\0';
		alt_id1_reqd.len	 = 0;
		alt_id1_type.arr[0]  = '\0';
		alt_id1_type.len	 = 0;
		alt_id2_reqd.arr[0]  = '\0';
		alt_id2_reqd.len	 = 0;
		alt_id2_type.arr[0]  = '\0';
		alt_id2_type.len	 = 0;
		alt_id3_reqd.arr[0]  = '\0';
		alt_id3_reqd.len	 = 0;
		alt_id3_type.arr[0]  = '\0';
		alt_id3_type.len	 = 0;
		alt_id4_reqd.arr[0]  = '\0';
		alt_id4_reqd.len	 = 0;
		alt_id4_type.arr[0]  = '\0';
		alt_id4_type.len	 = 0;
		alt_id_legend.arr[0]  = '\0';
		alt_id_legend.len	 = 0;

		 EXEC SQL EXECUTE 
			  begin
				if SM_INSTALLATION_TAB_CHECK THEN
				   :l_tab_exists := 1;
				else
				   :l_tab_exists := 0;
				end if;
			  end;
		 END-EXEC;


		EXEC SQL SELECT NVL(alt_id1_reqd_yn, 'N'), alt_id1_type,
					    NVL(alt_id2_reqd_yn, 'N'), alt_id2_type,
						NVL(alt_id3_reqd_yn, 'N'), alt_id3_type,
						NVL(alt_id4_reqd_yn, 'N'), alt_id4_type
				 INTO	:alt_id1_reqd,:alt_id1_type,
						:alt_id2_reqd,:alt_id2_type,
						:alt_id3_reqd,:alt_id3_type,
						:alt_id4_reqd,:alt_id4_type
				 FROM	mp_param;

		alt_id1_reqd.arr[alt_id1_reqd.len] = '\0';
		alt_id2_reqd.arr[alt_id2_reqd.len] = '\0';
		alt_id3_reqd.arr[alt_id3_reqd.len] = '\0';
		alt_id4_reqd.arr[alt_id4_reqd.len] = '\0';
		alt_id1_type.arr[alt_id1_type.len] = '\0';
		alt_id2_type.arr[alt_id2_type.len] = '\0';
		alt_id3_type.arr[alt_id3_type.len] = '\0';
		alt_id4_type.arr[alt_id4_type.len] = '\0';	
		
		
/*
 -- Start -- Commented by Sai Dutt on 06/03/2006 --

		if(strcmp(alt_id1_reqd.arr,"Y")==0) 
			{
			strcpy(alt_id_legend.arr, "NRIC/");
			strcat(alt_id_legend.arr,alt_id1_type.arr);
			}
		else if(strcmp(alt_id2_reqd.arr,"Y")==0)
			{
			strcpy(alt_id_legend.arr, "NRIC/"); 
			strcat(alt_id_legend.arr,alt_id2_type.arr);
			}
		else if(strcmp(alt_id3_reqd.arr,"Y")==0) 
			{
			strcpy(alt_id_legend.arr, "NRIC/"); 
			strcat(alt_id_legend.arr,alt_id3_type.arr);
			}
		else if(strcmp(alt_id4_reqd.arr,"Y")==0) 
			{
			strcpy(alt_id_legend.arr, "NRIC/"); 


			strcat(alt_id_legend.arr,alt_id4_type.arr);
			}
		else
			{
			strcpy(alt_id_legend.arr, "NRIC/"); 
			strcat(alt_id_legend.arr,alt_id1_type.arr);
			}

 -- End -- Commented by Sai Dutt on 06/03/2006 --
 */

		strcpy(alt_id_legend.arr, local_legend[11]);
		
		 return 1;

}






/****************** FETCH TEST DESC ****************/

fetch_test()
{
	rl_test_desc.arr[0]  = '\0';
	rl_test_desc.len	 = 0;

	EXEC SQL SELECT long_desc 
	           INTO :rl_test_desc
	           FROM rl_test_code_lang_vw
	          WHERE test_code = :rl_test_code
			  AND LANGUAGE_ID = :language_id;

	rl_test_desc.arr[rl_test_desc.len]  = '\0';	
 return 1;
}


/************get_legend_value*******************/
get_legend_value(int cou)
 {
     
   
	EXEC SQL EXECUTE
	BEGIN
	  SM_POPULATE_REPORT_LEGEND.FETCH_LEGEND (:nd_facility_id,:language_id,'RLRRECRS.LEGEND_');
	END;
	END-EXEC;
 for (i=1; i<=cou; i++)
	{

	l_translated_value.arr[0]		= '\0';
	
	EXEC SQL EXECUTE
	BEGIN
               :l_translated_value :=    GET_LEGEND(LTRIM(RTRIM('RLRRECRS.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009'))))));
	END;
	END-EXEC;
	
	l_translated_value.arr[l_translated_value.len] = '\0';


	strcpy(local_legend[i],l_translated_value.arr);

	

	}
	

 }
/****************End****************/









/********************* PRINT END OF REPORT ************************/
print_end_of_rep()
{
    int col;
    char buff[REP_WIDTH+1];

	eor.arr[0] = '\0';
	eor.len    = 0;

    memset(buff,' ',REP_WIDTH-11);
    col = (int)(REP_WIDTH-19)/2;

    strcat(eor.arr,"***");
	strcat(eor.arr,local_legend[12]);
	strcat(eor.arr,"***");

	strcpy(buff+col,eor.arr);

      print_line(REP_WIDTH+1);
//    fprintf(f1,"%s\n",nd_footer_line_1.arr);		
//    fprintf(f1,"%s\n",nd_footer_line_2.arr);		
	
    fprintf(f1,"\n%s\n",buff);
	fprintf(f1,"\f");  // 28.04.2003 added  
 return 1;
}

print_space(int aa, int bb, int cc)
{
	if (cc ==1)
	{
  		for(i=1;i <= (aa - bb) ;i++)
		{
			fprintf(f1,"%s"," ");
		}	
	}
	else if (cc ==0)
	{
  		for(i= (aa - bb);i <= aa ;i++)
		{
			fprintf(f1,"%s","-");
		}	
	}
}