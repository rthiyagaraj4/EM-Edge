/*
#define DEBUG
*/

#include <stdio.h>
#include <string.h>
#include "gl.h"                                            
#define ONLINE_PRINTING  1
#define INIT_MESG "Printing Referral Charges Slip"

EXEC SQL BEGIN DECLARE SECTION;

    VARCHAR    nd_operating_facility_id   [3],
	           uid_pwd                    [91],
	           session_id                 [16],
	           d_pgm_date                 [14],
               rep_date                   [20],
               //comp_name                  [50],
			   comp_name                  [300],
               oper_id                    [21],
               d_curr_pgm_name            [15];

    VARCHAR 
	    d_request_num          [21],
	    d_ord_regd_date        [11],
	    d_patient_id           [21],
	    d_source_code          [11],
	    d_doc_type_code        [7],
		d_episode_type         [2],
	    d_doc_num              [9],
	    d_hosp_chrg_yn         [2],

	    d_source_desc          [41],
	    d_patient_name         [240],

        d_test_date            [11],
	    d_section_code         [2],
	    d_test_code            [11],

	    d_test_desc            [16],
	    d_section_desc         [16],
	    
	    d_cust_code            [9],
	    d_cust_name            [41];


    double  d_tot_paid_amt,
	        d_order_item_debit_value;
    int     l_count = 0;
    
	VARCHAR l_translated_value  [500], //added for globalisation
			language_id [5]; //added for globalisation
    int     i; //added for globalisation

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

#define REP_WIDTH 76
char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1],
     hdr_line4[REP_WIDTH+1];

//char rep_title[] = "LAB REFERRAL CHARGES SLIP";
char rep_title[400];

FILE *f1;

char local_legend[40][600];  //added for globalisation

int page_no,
    line_no,
    first_line,
    g_count;

double g_tot_amt;

int l_ret_run_rep;
char filename[150];
char l_cmd[127];                     
void proc_main(argc,argv)
int argc;
char *argv[];
{
 
    if(argc < 3) {
        disp_message(ERR_MESG, "RLRRFSLP : Usage RLRRFSLP userid/password specimen_no\n");
        proc_exit();
    }

    strcpy(g_pgm_id,"RLRRFSLP");

    strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_request_num.arr,argv[2]);
    d_request_num.len = strlen(d_request_num.arr);

    strcpy(nd_operating_facility_id.arr,argv[3]);
	nd_operating_facility_id.len = strlen(nd_operating_facility_id.arr);

    EXEC SQL CONNECT :uid_pwd;

    if(ERROR) {
        disp_message(ORA_MESG, "Unable to connect to oracle.\n");
        proc_exit();
              }
    
	set_meduser_role();

	/******* from here added for globalisation ********/
    strcpy(language_id.arr,l_language_id.arr);
	language_id.len =l_language_id.len;
	language_id.arr[l_language_id.len]='\0';
    /******* upto here added for globalisation ********/

	get_legend_value(16);  //added for globalisation

    fetch_sys_info();

    strcpy(filename, WORKING_DIR);
    strcat(filename, "rlrrfslp.lis");

    if( (f1=fopen(filename,"w")) == NULL) {
        disp_message(ERR_MESG, "Error in opening output file...\n");
	proc_exit();
    }

    g_tot_amt = 0;
    d_tot_paid_amt = 0;
    page_no=1;
    line_no=1;

    decl_curs();

    strcpy(rep_title,local_legend[1]);

	do_report();

    if(d_tot_paid_amt > g_tot_amt) {
        page_no=1;
        line_no=1;
	
	//strcpy(rep_title,"LAB REFERRAL REFUND SLIP");
    strcpy(rep_title,local_legend[2]);

	do_report();
    }

    fclose(f1);


    EXEC SQL COMMIT WORK RELEASE;

    return;

}

/******** added for globalisation start ******************/

get_legend_value(int cou)
 {
	EXEC SQL EXECUTE
	BEGIN
	  SM_POPULATE_REPORT_LEGEND.FETCH_LEGEND (:nd_operating_facility_id,:language_id,'RLRRFSLP.LEGEND_');
	END;
	END-EXEC;

	for (i=1; i<=cou; i++)
	{
		l_translated_value.arr[0]		= '\0';


		EXEC SQL EXECUTE
		BEGIN
               :l_translated_value :=    GET_LEGEND(LTRIM(RTRIM('RLRRFSLP.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009'))))));
		END;
		END-EXEC;
	
		l_translated_value.arr[l_translated_value.len] = '\0';

		//sp_message(ERR_MESG,l_translated_value.arr);

		strcpy(local_legend[i],l_translated_value.arr);

	}
 }
/******** added for globalisation end ******************/


decl_curs()
{

    EXEC SQL DECLARE RL_REQ_HDR_CUR CURSOR FOR
	      SELECT TO_CHAR(SPEC_REGD_DATE_TIME,'DD/MM/YYYY'),
		     PATIENT_ID,
		     SOURCE_CODE,
		     DOC_TYPE_CODE,
		     DOC_NUM,
			 NVL(AMOUNT_PAID,0),
			 EPISODE_TYPE ,
			 SECTION_CODE
		FROM RL_REQUEST_HEADER
	       WHERE SPECIMEN_NO = :d_request_num
		   AND OPERATING_FACILITY_ID = :nd_operating_facility_id
		   AND NVL(CANCELLED_YN,'N') != 'Y'
		 AND DOC_TYPE_CODE IS NOT NULL;


    EXEC SQL DECLARE RL_REQ_DTL_CUR CURSOR FOR
	         SELECT TO_CHAR(ADDED_DATE,'DD/MM/YYYY'),
		     TEST_CODE,
		     NVL(NET_CHARGE,0)
		FROM RL_REQUEST_DETAIL
	       WHERE SPECIMEN_NO = :d_request_num
		   AND OPERATING_FACILITY_ID = :nd_operating_facility_id
		   AND NVL(CANCELLED_YN,'N') != 'Y' 
	       ORDER BY LINE_NO;

}

fetch_req_hdr()
{

    d_ord_regd_date.arr[0]      = '\0';
    d_patient_id.arr[0]         = '\0';
    d_source_code.arr[0]        = '\0';
    d_doc_type_code.arr[0]      = '\0';
    d_doc_num.arr[0]            = '\0';
	d_episode_type.arr[0]       = '\0';
	d_section_code.arr[0]       = '\0';
	d_section_desc.arr[0]       = '\0';
    

    d_ord_regd_date.len         = 0;
    d_patient_id.len            = 0;
    d_source_code.len           = 0;
    d_doc_type_code.len         = 0;
    d_doc_num.len               = 0;
	d_episode_type.len          = 0;
	d_section_code.len          = 0;
	d_section_desc.len          = 0;

    EXEC SQL FETCH RL_REQ_HDR_CUR
	      INTO :d_ord_regd_date,
                   :d_patient_id,
                   :d_source_code,
                   :d_doc_type_code,
                   :d_doc_num,
                   :d_tot_paid_amt,
				   :d_episode_type,
				   :d_section_code;


    if(ERROR)
	err_mesg("FETCH failed on cursor RL_REQ_HDR_CUR",0,"");

    if(NO_DATA_FOUND)    
	return 0;

    d_ord_regd_date.arr[d_ord_regd_date.len]      = '\0';
    d_patient_id.arr[d_patient_id.len]            = '\0';
    d_source_code.arr[d_source_code.len]          = '\0';
    d_doc_type_code.arr[d_doc_type_code.len]      = '\0';
    d_doc_num.arr[d_doc_num.len]                  = '\0';
	d_episode_type.arr[d_episode_type.len]        = '\0';

    d_source_desc.arr[0]   = '\0';
    d_patient_name.arr[0]  = '\0';
    d_cust_code.arr[0]     = '\0';
    d_cust_name.arr[0]     = '\0';
	
    d_source_desc.len      = 0;
    d_patient_name.len     = 0;
    d_cust_code.len        = 0;
    d_cust_name.len        = 0;

	
    EXEC SQL SELECT SHORT_NAME
	       INTO :d_section_desc
	       FROM RL_SECTION_CODE_lang_vw
	      WHERE SECTION_CODE = :d_section_code
		  AND language_id = :language_id;

    if(ERROR)
    	err_mesg("SELECT failed on table RL_SECTION_CODE",0,"");

    d_section_code.arr[d_section_code.len]     = '\0';

    d_section_desc.arr[d_section_desc.len]                        = '\0';



    EXEC SQL SELECT LONG_DESC
	//	       CUSTOMER_CODE   temporarly commented on 17/01/2008 because of customer_code column is not available in rl_referral in SRDV database
	       INTO  
		       :d_source_desc
//			    :d_cust_code
	       FROM RL_REFERRAL
	      WHERE REFERRAL_CODE = :d_source_code;
		  
    if(ERROR)
	err_mesg("SELECT failed on table RL_REFERRAL",0,"");


         EXEC SQL SELECT DECODE(:language_id,'en',SHORT_NAME,'th',SHORT_NAME_LOC_LANG)
	           INTO :d_patient_name
	           FROM RL_PATIENT_MAST
	           WHERE PATIENT_ID = :d_patient_id;
			   /* AND OPERATING_FACILITY_ID = :nd_operating_facility_id; */


        if(ERROR)
	       err_mesg("SELECT failed on table RL_PATIENT_MAST",0,"");


      /*EXEC SQL SELECT LONG_NAME
	         INTO :d_cust_name
	         FROM AR_CUSTOMER
	         WHERE CUST_CODE = :d_cust_code;
			 
        if(ERROR)
	      err_mesg("SELECT failed on table AR_CUSTOMER",0,"");*/
//above code is temporarly commented on 17/01/2008 because of customer_code column is not available in rl_referral in SRDV database

	d_source_desc.arr[d_source_desc.len]     = '\0';
    d_patient_name.arr[d_patient_name.len]   = '\0';
    d_cust_code.arr[d_cust_code.len]         = '\0';
    d_cust_name.arr[d_cust_name.len]         = '\0';

    return 1;
}

fetch_req_dtl()
{

    d_test_date.arr[0]        = '\0';
    d_test_code.arr[0]        = '\0';

    d_test_date.len           = 0;
    d_test_code.len           = 0;

    d_order_item_debit_value = 0;

    EXEC SQL FETCH RL_REQ_DTL_CUR 
	      INTO :d_test_date,
                   :d_test_code,
                   :d_order_item_debit_value;
    if(ERROR)
	err_mesg("FETCH failed on cursor RL_REQ_DTL_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_test_date.arr[d_test_date.len]           = '\0';
    d_test_code.arr[d_test_code.len]           = '\0';

    d_test_desc.arr[0]    = '\0';
    d_test_desc.len       = 0;
	
    EXEC SQL SELECT SHORT_DESC
	       INTO :d_test_desc
	       FROM RL_TEST_CODE_lang_vw
	      WHERE TEST_CODE = :d_test_code
		  AND language_id = :language_id;

    if(ERROR)
	err_mesg("SELECT failed on cursor RL_TEST_CODE",0,"");

    d_test_desc.arr[d_test_desc.len]   = '\0';

    
    return 1;

}


do_report()
{

    int first;
    char s_amt[20];

    EXEC SQL OPEN RL_REQ_HDR_CUR;

    if(ERROR)
	err_mesg("OPEN failed on cursor RL_REQ_HDR_CUR",0,"");
    
    while(fetch_req_hdr()) {
        put_hdr();
		//fprintf(f1," Section :");
		fprintf(f1," %7.7s :",local_legend[3]);

		fprintf(f1,d_section_desc.arr);
		fprintf(f1,"  ");
        
		//fprintf(f1,"%17sDate           : %s\n", "",d_ord_regd_date.arr);
		fprintf(f1,"%17s%4.4s           : %s\n", "",local_legend[4],d_ord_regd_date.arr);

	//fprintf(f1,"%42sCharge Slip No : %s/%s\n\n","",d_doc_type_code.arr,d_doc_num.arr);
	fprintf(f1,"%42s%14.14s : %s/%s\n\n","",local_legend[5],d_doc_type_code.arr,d_doc_num.arr);

	//fprintf(f1," Referral Source : %s %s\n", d_source_code.arr,d_source_desc.arr);
	fprintf(f1," %15.15s : %s %s\n", local_legend[6],d_source_code.arr,d_source_desc.arr);

	//fprintf(f1," Specimen No.    : %s\n", d_request_num.arr);
    fprintf(f1," %12.12s    : %s\n", local_legend[7],d_request_num.arr);

	//fprintf(f1," Patient Name    : %s\n\n", d_patient_name.arr);
	fprintf(f1," %12.12s    : %-60.60s\n\n", local_legend[8],d_patient_name.arr);

	line_no += 7;

	EXEC SQL OPEN RL_REQ_DTL_CUR;

	if(ERROR)
  	    err_mesg("OPEN failed on cursor RL_REQ_DTL_CUR",0,"");

	first = 1;
	g_tot_amt = 0;

	while(fetch_req_dtl()) {

	    if(first) 
		{
			chk_break(2);
			
			//fprintf(f1, " Date                Lab Test                                   Amount\n");
			fprintf(f1, " %4.4s                %8.8s                                   %6.6s\n",local_legend[4],local_legend[9],local_legend[10]);

			fprintf(f1," --------------------------------------------------------------------------\n");
			line_no += 2;
			first = 0;
	    }

	    chk_break(1);
	    print_formated(s_amt, d_order_item_debit_value);
	    fprintf(f1," %-10s ",d_test_date.arr);
		fprintf(f1,"        ");
		fprintf(f1," %-10.10s %-15s       %22s\n",
			d_test_code.arr, d_test_desc.arr,s_amt);
	    g_tot_amt += d_order_item_debit_value;
	    line_no ++;
	}

	print_formated(s_amt, g_tot_amt);
	chk_break(1);
	fprintf(f1,"%59s %14s\n","","---------------");
	line_no ++;
	chk_break(1);
    
	//fprintf(f1,"            %-23s                   %22s\n","TOTAL LAB CHARGES DUE",s_amt);
	fprintf(f1,"            %-23s                   %22s\n",local_legend[11],s_amt);

	fprintf(f1,"%59s %14s\n","","---------------");
	line_no += 2;
	chk_break(1);

	    chk_break(1);
	    if(g_tot_amt <= d_tot_paid_amt)
	        //fprintf(f1," RECEIPT NATURE : MI MISCELLANEOUS\n");
			fprintf(f1," %14.14s : %16.16s\n",local_legend[12],local_legend[13]);
	    else
	        //fprintf(f1," RECEIPT NATURE : CU CUSTOMER\n");
			fprintf(f1," %14.14s : %11.11s\n",local_legend[12],local_legend[14]);
			
			//fprintf(f1," CUSTOMER       : %s %s\n",d_cust_code.arr, d_cust_name.arr);
            fprintf(f1," %8.8s       : %s %s\n",local_legend[15],d_cust_code.arr, d_cust_name.arr);

 	    print_formated(s_amt, d_tot_paid_amt);
	    line_no++;
	    
    }

}

chk_break(nol)
int nol;
{

	if(line_no+nol >= 33) {
           line_no = 1;
	   g_count = 1;
	   put_hdr();
	}

}

print_end_of_rep()
{
    int col;
    char buff[REP_WIDTH+1];

    memset(buff,' ',REP_WIDTH+1);
    col = (int)(REP_WIDTH-19)/2;

    sprintf(buff,"*** %s ***",local_legend[16]);

	//strcpy(buff+col,"** END OF REPORT **");
	strcpy(buff+col,buff);
    fprintf(f1,"\n%s\n",buff);
}

put_hdr()
{

    form_hdr();

    fprintf(f1,"\n");
    line_no=8;

}

form_hdr()
{

    static int first = 1;
    char buf[15];
    int col;

    if(first) {
        memset(hdr_line1,' ',REP_WIDTH+1);
        memset(hdr_line2,' ',REP_WIDTH+1);
	memset(hdr_line4,'-',REP_WIDTH);
	hdr_line4[REP_WIDTH] = '\0';

        strncpy(hdr_line1,"MDL : RL",8);
        col = (int)(REP_WIDTH-strlen(comp_name.arr))/2;
        strncpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));
        col = (REP_WIDTH-strlen(rep_date.arr));
        strcpy(hdr_line1+col,rep_date.arr);
    
        strncpy(hdr_line2,"OPR :",5);
        strcpy(hdr_line2+6,oper_id.arr);

    }

    memset(hdr_line3,' ',REP_WIDTH+1);

    strncpy(hdr_line3,"REP : RLRRFSLP",14);
    col = (int)(REP_WIDTH-strlen(rep_title))/2;
    strncpy(hdr_line3+col,rep_title,strlen(rep_title));
    sprintf(buf,"PAGE : %4d",page_no++);
    strcpy(hdr_line3+(REP_WIDTH-strlen(buf)),buf);

    if(first)
        fprintf(f1,"%s\n",hdr_line1);
    else
        fprintf(f1,"\f%s\n",hdr_line1);
    fprintf(f1,"%s\n",hdr_line2);
    fprintf(f1,"%s\n",hdr_line3);
    fprintf(f1,"%s\n",hdr_line4);

    first = 0;
}

fetch_sys_info()
{

    EXEC SQL SELECT ACC_ENTITY_NAME,
		    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
	     INTO   :comp_name,
		    :rep_date,
		    :oper_id
	     FROM   SY_ACC_ENTITY_lang_vw
           WHERE ACC_ENTITY_ID = :nd_operating_facility_id
		   AND language_id = :language_id;

    if(ERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';
}

print_formated(s_amt, l_amt)
double l_amt;
char *s_amt;
{

    if(l_amt < 0){
        put_val(s_amt,-l_amt);
  //       put_comma(s_amt);
        strcat(s_amt,"-");
    }
    else {
        put_val(s_amt,l_amt);
//         put_comma(s_amt);
        strcat(s_amt," ");
    }
}

print_formated1(s_amt, l_amt)
double l_amt;
char *s_amt;
{

    char str[20];

    if(l_amt < 0){
        put_val(str,-l_amt);
//        put_comma(str);
        sprintf(s_amt,"(%s)",str);
    }
    else {
        put_val(s_amt,l_amt);
  //      put_comma(s_amt);
        strcat(s_amt," ");
    }
}
