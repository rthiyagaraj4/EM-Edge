/************************************************************************/
/* OCS MEDICOM VER 1.0                                               */
/************************************************************************/
/* PROGRAM NAME          : BLRPRREC.PC                                  */
/* AUTHOR                : NITIN KUMAR                                  */
/* DATE WRITTEN          : 18-APR-1993                                  */
/* MODIFIED BY           : Aldrin Alberto for AMH                       */                                                                     
/*                                                                      */
/* CALLED FROM           :                                              */ 
/*                                                                      */
/*  FUNCTION             :                                              */
/*                                                                      */
/*  TABLE DETAILS                                                       */
/*                                                                      */
/*        S. No.     TABLENAMES             INPUT/OUTPUT                */
/*                                                                      */
/*         1.        BL_RECEIPT_REFUND_DTL     Query/Update             */
/*         2.        SY_PROG_CONTROL           Update/Lookup            */
/*         3.        SY_PROG_MESG                Insert                 */
/*                                                                      */
/*  PARAMETERS           :             -                                 */
/*                                                                      */
/*  SUBROUTINES          :                                              */
/*                                                                      */
/*         1.        ERR_MESG            err_mesg                       */
/*                                                                      */
/*                                                                      */
/*                                                                      */
/************************************************************************/
/* UPGRADED TO 4.1   */
    
	                                         
/* All control-chars have been commented as they do not make sense on a DMP
   All reference to HK$ change to Dhs
   -  For American Hospital Implementation. -- G. Viswanath/31/7/1996
*/     
  
#include <stdio.h>
#include <string.h>
#include <math.h>
//#include <sqlca.h>
//#include <sqlda.h>
#include <bl.h>

/*
#define OERROR (sqlca.sqlcode < 0)
*/

#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define MAX_LINES 80

#define INIT_MESG       "Printing Receipt / Refund  in progress"
#define ONLINE_PRINTING 1
/*
#define DEBUG 1
*/
      
#define SKIP_1 3
#define SKIP_2 64
#define SKIP_3 3
#define SKIP_4 10
#define SKIP_4_1 2
#define SKIP_5 22
#define SKIP_6 15
#define SKIP_6_1 15
#define SKIP_7 3
#define SKIP_8 13
#define SKIP_9 10

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd      [132],
           hosp_name    [120],
           date_time    [20],
           user_id      [20],
           nd_pgm_date  [35],
	   nd_facility_name[31],
	   nd_service_desc[41],
	   nd_recpt_nature_code[3],
	   nd_blng_grp   [3],
	   nd_blng_desc  [16],
	   nd_hcard_status[12],	
	   nd_service_code[11],
	   nd_hcard_num[21],
	   
	   nd_hcard_expiry_date[15],
	   nd_cash_counter_desc [16];

   VARCHAR nd_session_id    [16],
	   nd_facility_id   [3] ,
           nd_fm_doc_type   [7],
	   nd_clinic	    [16],
           nd_to_doc_type   [7],
	   nd_nationality   [5],
           nd_fm_doc_num    [10],
           nd_to_doc_num    [10],
           nd_fm_doc_date   [12],
		   // Added by MRAMESH. date : 31-dec-1997
	   cur_str          [8],
	   sub_cur_str      [8],	   
           nd_to_doc_date   [12];

   VARCHAR d_doc_type_code                             [7],
           d_doc_number                                [9],
		   d_doc_srno								   [3],
           d_doc_date                                  [13],
           d_trx_date_time                             [17],
           d_episode_type                              [2],
           d_patient_id                                [21],
           d_patient_name                              [61],
           d_patient_name_loc_lang                     [61],
           d_episode_id                                [9],
           d_visit_id                                  [5],
           d_bill_doc_type_code                        [7],
           d_bill_doc_number                           [9],
           d_customer_code                             [9],
           d_cust_name                                 [41],
           d_doc_amt                                   [23],
           d_slmt_type_code                            [3],
           d_slmt_type_desc                            [16],
           d_slmt_doc_ref_desc                         [21],
           d_slmt_doc_ref_date                         [13],
           d_slmt_doc_remarks                          [102],
           d_narration                                 [51],
	   nd_cashier										[31],
           d_payer_name                                [41],
	   nd_hcare_appl_num								[21],
           d_cur_bed_num                               [9],
	   d_cur_ward_code									[5],
           d_cash_counter_code                         [3],	   
           d_shift_id                                  [2],
	   d_rowid                                     [20],
	   d_doc_type_num                              [25],
	   nd_reportid								[20],
	   nd_recpt_desc							[13],
	   p_language_id							[3];
	   //l_language_id							[3];

   char    nd_print_flag,
	   nd_rec_ref_flag,
           online_batch_flag,
	   d_err_code[30],
	   g_facility_id[3],
	   string_var[200];

   double  d_doc_amt_num,
	   nd_dep_amt;
   int nd_no_of_decimal,
	nd_dep_status = 0;   

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *fp;
int lctr = 0,pctr =0;

char filename[150];
char l_epi_barcode[50],
     l_rec_barcode[50];

void proc_main(argc,argv)
char *argv[];
int argc;
{

   char lv_msg[1024];
   
   if (argc < 9) {
        disp_message(ERR_MESG,"BLRPRREC : Usage BLRPRREC userid/password session_id pgm_date doc_type num print_flag facility report id \n");
        proc_exit();
    } 
   if (argc == 11) 
      {
        strcpy(nd_reportid.arr,argv[9]);
       // nd_reportid.len = strlen(uid_pwd.arr);
	    nd_reportid.len = strlen(nd_reportid.arr);
      }
   if (argc < 8)
      {
        strcpy(nd_reportid.arr,"BLRPRREC");
       // nd_reportid.len = strlen(uid_pwd.arr);
	   nd_reportid.len = strlen(nd_reportid.arr);
      }
   
   
   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(g_session_id,argv[2]);
   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"BLRPRREC"); 

   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle\n");
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd\n\n\n");
      proc_exit();
   }

   set_meduser_role();
   strcpy(p_language_id.arr,l_language_id.arr);
		p_language_id.len = l_language_id.len;

   strcpy(g_pgm_date,argv[3]);
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   strcpy(d_doc_type_code.arr, argv[5]);
   strcpy(d_doc_number.arr, argv[6]);

   d_doc_type_code.len = strlen(d_doc_type_code.arr);
   d_doc_number.len    = strlen(d_doc_number.arr);

   strcpy(nd_facility_id.arr,argv[8]);

   nd_facility_id.len  = strlen(nd_facility_id.arr);
   strcpy(g_facility_id,nd_facility_id.arr);
   
   nd_print_flag = argv[7][0];  

   nd_facility_name.arr[0] = '\0';
   nd_facility_name.len = 0;

    
   exec sql select acc_entity_name, no_of_decimal 
		into :nd_facility_name, :nd_no_of_decimal
 	    from sy_acc_entity where acc_entity_id = :nd_facility_id;

    if (OERROR)
    {
         err_mesg("SELECT failed on cursor SY_ACC_ENTITY",0,"");
    }
    nd_facility_name.arr[nd_facility_name.len] = '\0';


    open_files(); 

    d_doc_date.arr[0]                                                 = '\0';
	d_doc_srno.arr[0]												  = '\0';
    d_episode_type.arr[0]                                             = '\0';
    d_patient_id.arr[0]                                               = '\0';
    d_episode_id.arr[0]                                               = '\0';
    d_visit_id.arr[0]                                                 = '\0';
    d_bill_doc_type_code.arr[0]                                       = '\0';
    d_bill_doc_number.arr[0]                                          = '\0';
    d_customer_code.arr[0]                                            = '\0';
    d_doc_amt.arr[0]                                                  = '\0';
    d_slmt_type_code.arr[0]                                           = '\0';
    d_slmt_doc_ref_desc.arr[0]                                        = '\0';
    d_slmt_doc_ref_date.arr[0]                                        = '\0';
    d_slmt_doc_remarks.arr[0]                                         = '\0';
    d_narration.arr[0]                                                = '\0';
    d_payer_name.arr[0]                                               = '\0';
    d_rowid.arr[0]                                                    = '\0';
    d_trx_date_time.arr[0]                                            = '\0';
    d_cash_counter_code.arr[0]                                        = '\0';
    d_shift_id.arr[0]                                                 = '\0';
    d_doc_type_num.arr[0]                                             = '\0';
    nd_hcare_appl_num.arr[0]  					      = '\0';

    nd_recpt_nature_code.arr[0]					      = '\0';
    
    d_doc_date.len                                                    = 0;
	d_doc_srno.len													  = 0;
    d_episode_type.len                                                = 0;
    d_patient_id.len                                                  = 0;
    d_episode_id.len                                                  = 0;
    d_visit_id.len                                                    = 0;
    d_bill_doc_type_code.len                                          = 0;
    d_bill_doc_number.len                                             = 0;
    d_customer_code.len                                               = 0;
    d_doc_amt.len                                                     = 0;
    d_slmt_type_code.len                                              = 0;
    d_slmt_doc_ref_desc.len                                           = 0;
    d_slmt_doc_ref_date.len                                           = 0;
    d_slmt_doc_remarks.len                                            = 0;
    d_narration.len                                                   = 0;
    d_payer_name.len                                                  = 0;
    d_rowid.len                                                       = 0;
    d_trx_date_time.len                                               = 0;
    d_cash_counter_code.len                                           = 0;
    d_shift_id.len                                                    = 0;
    d_doc_type_num.len                                                = 0;
    nd_hcare_appl_num.len					      = 0;

    nd_recpt_nature_code.len					      = 0;

    d_doc_amt_num                                                     = 0;

    nd_cashier.arr[0]						      = '\0';
    nd_cashier.len						      = 0;
    
    

   EXEC SQL DECLARE receipt_cursor CURSOR FOR 
				SELECT a.DOC_TYPE_CODE,
                   a.DOC_NUMBER,
				   a.DOC_SRNO,
                   to_char(a.DOC_DATE,'dd/mm/yyyy'),
                   a.EPISODE_TYPE,
                   a.PATIENT_ID,
                   LTRIM(TO_CHAR(a.EPISODE_ID,'00000009')),
                   a.VISIT_ID,
                   a.BILL_DOC_TYPE_CODE,
                   LTRIM(TO_CHAR(a.BILL_DOC_NUMBER,'00000009')),
                   a.CUSTOMER_CODE,
                   TO_CHAR(a.DOC_AMT) DOC_AMT,
                   a.SLMT_TYPE_CODE,
                   a.SLMT_DOC_REF_DESC,
                   TRUNC(a.SLMT_DOC_REF_DATE),
                   a.SLMT_DOC_REMARKS,
                   a.NARRATION,
                   a.PAYER_NAME,
                   A.ROWID,
                   TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                   a.CASH_COUNTER_CODE,
                   a.SHIFT_ID,
		   a.DOC_TYPE_CODE||LTRIM(TO_CHAR(a.DOC_NUMBER,'00000009')),
		   a.RECPT_REFUND_IND,
		   a.RECPT_NATURE_CODE,
		   a.HCARE_APPL_NUM,
		   a.ADDED_BY_ID
        FROM BL_RECEIPT_REFUND_HDRDTL_VW a
	    WHERE a.DOC_TYPE_CODE 	= :d_doc_type_code
	     AND a.DOC_NUMBER    	= :d_doc_number 
		 FOR UPDATE OF PRINT_FLAG NOWAIT;   

    if(sqlca.sqlcode == -54)
	 {
      sprintf(d_err_code,"%5d",sqlca.sqlerrd[2]);
       disp_message(ERR_MESG,d_err_code);
        EXEC SQL ROLLBACK WORK RELEASE;
			proc_exit();
	  }


    if (OERROR)
    {
         err_mesg("DECLARE failed on cursor BL_REC_REF_CUR",0,"");

	}

	EXEC SQL OPEN receipt_cursor; 

    if (OERROR)
    {
         err_mesg("OPEN failed on cursor receipt_cursor",0,"");

    }	 

	while(fn_fetch_receipt_cursor())
	  {
   
    nd_print_flag = nd_rec_ref_flag;   

    nd_cash_counter_desc.arr[0] = '\0';
    nd_cash_counter_desc.len = 0;    
   

    exec sql select short_desc into :nd_cash_counter_desc from bl_cash_counter
	     where operating_facility_id = :nd_facility_id
		and cash_counter_code = :d_cash_counter_code;

    if (OERROR)
    {
         err_mesg("FETCH failed on BL_CASH_COUNTER",0,"");
    }
    
    nd_cash_counter_desc.arr[nd_cash_counter_desc.len] = '\0';

    l_epi_barcode[0] = '\0';
    l_rec_barcode[0] = '\0';

        if(strlen(d_patient_id.arr) != 0) { 

            d_patient_name.arr[0]  = '\0';
            d_patient_name_loc_lang.arr[0]  = '\0';
            nd_nationality.arr[0]  = '\0';

            d_patient_name.len  = 0;
            d_patient_name_loc_lang.len  = 0;
	    nd_nationality.len = 0;

	     EXEC SQL SELECT  SHORT_NAME,
	        	      SHORT_NAME_LOC_LANG,
			      NATIONALITY_CODE
	              INTO   :d_patient_name,
			     :d_patient_name_loc_lang,
			     :nd_nationality
	              FROM    MP_PATIENT_MAST
	              WHERE   PATIENT_ID = :d_patient_id;

            if(OERROR)
		{   

	        err_mesg("SELECT failed on table MP_PATIENT_MAST",0,"");
		}
    
            d_patient_name.arr[d_patient_name.len]  = '\0';
            d_patient_name_loc_lang.arr[d_patient_name_loc_lang.len]  = '\0';
            nd_nationality.arr[nd_nationality.len] = '\0';

            d_cur_bed_num.arr[0] = '\0';
            d_cur_bed_num.len    = 0;
	    d_cur_ward_code.arr[0] = '\0';
            d_cur_ward_code.len    = 0;
            
            EXEC SQL SELECT CUR_BED_NUM,CUR_WARD_CODE
                     INTO   :d_cur_bed_num, :d_cur_ward_code
                     FROM   IP_EPISODE
                     WHERE  EPISODE_ID = :d_episode_id
		     AND facility_id = :nd_facility_id;

            if(OERROR)
                err_mesg("SELECT failed on table IP_EPISODE",0,"");

            d_cur_bed_num.arr[d_cur_bed_num.len] = '\0';
            d_cur_ward_code.arr[d_cur_ward_code.len] = '\0';
        }
	    
	if(d_customer_code.arr[0]) {
            d_cust_name.arr[0]          = '\0';
            d_cust_name.len             = 0;

	    EXEC SQL SELECT DECODE(CHINESE_REPORTING_FLAG,'Y',
                        LONG_NAME_CHINESE,LONG_NAME)
                 INTO   :d_cust_name
                 FROM   AR_CUSTOMER
                 WHERE  CUST_CODE = :d_customer_code			
		 AND acc_entity_code in ( select acc_entity_code from sy_acc_entity
			where acc_entity_id  = :nd_facility_id );

            if (OERROR)
		{   

                 err_mesg("SELECT failed on cursor AR_CUSTOMER_CUR",0,"");
		}

             d_cust_name.arr[d_cust_name.len] = '\0';
        }

//        fprintf(fp,"%c%c%c",27,67,33);
        //if(nd_print_flag EQ "R")


   	if(nd_print_flag EQ 'R')
		 print_receipt(); 
        else	 
		print_refund();

		
       		 update_rec();   

	}

    EXEC SQL CLOSE receipt_cursor;

   fclose(fp);
  

  
   
  PrintDocument
   (
		uid_pwd.arr,		//char	*PUidPwd;
		nd_session_id.arr,	//char	*PSessionID;
		nd_facility_id.arr,	//char	*PFacilityID;
		"BL",				//char	*PModuleID;
		nd_reportid.arr,			//char	*PDocumentID;
		filename,			//char	*POnlinePrintFileNames;
		"O",				//char	*PLocationTypes;
		" ",				//char	*PLocationCodes;
		1,					//int		PNumOfCopies;
		1,					//int		PPageFrom;
		999					//int		PPageTo;
	);
	
   EXEC SQL COMMIT WORK RELEASE;
   return;
}


sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

open_files()
{

   strcpy(filename,WORKING_DIR);
   if(nd_print_flag EQ 'R')
       strcat(filename,"blroffrc.lis");
   else
       strcat(filename,"blrrefnd.lis");

   strcpy ( OUTPUT_FILE_NAME, filename );

   if ((fp = fopen(filename,"w")) == NULL)
   {
        err_mesg("Error while opening output file",0,"");
        proc_exit();
   }

}


fn_fetch_receipt_cursor()
   {
	
	EXEC SQL fetch receipt_cursor
		      INTO :d_doc_type_code,
                  :d_doc_number,
				  :d_doc_srno,
                  :d_doc_date,
				  :d_episode_type,
                  :d_patient_id,
                  :d_episode_id,
                  :d_visit_id,
                  :d_bill_doc_type_code,
                  :d_bill_doc_number,
                  :d_customer_code,
                  :d_doc_amt,
                  :d_slmt_type_code,
                  :d_slmt_doc_ref_desc,
                  :d_slmt_doc_ref_date,
                  :d_slmt_doc_remarks,
                  :d_narration,
                  :d_payer_name,
                  :d_rowid,
                  :d_trx_date_time,
                  :d_cash_counter_code,
                  :d_shift_id,
				  :d_doc_type_num,
				  :nd_rec_ref_flag,
				  :nd_recpt_nature_code,
  				  :nd_hcare_appl_num,
				  :nd_cashier ;
    
	if(sqlca.sqlcode == -54) 
	{
		/*sprintf(d_err_code,"%5d",sqlca.sqlerrd[2]);
		disp_message(ERR_MESG,d_err_code);*/
        EXEC SQL ROLLBACK WORK RELEASE;
		proc_exit();
	}   

    if (OERROR)
    {
         err_mesg("FETCH failed on cursor receipt_cursor",0,"");
    }

    d_doc_type_code.arr[d_doc_type_code.len]                             = '\0';
    d_doc_number.arr[d_doc_number.len]                                   = '\0';
	d_doc_srno.arr[d_doc_srno.len]										 = '\0';
    d_doc_date.arr[d_doc_date.len]                                       = '\0';
    d_episode_type.arr[d_episode_type.len]                               = '\0';
    d_patient_id.arr[d_patient_id.len]                                   = '\0';
    d_episode_id.arr[d_episode_id.len]                                   = '\0';
    d_visit_id.arr[d_visit_id.len]                                       = '\0';
    d_bill_doc_type_code.arr[d_bill_doc_type_code.len]                   = '\0';
    d_bill_doc_number.arr[d_bill_doc_number.len]                         = '\0';
    d_customer_code.arr[d_customer_code.len]                             = '\0';
    d_doc_amt.arr[d_doc_amt.len]                                         = '\0';
    d_slmt_type_code.arr[d_slmt_type_code.len]                           = '\0';
    d_slmt_doc_ref_desc.arr[d_slmt_doc_ref_desc.len]                     = '\0';
    d_slmt_doc_ref_date.arr[d_slmt_doc_ref_date.len]                     = '\0';
    d_slmt_doc_remarks.arr[d_slmt_doc_remarks.len]                       = '\0';
    d_payer_name.arr[d_payer_name.len]                                   = '\0';
    d_narration.arr[d_narration.len]                                     = '\0';
    d_trx_date_time.arr[d_trx_date_time.len]                             = '\0';
    d_cash_counter_code.arr[d_cash_counter_code.len]                     = '\0';
    d_shift_id.arr[d_shift_id.len]                                       = '\0';
    d_doc_type_num.arr[d_doc_type_num.len]                               = '\0';
    nd_hcare_appl_num.arr[nd_hcare_appl_num.len]			 = '\0';

    nd_recpt_nature_code.arr[nd_recpt_nature_code.len]			 = '\0';    

    d_doc_amt_num = atof(d_doc_amt.arr);
    nd_cashier.arr[nd_cashier.len]					 = '\0';  

		return(LAST_ROW?0:1); 
}


print_receipt()
{
   char out_str[10][133];
   char s_amt[20];
   int  length_str[10];
   int  i = 0,no_of_lines = 0;
   char epi_visit[14];

   //Added by MRAMESH. Date : 31-dec-1997
   cur_str.arr[0]   = '\0';
   cur_str.len      =  0;   
   sub_cur_str.arr[0]   = '\0';
   sub_cur_str.len      = 0;
   
   exec sql select base_currency,
                   base_currency_dec 
            into :cur_str,
		 :sub_cur_str
  	    from sy_acc_entity
	    where acc_entity_id = :nd_facility_id;

   if (sqlca.sqlcode == 1403)
    { 
     err_mesg("No base currency in table SY_ACC_ENTITY",0,"");
	}
   if (sqlca.sqlcode < 0)
      {   

     err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");
       }
   
   cur_str.arr[cur_str.len]  = '\0';
   sub_cur_str.arr[sub_cur_str.len] = '\0';


   if(d_episode_type.arr[0] EQ 'I' || d_episode_type.arr[0] EQ 'D' ) // EPNH 14/10/2004 
      sprintf(epi_visit,"%-8s",d_episode_id.arr);
   else


  if (d_episode_type.arr[0] EQ 'O' || d_episode_type.arr[0] EQ 'E') // EPNH 14/10/2004 
  {

   nd_clinic.arr[0] = '\0';
   nd_clinic.len = 0;

   exec sql select short_desc into :nd_clinic from  bl_op_clinic_vw where 
	    facility_id = :nd_facility_id
	    and clinic_code in
		(select clinic_code from bl_visit_fin_dtls
		where patient_id = :d_patient_id and visit_id=:d_visit_id
		and episode_id = :d_episode_id
		and operating_facility_id = :nd_facility_id);
          
   if (OERROR)   
        err_mesg("SELECT failed on BL_OP_CLINIC_VW",0,"");   

   nd_clinic.arr[nd_clinic.len] = '\0';   }		

   if (d_episode_type.arr[0] EQ 'I' || d_episode_type.arr[0] EQ 'D' ) // EPNH 14/10/2004 
	sprintf(epi_visit,"%-8s",d_episode_id.arr);
   else
       if (d_episode_type.arr[0] EQ 'O' || d_episode_type.arr[0] EQ 'E' ) // EPNH 14/10/2004 
        sprintf(epi_visit,"%-8s/%-4s",d_episode_id.arr,d_visit_id.arr);
       else
		sprintf(epi_visit,"%-8s %-4s"," "," ");
    
   EXEC SQL
   select decode(:nd_recpt_nature_code,
					'AD','Pat Deposit',
					'BI','Against Bill',
					'DC','DCP',
					'MI','Misc', 
					'PR','Prepayment' ,
					'RD','Ref Deposit',
					'HC','Healthcard',
					'PD','Pkg Deposit', 
					'CU','Customer') 
				into :nd_recpt_desc
				from dual;	   
	    

   fprintf(fp,"\n\n\n\n\n\n");
 
  
   fprintf(fp,"%50s Receipt No.: %-6s/%-8s/%-s\n"," ",d_doc_type_code.arr,d_doc_number.arr,d_doc_srno.arr);

   fprintf(fp,"%50s Date    : %s\n"," ",d_doc_date.arr);

   fprintf(fp,"%50s Nature  : %s(%s)\n"," ",nd_recpt_desc.arr,nd_recpt_nature_code.arr);

   fprintf(fp,"%50s Episode : %-14s\n\n\n\n"," ",epi_visit);

   fprintf(fp,"%30s %s\n\n"," ", "DEPARTMENT OF FINANCE");

   fprintf(fp,"%30s %s\n\n\n\n"," ", "  OFFICIAL RECEIPT");
 
  if (d_patient_id.arr[0])
   {
   fprintf(fp,"%5s Patient No       : %s "," ",d_patient_id.arr);
   fprintf(fp,"Name : %-60.32s \n",d_patient_name.arr);
   }
  else												
   fprintf(fp,"%5s Patient No       : %s \n"," ","______________________");
   
  
   length_str[0] = 45;
   for (i =1;i<10;i++)
      length_str[i] = 80;
   for (i =1;i<10;i++)
      strcpy(out_str[i],"");

// no_of_lines = print_in_words(d_doc_amt_num<0?-d_doc_amt_num:d_doc_amt_num,length_str,out_str,nd_no_of_decimal);

 
   no_of_lines =    print_in_words(d_doc_amt_num<0?-d_doc_amt_num:d_doc_amt_num,MAX_LINES,sub_cur_str.arr,out_str,nd_no_of_decimal);


   put_val(s_amt,d_doc_amt_num < 0? -d_doc_amt_num:d_doc_amt_num);
   

   format_amt(s_amt);
   if(nd_print_flag EQ 'R')
   {
     for(i=0;i<SKIP_5;i++) fprintf(fp," ");
   }
   else
   {
     for(i=0;i<SKIP_6;i++) fprintf(fp," ");
   }

   if(strlen(out_str[1]))
       strcat(out_str[1],")");
   else
       strcat(out_str[0],")");
   fprintf(fp,"\n");
   fprintf(fp,"%5s The Sum of %s : %s\n"," ",cur_str.arr,s_amt);
   
   if(d_doc_amt_num != 0)
   fprintf(fp,"\n%5s (%-6s"," ",cur_str.arr);
   

  if(d_doc_amt_num == 0) 
   {
   fprintf(fp,"\n\n\t\t(%s",out_str[0]);
   fprintf(fp,"\n");
   }
   else
 
        
	for (i=0;i<3;i++)
			{	fprintf(fp,"%s \n %5s",out_str[i]," ");
				}

// fprintf(fp,"\n");

 if(d_customer_code.arr[0])
   fprintf(fp,"Received From    : %-40s\n",d_cust_name.arr);

 else 
   if(d_patient_id.arr[0])
    {fprintf(fp,"Received From    : %-60s \n",d_patient_name.arr);
		 if (strlen(d_cur_ward_code.arr) >0)
			fprintf(fp,"%24s Ward : %s "," ",d_cur_ward_code.arr);
		 
		 if (strlen(nd_clinic.arr) >0)
			fprintf(fp,"%24s Clinic : %s "," ",nd_clinic.arr);

		 if (strlen(d_cur_bed_num.arr) >0)
			fprintf(fp,"%24s Bed : %s "," ",d_cur_bed_num.arr);
			fprintf(fp,"\n");
   }
   else
   fprintf(fp,"Received From    : %-40s\n",d_payer_name.arr);
    
   fprintf(fp,"%5s In Respect of    :", " ");
   if (strcmp(nd_recpt_nature_code.arr,"BI") == 0 )	 		
         fprintf(fp," Bill Doc.Type : %-7s/ %-8s \n", d_bill_doc_type_code.arr,d_bill_doc_number.arr);
   else   
    if (strcmp(nd_recpt_nature_code.arr,"MI") == 0 )	 		
       {
	 if (nd_hcare_appl_num.arr[0])
	      fprintf(fp," Healthcare Application Number : %-20.20s \n",nd_hcare_appl_num.arr);	
	 else 	   
	      fprintf(fp," %-50s\n\n",d_narration.arr);
	}
     else
      if (strcmp(nd_recpt_nature_code.arr,"HC") == 0 )
	{ 	
				nd_blng_grp.arr[0] = '\0';
				nd_blng_desc.arr[0] = '\0';
		  	        nd_hcard_status.arr[0] = '\0';	
		   	        nd_hcard_num.arr[0] = '\0';
			        nd_hcard_expiry_date.arr[0] = '\0';

				nd_blng_grp.len =0 ;
				nd_blng_desc.len =0 ;
		   	        nd_hcard_status.len =0 ;
		   	        nd_hcard_num.len =0 ;
			        nd_hcard_expiry_date.len =0 ;

		EXEC SQL  SELECT a.BLNG_GRP_ID,b.SHORT_DESC,
		          	 DECODE(HCARD_STATUS,'P','PERMANENT','TEMPORARY')  STATUS ,           	    			  HCARD_NUM,                      		
				  TO_CHAR(HCARD_EXPIRY_DATE,'DD/MM/YYYY')              
			INTO
				nd_blng_grp ,
				nd_blng_desc,
		   	        nd_hcard_status,	
		   	        nd_hcard_num,
			        nd_hcard_expiry_date
			FROM BL_PATIENT_FIN_DTLS a, BL_BLNG_GRP b
			WHERE a.BLNG_GRP_ID = a.BLNG_GRP_ID
			AND   PATIENT_ID = :d_patient_id;
				
				nd_blng_grp.arr[nd_blng_grp.len] = '\0';
				nd_blng_desc.arr[nd_blng_desc.len] = '\0';
		   	        nd_hcard_status.arr[nd_hcard_status.len] = '\0';	
		   	        nd_hcard_num.arr[nd_hcard_num.len] = '\0';
			        nd_hcard_expiry_date.arr[nd_hcard_expiry_date.len] = '\0';




		     fprintf(fp," Health Card No.: %-20s  							",nd_hcard_num.arr);
		     fprintf(fp,"\n");
		     fprintf(fp,"%5s                    Status : %-15s Expiry Date : %-12s\n"," ",nd_hcard_status.arr,nd_hcard_expiry_date.arr);	
		     fprintf(fp,"%5s                    Billing Group : %-15s\n"," ",nd_blng_desc.arr);
		}
      else
        if (strcmp(nd_recpt_nature_code.arr,"AD") == 0 )
	 {	     declare_dep_cursor();		      
		     fprintf(fp," Adjustable deposit For %20s\n\n",epi_visit);
          }	
	 else
	    if (strcmp(nd_recpt_nature_code.arr,"RD") == 0 )
	 {	     fprintf(fp," Refundable Deposit for %-50s\n\n",d_narration.arr);
          }				
	else
		if (strcmp(nd_recpt_nature_code.arr,"PR") == 0 )
	 {	     fprintf(fp," Prepayment for %-50s\n\n",d_narration.arr);
          }				

      else 	   
	fprintf(fp,"%-50s\n\n\n",d_narration.arr);


   fprintf(fp,"\n\n\n");

   fprintf(fp,"%30s    PAYMENT DETAILS\n\n\n"," ");

    d_slmt_type_desc.arr[0]  = '\0';
    d_slmt_type_desc.len  = 0;

    EXEC SQL SELECT  SHORT_DESC
		     INTO    :d_slmt_type_desc
		     FROM    BL_SLMT_TYPE
		     WHERE   SLMT_TYPE_CODE = :d_slmt_type_code
		     AND acc_entity_code in ( select acc_entity_code from sy_acc_entity
					      where acc_entity_id = :nd_facility_id);
    if(OERROR)
	{   
	err_mesg("FETCH failed on cursor SLMT_TYPE_CUR",0,"");
	}

   d_slmt_type_desc.arr[d_slmt_type_desc.len]  = '\0';

   fprintf(fp,"%5s Settlement Type  : %s\n\n"," ",d_slmt_type_desc.arr);

   //if (strlen(d_slmt_doc_ref_desc.arr) > 0 || strlen(d_slmt_doc_ref_date.arr) > 0) 
   if (d_slmt_doc_ref_desc.arr[0])
		fprintf(fp,"%5s Cheque/Card No   : %-20s  Date : %10s\n\n"," ",d_slmt_doc_ref_desc.arr, d_slmt_doc_ref_date.arr);
   else
        fprintf(fp,"%5s Cheque/Card No   : %-20s  Date : %10s\n\n"," ","____________________________", "_______________");
   
   if (d_slmt_doc_remarks.arr[0])
	   fprintf(fp,"%5s Bank Card/Co.Name: %-30s\n\n\n\n\n"," ",d_slmt_doc_remarks.arr);
   else
	   fprintf(fp,"%5s Bank Card/Co.Name: %-30s\n\n\n\n\n"," ","______________________________");
   
   fprintf(fp,"%5s Cashier   : %s       Counter : %s       Shift: %s \n\n"," ",nd_cashier.arr,d_cash_counter_code.arr,d_shift_id.arr);
   fprintf(fp,"%5s ________________________________________________________________________\n\n"," ");

   fprintf(fp,"%5s **This is a Computer Generated Receipt,Therefore No Signature Required** \n"," ");
   fprintf(fp,"%5s              ***Must Produce the Receipt for any Refund***\n"," ");
   fprintf(fp,"");


    /*
   * Following PrintDocument Call is added by Sundar on Dec 16,2002.
   * To test PrintDocument function (SY_PRINT.PC).
   */
  

}

declare_dep_cursor()
{   EXEC SQL DECLARE deposit_cursor CURSOR FOR 
	SELECT a.BLNG_SERV_CODE,a.DEPOSIT_AMT,
	       b.long_desc	
	 FROM BL_RCPT_RFND_SERVICE_DTL a,
	      BL_BLNG_SERV B
	WHERE a.DOC_TYPE_CODE  = :d_doc_type_code AND 
	      a.DOC_NUMBER = To_NUMBER(:d_doc_number) AND
	      a.blng_serv_code = b.blng_serv_code
	ORDER BY 1;

   if(OERROR)	   
	err_mesg("DECLARE failed on cursor deposit_cursor",0,"");
	

    nd_dep_status = 0;
    EXEC SQL OPEN deposit_cursor;

    if(OERROR)	   
	err_mesg("OPEN failed on cursor deposit_cursor",0,"");
	
    while (fetch_dep_cursor())
    {  
       if ( nd_dep_status == 1 )
	     {
		 fprintf(fp,"\n\n");
         fprintf(fp,"    SERVICE CODE  DESCRIPTION                    APPROX.SERVICE CHARGE\n ");
		 fprintf(fp,"   ------------  -----------                    ---------------------\n");

		 }
       
	     fprintf(fp,"    %-12.12s  %-30.30s ",nd_service_code.arr,nd_service_desc.arr);  
		 print_formated(nd_dep_amt) ;   
		 fprintf(fp,"\n");
    }
  exec sql close deposit_cursor;
}

fetch_dep_cursor()
{
    nd_service_code.arr[0] = '\0';
    nd_service_code.len	   = 0;
	nd_service_desc.arr[0]	   = '\0';
    nd_service_desc.len	   = 0;
    nd_dep_amt = 0;
    EXEC SQL FETCH deposit_cursor INTO	
		:nd_service_code,:nd_dep_amt,:nd_service_desc;
    if(OERROR)	   
	err_mesg("FETCH failed on cursor deposit_cursor",0,"");

    if (sqlca.sqlcode == 1403 )	
	return 0;
     nd_service_code.arr[nd_service_code.len] = '\0';
	 nd_service_desc.arr[nd_service_desc.len] = '\0';
        nd_dep_status = nd_dep_status + 1;
        return 1;   
}

print_formated(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
	strcat(s_amt,"-");
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%-14s",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%-14s ",str_amt);
        }

}


print_refund()
{
   char out_str[10][133];
   char s_amt[20];
   char epi_visit[14];
   int  length_str[10];
   int  i = 0,no_of_lines = 0;

    //Added by MRAMESH. Date : 31-dec-1997
   cur_str.arr[0]   = '\0';
   cur_str.len      =  0;   
   sub_cur_str.arr[0]   = '\0';
   sub_cur_str.len      = 0;



  exec sql select base_currency,
            base_currency_dec 
            Into :cur_str,
		  sub_cur_str
		 from sy_acc_entity
	       where acc_entity_id = :nd_facility_id;

   if (sqlca.sqlcode == 1403)
	{   
     err_mesg("No base currency in table SY_ACC_ENTITY",0,"");
	}
   if (sqlca.sqlcode < 0)
   {   
     err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");
}

   cur_str.arr[cur_str.len]  = '\0';
   sub_cur_str.arr[sub_cur_str.len] = '\0';

   if(d_episode_type.arr[0] EQ 'I' || d_episode_type.arr[0] EQ 'D') // EPNH 14/10/2004 
      sprintf(epi_visit,"%-8s",d_episode_id.arr);
   else
	{
        nd_clinic.arr[0] = '\0';
        nd_clinic.len = 0;

   exec sql select short_desc into :nd_clinic from  bl_op_clinic_vw where 
	    facility_id = :nd_facility_id
	    and clinic_code in
		(select clinic_code from bl_visit_fin_dtls
		where patient_id = :d_patient_id and visit_id=:d_visit_id
		and episode_id = :d_episode_id
		and operating_facility_id = :nd_facility_id);

    nd_clinic.arr[nd_clinic.len] = '\0';

   
   sprintf(epi_visit,"%-8s/%-4s",d_episode_id.arr,d_visit_id.arr); 
   }

   fprintf(fp,"\n\n\n\n\n\n");

   fprintf(fp,"%50s Refund No. : %-6s/%-8s/%-s\n"," ",d_doc_type_code.arr,d_doc_number.arr,d_doc_srno.arr);

   fprintf(fp,"%50s Date       : %s\n"," ",d_doc_date.arr);

   fprintf(fp,"%50s Episode    : %-14s\n\n\n\n"," ",epi_visit);
 
   fprintf(fp,"%30s %s\n\n"," ",    "DEPARTMENT OF FINANCE");

   fprintf(fp,"%30s %s\n\n\n\n"," ","REFUND ACKNOWLEDGMENT");

   fprintf(fp,"%5s Refunded to      :"," " );
 
   if(d_customer_code.arr[0])
       fprintf(fp," %-40s\n\n",d_cust_name.arr);
   else if(d_patient_id.arr[0])
    {  fprintf(fp," %-60s \n\n",d_patient_name.arr);
	   fprintf(fp,"%5s Patient No       : %s "," ",d_patient_id.arr);
	   fprintf(fp,"Name : %-60.32s \n\n",d_patient_name.arr);
       if (strlen(nd_clinic.arr) >0)
       fprintf(fp,"%5s Clinic           : %s "," ",nd_clinic.arr);

       if (strlen(d_cur_ward_code.arr) >0)
           fprintf(fp,"%5s Ward : %s "," ",d_cur_ward_code.arr);
 
       if (strlen(d_cur_bed_num.arr) >0)
           fprintf(fp," Bed : %s",d_cur_bed_num.arr);
       
       fprintf(fp,"\n\n");

   }
   else
       fprintf(fp," %-40s\n\n",d_payer_name.arr);
      
   length_str[0] = 45;
   for (i =1;i<10;i++)
      length_str[i] = 80;
   for (i =1;i<10;i++)
      strcpy(out_str[i],"");


   //no_of_lines = print_in_words(d_doc_amt_num<0?-d_doc_amt_num:d_doc_amt_num,MAX_LINES,sub_cur_str.arr,out_str);

   no_of_lines = print_in_words(d_doc_amt_num<0?-d_doc_amt_num:d_doc_amt_num,MAX_LINES,sub_cur_str.arr,out_str,nd_no_of_decimal);


  put_val(s_amt,d_doc_amt_num < 0? -d_doc_amt_num:d_doc_amt_num);
   format_amt(s_amt);

   
 if(strlen(out_str[1]))
       strcat(out_str[1],")");
   else 
       strcat(out_str[0],")");
   fprintf(fp,"\n");
     
   fprintf(fp,"%5s The Sum of %s : %s\n"," ",cur_str.arr,s_amt);
   
   if(d_doc_amt_num != 0)
   fprintf(fp,"\n%5s (%-6s"," ",cur_str.arr);
   

  if(d_doc_amt_num == 0) 
   {
   fprintf(fp,"\n\n\t\t(%s",out_str[0]);
   fprintf(fp,"\n");
   }
   else
 
	for (i=0;i<3;i++)
			{	fprintf(fp,"%s \n %5s",out_str[i]," ");
				}
				
   // fprintf(fp,"\n");
 
 
   fprintf(fp,"In Respect of : ");
   if (strcmp(nd_recpt_nature_code.arr,"BI") == 0 )	 		
      fprintf(fp,"%5s Bill Doc.Type: %-7s/ %-8s \n"," ",d_bill_doc_type_code.arr,d_bill_doc_number.arr);
    if (strcmp(nd_recpt_nature_code.arr,"MI") == 0 )	 		
	{ if (nd_hcare_appl_num.arr[0])
	      fprintf(fp,"%5s Healthcare Application Number: %-10s \n"," ",nd_hcare_appl_num.arr);
	  else
	      fprintf(fp," %-50s\n",d_narration.arr);	
	}
      if (strcmp(nd_recpt_nature_code.arr,"HC") == 0 )
	{ 
				nd_blng_grp.arr[0] = '\0';
		   	        nd_hcard_status.arr[0] = '\0';	
		   	        nd_hcard_num.arr[0] = '\0';
			        nd_hcard_expiry_date.arr[0] = '\0';
				nd_blng_grp.len =0 ;
		   	        nd_hcard_status.len =0 ;
		   	        nd_hcard_num.len =0 ;
			        nd_hcard_expiry_date.len =0 ;

		EXEC SQL  SELECT BLNG_GRP_ID,
		          	 DECODE(HCARD_STATUS,'P','Permanent','Temporary')  STATUS ,           	    			  HCARD_NUM,                      		
				  TO_CHAR(HCARD_EXPIRY_DATE,'DD/MM/YYYY')              
			INTO
				nd_blng_grp ,
		   	        nd_hcard_status,	
		   	        nd_hcard_num,
			        nd_hcard_expiry_date
			FROM BL_PATIENT_FIN_DTLS
			WHERE PATIENT_ID = :d_patient_id;
				
				nd_blng_grp.arr[nd_blng_grp.len] = '\0';
		   	        nd_hcard_status.arr[nd_hcard_status.len] = '\0';	
		   	        nd_hcard_num.arr[nd_hcard_num.len] = '\0';
			        nd_hcard_expiry_date.arr[nd_hcard_expiry_date.len] = '\0';

			 fprintf(fp,"%5s Healthcard Num: %-20s Expiry Date: %-12s "," ",nd_hcard_num.arr,nd_hcard_expiry_date.arr);
		 fprintf(fp,"\n");
			 fprintf(fp,"%5s Billing Group : %-2s   Status : %-15s \n"," ",nd_blng_grp.arr,nd_hcard_status.arr);	

		}

      if (strcmp(nd_recpt_nature_code.arr,"AD") == 0 )
	{
		declare_dep_cursor();		
	}

  fprintf(fp,"\n");

fprintf(fp,"\n\n %30s    PAYMENT DETAILS\n\n\n\n"," ");

    d_slmt_type_desc.arr[0]  = '\0';
    d_slmt_type_desc.len  = 0;

    EXEC SQL SELECT  SHORT_DESC
		     INTO    :d_slmt_type_desc
		     FROM    BL_SLMT_TYPE
		     WHERE   SLMT_TYPE_CODE = :d_slmt_type_code
		     AND acc_entity_code in ( select acc_entity_code from sy_acc_entity
					      where acc_entity_id = :nd_facility_id);
    if(OERROR)
	{   
	err_mesg("FETCH failed on cursor SLMT_TYPE_CUR",0,"");
	}

   d_slmt_type_desc.arr[d_slmt_type_desc.len]  = '\0';

   fprintf(fp,"%5s Settlement Type  : %s\n\n"," ",d_slmt_type_desc.arr);

   if (d_slmt_doc_ref_desc.arr[0])
		fprintf(fp,"%5s Cheque/Card No   : %-20s  Date : %10s\n\n"," ",d_slmt_doc_ref_desc.arr, d_slmt_doc_ref_date.arr);
   else
        fprintf(fp,"%5s Cheque/Card No   : %-20s  Date : %10s\n\n"," ","____________________________", "_______________");
   
   if (d_slmt_doc_remarks.arr[0])
	   fprintf(fp,"%5s Bank Card/Co.Name: %-30s\n\n\n\n\n"," ",d_slmt_doc_remarks.arr);
   else
	   fprintf(fp,"%5s Bank Card/Co.Name: %-30s\n\n\n\n\n"," ","______________________________");
   
   fprintf(fp,"%5s Cashier   : %s       Counter : %s       Shift: %s \n\n"," ",nd_cashier.arr,d_cash_counter_code.arr,d_shift_id.arr);

   fprintf(fp,"%5s ________________________________________________________________________\n\n"," ");

   fprintf(fp,"\n%5s _____________________\n"," ");
   fprintf(fp,"%5s Signature     \n\n\n\n"," ");
   fprintf(fp,"%5s Full Name         : __________________________________________\n\n\n", " ");
   fprintf(fp,"%5s Id or Passport No.: ___________________\n\f", " ");

//disp_message(ERR_MESG," check 6");
}

update_rec()
{
    EXEC SQL UPDATE BL_RECEIPT_REFUND_HDR
             SET PRINT_FLAG = 'Y'
			 where DOC_TYPE_CODE 	= :d_doc_type_code
			AND DOC_NUMBER  = :d_doc_number;

             //WHERE ROWID = :d_rowid;

     if (OERROR)
	{   
         err_mesg("UPDATE failed on table BL_RECEIPT_REFUND_HDR",0,"");
}
}
