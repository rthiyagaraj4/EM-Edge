/************************************************************************/
/* OCS MEDICOM VER 4.1                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLR00016.PC                                  */
/* AUTHOR                : Robert Joseph                               */  
/* DATE WRITTEN          : 06/09/2004                                   */      
/************************************************************************/

#include <stdio.h>         
#include <string.h> 
#include <bl.h>       
#include <math.h> 


#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define NODATAFOUND sqlca.sqlcode == 1403
#define REP_WIDTH 225
#define ESC 0x1B

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR     hosp_name                       [120],
			l_acc_name						[120],
			date							[20],
            date_time                       [20],
			nd_temp_date					[20],
			nd_loc_date						[20],
			date_convert					[20],
            user_id                         [91],
	        nd_pwd 							[91],
            nd_session_id                   [16],
            nd_pgm_date                     [25],
            d_curr_pgm_name                 [15],
			nd_facility				        [3],
			nd_mm_yyyy					   [11],
			nd_option						[2],
			nrpdoc_type_code					[7],
			nrpbounced_date					[12],
			nrpcheque_no						[21],
			nrpcheque_date					[15],
			nrpreceipt_no					[20],
			nrpslmt_doc_remarks				[102],
			nrppayer_name					[41],
			nrpln1_mail_add					[30],
			nrpln2_mail_add					[30],
			nrpln3_mail_add					[30],
			nrpln4_res_add					[30],
			nrppostal_code					[21],
			nrpreason_code					[5],
			nrpaction_reason_desc			[256],
			nrpext_acct_code				[11],
			rpdoc_type_code					[7],
			rpbounced_date					[12],
			rpcheque_no						[21],
			rpcheque_date					[15],
			rpreceipt_no					[20],
			rpslmt_doc_remarks				[102],
			rppayer_name					[41],
			rpln1_mail_add					[30],
			rpln2_mail_add					[30],
			rpln3_mail_add					[30],
			rpln4_res_add					[30],
			rppostal_code					[21],
			rpreason_code					[5],
			rpaction_reason_desc			[256],
			rpext_acct_code					[11],
			rrepl_chq_doc_type_code			[7]	,					
			rrepl_chq_doc_date				[12],
			chrepl_Cheque_no				[21],				
			chrepl_cheque_date				[12],
			chrepl_Receipt_no				[15],
			chrepl_bank_name				[31],
			chreplacement_Remarks			[51],
			label                           [100],
			replabel                        [30],
			chpayer_name					[41],
			chln1_mail_add					[30],
			chln2_mail_add					[30],
			chln3_mail_add					[30],
			chln4_res_add					[30],
			chpostal_code					[30],
			l_translated_value				[201],
			l_pk_value						[100],
			p_language_id					[3],
			remarklb						[30];

			

	double nrpdoc_number,nrpdoc_amt,nrptot_amt,cnt =0,chqtot_amt =0;
	double rpdoc_number,rpdoc_amt,rrepl_chq_doc_num,chdoc_amt,rptot_amt;
		 					
			int i;
			
char filename[150];
char x_msg[200];
char loc_legend[999][201];
char l_mesg[200];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int  lctr = 0,pctr = 0,slno = 1,nslno=1,pagebreak=1;
int    first = 1,r_fst = 1;

FILE *fp;

void proc_main(argc,argv)

char *argv[];
int argc ;
{
    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }
  

         strcpy(g_pgm_id,"BLR00016");
         strcpy(nd_pwd.arr,argv[1]);

		nd_pwd.len = strlen(nd_pwd.arr);

		
		 EXEC sql connect :nd_pwd;

		   if (sqlca.sqlcode < 0 )
	         {
        disp_message(ORA_MESG,"Error in connecting to Oracle");
		
        proc_exit();
        
		}
		 set_meduser_role();
		 
		 strcpy(p_language_id.arr,l_language_id.arr);
		 p_language_id.len = l_language_id.len;

        strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    	d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    	strcpy(nd_session_id.arr,argv[2]);
    	nd_session_id.len = strlen(nd_session_id.arr);
    	strcpy(g_session_id,nd_session_id.arr);

    	strcpy(nd_pgm_date.arr,argv[3]);
    	nd_pgm_date.len = strlen(nd_pgm_date.arr);
    	strcpy(g_pgm_date,nd_pgm_date.arr);

    	strcpy(nd_facility.arr,argv[4]);
    	nd_facility.len = strlen(nd_facility.arr);
    	strcpy(g_facility_id,nd_facility.arr);

	
        nd_mm_yyyy.arr[0]			= '\0';
		nd_option.arr[0]				= '\0';
		nd_mm_yyyy.len			    = 0;
        nd_option.len			  	    = 0;  

		 EXEC SQL SELECT	PARAM1,PARAM2
				INTO	:nd_mm_yyyy,
						:nd_option
				FROM SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

		nd_mm_yyyy.arr[nd_mm_yyyy.len]				= '\0';
        nd_option.arr[nd_option.len]						= '\0';

    
			EXEC SQL DELETE SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;
			  

   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
   	 
		
        EXEC SQL SELECT COUNT(1) INTO :cnt  FROM 
		      bl_submodule where
			  SUBMODULE_ID='EX' and INSTALL_YN='Y';

         if (OERROR)
        err_mesg("SELECT failed on table BL_SUBMODULE",0,"");

		 if (NODATAFOUND)
		 cnt =0;
    	   
		declare_cursor();

        fetch_hosp_name();

        fetch_legend_value();

        open_file();
  
        //Modified for converting to DMP Printer//
	    //fprintf(fp,"%c&l1O",ESC); 
        //fprintf(fp,"%c(s20H",ESC);
		
	    fprintf(fp,"%c",0x12);   // Set Dot matrix Noraml Mode

		fprintf(fp,"%c",0x0F); // set Dot-matrix Printer  printer to compressed mode 

		print_page_header();

        print_hdr();

        end_of_rep();

		fprintf(fp,"%c",0x12);   // Set Dot matrix Noraml Mode

   EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");
}

	

declare_cursor()
 {

   EXEC SQL DECLARE CHQ_NOT_REPLACE_CUR CURSOR FOR
   Select a.doc_type_code, a.DOC_NUMBER,TO_CHAR(a.BOUNCED_DATE,'DD/MM/YYYY'), 
      a.slmt_doc_ref_desc Cheque_no,
      TO_CHAR(a.slmt_doc_ref_date,'DD/MM/YYYY') cheque_date,
      a.doc_type_code||'/'||A.doc_numBER||'/'||A.DOC_SRNO Receipt_no,
      a. slmt_doc_remarks, 
      a.payer_name , 
      c.ln1_mail_add, c.ln2_mail_add   , c.ln3_mail_add , c.ln4_res_add       ,     
      c.res_postal_code   postal_code,
       a.doc_amt,
       b.reason_code ,
       d.ACTION_REASON_DESC, 
       a.ext_acct_code
      from Bl_receipt_refund_dtl_vw a, BL_CANCELLED_BOUNCED_TRX b, MP_PAT_OTHER_DTLS c, bl_action_reason_lang_vw D
      where a.doc_type_code = b.doc_type_code
		and a.DOC_NUMBER = b.DOC_NUMBER
		and a.patient_id = c.patient_id(+)
		and b.reason_code = d.ACTION_REASON_CODE
		and a.bounced_yn = 'Y' 
		and to_char(a.bounced_date,'MM/YYYY')  =:nd_mm_yyyy
		and (
 		(:nd_option='1' and 
		a.REPL_CHQ_YN ='Y' and 
         	to_char(REPL_CHQ_DOC_DATE,'MM/YYYY')<>:nd_mm_yyyy or NVL(a.REPL_CHQ_YN,'N') ='N') 
		or
		 ( :nd_option='2' and nvl(a.REPL_CHQ_YN,'N') ='N'))
		 and language_id=:p_language_id;
         

 EXEC SQL  DECLARE CHQ_REPLACE_CUR CURSOR FOR
    Select a.doc_type_code, a.doc_number,TO_CHAR(a.BOUNCED_DATE,'DD/MM/YYYY'), 
      a.slmt_doc_ref_desc Cheque_no,
      TO_CHAR(a.slmt_doc_ref_date,'DD/MM/YYYY') cheque_date,
      a.doc_type_code||'/'||a.doc_number||'/'||a.DOC_SRNO Receipt_no,
      a. slmt_doc_remarks ,
      a.payer_name , 
      c.ln1_mail_add, c.ln2_mail_add   , c.ln3_mail_add , c.ln4_res_add       ,     
      c.res_postal_code   postal_code,
       a.doc_amt,
       b.reason_code ,
       d.action_reason_desc, 
       a.ext_acct_code,
       a.repl_chq_doc_type_code,
       a.repl_chq_doc_num,
       a.repl_chq_doc_date                
      from Bl_receipt_refund_dtl_vw a, BL_CANCELLED_BOUNCED_TRX b, mp_pat_other_dtls c, bl_action_reason_lang_vw D
      where a.doc_type_code = b.doc_type_code
	and a.doc_number = b.doc_number
	and a.patient_id = c.patient_id(+)
	and b.reason_code = d.action_reason_code
	and a.bounced_yn = 'Y' 
	and a.REPL_CHQ_YN ='Y'
	and to_char(a.bounced_date,'MM/YYYY') = :nd_mm_yyyy
	and (
	(:nd_option='1' and 
	a.REPL_CHQ_YN ='Y' and 
			to_char(REPL_CHQ_DOC_DATE,'MM/YYYY')=:nd_mm_yyyy) 
	or
	(:nd_option='2' and  a.REPL_CHQ_YN ='Y')
	)
	and language_id=:p_language_id;




  }
  
  open_chq_not_repl()
{

	EXEC SQL OPEN CHQ_NOT_REPLACE_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor CHQ_NOT_REPLACE_CUR",0,"");
}

close_chq_not_repl()
{

	EXEC SQL CLOSE CHQ_NOT_REPLACE_CUR;
    
}

open_chq_repl() 
{
	EXEC SQL OPEN CHQ_REPLACE_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor CHQ_REPLACE_CUR",0,"");
}

close_chq_repl() 
{

	EXEC SQL CLOSE CHQ_REPLACE_CUR;
    
}  

fetch_chq_not_replace_cur()
 {
    nrpdoc_type_code.arr[0]				= '\0';
	nrpcheque_no.arr[0]					= '\0';
	nrpcheque_date.arr[0]				= '\0';
	nrpreceipt_no.arr[0]				= '\0';
	nrpslmt_doc_remarks.arr[0]			= '\0';
	nrppayer_name.arr[0]				= '\0';  
	nrpln1_mail_add.arr[0]				= '\0';
	nrpln2_mail_add.arr[0]				= '\0'; 
	nrpln3_mail_add.arr[0]				= '\0';
	nrpln4_res_add.arr[0]				= '\0';        
	nrppostal_code.arr[0]				= '\0';
	nrpreason_code.arr[0]				= '\0'; 
	nrpaction_reason_desc.arr[0]		= '\0';
	nrpext_acct_code.arr[0]				= '\0';

	nrpdoc_type_code.len			= 0;
	nrpbounced_date.len				= 0;
	nrpcheque_no.len				= 0;
	nrpcheque_date.len				= 0;
	nrpreceipt_no.len				= 0;
	nrpslmt_doc_remarks.len			= 0;
	nrppayer_name.len				= 0;
	nrpln1_mail_add.len				= 0;
	nrpln2_mail_add.len				= 0;
	nrpln3_mail_add.len				= 0;
	nrpln4_res_add.len				= 0;
	nrppostal_code.len				= 0;
	nrpreason_code.len				= 0;
	nrpaction_reason_desc.len		= 0;
	nrpext_acct_code.len			= 0;


EXEC SQL FETCH CHQ_NOT_REPLACE_CUR INTO
	:nrpdoc_type_code,
	:nrpdoc_number,
	:nrpbounced_date,
	:nrpcheque_no,
	:nrpcheque_date,
	:nrpreceipt_no,
	:nrpslmt_doc_remarks,
	:nrppayer_name,
	:nrpln1_mail_add,
	:nrpln2_mail_add,
	:nrpln3_mail_add,
	:nrpln4_res_add,
	:nrppostal_code,
	:nrpdoc_amt,
	:nrpreason_code,
	:nrpaction_reason_desc,
	:nrpext_acct_code;
   
if (OERROR)
          err_mesg("FETCH failed on cursor CHQ_NOT_REPLACE_CUR",0,"");


		nrpdoc_type_code.arr[nrpdoc_type_code.len]		='\0';
		nrpbounced_date.arr[nrpbounced_date.len]			='\0';
		nrpcheque_no.arr[nrpcheque_no.len]				='\0';
		nrpcheque_date.arr[nrpcheque_date.len]			='\0';
		nrpreceipt_no.arr[nrpreceipt_no.len]				='\0';			
		nrpslmt_doc_remarks.arr[nrpslmt_doc_remarks.len]	='\0';			
		nrppayer_name.arr[nrppayer_name.len]				='\0';
		nrpln1_mail_add.arr[nrpln1_mail_add.len]			='\0';
		nrpln2_mail_add.arr[nrpln2_mail_add.len]			='\0';
		nrpln3_mail_add.arr[nrpln3_mail_add.len]			='\0';
		nrpln4_res_add.arr[nrpln4_res_add.len]			='\0';
		nrppostal_code.arr[nrppostal_code.len]			='\0';
		nrpreason_code.arr[nrpreason_code.len]			='\0';
		nrpaction_reason_desc.arr[nrpaction_reason_desc.len]	= '\0'	;
		nrpext_acct_code.arr[nrpext_acct_code.len]  		= '\0';
   

    return(LAST_ROW?0:1);
	}

fetch_chq_replace_cur()
 {

    rpdoc_type_code.arr[0]				= '\0';
	rpbounced_date.arr[0]				= '\0';
	rpcheque_no.arr[0]					= '\0';
	rpcheque_date.arr[0]				= '\0';
	rpreceipt_no.arr[0]					= '\0';
	rpslmt_doc_remarks.arr[0]			= '\0';
	rppayer_name.arr[0]					= '\0';  
	rpln1_mail_add.arr[0]				= '\0';
	rpln2_mail_add.arr[0]				= '\0'; 
	rpln3_mail_add.arr[0]				= '\0';
	rpln4_res_add.arr[0]				= '\0';        
	rppostal_code.arr[0]				= '\0';
	rpreason_code.arr[0]				= '\0'; 
	rpaction_reason_desc.arr[0]			= '\0';
	rpext_acct_code.arr[0]				= '\0';
	rrepl_chq_doc_type_code.arr[0]		= '\0';			
	rrepl_chq_doc_date.arr[0]			= '\0';
	

	rpdoc_type_code.len				= 0;
	rpbounced_date.len				= 0;
	rpcheque_no.len					= 0;
	rpcheque_date.len				= 0;
	rpreceipt_no.len				= 0;
	rpslmt_doc_remarks.len			= 0;
	rppayer_name.len				= 0;
	rpln1_mail_add.len				= 0;
	rpln2_mail_add.len				= 0;
	rpln3_mail_add.len				= 0;
	rpln4_res_add.len				= 0;
	rppostal_code.len				= 0;
	rpreason_code.len				= 0;
	rpaction_reason_desc.len		= 0;
	rpext_acct_code.len				= 0;
	rrepl_chq_doc_type_code.len			= 0;			
	rrepl_chq_doc_date.len 				= 0;


EXEC SQL FETCH CHQ_REPLACE_CUR INTO
	:rpdoc_type_code,
	:rpdoc_number,
	:rpbounced_date,
	:rpcheque_no,
	:rpcheque_date,
	:rpreceipt_no,
	:rpslmt_doc_remarks,
	:rppayer_name,
	:rpln1_mail_add,
	:rpln2_mail_add,
	:rpln3_mail_add,
	:rpln4_res_add,
	:rppostal_code,
	:rpdoc_amt,
	:rpreason_code,
	:rpaction_reason_desc,
	:rpext_acct_code,
	:rrepl_chq_doc_type_code,
	:rrepl_chq_doc_num,				
	:rrepl_chq_doc_date;
	
	if (OERROR)
          err_mesg("FETCH failed on cursor CHQ_REPLACE_CUR",0,"");


	rpdoc_type_code.arr[rpdoc_type_code.len]		='\0';
	rpbounced_date.arr[rpbounced_date.len]			='\0';
	rpcheque_no.arr[rpcheque_no.len]				='\0';
	rpcheque_date.arr[rpcheque_date.len]			='\0';
	rpreceipt_no.arr[rpreceipt_no.len]				='\0';			
	rpslmt_doc_remarks.arr[rpslmt_doc_remarks.len]		='\0';
	rppayer_name.arr[rppayer_name.len]				='\0';
	rpln1_mail_add.arr[rpln1_mail_add.len]			='\0';
	rpln2_mail_add.arr[rpln2_mail_add.len]			='\0';
	rpln3_mail_add.arr[rpln3_mail_add.len]			='\0';
	rpln4_res_add.arr[rpln4_res_add.len]			='\0';
	rppostal_code.arr[rppostal_code.len]			='\0';
	rpreason_code.arr[rpreason_code.len]			='\0';
	rpaction_reason_desc.arr[rpaction_reason_desc.len]	='\0';	
	rpext_acct_code.arr[rpext_acct_code.len]  		='\0';
	rrepl_chq_doc_type_code.arr[rrepl_chq_doc_type_code.len] ='\0';							
	rrepl_chq_doc_date.arr[rrepl_chq_doc_date.len]		='\0';		 
	
  return(LAST_ROW?0:1);
	}

fetch_repl_cheque_desc()
{
    chrepl_Cheque_no.arr[0]		 ='\0';					
	chrepl_cheque_date.arr[0]	 ='\0';		
	chrepl_Receipt_no.arr[0]	 ='\0';			
	chrepl_bank_name.arr[0]		 ='\0';			
	chreplacement_Remarks.arr[0] ='\0';
	chpayer_name.arr[0]			='\0';			
	chln1_mail_add.arr[0]		='\0';
	chln2_mail_add.arr[0]		='\0';
	chln3_mail_add.arr[0]		='\0';
	chln4_res_add.arr[0]		='\0';
	chpostal_code.arr[0]		='\0';

	chrepl_Cheque_no.len		 = 0;			
	chrepl_cheque_date.len		 = 0;	
	chrepl_Receipt_no.len		 = 0;		
	chrepl_bank_name.len		 = 0;	
	chreplacement_Remarks.len	 = 0;
	chpayer_name.len			=0;	
	chln1_mail_add.len			=0;
	chln2_mail_add.len			=0;
	chln3_mail_add.len			=0;
	chln4_res_add.len			=0;
	chpostal_code.len			=0;

    EXEC SQL SELECT a.slmt_doc_ref_desc,
           TO_CHAR(a.slmt_doc_ref_date,'DD/MM/YYYY') ,
           a.doc_type_code||'/'||a.doc_number,
           a.slmt_doc_remarks, 
           a.doc_amt,
           a.narration,
		   a.payer_name, 
           c.ln1_mail_add, 
		   c.ln2_mail_add,
		   c.ln3_mail_add,
		   c.ln4_res_add,            
           c.res_postal_code   postal_code into
		    :chrepl_Cheque_no,						
			:chrepl_cheque_date,			
			:chrepl_Receipt_no,				
			:chrepl_bank_name,
			:chdoc_amt,				
			:chreplacement_Remarks,
			:chpayer_name,
			:chln1_mail_add,
			:chln2_mail_add,
			:chln3_mail_add,
			:chln4_res_add,
			:chpostal_code	
     FROM Bl_receipt_refund_dtl_vw a,MP_PAT_OTHER_DTLS c 
     WHERE  a.patient_id    = c.patient_id(+) and  
            a.doc_type_code = :rrepl_chq_doc_type_code
       AND  a.doc_number    = :rrepl_chq_doc_num;

if (OERROR) 
		err_mesg("SELECT failed on table BL_RECEIPT_REFUND_DTL",0,"");

			chrepl_Cheque_no.arr[chrepl_Cheque_no.len]			 ='\0';						
			chrepl_cheque_date.arr[chrepl_cheque_date.len]		 ='\0';			
			chrepl_Receipt_no.arr[chrepl_Receipt_no.len]		 ='\0';				
			chrepl_bank_name.arr[chrepl_bank_name.len]			 ='\0';				
			chreplacement_Remarks.arr[chreplacement_Remarks.len] ='\0';
            chpayer_name.arr[chpayer_name.len]			='\0';			
			chln1_mail_add.arr[chln1_mail_add.len]		='\0';
			chln2_mail_add.arr[chln2_mail_add.len]		='\0';
			chln3_mail_add.arr[chln3_mail_add.len]		='\0';
			chln4_res_add.arr[chln4_res_add.len]		='\0';
			chpostal_code.arr[chpostal_code.len]		='\0'; 

}

fetch_hosp_name()
{
    l_acc_name.arr[0]= '\0';
	hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
	date.arr[0]		 = '\0';
    user_id.arr[0]   = '\0';
    l_acc_name.len   = 0;
	hosp_name.len    = 0;
    date_time.len    = 0;
	date.len		 = 0;
    user_id.len      = 0;

    EXEC SQL SELECT ACCOUNTING_NAME, 
					ACC_ENTITY_NAME,
					TO_CHAR(SYSDATE,'DD/MM/RRRR'),
					TO_CHAR(SYSDATE,'HH24:MI:SS'),
                    USER
               INTO :l_acc_name,
					:hosp_name, 
					:date,
					:date_time, 
					:user_id
               FROM SY_ACC_ENTITY_LANG_VW
	           WHERE ACC_ENTITY_ID = :nd_facility
			   AND  LANGUAGE_ID    = :p_language_id;

    if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	l_acc_name.arr[l_acc_name.len]		   = '\0';
	hosp_name.arr[hosp_name.len]           = '\0';
	date_time.arr[date_time.len]           = '\0';
	date.arr[date.len]					   = '\0';
	user_id.arr[user_id.len]               = '\0';
	}


print_hdr()

{
  open_chq_not_repl();
  nrptot_amt = 0;


					  while(fetch_chq_not_replace_cur() ==1)

					  { 
						 if(first)
						 {
						  strcpy(label.arr,loc_legend[24] );

						   print_head();

     						 first = 0;
						 }

				check_page_end(5,0);

				get_initialize();
				strcpy(nd_temp_date.arr,nrpbounced_date.arr);
				get_local_date_convn1();
				strcpy(date_convert.arr,nd_loc_date.arr);

				fprintf(fp," %-6d %-15s %-23s %-31.31s %-28.28s ",nslno,date_convert.arr,nrpcheque_no.arr,nrpslmt_doc_remarks.arr,nrppayer_name.arr);
				print_formated(nrpdoc_amt);
				fprintf(fp,"%-18s %-71.71s  "," ",nrpaction_reason_desc.arr);
				if(cnt == 1)
				fprintf(fp,"%11.11s \n",nrpext_acct_code.arr);
				else
				fprintf(fp," \n");
				get_initialize();
				strcpy(nd_temp_date.arr,nrpcheque_date.arr);
				get_local_date_convn1();
				strcpy(date_convert.arr,nd_loc_date.arr);

				fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-90s %11s  \n"," "," ",date_convert.arr," ",nrpln1_mail_add.arr," "," "," ");
				fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-87s %11s  \n"," "," ",nrpreceipt_no.arr," ",nrpln2_mail_add.arr," "," "," ");
				fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-87s %11s  \n"," "," "," "," ",nrpln3_mail_add.arr," "," "," ");
				fprintf(fp,"%6s  %-15s %-23s %-31s %-15s%-28s %-12s %-87s %11s  \n"," "," "," "," ",loc_legend[23],nrppostal_code.arr," "," "," ");

				/*fprintf(fp,"%3.3s  %-15.15s %-23.23s %-31.31s %-43.43s %-12.12s %-86.86s %11.11s  \n"," "," ",date_convert.arr," ",nrpln1_mail_add.arr," "," "," ");
				fprintf(fp,"%3.3s  %-15.15s %-23.23s %-31.31s %-43.43s %-12.12s %-86.86s %11.11s  \n"," "," ",nrpreceipt_no.arr," ",nrpln2_mail_add.arr," "," "," ");
				fprintf(fp,"%3.3s  %-15.15s %-23.23s %-31.31s %-43.43s %-12.12s %-86.86s %11.11s  \n"," "," "," "," ",nrpln3_mail_add.arr," "," "," ");
				fprintf(fp,"%3.3s  %-15.15s %-23.23s %-31.31s %-15.15s%-28.28s %-12.12s %-86.86s %11.11s  \n"," "," "," "," ",loc_legend[23],nrppostal_code.arr," "," "," ");*/

    				
				lctr = lctr + 5;
				nslno++;
				nrptot_amt=nrptot_amt+nrpdoc_amt;
				} 
				close_chq_not_repl();

						  strcpy(label.arr,loc_legend[24] );
					
				if(nrptot_amt != 0)
				 {
					  if (nslno >3)
					 {
						 fprintf(fp,"\f");
						 print_head();
					 }
					 else
					 { 
						
						 print_total_nrp();
						 fprintf(fp,"\f");
                    }
                  }

   lctr=0;
   label.arr[0] ='\0';
   replabel.arr[0] ='\0';
   remarklb.arr[0]	='\0';
   strcpy(label.arr,loc_legend[25] );
   first =1;
   open_chq_repl();
   rptot_amt =0;
   chqtot_amt =0;

	while(fetch_chq_replace_cur() == 1 )
	  {
   
	   
	 fetch_repl_cheque_desc();
	 if(first)
	 {
	  strcpy(replabel.arr,loc_legend[17]);
	  strcpy(remarklb.arr,loc_legend[20] );
	  print_head();
	  first = 0;
	 }
	    
   


	check_page_end(5,0);

    get_initialize();
	strcpy(nd_temp_date.arr,rpbounced_date.arr);
	get_local_date_convn1();
    strcpy(date_convert.arr,nd_loc_date.arr);

    fprintf(fp," %-6d %-15s %-23s %-31.31s %-28.28s ",slno,date_convert.arr,rpcheque_no.arr,rpslmt_doc_remarks.arr,rppayer_name.arr);
	print_formated(rpdoc_amt);
    fprintf(fp,"%19s%-75.75s "," ",rpaction_reason_desc.arr);
	if(cnt == 1)
	fprintf(fp,"%11s \n",rpext_acct_code.arr);
	else
    fprintf(fp," \n");
    
	get_initialize();
	strcpy(nd_temp_date.arr,rpcheque_date.arr);
	get_local_date_convn1();
    strcpy(date_convert.arr,nd_loc_date.arr);
	
    fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-90s %11s  \n"," "," ",date_convert.arr," ",rpln1_mail_add.arr," "," "," ");
    fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-87s %11s  \n"," "," ",rpreceipt_no.arr," ",rpln2_mail_add.arr," "," "," ");
    fprintf(fp,"%6s  %-15s %-23s %-31s %-43s %-12s %-87s %11s  \n"," "," "," "," ",rpln3_mail_add.arr," "," "," ");
    fprintf(fp,"%6s  %-15s %-23s %-31s %-15s%-28s %-12s %-87s %11s  \n"," "," "," "," ",loc_legend[23],rppostal_code.arr," "," "," ");
     
	lctr = lctr + 5;
	check_page_end(5,0);
    fprintf(fp,"%-24s%-23s %-31s %-45s   ",loc_legend[22],chrepl_Cheque_no.arr,chrepl_bank_name.arr,chpayer_name.arr);
	print_formated(chdoc_amt);
	fprintf(fp,"%-70s\n",chreplacement_Remarks.arr );
    
	if(chrepl_cheque_date.arr[0]!='\0')
	{
	get_initialize();
	strcpy(nd_temp_date.arr,chrepl_cheque_date.arr);
	get_local_date_convn1();
    strcpy(date_convert.arr,nd_loc_date.arr); 
	}
	fprintf(fp,"%-23s %-23s %-31s %-31s\n"," ",date_convert.arr," ",chln1_mail_add.arr);
	fprintf(fp,"%-23s %-23s %-31s %-31s\n"," ",chrepl_Receipt_no.arr," ",chln2_mail_add.arr);
    fprintf(fp,"%-23s %-23s %-31s %-31s\n"," "," "," ",chln3_mail_add.arr);
	fprintf(fp,"%-23s %-23s %-31s %-15s%-16s\n"," "," "," ",loc_legend[23],chpostal_code.arr);
	fprintf(fp,"\n");
	lctr = lctr + 6;
	slno++;
    rptot_amt = rptot_amt + rpdoc_amt;
	chqtot_amt = chqtot_amt+chdoc_amt;
	}

  

	 close_chq_repl();
	 			    if(nrptot_amt==0 && chqtot_amt ==0) 
				  { 
	  					 	  strcpy(label.arr,loc_legend[24] );
						  print_head();	 
						  print_total_nrp(); 

				  } 
     
	 	if (chqtot_amt !=0)  
		 { 
  	       print_total_chq();
		 }
 
  
	 label.arr[0] ='\0';
	 replabel.arr[0] ='\0';
	 remarklb.arr[0] ='\0';
	 

//	print_total_chq(); saikiran
 }





  /*if(first)
    print_head();

    if (slno > 1) 
   print_note();*/
       
   

end_of_rep()
{
	check_page_end(2,0);
	fprintf(fp,"\n\n %90s ",loc_legend[33]);
	fflush(fp);
	fclose(fp);
}

open_file()
{
    strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00016.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file BLR00016.lis");
       proc_exit();
    }
}

print_page_header()
{ 


print_page_title();
fill_dash(225);
fprintf(fp,"\n");
fprintf(fp,"VER : 4.1 \n\n");
fprintf(fp,"           %s \n",loc_legend[32]);
fprintf(fp,"           ------------------- \n\n\n");
fprintf(fp,"\n\n");

    get_initialize();
	strcpy(nd_temp_date.arr,nd_mm_yyyy.arr);
	get_local_date_convn2();
	strcpy(date_convert.arr,nd_loc_date.arr);
   fprintf(fp,"                       %-50s : %-12s \n",loc_legend[29],date_convert.arr);
  if(strcmp(nd_option.arr,"1" )== 0)  
  {
    get_initialize();
	strcpy(nd_temp_date.arr,nd_mm_yyyy.arr);
	get_local_date_convn2();
	strcpy(date_convert.arr,nd_loc_date.arr);                              
   fprintf(fp,"                       %-50s : %-18s ",loc_legend[27],date_convert.arr);
   }
   else
   fprintf(fp,"                       %-50s : %-15s \n",loc_legend[28]," ");
   fprintf(fp,"\f");
    

}


print_head()
{
   
	print_page_title();
      fill_dash(225);
	  fprintf(fp," \n");
	 /*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
	     if (strcmp(nd_option.arr,"1") == 0)
		  {
		  get_initialize();
		  strcpy(nd_temp_date.arr,nd_mm_yyyy.arr);
		  get_local_date_convn2();
		  strcpy(date_convert.arr,nd_loc_date.arr);    
		  fprintf(fp," %s  %s \n\n",label.arr,date_convert.arr);
		  }
		 else
          fprintf(fp," %s  \n\n",label.arr);
	   	  fprintf(fp," %-6s %-17s    %188"," ",loc_legend[7]," ");
		 if( cnt ==1)
		  fprintf(fp,"     Kod \n");
		 else
          fprintf(fp," \n");
            fprintf(fp," %-6s %-15s %-23s %172s"," ",loc_legend[8],loc_legend[11]," ");
		 if( cnt ==1)
		  fprintf(fp,"  Hasil/ \n");
		 else
          fprintf(fp," \n");
		   
		  fprintf(fp," %-6s %-15s %-23s %-31s%-63s  %s"," ",loc_legend[9],loc_legend[12],loc_legend[14]," ",loc_legend[19]); 
		 if( cnt ==1)
		  fprintf(fp,"     Amanah/ \n");
		 else
          fprintf(fp," \n");
          fprintf(fp," %-6s %-15s %-23s %-31s %-28s%15s %18s  %s",loc_legend[6],loc_legend[10],loc_legend[13],loc_legend[15],loc_legend[16],loc_legend[18],replabel.arr,remarklb.arr);
		 if( cnt ==1)
		  fprintf(fp,"  Vot \n");
		 else
          fprintf(fp," \n");
         fill_dash(225);
	/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
	fflush(fp);
	fprintf(fp," \n");
	lctr = 12;


}


print_page_title()
{

	int hosp_nm_len, rep_title_len = 10, s1, s2,date_len,user_len,pgm_len;
	char v_rep_title[200],v_as_on_date[12];
  
	//Code for Line 1

	fprintf(fp,"\n");
	fprintf(fp,"%-13s :%s",loc_legend[30],loc_legend[34]);
	hosp_nm_len  = hosp_name.len;
    s1 = (REP_WIDTH-hosp_nm_len)/2;
	horz_skip(s1-12);
	fprintf(fp,"%s", hosp_name.arr);
	s2 = (REP_WIDTH-s1-hosp_nm_len);
    horz_skip(s2-(strlen(loc_legend[3])+strlen(date.arr)+14));
	get_initialize();
	strcpy(nd_temp_date.arr,date.arr);
	get_local_date_convn1();
	strcpy(date_convert.arr,nd_loc_date.arr);
	fprintf(fp,"%s : %s\n", loc_legend[3],date_convert.arr);
   
	 
	//Code for Line 2
	
    fprintf(fp,"%-13s : %s",loc_legend[31],user_id.arr);
    user_len=strlen(user_id.arr);
    strcpy(v_rep_title,loc_legend[26]);	
	rep_title_len = strlen(v_rep_title)+strlen(nd_mm_yyyy.arr);
	s1 = (REP_WIDTH-rep_title_len)/2;
	horz_skip(s1-user_len-7);
	get_initialize();
	strcpy(nd_temp_date.arr,nd_mm_yyyy.arr);
	get_local_date_convn2();
	strcpy(date_convert.arr,nd_loc_date.arr);
	fprintf(fp,"%s %-s",v_rep_title,date_convert.arr);
	s2 = (REP_WIDTH-s1-rep_title_len);
	horz_skip(s2-(strlen(loc_legend[4])+strlen(date_time.arr)+19));
	fprintf(fp,"%s : %s\n",loc_legend[4],date_time.arr);

    //Code for Line 3
 
	fprintf(fp,"%-13s : %s",loc_legend[2],d_curr_pgm_name.arr);
    pgm_len=strlen(d_curr_pgm_name.arr);

	s1 = (REP_WIDTH)/2;
  	horz_skip(s1-6-pgm_len);
     s2 = REP_WIDTH-s1;
    horz_skip(s2-(strlen(loc_legend[5])+27));
	fprintf(fp,"%s : %-d\n",loc_legend[5],++pctr);
		
}



fill_dash(flg)
{
  int i;
  for (i=1;i<=flg;i++)
	fprintf(fp,"%s","-");
}

/*print_total_rp()
{
    check_page_end(3,0);
	fprintf(fp,"%-100s "," ");
    fill_dash(35);
	fprintf(fp,"\n");
	fprintf(fp,"%-100s "," ");
	fprintf(fp,"Total");
	print_formated(rptot_amt);
	fprintf(fp,"\n");
	fprintf(fp,"%-100s "," ");
	fill_dash(35);
	fprintf(fp,"\n");
	
	lctr=lctr+3; 
	check_page_end(1,0);
	fprintf(fp,"\n");
	lctr=lctr+1; 

}  */ 

print_total_chq()
{
   
	check_page_end(3,0);
	fprintf(fp,"%-104s "," ");
	fill_dash(37);
    fprintf(fp," \n");
	fprintf(fp,"%-90s "," ");
	fprintf(fp,"%-15s   ",loc_legend[21]);
	print_formated(rptot_amt);
	fprintf(fp,"%-3s"," ");
	print_formated(chqtot_amt);
	fprintf(fp,"\n");
	fprintf(fp,"%-104s "," ");
	fill_dash(37);
    fprintf(fp,"\n");
	lctr=lctr+3; 
	check_page_end(1,0);
	fprintf(fp,"\n");
	lctr=lctr+1; 

}   


print_total_nrp()
{
 
	check_page_end(3,0);
	fprintf(fp,"%-103s "," ");
	fill_dash(19);
	fprintf(fp,"\n");
	fprintf(fp,"%-94s "," ");
	fprintf(fp,"%-13s ",loc_legend[21]);
	print_formated(nrptot_amt);
	fprintf(fp,"\n");
	fprintf(fp,"%-103s "," ");
	fill_dash(19);
	fprintf(fp,"\n");
	lctr=lctr+3; 
	check_page_end(1,0);
	fprintf(fp,"\n");
	lctr=lctr+1; 

}   


horz_skip(num) /* this is to obtain required blank space */
int num;
	{
	int i;
	for(i=0;i<num;i++)fprintf(fp," ");
	}


print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14s  ",str_amt);
    }
}                        

check_page_end(l_lead_lines, l_print_flag)
int l_lead_lines;
int	l_print_flag;
{
	if(l_print_flag==1)
		l_lead_lines=l_lead_lines+10;

	if((lctr+l_lead_lines)>= 35) //42
	{
		fprintf(fp,"\f");
		print_head();
		lctr = 3;
	}
}

print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}


fetch_legend_value()
{
	for(i=1;i<=300;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00016.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}

get_local_date1()
{

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'dd/mm/yyyy'),:p_language_id,t_date);
															
		:nd_loc_date := to_char(t_date,'DD/MM/YYYY');

	END;

	END-EXEC;

        if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

get_local_date2()
{

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'mm/yyyy'),:p_language_id,t_date);
	    :nd_loc_date := to_char(t_date,'mm/yyyy');
	
	END;

	END-EXEC;
	
	nd_loc_date.arr[nd_loc_date.len] = '\0';

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");
}

get_initialize()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
}
  
get_local_date_convn1()
{

nd_temp_date.len = strlen(nd_temp_date.arr);

get_local_date1();

}

get_local_date_convn2()
{

nd_temp_date.len = strlen(nd_temp_date.arr);

get_local_date2();

}