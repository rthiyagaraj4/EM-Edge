/*****************************************************************************/
/*                           BLRORGAU.PC                                     */
/*****************************************************************************/

/*
#define DEBUG 
*/                   

#include <stdio.h>
#include <string.h>
#include <bl.h>

EXEC SQL BEGIN DECLARE SECTION;
 
    VARCHAR uid_pwd			[91],      
	    d_session_id		[16], 
	    d_pgm_date			[14],
        rep_date			[20],
        comp_name			[50],     
        nd_facility_id		[3],
	    nd_fm_doc_type_code	[7],
	    nd_fm_doc_no		[9],
	    nd_to_doc_type_code	[7],
	    nd_to_doc_no		[9],
	    nd_fm_doc_date		[11],
		nd_fm_doc_date1		[12],
	    nd_to_doc_date		[11],
		nd_to_doc_date1		[12],
        nd_operator_id		[21],
        oper_id				[21],
	    d_main_desc			[16],
	    d_dept_desc			[16],
	    d_product_desc		[16],
	    d_subledger_desc	[16],  
	    d_dept_long_desc	[32],   
	    d_acct_desc			[65];    

   VARCHAR d_doc_type_code           [7],
           d_doc_number              [9],
           d_patient_id              [21],
           d_short_name_full         [61],
		   d_patient_name            [61],
		   d_patient_nam1            [31],
		   d_patient_name_loc_lang   [61],
           d_doc_date                [13],
           d_due_date                [13],
           d_trx_type_code           [2],
           d_trx_type_desc           [4],
           d_episode_type            [2],
           d_episode_id              [9],
           d_visit_id                [5],
           d_pat_doc_reference       [11],
           d_bill_type_code          [3],
		   d_bill_short_desc         [16],
           d_doc_nature_code         [5],
           d_doc_amt                 [23],
           d_hosp_chg_amt            [23],
           d_drfee_chg_amt           [23],
           d_main_acc1_code          [7],
           d_main_acc2_code          [5],
           d_dept_code               [7],
           d_product_group_code      [4],
           d_product_line_code       [5],
           d_subledger_group_code    [4],
           d_subledger_line_code     [9],
           d_narration               [51],
           d_post_month              [3],
           d_post_year               [5],
		   d_post_year1              [5],
		   d_posted_by_id            [21],
		   d_posted_date_time        [20];

   VARCHAR d_dtl_line_num				[5],
           d_dtl_main_acc1_code			[7],
           d_dtl_main_acc2_code			[5],
           d_dtl_dept_code				[7],
           d_dtl_product_group_code		[4],
           d_dtl_product_line_code      [5],
           d_dtl_subledger_group_code   [4],
           d_dtl_subledger_line_code    [9],
           d_dtl_doc_amt                [23],
           d_dtl_narration              [51];

   VARCHAR nd_lang_id			[4],
		   l_translated_value	[201],
	       l_pk_value			[100],
		   nd_temp_date			[20],
		   nd_loc_date			[20],
		   nd_temp_date1		[12],
		   nd_loc_date1			[12],
		   nd_temp_date2		[5],
		   nd_loc_date2			[5],
		   date_convert			[20];
		   

char       nd_print_flag;

char	   string_var[100];
char	   loc_legend[999][201];

double    d_doc_amt_num;

int i=0;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;

int page_no,
    line_no,
    first_line,
    g_hdr_cnt;

char filename[150],g_acct_code[41];

double g_tot_amt,g_grand_tot;

void proc_main(argc,argv)
int argc;
char *argv[];
{

    if(argc < 5) {
        disp_message(ERR_MESG,"BLRORGAU : Usage BLRORGAU userid/password session_id pgm_date");
        proc_exit();
    }


    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_session_id.arr,argv[2]);
    d_session_id.len = strlen(d_session_id.arr);
    strcpy(g_session_id,argv[2]);
    
    strcpy(d_pgm_date.arr,argv[3]);
    d_pgm_date.len = strlen(d_pgm_date.arr);

    strcpy(g_pgm_id,"BLRORGAU");
    strcpy(g_pgm_date,argv[3]);

    EXEC SQL CONNECT :uid_pwd;

    if(OERROR) {
		disp_message(ERR_MESG,"Unable to connect to oracle.");
		proc_exit();
    }

   set_meduser_role();
   strcpy(nd_lang_id.arr,l_language_id.arr);
   nd_lang_id.len = l_language_id.len;

   start_prog_msg();

    nd_fm_doc_type_code.arr[0]  = '\0';
	nd_fm_doc_no.arr[0]			= '\0';
	nd_to_doc_type_code.arr[0]  = '\0';
	nd_to_doc_no.arr[0]			= '\0';
    nd_fm_doc_date.arr[0]		= '\0';
	nd_fm_doc_date1.arr[0]		= '\0';
	nd_to_doc_date.arr[0]		= '\0';
	nd_to_doc_date1.arr[0]		= '\0';
	nd_operator_id.arr[0]		= '\0';
	nd_facility_id.arr[0]		= '\0';

    nd_fm_doc_type_code.len  = 0;
	nd_fm_doc_no.len		 = 0;
	nd_to_doc_type_code.len  = 0;
	nd_to_doc_no.len		 = 0;
    nd_fm_doc_date.len		 = 0;
	nd_fm_doc_date1.len		 = 0;
	nd_to_doc_date.len		 = 0;
	nd_to_doc_date1.len		 = 0;
	nd_operator_id.len		 = 0;
    nd_facility_id.len		 = 0;


	EXEC SQL SELECT operating_facility_id,PARAM1,            /* FM_DOC_TYPE_CODE           */
			PARAM2,											 /* FM_DOC_NO                  */
			PARAM3,										     /* TO_DOC_TYPE_CODE           */
			PARAM4,											 /* TO_DOC_NO                  */
			PARAM5,										     /* FM_DOC_DATE                */
			PARAM6,											 /* TO_DOC_DATE                */
			PARAM7											 /* OPER_IDl                   */     
		 INTO   :nd_facility_id,:nd_fm_doc_type_code,
			:nd_fm_doc_no,
			:nd_to_doc_type_code,
			:nd_to_doc_no,
		    :nd_fm_doc_date,
			:nd_to_doc_date,
			:nd_operator_id 
		 FROM   SY_PROG_PARAM
		 WHERE  PGM_ID     = 'BLRORGAU'
		 AND    PGM_DATE   = :d_pgm_date
		 AND    SESSION_ID = TO_NUMBER(:d_session_id);


    if(OERROR || NO_DATA_FOUND)
	    err_mesg("SELECT failed on table  SY_PROG_PARAM",0,"");

    nd_fm_doc_type_code.arr[nd_fm_doc_type_code.len]	= '\0';
	nd_fm_doc_no.arr[nd_fm_doc_no.len]					= '\0';
	nd_to_doc_type_code.arr[nd_to_doc_type_code.len]	= '\0';
	nd_to_doc_no.arr[nd_to_doc_no.len]					= '\0';
    nd_fm_doc_date.arr[nd_fm_doc_date.len]				= '\0';
	nd_to_doc_date.arr[nd_to_doc_date.len]				= '\0';
	nd_fm_doc_date1.arr[nd_fm_doc_date1.len]			= '\0';
	nd_to_doc_date1.arr[nd_to_doc_date1.len]			= '\0';
	nd_operator_id.arr[nd_operator_id.len]				= '\0';

    //strcpy(file_name,"blrorgau.lis");
	strcpy(filename,WORKING_DIR);
    strcat(filename,"blrorgau.lis");

    if( (f1=fopen(filename,"w")) == NULL) {
        disp_message(ERR_MESG,"Error in opening output file...");
	proc_exit();
    }


    EXEC SQL SELECT ACC_ENTITY_NAME,
		    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
	     INTO   :comp_name,
				:rep_date,
				:oper_id
	     FROM   SY_ACC_ENTITY_LANG_VW
		 WHERE acc_entity_id = :nd_facility_id
		 AND   LANGUAGE_ID	 = :nd_lang_id;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    if(rep_date.arr[0]!='\0')
	{
		init_date_temp_var();
		strcpy(date_convert.arr,rep_date.arr);
		fun_change_loc_date1();
		strcpy(rep_date.arr,date_convert.arr);
	}

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';

    page_no=1;
    line_no=1;

    fetch_legend_value();
    decl_curs();

    put_inp_parm();

    do_report();

    fclose(f1);

    del_parm();

    end_prog_msg();
    EXEC SQL COMMIT RELEASE;

    return;
}

del_parm()
{

    EXEC SQL DELETE SY_PROG_PARAM
         WHERE  PGM_ID     = 'BLRORGAU' 
         AND    PGM_DATE   = :d_pgm_date
         AND    SESSION_ID = :d_session_id;

    if(OERROR) 
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,""); 

}


decl_curs()
{

    /*Changed the WHERE clause since the output was not coming
	if doc numbers are entered*/
    EXEC SQL DECLARE ORG_TRN_HDR_CUR CURSOR FOR
               SELECT DOC_TYPE_CODE,
                      DOC_NUMBER,
                      PATIENT_ID,
                      TRUNC(DOC_DATE),
                      TRUNC(DUE_DATE),
                      TRX_TYPE_CODE,
		      DECODE(TRX_TYPE_CODE,'1','INV','2','DN','3','CN',
					   '4','ADJ','5','REC','6','PAY',''),
                      EPISODE_TYPE,
                      LTRIM(TO_CHAR(EPISODE_ID,'00000009')),
                      VISIT_ID,
                      PAT_DOC_REFERENCE,
                      BILL_TYPE_CODE,
                      DOC_NATURE_CODE,
                      TO_CHAR(NVL(DOC_AMT,0),'999,999,990.99'),
                      TO_CHAR(NVL(HOSP_CHG_AMT,0),'999,999,990.99'),
                      TO_CHAR(NVL(DRFEE_CHG_AMT,0),'999,999,990.99'),
                      MAIN_ACC1_CODE,
                      MAIN_ACC2_CODE,
                      DEPT_CODE,
                      PRODUCT_GROUP_CODE,
                      PRODUCT_LINE_CODE,
                      SUBLEDGER_GROUP_CODE,
                      SUBLEDGER_LINE_CODE,
                      NARRATION,
                      POST_MONTH,
                      POST_YEAR,
		      POSTED_BY_ID,
		      TO_CHAR(POSTED_DATE_TIME,'DD/MM/YYYY HH24:MI:SS')
                 FROM BL_DCP_ORG_TRN_HDR
		 WHERE  operating_facility_id = :nd_facility_id and
		 RPAD(DOC_TYPE_CODE,6,' ') BETWEEN
			   RPAD(NVL(:nd_fm_doc_type_code,'      '),6) AND
			   RPAD(NVL(:nd_to_doc_type_code,'~~~~~~'),6)
		 AND   LTRIM(TO_CHAR(DOC_NUMBER,'00000009')) BETWEEN
			   NVL(LPAD(:nd_fm_doc_no, 8, '0'),'00000000') AND
			   NVL(LPAD(:nd_to_doc_no, 8, '0'),'99999999')
		 /*RPAD(DOC_TYPE_CODE,6,' ')||
		       LTRIM(TO_CHAR(DOC_NUMBER,'00000009')) BETWEEN
	               RPAD(NVL(:nd_fm_doc_type_code,'      '),6)||
		       NVL(:nd_fm_doc_no,'00000000') AND
	               RPAD(NVL(:nd_to_doc_type_code,'~~~~~~'),6)||
		       NVL(:nd_to_doc_no,'99999999')*/
		 AND   TRUNC(DOC_DATE) BETWEEN
			 TO_DATE(NVL(:nd_fm_doc_date,'01/01/1000'),'DD/MM/YYYY')
			 AND
			 TO_DATE(NVL(:nd_to_doc_date,'01/01/3000'),'DD/MM/YYYY')
		 AND   ADDED_BY_ID BETWEEN
			 NVL(:nd_operator_id,'                    ') AND
			 NVL(:nd_operator_id,'~~~~~~~~~~~~~~~~~~~~')
		 AND   NVL(POSTED_FLAG,'N') = 'Y'
		 ORDER BY DOC_TYPE_CODE, DOC_NUMBER;


     EXEC SQL DECLARE ORG_TRN_DTL_CUR CURSOR FOR
               SELECT LINE_NUM,
                      MAIN_ACC1_CODE,
                      MAIN_ACC2_CODE,
                      DEPT_CODE,
                      PRODUCT_GROUP_CODE,
                      PRODUCT_LINE_CODE,
                      SUBLEDGER_GROUP_CODE,
                      SUBLEDGER_LINE_CODE,
                      TO_CHAR(NVL(DOC_AMT,0),'999,999,990.99'),
					  DOC_AMT,
                      NARRATION
					  FROM BL_DCP_ORG_TRN_DTL
		WHERE operating_facility_id = :nd_facility_id and
			  DOC_TYPE_CODE = :d_doc_type_code
			  AND   DOC_NUMBER    = :d_doc_number
			  ORDER BY LINE_NUM;

    EXEC SQL DECLARE MP_PATIENT_MAST_CUR CURSOR FOR
	     SELECT /* substr(SHORT_NAME,1,30),
				 decode(substr(short_name,31,60),NULL,' ',substr(short_name,31,60)) shortname2,
				 */
				 SHORT_NAME_LOC_LANG,
                         short_name
	     FROM    MP_PATIENT_MAST
	     WHERE   PATIENT_ID = :d_patient_id;

    EXEC SQL DECLARE BL_BILL_TYPE_CUR CURSOR FOR
	     SELECT  SHORT_DESC
	     FROM    BL_BILL_TYPE_LANG_VW
	     WHERE   BILL_TYPE_CODE = :d_bill_type_code
		 AND     LANGUAGE_ID	= :nd_lang_id;

    EXEC SQL OPEN ORG_TRN_HDR_CUR;
    if(OERROR)
	err_mesg("OPEN failed on cursor ORG_TRN_HDR_CUR",0,"");

}

fetch_hdr()
{

    d_doc_type_code.arr[0]                                            = '\0';
    d_doc_number.arr[0]                                               = '\0';
    d_patient_id.arr[0]                                               = '\0';
    d_doc_date.arr[0]                                                 = '\0';
    d_due_date.arr[0]                                                 = '\0';
    d_trx_type_code.arr[0]                                            = '\0';
    d_trx_type_desc.arr[0]                                            = '\0';
    d_episode_type.arr[0]                                             = '\0';
    d_episode_id.arr[0]                                               = '\0';
    d_visit_id.arr[0]                                                 = '\0';
    d_pat_doc_reference.arr[0]                                        = '\0';
    d_bill_type_code.arr[0]                                           = '\0';
    d_doc_nature_code.arr[0]                                          = '\0';
    d_doc_amt.arr[0]                                                  = '\0';
    d_hosp_chg_amt.arr[0]                                             = '\0';
    d_drfee_chg_amt.arr[0]                                            = '\0';
    d_main_acc1_code.arr[0]                                           = '\0';
    d_main_acc2_code.arr[0]                                           = '\0';
    d_dept_code.arr[0]                                                = '\0';
    d_product_group_code.arr[0]                                       = '\0';
    d_product_line_code.arr[0]                                        = '\0';
    d_subledger_group_code.arr[0]                                     = '\0';
    d_subledger_line_code.arr[0]                                      = '\0';
    d_narration.arr[0]                                                = '\0';
    d_post_month.arr[0]                                               = '\0';
    d_post_year.arr[0]                                                = '\0';
    d_posted_by_id.arr[0]                                             = '\0';
    d_posted_date_time.arr[0]                                         = '\0';

    d_doc_type_code.len                                               = 0;
    d_doc_number.len                                                  = 0;
    d_patient_id.len                                                  = 0;
    d_doc_date.len                                                    = 0;
    d_due_date.len                                                    = 0;
    d_trx_type_code.len                                               = 0;
    d_trx_type_desc.len                                               = 0;
    d_episode_type.len                                                = 0;
    d_episode_id.len                                                  = 0;
    d_visit_id.len                                                    = 0;
    d_pat_doc_reference.len                                           = 0;
    d_bill_type_code.len                                              = 0;
    d_doc_nature_code.len                                             = 0;
    d_doc_amt.len                                                     = 0;
    d_hosp_chg_amt.len                                                = 0;
    d_drfee_chg_amt.len                                               = 0;
    d_main_acc1_code.len                                              = 0;
    d_main_acc2_code.len                                              = 0;
    d_dept_code.len                                                   = 0;
    d_product_group_code.len                                          = 0;
    d_product_line_code.len                                           = 0;
    d_subledger_group_code.len                                        = 0;
    d_subledger_line_code.len                                         = 0;
    d_narration.len                                                   = 0;
    d_post_month.len                                                  = 0;
    d_post_year.len                                                   = 0;
    d_posted_by_id.len                                                = 0;
    d_posted_date_time.len                                            = 0;

     EXEC SQL FETCH ORG_TRN_HDR_CUR
               INTO :d_doc_type_code,
                    :d_doc_number,
                    :d_patient_id,
                    :d_doc_date,
                    :d_due_date,
                    :d_trx_type_code,
                    :d_trx_type_desc,
                    :d_episode_type,
                    :d_episode_id,
                    :d_visit_id,
                    :d_pat_doc_reference,
                    :d_bill_type_code,
                    :d_doc_nature_code,
                    :d_doc_amt,
                    :d_hosp_chg_amt,
                    :d_drfee_chg_amt,
                    :d_main_acc1_code,
                    :d_main_acc2_code,
                    :d_dept_code,
                    :d_product_group_code,
                    :d_product_line_code,
                    :d_subledger_group_code,
                    :d_subledger_line_code,
                    :d_narration,
                    :d_post_month,
                    :d_post_year,
                    :d_posted_by_id,
                    :d_posted_date_time;

    if(OERROR)
	err_mesg("FETCH failed on cursor ORG_TRN_HDR_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_doc_type_code.arr[d_doc_type_code.len]                             = '\0';
    d_doc_number.arr[d_doc_number.len]                                   = '\0';
    d_patient_id.arr[d_patient_id.len]                                   = '\0';
    d_doc_date.arr[d_doc_date.len]                                       = '\0';
    d_due_date.arr[d_due_date.len]                                       = '\0';
    d_trx_type_code.arr[d_trx_type_code.len]                             = '\0';
    d_trx_type_desc.arr[d_trx_type_desc.len]                             = '\0';
    d_episode_type.arr[d_episode_type.len]                               = '\0';
    d_episode_id.arr[d_episode_id.len]                                   = '\0';
    d_visit_id.arr[d_visit_id.len]                                       = '\0';
    d_pat_doc_reference.arr[d_pat_doc_reference.len]                     = '\0';
    d_bill_type_code.arr[d_bill_type_code.len]                           = '\0';
    d_doc_nature_code.arr[d_doc_nature_code.len]                         = '\0';
    d_doc_amt.arr[d_doc_amt.len]                                         = '\0';
    d_hosp_chg_amt.arr[d_hosp_chg_amt.len]                               = '\0';
    d_drfee_chg_amt.arr[d_drfee_chg_amt.len]                             = '\0';
    d_main_acc1_code.arr[d_main_acc1_code.len]                           = '\0';
    d_main_acc2_code.arr[d_main_acc2_code.len]                           = '\0';
    d_dept_code.arr[d_dept_code.len]                                     = '\0';
    d_product_group_code.arr[d_product_group_code.len]                   = '\0';
    d_product_line_code.arr[d_product_line_code.len]                     = '\0';
    d_subledger_group_code.arr[d_subledger_group_code.len]               = '\0';
    d_subledger_line_code.arr[d_subledger_line_code.len]                 = '\0';
    d_narration.arr[d_narration.len]                                     = '\0';
    d_post_month.arr[d_post_month.len]                                   = '\0';
    d_post_year.arr[d_post_year.len]                                     = '\0';
    d_posted_by_id.arr[d_posted_by_id.len]                               = '\0';
    d_posted_date_time.arr[d_posted_date_time.len]                       = '\0';

    sprintf(g_acct_code,"%s-%s %s %s-%s %s-%s",
        d_main_acc1_code.arr, d_main_acc2_code.arr ,d_dept_code.arr ,
	d_product_group_code.arr, d_product_line_code.arr ,
	d_subledger_group_code.arr , d_subledger_line_code.arr);

    return 1;
    
}

fetch_dtl()
{

    d_dtl_line_num.arr[0]                                             = '\0';
    d_dtl_main_acc1_code.arr[0]                                       = '\0';
    d_dtl_main_acc2_code.arr[0]                                       = '\0';
    d_dtl_dept_code.arr[0]                                            = '\0';
    d_dtl_product_group_code.arr[0]                                   = '\0';
    d_dtl_product_line_code.arr[0]                                    = '\0';
    d_dtl_subledger_group_code.arr[0]                                 = '\0';
    d_dtl_subledger_line_code.arr[0]                                  = '\0';
    d_dtl_doc_amt.arr[0]                                              = '\0';
    d_dtl_narration.arr[0]                                            = '\0';

    d_dtl_line_num.len                                                = 0;
    d_dtl_main_acc1_code.len                                          = 0;
    d_dtl_main_acc2_code.len                                          = 0;
    d_dtl_dept_code.len                                               = 0;
    d_dtl_product_group_code.len                                      = 0;
    d_dtl_product_line_code.len                                       = 0;
    d_dtl_subledger_group_code.len                                    = 0;
    d_dtl_subledger_line_code.len                                     = 0;
    d_dtl_doc_amt.len                                                 = 0;
    d_dtl_narration.len                                               = 0;

    d_doc_amt_num = 0;
    
    EXEC SQL FETCH ORG_TRN_DTL_CUR
               INTO :d_dtl_line_num,
                    :d_dtl_main_acc1_code,
                    :d_dtl_main_acc2_code,
                    :d_dtl_dept_code,
                    :d_dtl_product_group_code,
                    :d_dtl_product_line_code,
                    :d_dtl_subledger_group_code,
                    :d_dtl_subledger_line_code,
                    :d_dtl_doc_amt,
		    :d_doc_amt_num,
                    :d_dtl_narration;


     if(OERROR)
	 err_mesg("FETCH failed on cursor ORG_TRN_DTL_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0; 

    d_dtl_line_num.arr[d_dtl_line_num.len]                               = '\0';
    d_dtl_main_acc1_code.arr[d_dtl_main_acc1_code.len]                   = '\0';
    d_dtl_main_acc2_code.arr[d_dtl_main_acc2_code.len]                   = '\0';
    d_dtl_dept_code.arr[d_dtl_dept_code.len]                             = '\0';
    d_dtl_product_group_code.arr[d_dtl_product_group_code.len]           = '\0';
    d_dtl_product_line_code.arr[d_dtl_product_line_code.len]             = '\0';
    d_dtl_subledger_group_code.arr[d_dtl_subledger_group_code.len]       = '\0';
    d_dtl_subledger_line_code.arr[d_dtl_subledger_line_code.len]         = '\0';
    d_dtl_doc_amt.arr[d_dtl_doc_amt.len]                                 = '\0';
    d_dtl_narration.arr[d_dtl_narration.len]                             = '\0';

    sprintf(g_acct_code,"%s-%s %s %s-%s %s-%s",
        d_dtl_main_acc1_code.arr, d_dtl_main_acc2_code.arr ,
	d_dtl_dept_code.arr , d_dtl_product_group_code.arr, 
	d_dtl_product_line_code.arr , d_dtl_subledger_group_code.arr , 
	d_dtl_subledger_line_code.arr);

    return 1;
    
}


fetch_patient_name()
{

    d_patient_name.arr[0]			= '\0';
	d_patient_nam1.arr[0]			= '\0';
    d_patient_name_loc_lang.arr[0]  = '\0';

    d_patient_name.len				= 0;
	d_patient_nam1.len				= 0;
    d_patient_name_loc_lang.len		= 0;

    EXEC SQL OPEN MP_PATIENT_MAST_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor MP_PATIENT_MAST_CUR",0,"");

    EXEC SQL FETCH MP_PATIENT_MAST_CUR 
	     INTO  /*:d_patient_name,
			   :d_patient_nam1,*/
			   :d_patient_name_loc_lang,
                 :d_short_name_full;

    if(OERROR)
	err_mesg("FETCH failed on table MP_PATIENT_MAST_CUR",0,"");

    d_patient_name.arr[d_patient_name.len]					 = '\0';
	d_patient_nam1.arr[d_patient_nam1.len]					 = '\0';
    d_patient_name_loc_lang.arr[d_patient_name_loc_lang.len] = '\0';
    d_short_name_full.arr[d_short_name_full.len]             = '\0';
 
EXEC SQL EXECUTE
 BEGIN
 declare
      str1   varchar2(100);
     str2   varchar2(60);
     
    
   BEGIN
     blcommon.split_words(:d_short_name_full,30,'*',1,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_name   :=str2;
       END IF;
    blcommon.split_words(:d_short_name_full,30,'*',2,str1,str2);
       IF str2 IS NOT NULL THEN
         :d_patient_nam1  := str2;
      END IF;
    blcommon.split_words(:d_short_name_full,30,'*',3,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_nam1    := :d_patient_nam1 || str2;
       end if;

	 
     
 END;
  END;
       
   END-EXEC;
       d_patient_name.arr[d_patient_name.len]  = '\0';
       d_patient_nam1.arr[d_patient_nam1.len]  = '\0';

}

fetch_bill_desc()
{

    d_bill_short_desc.arr[0]  = '\0';
    d_bill_short_desc.len  = 0;

    EXEC SQL OPEN BL_BILL_TYPE_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor BL_BILL_TYPE_CUR",0,"");

    EXEC SQL FETCH BL_BILL_TYPE_CUR
	     INTO  :d_bill_short_desc;

    if(OERROR)
	err_mesg("FETCH failed on cursor BL_BILL_TYPE_CUR",0,"");

    d_bill_short_desc.arr[d_bill_short_desc.len]  = '\0';

}

do_report()
{

    int cnt,first;
    char s_amt[20];

    g_hdr_cnt=0;
    g_grand_tot = 0;
    line_no = 1;
    put_hdr();

    while(fetch_hdr()) {

        g_hdr_cnt ++;
        get_acct_desc_hdr();
		fetch_patient_name();
		fetch_bill_desc();
		put_trn_hdr();

	EXEC SQL OPEN ORG_TRN_DTL_CUR;

	if(OERROR)
	    err_mesg("OPEN failed on cursor ORG_TRN_DTL_CUR",0,"");

	g_tot_amt = 0;
        first=1;
	cnt = 0;
	while(fetch_dtl()) {
	    if(first) {
	        put_dtl_head();
	        first=0;
	    }
        get_acct_desc_dtl();
	    put_trn_dtl();
	    g_tot_amt += d_doc_amt_num;
	    cnt ++;
	}
	g_grand_tot += g_tot_amt;
	if(cnt) {
	   chk_break(3);
	   put_val(s_amt,g_tot_amt);
	   format_amt(s_amt);
       fprintf(f1,"    --------------------------------------------------------------------------------------------------------------------------------\n");
	   //fprintf(f1,"                                                                                                 TOTAL          %15s\n",s_amt);
       fprintf(f1,"                                                                                                 %-5.5s          %15s\n",loc_legend[39],s_amt);

	   fprintf(f1,"    --------------------------------------------------------------------------------------------------------------------------------\n\n");

	   line_no += 4;

	}

    } 

    print_end_of_rep();

}


put_hdr()
{

  
	fprintf(f1,"\n%-6.6s : %-3.3s                               %30s                                           %s\n",loc_legend[1],loc_legend[2],comp_name.arr,rep_date.arr);
    fprintf(f1,"%-6.6s : %s\n",loc_legend[3],oper_id.arr);
    fprintf(f1,"%-6.6s : BLRORGAU                         %-40.40s                                       %-4.4s : %4d\n",loc_legend[4],loc_legend[5],loc_legend[6],page_no);
  //fprintf(f1,"\n\n");
    fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"%-8.8s/%-6.6s  %-8.8s   %-8.8s   %-8.8s %-9.9s          %6.6s      %9.9s     %10.10s\n",loc_legend[17],loc_legend[18],loc_legend[19],loc_legend[20],loc_legend[21],loc_legend[22],loc_legend[23],loc_legend[24],loc_legend[25]);
    fprintf(f1,"                 %-9.9s & %-4.4s      %-6.6s   %-10.10s & %-4.4s                                        %-15.15s\n",loc_legend[26],loc_legend[27],loc_legend[28],loc_legend[29],loc_legend[30],loc_legend[31]);
    fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"\n");

    line_no=10;

}

put_trn_hdr() 
{
    chk_break(5);

	if(d_doc_date.arr[0]!='\0')
	{
		init_date_temp_var();
		strcpy(date_convert.arr,d_doc_date.arr);
		fun_change_loc_date();
		strcpy(d_doc_date.arr,date_convert.arr);
	}

	 if(d_due_date.arr[0]!='\0')
	{
		init_date_temp_var();
		strcpy(date_convert.arr,d_due_date.arr);
		fun_change_loc_date();
		strcpy(d_due_date.arr,date_convert.arr);
	}

    fprintf(f1,"%-6s/%-8s  %10s %10s  %1s %3s   %-10s%s%s%s\n",
	d_doc_type_code.arr,d_doc_number.arr,d_doc_date.arr,d_due_date.arr,
	d_trx_type_code.arr,d_trx_type_desc.arr,d_pat_doc_reference.arr,
	d_doc_amt.arr, d_hosp_chg_amt.arr,d_drfee_chg_amt.arr);
    
	if(strcmp(nd_lang_id.arr,"en")==0)
	{
		fprintf(f1,"                 %-2s %-15s    %-4s  %-20s %-30.30s      %1s %-8s %4s\n",
		d_bill_type_code.arr, d_bill_short_desc.arr,d_doc_nature_code.arr,
		d_patient_id.arr,d_patient_name.arr, d_episode_type.arr,
		d_episode_id.arr,d_visit_id.arr);

		fprintf(f1,"          %-3.3s :  %-40s  %-30.30s\n",loc_legend[38],g_acct_code,d_patient_name.arr);


	}
	else
	{

		fprintf(f1,"                 %-2s %-15s    %-4s  %-20s %-30.30s      %1s %-8s %4s\n",
        d_bill_type_code.arr, d_bill_short_desc.arr,d_doc_nature_code.arr,
		d_patient_id.arr,d_patient_name_loc_lang.arr, d_episode_type.arr,
		d_episode_id.arr,d_visit_id.arr);
    
    	fprintf(f1,"          %-3.3s :  %-40s  %-30.30s\n",loc_legend[38],g_acct_code,d_patient_name_loc_lang.arr);

	}
	

	if(strlen(d_patient_nam1.arr) > 2)
	{
	  if(strcmp(nd_lang_id.arr,"en")==0)
	   fprintf(f1,"%57.57s %s \n"," ",d_patient_nam1.arr);
	  else
	   fprintf(f1,"%57.57s %s \n"," ",d_patient_name_loc_lang.arr);
	  line_no++;
	}

    fprintf(f1,"                 %s\n", d_acct_desc.arr);

	if(d_post_year.arr[0]!='\0')
	{
		init_date_temp_var();
		strcpy(date_convert.arr,d_post_year.arr);
		fun_change_loc_date2();
		strcpy(d_post_year.arr,date_convert.arr);
		
	}
	
	if(d_posted_date_time.arr[0]!='\0')
	{
		init_date_temp_var();
		strcpy(date_convert.arr,d_posted_date_time.arr);
		fun_change_loc_date4();
		strcpy(d_posted_date_time.arr,date_convert.arr);
	}

    fprintf(f1,"    %-9.9s :  %-50s    %-6.6s : %-2s/%-4s\n",loc_legend[32],d_narration.arr,loc_legend[33],d_post_month.arr,d_post_year.arr);
    fprintf(f1,"    %-9.9s :  %-20s    %-11.11s : %-20s\n\n",loc_legend[34],d_posted_by_id.arr,loc_legend[35],d_posted_date_time.arr);
 
    line_no += 7;

/* "XXXXXX/XXXXXXXX  XX/XX/XXXX XX/XX/XXXX     X    XXXXXXXXXX 999,999,990.99 999,999,999.99 999,999,999.99"
	       "                 XX XXXXXXXXXXXXXXX    XXXX     XXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X 99999999 9999"
	       "                 XXXXXX-XXXX XXXXXX XXX-XXXX XXX-XXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXX                "
	       "  
*/

}

put_dtl_head()
{

    chk_break(3);

    fprintf(f1,"    --------------------------------------------------------------------------------------------------------------------------------\n");
	fprintf(f1,"    %-4.4s         %-15.15s                            %-9.9s                                                    %6.6s\n",loc_legend[36],loc_legend[37],loc_legend[32],loc_legend[23]);
    fprintf(f1,"    --------------------------------------------------------------------------------------------------------------------------------\n");

    line_no += 3;

}

put_trn_dtl()
{

    chk_break(2);
    fprintf(f1,"    %4s         %-40s   %-50s  %s\n",
        d_dtl_line_num.arr,g_acct_code,
	d_dtl_narration.arr,d_dtl_doc_amt.arr);
    fprintf(f1,"                 %s\n",d_acct_desc.arr);

    line_no += 2;
/*
	       "    XXXX         XXXXXX-XXXX XXXXXX XXX-XXXX XXX-XXXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   999,999,999.99"
*/

}

get_acct_desc_hdr()
{

    d_acct_desc.arr[0] = '\0';

    EXEC SQL SELECT CONCAT_POST_ACC_DESC 
	     INTO   :d_acct_desc 
	     FROM   GL_POSTING_ACC
	     WHERE  MAIN_ACC1_CODE       =  :d_main_acc1_code
	     AND    MAIN_ACC2_CODE       =  :d_main_acc2_code
	     AND    DEPT_CODE            =  :d_dept_code
	     AND    PRODUCT_GROUP_CODE   =  :d_product_group_code
	     AND    PRODUCT_LINE_CODE    =  :d_product_line_code
	     AND    SUBLEDGER_GROUP_CODE =  :d_subledger_group_code
	     AND    SUBLEDGER_LINE_CODE  =  :d_subledger_line_code;

    if(OERROR)
	err_mesg("SELECT failed on table GL_POSTING_ACC",0,"");


    d_acct_desc.arr[d_acct_desc.len] = '\0';

}

get_acct_desc_dtl()
{

    d_acct_desc.arr[0] = '\0';

    EXEC SQL SELECT CONCAT_POST_ACC_DESC 
	     INTO   :d_acct_desc 
	     FROM   GL_POSTING_ACC
	     WHERE  MAIN_ACC1_CODE       =  :d_dtl_main_acc1_code
	     AND    MAIN_ACC2_CODE       =  :d_dtl_main_acc2_code
	     AND    DEPT_CODE            =  :d_dtl_dept_code
	     AND    PRODUCT_GROUP_CODE   =  :d_dtl_product_group_code
	     AND    PRODUCT_LINE_CODE    =  :d_dtl_product_line_code
	     AND    SUBLEDGER_GROUP_CODE =  :d_dtl_subledger_group_code
	     AND    SUBLEDGER_LINE_CODE  =  :d_dtl_subledger_line_code;

    if(OERROR)
	err_mesg("SELECT failed on table GL_POSTING_ACC",0,"");


    d_acct_desc.arr[d_acct_desc.len] = '\0';


}

chk_break(nol)
int nol;
{

	if(line_no+nol >= 55) {
           fprintf(f1,"");
           line_no = 1;
           ++page_no;
	   put_hdr();
	}

}

put_inp_parm()
{

	if(strcmp(nd_fm_doc_type_code.arr,"\0")==0)
	strcpy(nd_fm_doc_type_code.arr,loc_legend[15]);
	if(strcmp(nd_to_doc_type_code.arr,"\0")==0)
	strcpy(nd_to_doc_type_code.arr,loc_legend[16]);
	if(strcmp(nd_fm_doc_no.arr,"\0")==0)
	strcpy(nd_fm_doc_no.arr,loc_legend[15]);
	if(strcmp(nd_to_doc_no.arr,"\0")==0)
	strcpy(nd_to_doc_no.arr,loc_legend[16]);
	
	if(strcmp(nd_fm_doc_date.arr,"\0")==0)
	strcpy(nd_fm_doc_date1.arr,loc_legend[15]);
	else
	{
	
		init_date_temp_var();
		strcpy(date_convert.arr,nd_fm_doc_date.arr);
		fun_change_loc_date3();
		strcpy(nd_fm_doc_date1.arr,date_convert.arr);

	}
	if(strcmp(nd_to_doc_date.arr,"\0")==0)
	strcpy(nd_to_doc_date1.arr,loc_legend[16]);
	else
	{
	
		init_date_temp_var();
		strcpy(date_convert.arr,nd_to_doc_date.arr);
		fun_change_loc_date3();
		strcpy(nd_to_doc_date1.arr,date_convert.arr);

	}
   
	fprintf(f1,"%-6.6s : %-3.3s                               %30s                                           %s\n",loc_legend[1],loc_legend[2],comp_name.arr,rep_date.arr);
    fprintf(f1,"%-6.6s : %s\n",loc_legend[3],oper_id.arr);
    fprintf(f1,"%-6.6s : BLRORGAU                         %-40.40s                                       %-4.4s : %4d\n",loc_legend[4],loc_legend[5],loc_legend[6],page_no);
 	fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n\n");
    fprintf(f1,"VER : 1.10.01\n");
    fprintf(f1,"\n\n\n\n");
  	fprintf(f1,"\t%-16.16s\n",loc_legend[7]);
    fprintf(f1,"\t----------------\n\n");
	fprintf(f1,"\t\t%-15.15s       : %-s\n\n",loc_legend[8],nd_facility_id.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-6s\n",loc_legend[9],loc_legend[13],nd_fm_doc_type_code.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-6s\n\n"," ",loc_legend[14],nd_to_doc_type_code.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-s\n",loc_legend[10],loc_legend[13],nd_fm_doc_no.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-s\n\n"," ",loc_legend[14],nd_to_doc_no.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-s\n",loc_legend[11],loc_legend[13],nd_fm_doc_date1.arr);
    fprintf(f1,"\t\t%-15.15s %-5.5s : %-s\n\n"," ",loc_legend[14],nd_to_doc_date1.arr);
    fprintf(f1,"\t\t%-15.15s       : %-s\n\n",loc_legend[12],nd_operator_id.arr);
    fprintf(f1,"");
    ++page_no;

}


print_end_of_rep()
{
    char s_amt[20];

    put_val(s_amt,g_grand_tot);
    format_amt(s_amt);
    fprintf(f1,"%-33.33s : %d                                                      %-11.11s          %15s\n",loc_legend[40],g_hdr_cnt,loc_legend[41],s_amt);
	fprintf(f1,"                                                    ** %-13.13s **                                                             \n",loc_legend[42]);
}

fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0';
     
		EXEC SQL SELECT LTRIM(RTRIM('BLRORGAU.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';


		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id ,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:nd_lang_id);

      

		END;
		END-EXEC;
       
		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
		
		
	}
}

/* Added by Raghava at 27/11/2007 for Internationalization Date Conversion */

get_local_date()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
		
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date1,'DD/MM/YY'),:nd_lang_id,t_date);

		 :nd_loc_date1:= to_char(t_date,'DD-MON-YY');


	END;

	END-EXEC;
     		
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

get_local_date1()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		 get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'DD/MM/YY HH24:MI'),:nd_lang_id,t_date);

		 :nd_loc_date := to_char(t_date,'DD/MM/YYYY HH24:MI');


	END;

	END-EXEC;
		
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

get_local_date4()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		 get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'DD/MM/YY HH24:MI:SS'),:nd_lang_id,t_date);

		 :nd_loc_date := to_char(t_date,'DD/MM/YYYY HH24:MI:SS');


	END;

	END-EXEC;
		
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

get_local_date2()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		 get_locale_date.convert_to_locale_date(to_date(:nd_temp_date2,'YYYY'),:nd_lang_id,t_date);

		 :nd_loc_date2 := to_char(t_date,'YYYY');


	END;

	END-EXEC;
		
		nd_loc_date2.arr[nd_loc_date2.len]='\0';
		
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

get_local_date3()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
		
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date1,'DD/MM/YY'),:nd_lang_id,t_date);

		 :nd_loc_date1:= to_char(t_date,'DD/MM/YYYY');


	END;

	END-EXEC;
     		
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}
init_date_temp_var()
{

nd_temp_date.arr[0] =  '\0';
nd_loc_date.arr[0]  =  '\0';
nd_temp_date1.arr[0]=  '\0';
nd_loc_date1.arr[0] =  '\0';
nd_temp_date2.arr[0]=  '\0';
nd_loc_date2.arr[0] =  '\0';
date_convert.arr[0] =  '\0';
d_post_year1.arr[0]	=  '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
nd_temp_date1.len= 0;
nd_loc_date1.len = 0;
date_convert.len = 0;
nd_temp_date2.len =0;
nd_loc_date2.len  =0;
d_post_year1.len  =0;
}

fun_change_loc_date()
{

strcpy(nd_temp_date1.arr,date_convert.arr);
nd_temp_date1.len = strlen(nd_temp_date1.arr);

get_local_date();

strcpy(date_convert.arr,nd_loc_date1.arr); 

}

fun_change_loc_date1()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);

get_local_date1();

strcpy(date_convert.arr,nd_loc_date.arr); 
}

fun_change_loc_date2()
{

strcpy(nd_temp_date2.arr,date_convert.arr);
nd_temp_date2.len = strlen(nd_temp_date2.arr);

get_local_date2();

strcpy(date_convert.arr,nd_loc_date2.arr); 
}

fun_change_loc_date3()
{

strcpy(nd_temp_date1.arr,date_convert.arr);
nd_temp_date1.len = strlen(nd_temp_date1.arr);

get_local_date3();

strcpy(date_convert.arr,nd_loc_date1.arr); 

}

fun_change_loc_date4()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);

get_local_date4();

strcpy(date_convert.arr,nd_loc_date.arr); 
}

/* upto here */