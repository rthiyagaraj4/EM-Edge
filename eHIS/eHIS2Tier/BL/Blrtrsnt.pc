/*****************************************************************************/
/*Program     :	BLRTRSNT.PC                                                  */
/*Description : Summary of Billing Transactions                              */
/*Author      : PVSS Prasad / 26-May-1997                                    */
/*Modified by : V.Srikanth / 09/04/1999                                      */
/*****************************************************************************/
  
/*                                                                             
#define DEBUG                                                                  
*/                                                                              
      
#define REP_WIDTH 118     
#include <stdio.h>
#include <string.h>  
#include <gl.h>
#include <bl.h>
#define ESC 0x1B

EXEC SQL BEGIN DECLARE SECTION;
 
    VARCHAR uid_pwd						[41],
		    d_session_id				[16],
		    d_pgm_date					[14],
            rep_date					[20],
            comp_name					[50],
            oper_id						[21],
			nd_facility_id				[3],
		    d_pgm_id					[10];

    VARCHAR nd_fm_trans_date           [20],
            nd_to_trans_date           [20],
			nd_fm_t_dt	               [20],
            nd_to_t_dt			       [20],
			nd_fm_blng_grp			   [5],
			nd_to_blng_grp			   [5],
			nd_fm_blng_serv			   [11],
			nd_to_blng_serv			   [11],
            nd_fm_episode_id           [9],
            nd_to_episode_id           [9],
			p_language_id              [3],
			date_convert			   [21],
			date_convert1			   [21],
			nd_loc_date				   [21],
			nd_loc_date1			   [21],
			nd_temp_date			   [21],
			nd_temp_date1			   [21],
            nd_fm_package_code         [11],
			l_pk_value		           [100],
		    l_translated_value	       [201],
            nd_to_package_code         [11];

    char    nd_print_opt, nd_report_opt;

	char	l_mesg[200];
	char loc_legend[999][201];
	char x_msg[200];
	int i,v_no_of_decimal;	
    VARCHAR d_episode_type				[2],
            d_prt_grp_hdr_code			[6],
            d_prt_grp_line_code			[4];


	VARCHAR	l_fm_facility_id			[4],
			l_to_facility_id			[4],
			l_report_option				[4],
			d_facility_id				[4],
			l_sm_facility_id			[4],
			l_sm_facility_name			[35],
			l_folio_facility_id			[4];

    VARCHAR d_prev_episode_type        [2];

    VARCHAR d_prt_grp_line_desc        [41];

    double  d_upd_net_charge_amt,
            d_upd_gross_charge_amt,
            d_upd_disc_amt;

   long     d_no_of_trans;


   char   string_var[150];
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

FILE *f1;

int page_no,
    line_no,
    first_line,
    g_count;

int	l_break_check = 0;

char filename[150];

char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1],
     hdr_line4[REP_WIDTH+1];


char rep_title[] = "SUMMARY OF BILLING TRANSACTIONS";

double g_epi_net_amt,
       g_epi_gross_amt,
       g_epi_disc_amt,
       g_tot_net_amt,
       g_tot_gross_amt,
       g_tot_disc_amt;


double	l_facility_net_amt,
		l_facility_gross_amt,
		l_facility_disc_amt;	 

long   g_epi_no_of_trans,
       g_tot_no_of_trans,
	   l_facility_no_of_trans;

void proc_main(argc,argv)
int argc;
char *argv[];
{
  
    if(argc < 5) 
	{
        disp_message(ERR_MESG,"Usage BLRTRSNT userid/password session_id pgm_date facility_id\n");
        proc_exit();
    }


    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_session_id.arr,argv[2]);
    d_session_id.len = strlen(d_session_id.arr);
    
    strcpy(d_pgm_date.arr,argv[3]);
    d_pgm_date.len = strlen(d_pgm_date.arr);

    EXEC SQL CONNECT :uid_pwd;

    if(OERROR) 
	{
		disp_message(ORA_MESG,"Unable to connect to oracle.\n");
		proc_exit();
    }


	set_meduser_role();

	strcpy(p_language_id.arr,l_language_id.arr);
    p_language_id.len = l_language_id.len;

    nd_fm_trans_date.arr[0]		=	'\0';
    nd_to_trans_date.arr[0]		=	'\0';
    nd_fm_t_dt.arr[0]			=	'\0';
    nd_to_t_dt.arr[0]			=	'\0';
    nd_fm_blng_grp.arr[0]		=	'\0';
	nd_to_blng_grp.arr[0]		=	'\0';
	nd_fm_blng_serv.arr[0]		=	'\0';
	nd_to_blng_serv.arr[0]		=	'\0';

	l_fm_facility_id.arr[0]			=	'\0';
	l_to_facility_id.arr[0]			=	'\0';
	l_report_option.arr[0]			=	'\0';
	d_facility_id.arr[0]			=	'\0';
	

    nd_fm_trans_date.len		=	0;
    nd_to_trans_date.len		=	0;
    nd_fm_t_dt.len				=	0;
    nd_to_t_dt.len				=	0;
	nd_fm_blng_grp.len			=	0;
	nd_to_blng_grp.len			=	0;
	nd_fm_blng_serv.len			=	0;
	nd_to_blng_serv.len			=	0;

	l_fm_facility_id.len		=	0;
	l_to_facility_id.len		=	0;
	l_report_option.len			=	0;
	d_facility_id.len			=	0;


	EXEC SQL SELECT PARAM1,
					PARAM2,
					PARAM3,
					PARAM4,
					PARAM5,
					PARAM6,
					PARAM7,
					PARAM8,
					PARAM9,
					param10,
					param11,
					param12,
					operating_facility_id
			 INTO   :nd_fm_trans_date,
	                :nd_to_trans_date,
					:nd_fm_t_dt,
					:nd_to_t_dt,
					:nd_fm_blng_grp,
					:nd_to_blng_grp,
					:nd_fm_blng_serv,
					:nd_to_blng_serv,
					:nd_report_opt,
					:l_fm_facility_id,
					:l_to_facility_id,
					:l_report_option,
					:d_facility_id
			 FROM   SY_PROG_PARAM
			 WHERE  PGM_ID     = 'BLRTRSNT'
			 AND    PGM_DATE   = :d_pgm_date
			 AND    SESSION_ID = TO_NUMBER(:d_session_id);

    if(OERROR || NO_DATA_FOUND)
	    err_mesg("SELECT failed on table  SY_PROG_PARAM",0,"");

    nd_fm_trans_date.arr[nd_fm_trans_date.len]  =	'\0';
    nd_to_trans_date.arr[nd_to_trans_date.len]  =	'\0';
	nd_fm_t_dt.arr[nd_fm_t_dt.len]				=	'\0';
    nd_to_t_dt.arr[nd_to_t_dt.len]				=	'\0';
	nd_fm_blng_grp.arr[nd_fm_blng_grp.len]		=	'\0';
	nd_to_blng_grp.arr[nd_to_blng_grp.len]		=	'\0';
	nd_fm_blng_serv.arr[nd_fm_blng_serv.len]	=	'\0';
	nd_to_blng_serv.arr[nd_to_blng_serv.len]	=	'\0';
	
	d_facility_id.arr[d_facility_id.len]	=	'\0';
	strcpy(g_facility_id, d_facility_id.arr);
  
	strcpy(filename,WORKING_DIR);
    strcat(filename,"blrtrsnt.lis");

    if( (f1=fopen(filename,"w")) == NULL) 
	{
        disp_message(ERR_MESG,"Error in opening output file...\n");
		proc_exit();
    }


    EXEC SQL SELECT ACC_ENTITY_NAME,
				    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
		     INTO   :comp_name,
				    :rep_date,
				    :oper_id
		     FROM   SY_ACC_ENTITY_LANG_VW
			WHERE   acc_entity_id = :d_facility_id
			AND		language_id=:p_language_id;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len]   = '\0';
    oper_id.arr[oper_id.len]     = '\0';

    page_no=1;
    line_no=1;
	fetch_legend_value();

    decl_curs();

   // if (nd_report_opt == 'O')
		put_inp_parm();
     do_report();
    
	print_end_of_rep(); //sai

    fclose(f1);

    del_parm();

    EXEC SQL COMMIT WORK RELEASE;

    return;
}

del_parm()
{

    EXEC SQL DELETE SY_PROG_PARAM
	         WHERE  PGM_ID     = 'BLRTRSNT' 
	         AND    PGM_DATE   = :d_pgm_date
	         AND    SESSION_ID = :d_session_id;

    if(OERROR) 
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,""); 
}


decl_curs()
{ 
    EXEC SQL DECLARE TRANS_LIST_CUR CURSOR FOR
	     SELECT a.EPISODE_TYPE, 
				a.operating_facility_id,
			    b.PRT_GRP_HDR_CODE,
			    b.PRT_GRP_LINE_CODE, 
			    COUNT(*),
			    SUM(NVL(a.UPD_NET_CHARGE_AMT,0)),
			    SUM(NVL(a.UPD_GROSS_CHARGE_AMT,0)),
			    SUM(NVL(a.UPD_DISC_AMT,0))
	      FROM  BL_PATIENT_CHARGES_FOLIO a, 
				BL_BLNG_SERV b , 
	            BL_BLNG_PRT_GRP_HDR c 
          WHERE A.BLNG_SERV_CODE 
		BETWEEN :nd_fm_blng_serv AND :nd_to_blng_serv 
		    AND A.BLNG_GRP_ID 
	    BETWEEN :nd_fm_blng_grp 
		    AND :nd_to_blng_grp 
			AND	A.BLNG_SERV_CODE = B.BLNG_SERV_CODE  
			AND B.PRT_GRP_HDR_CODE = C.PRT_GRP_HDR_CODE  
			AND A.TRX_DATE 
		BETWEEN TO_DATE(:nd_fm_trans_date,'DD/MM/YYYY HH24:MI') 	
		    AND TO_DATE(:nd_to_trans_date,'DD/MM/YYYY HH24:MI')    
			AND NVL(operating_facility_id,'X')
        BETWEEN DECODE(:l_report_option,'F',NVL(:l_sm_facility_id,'X'),'C',NVL(:l_fm_facility_id,'X'))
		    AND DECODE(:l_report_option,'F',NVL(:l_sm_facility_id,'X'),'C',NVL(:l_to_facility_id,'X'))
			AND ( NVL(PACKAGE_IND,'X')      = 'S' 
				  OR 
	              (NVL(PACKAGE_TRX_IND,'X')  = 'Y'
				   AND 
	               NVL(PACKAGE_IND,'X')      = 'P')
				   OR  
				  (AVAILED_IND IN('U','Y','C'))) 
			AND A.TRX_FINALIZE_IND          = 'Y'
			AND NVL(C.INCOME_YN,'Y')        = 'Y'
			AND NVL(a.confirmed_yn,'N')     = 'Y'
			AND NVL(operating_facility_id,'X') IN (SELECT facility_id
										             FROM sy_user
													WHERE user_id = USER)
          GROUP 
		     BY a.EPISODE_TYPE,
				a.operating_facility_id,
				b.PRT_GRP_HDR_CODE,
				b.PRT_GRP_LINE_CODE
		  ORDER 
		     BY a.EPISODE_TYPE,
				a.operating_facility_id,
				b.PRT_GRP_HDR_CODE,
				b.PRT_GRP_LINE_CODE;

    EXEC SQL DECLARE PRT_GRP_LINE_CUR CURSOR FOR
		     SELECT  LONG_DESC 
		     FROM    BL_BLNG_PRT_GRP_LINE_lang_vw
		     WHERE   PRT_GRP_HDR_CODE  = :d_prt_grp_hdr_code
		     AND     PRT_GRP_LINE_CODE = :d_prt_grp_line_code
			 AND		language_id=:p_language_id;

	EXEC SQL DECLARE facility_for_user_cur
	          CURSOR 
			     FOR  
			  SELECT DISTINCT a.facility_id,
					 NVL(b.acc_entity_name,'NO NAME')
				FROM sy_user_lang_vw a,
					 sy_acc_entity_lang_vw b
			   WHERE user_id = USER
				 AND trunc(SYSDATE)				 
			 BETWEEN NVL(a.eff_date_from,to_date('01011900','DDMMYYYY'))
			     AND NVL(a.eff_date_to,to_date('01014713','DDMMYYYY'))
			     AND NVL(b.acc_entity_id,'X') = NVL(a.facility_id,'X')
				 AND a.facility_id 
			 BETWEEN NVL(:l_fm_facility_id,'!!')
			     AND NVL(:l_to_facility_id,'~~')
				 AND B.language_id=:p_language_id;

   EXEC SQL OPEN facility_for_user_cur;

   if(OERROR)
		err_mesg("OPEN failed on cursor facility_for_user_cur",0,"");

/*   EXEC SQL OPEN TRANS_LIST_CUR;
      	
   if(OERROR)
		err_mesg("OPEN failed on cursor TRANS_LIST_CUR",0,"");*/

}

do_report()
{
    int cnt,
		hdr_cnt,
		first;

    int episode_change;

    hdr_cnt	=	0;
    line_no =	1;
    g_count =	1;
    put_hdr();

    init_prev_values();
    init_epi_totals();
    init_grand_totals();

    first = 1;
 
	while(fetch_facility_id())
	{
		if((strcmp(l_report_option.arr,"C")==0) && (l_break_check==1))
		{
			l_break_check==0;
			break;
		}

		print_facility_detail();
	
		while(fetch_trans_list()) 
		{
			episode_change = 0;

			if(episode_brk()) 
			{
				if(!first) 
				{
					print_epi_totals();
				}

				chk_break(1);
					if (d_episode_type.arr[0] == 'I')
						{
						  fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],"Inpatient");
						  }
						else if (d_episode_type.arr[0] == 'D')
						{
						 fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],"Daycare");
						}
						else if (d_episode_type.arr[0] == 'O')
						{
						 fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],"Outpatient");
						}
						else if (d_episode_type.arr[0] == 'E')
						{
						 fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],"Emergency");
						}
						else if (d_episode_type.arr[0] == 'R')
						{
						 fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],"Referral");
						}


			//	fprintf(f1,"%-17.17s       : %s\n\n",loc_legend[220],d_episode_type.arr);
				line_no +=2; 
				episode_change = 1;
			}//end of episode break
 
			if(strcmp(l_report_option.arr,"C")==0)
			{
				first = 0;
			}

			hdr_cnt = 1;
 
		 	print_rec();

			g_epi_net_amt     += d_upd_net_charge_amt;
		g_epi_gross_amt   += d_upd_gross_charge_amt;
			g_epi_disc_amt    += d_upd_disc_amt;

			g_tot_net_amt     += d_upd_net_charge_amt;
			g_tot_gross_amt   += d_upd_gross_charge_amt;
			g_tot_disc_amt    += d_upd_disc_amt;

			g_epi_no_of_trans += d_no_of_trans;
			g_tot_no_of_trans += d_no_of_trans;

			l_facility_net_amt	   += d_upd_net_charge_amt;
			l_facility_gross_amt   += d_upd_gross_charge_amt;
			l_facility_disc_amt	   += d_upd_disc_amt;
			l_facility_no_of_trans += d_no_of_trans;
 			copy_val();
 		} //end of while fetch trans list
 		print_facility_totals();
 		EXEC SQL CLOSE trans_list_cur;
    }
	
	if(hdr_cnt) 
	{
 		print_epi_totals();
 		print_grand_totals();
    }
  //   print_end_of_rep();
 	EXEC SQL CLOSE facility_for_user_cur;
}

print_rec()
{
    char s_net_amt[120], s_gross_amt[120], s_disc_amt[120];

     print_formated(s_net_amt,   d_upd_net_charge_amt);
   print_formated(s_gross_amt, d_upd_gross_charge_amt);
    print_formated(s_disc_amt,  d_upd_disc_amt); 

    chk_break(1);
//fprintf(f1,"   %-2s            %-2s / %-2s       %-40s     %4ld       %14s\n",
//    fprintf(f1,"   %-2s            %-5s / %-4s                 %-40.40s     %4ld       %14s\n",commented by saikiran
    fprintf(f1,"%-2s%-12s%-5s / %-4s%-16s%-40.40s%-5s%12d%-2s%18s\n",
		l_folio_facility_id.arr,
		"",
		d_prt_grp_hdr_code.arr, 
		d_prt_grp_line_code.arr,
		"",
		d_prt_grp_line_desc.arr,
		"",
		d_no_of_trans, 
		"",
		s_net_amt);

    line_no ++;

}

print_facility_detail()
{
	int i;

	if(strcmp(l_report_option.arr,"F")==0)
	{
		chk_break(5); 
		fprintf(f1,"%-2s   %-40s\n",l_sm_facility_id.arr,l_sm_facility_name.arr);
		for(i=0;i<(strlen(l_sm_facility_id.arr)+strlen(l_sm_facility_name.arr)+5);i++)
		{
			fprintf(f1,"-");
		}
		fprintf(f1,"\n");
		

		line_no=line_no+3;  
	}

	EXEC SQL OPEN TRANS_LIST_CUR;
      		
	if(OERROR)
		err_mesg("OPEN failed on cursor TRANS_LIST_CUR",0,"");
}


print_facility_totals()
{
    char  s_net_amt[120], s_gross_amt[120], s_disc_amt[120];
	
	if(strcmp(l_report_option.arr,"F")==0)
	{
		print_formated(s_net_amt,   l_facility_net_amt);
	print_formated(s_gross_amt, l_facility_gross_amt);
		 	print_formated(s_disc_amt,  l_facility_disc_amt); 
        
  
		chk_break(3);                      
		fprintf(f1,"                                                           -----------------------------------------------------------\n");
		fprintf(f1,"                   %18.18s                      :%-26s%13d%20.20s\n",loc_legend[210],"",l_facility_no_of_trans,s_net_amt);
		fprintf(f1,"                                                           ===========================================================\n");

		line_no += 6;
		init_facility_totals();
		init_prev_values();
		chk_break(55); 
	}
}


print_epi_totals()
{
    char  s_net_amt[120], s_gross_amt[120], s_disc_amt[120];

     print_formated(s_net_amt,   g_epi_net_amt);
    print_formated(s_gross_amt, g_epi_gross_amt);
    print_formated(s_disc_amt,  g_epi_disc_amt);
 
    chk_break(3); 
    fprintf(f1,"                                                           -----------------------------------------------------------\n");
        fprintf(f1,"                   %18.18s                       :%-25s%13d%20.20s\n",loc_legend[200],"", g_epi_no_of_trans,s_net_amt);
    fprintf(f1,"                                                           ===========================================================\n");

    line_no += 6; 
    init_epi_totals();
}

print_grand_totals()
{
    char s_net_amt[120], s_gross_amt[120], s_disc_amt[120];

      print_formated(s_net_amt,   g_tot_net_amt);
   print_formated(s_gross_amt, g_tot_gross_amt);
    print_formated(s_disc_amt,  g_tot_disc_amt); 

    chk_break(3); 
    fprintf(f1,"                                                           -----------------------------------------------------------\n");
        fprintf(f1,"                 %18.18s                         :%-25s%13d%20.20s\n",loc_legend[190],"", g_tot_no_of_trans,s_net_amt);
    fprintf(f1,"                                                           ===========================================================\n");

    line_no += 4; 
}

fetch_facility_id()
{
	if(strcmp(l_report_option.arr,"F")==0)
	{
		l_sm_facility_id.arr[0]	='\0';
		l_sm_facility_name.arr[0]	='\0';

		l_sm_facility_id.len		=0;
		l_sm_facility_name.len		=0;


		EXEC SQL FETCH facility_for_user_cur
				  INTO :l_sm_facility_id,
					   :l_sm_facility_name;

		if(OERROR)
			err_mesg("FETCH failed on cursor TRANS_LIST_CUR",0,"");

		if(NO_DATA_FOUND)
			return 0;
		
		l_sm_facility_id.arr[l_sm_facility_id.len]	 ='\0';
		l_sm_facility_name.arr[l_sm_facility_name.len] ='\0';
		
		return 1;
	}
	else if(strcmp(l_report_option.arr,"1")==0)
	{
		return 1;
	}
}

fetch_trans_list()
{

    d_episode_type.arr[0]		= '\0';
    d_prt_grp_hdr_code.arr[0]	= '\0';
    d_prt_grp_line_code.arr[0]  = '\0';
	l_folio_facility_id.arr[0]  = '\0';

    d_episode_type.len			= 0;
    d_prt_grp_hdr_code.len		= 0;
    d_prt_grp_line_code.len		= 0;
	l_folio_facility_id.len		= 0;

    d_upd_net_charge_amt		= 0;
    d_upd_gross_charge_amt		= 0;
    d_upd_disc_amt				= 0;
    d_no_of_trans				= 0;


    EXEC SQL FETCH TRANS_LIST_CUR INTO
                   :d_episode_type,
				   :l_folio_facility_id,
                   :d_prt_grp_hdr_code,
                   :d_prt_grp_line_code,
				   :d_no_of_trans,
				   :d_upd_net_charge_amt,
                   :d_upd_gross_charge_amt,
                   :d_upd_disc_amt;

    if(OERROR)
		err_mesg("FETCH failed on cursor TRANS_LIST_CUR",0,"");

    if(NO_DATA_FOUND)
	{
		if(strcmp(l_report_option.arr,"C")==0)
		{
			l_break_check = 1;
		}
		return 0;
	}

    d_episode_type.arr[d_episode_type.len]				= '\0';
	l_folio_facility_id.arr[l_folio_facility_id.len]	= '\0';
    d_prt_grp_hdr_code.arr[d_prt_grp_hdr_code.len]		= '\0';
    d_prt_grp_line_code.arr[d_prt_grp_line_code.len]	= '\0';

    fetch_prt_line_desc();

    return 1;
}

fetch_prt_line_desc()
{
    d_prt_grp_line_desc.arr[0]  = '\0';
    d_prt_grp_line_desc.len     = 0;

    EXEC SQL OPEN PRT_GRP_LINE_CUR;

    if(OERROR)
		err_mesg("OPEN failed on cursor PRT_GRP_LINE_CUR",0,"");

    EXEC SQL FETCH PRT_GRP_LINE_CUR
	          INTO :d_prt_grp_line_desc;

    if(OERROR)
		err_mesg("FETCH failed on cursor PRT_GRP_LINE_CUR",0,"");

    d_prt_grp_line_desc.arr[d_prt_grp_line_desc.len]  = '\0';
}

put_hdr()
{
//fprintf(f1,"FACILITY ID  PRINT GROUP/LINE  PRINT LINE DESCRIPTION                    NO. OF TRANS         AMOUNT\n");
//fprintf(f1,"%-15.15s  %-7.7s %-15.15s     %-7.7s %-30.30s    %-14.14s %12.12s\n");
    form_hdr();
    fprintf(f1,"----------------------------------------------------------------------------------------------------------------------\n");
//    fprintf(f1,"%-15.15s  %-7.7s %-15.15s     %-7.7s %-30.30s    %-14.14s %12.12s\n",loc_legend[120],loc_legend[130],loc_legend[140],loc_legend[130],loc_legend[160],loc_legend[170],loc_legend[180]);
    fprintf(f1,"%-14.14s%-7.7s %-15.15s%-5s%-7.7s %-35.35s%-2s%-17.17s%-s%14.14s\n",
	            loc_legend[120],loc_legend[130],loc_legend[140],"",loc_legend[130],loc_legend[160],"",loc_legend[170],"",loc_legend[180]);
 //             %-2s%-12s%-5s / %-4s%-20s%-40.40s%-5s%4ld%-7s%14s
    fprintf(f1,"----------------------------------------------------------------------------------------------------------------------\n");
 


    line_no=8;
}

chk_break(nol)
int nol;
{
	if(line_no+nol >= 55)  
	{
        fprintf(f1,"");
        line_no = 1;
		g_count = 1;
        ++page_no;
		put_hdr();
	}
}

put_inp_parm()
{
    form_hdr();

    fprintf(f1,"----------------------------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"%6.6s : 4.1\n",loc_legend[330]);
    fprintf(f1,"\n\n\n\n");
    fprintf(f1,"\t%-22.22s\n",loc_legend[270]);
    fprintf(f1,"\t----------------\n\n");
    /*fprintf(f1,"\t\tTRANSACTION DATE FROM : %s\n",nd_fm_t_dt.arr);
    fprintf(f1,"\t\t                 TO   : %s\n\n",nd_to_t_dt.arr);*/

 

	if (strcmp(nd_fm_t_dt.arr,"01/01/1800") == 0)
		{
		//strcpy(nd_fm_t_dt.arr,loc_legend[240]); 
		fprintf(f1,"\t\t%-22.22s %-10.10s : %-15.15s\n",loc_legend[80],loc_legend[60],loc_legend[240]);//nd_fm_t_dt
	    }
	else
	    {
	    init_date_temp_var();                              //pradeep
	    strcpy(date_convert1.arr,nd_fm_trans_date.arr);            // pradeep //nd_fm_t_dt
	    fun_change_loc_date1();
		fprintf(f1,"\t\t%-22.22s %-10.10s : %s\n",loc_legend[80],loc_legend[60],date_convert1.arr);

     }
  
	if (strcmp(nd_to_t_dt.arr,"31/12/4712") == 0)
	    {
		//strcpy(nd_fm_t_dt.arr,loc_legend[230]);  
	    fprintf(f1,"\t\t                       %-8.8s   : %-15s\n\n",loc_legend[70],loc_legend[230]);
	    }
	else
		{
		init_date_temp_var();                              //pradeep
	    strcpy(date_convert1.arr,nd_to_trans_date.arr);            // pradeep //nd_to_t_dt
	    fun_change_loc_date1();
		fprintf(f1,"\t\t                       %-8.8s   : %s\n\n",loc_legend[70],date_convert1.arr);
		
        }

	if (l_fm_facility_id.arr[0] == '!')

		fprintf(f1,"\t\t%-22.22s %-10.10s : %-10.10s\n",loc_legend[90],loc_legend[60],loc_legend[240]);
		else
		fprintf(f1,"\t\t%-22.22s %-10.10s : %s\n",loc_legend[90],loc_legend[60],l_fm_facility_id.arr);

	if (l_to_facility_id.arr[0] == '~')
		fprintf(f1,"\t\t                       %-8.8s   : %-12.12s\n\n",loc_legend[70],loc_legend[230]);
		else
		fprintf(f1,"\t\t                       %-8.8s   : %s\n\n",loc_legend[70],l_to_facility_id.arr);

	if (nd_fm_blng_grp.arr[0] == '!')
		fprintf(f1,"\t\t%-22.22s %-10.10s : %-10.10s\n",loc_legend[100],loc_legend[60],loc_legend[240]);
			else
			fprintf(f1,"\t\t%-22.22s %-10.10s : %s\n",loc_legend[100],loc_legend[60],nd_fm_blng_grp.arr);

	if (nd_to_blng_grp.arr[0] == '~')
		fprintf(f1,"\t\t                       %-8.8s   : %-12.12s\n\n",loc_legend[70],loc_legend[230]);
		else
		fprintf(f1,"\t\t                       %-8.8s   : %s\n\n",loc_legend[70],nd_to_blng_grp.arr);

	if (nd_fm_blng_serv.arr[0] == '!')
		fprintf(f1,"\t\t%-22.22s %-10.10s : %-10.10s\n",loc_legend[110],loc_legend[60],loc_legend[240]);
		else
		fprintf(f1,"\t\t%-22.22s %-10.10s : %s\n",loc_legend[110],loc_legend[60],nd_fm_blng_serv.arr);

	if (nd_to_blng_serv.arr[0] == '~')
		fprintf(f1,"\t\t                       %-8.8s   : %-12.12s\n\n",loc_legend[70],loc_legend[230]);
		else
		fprintf(f1,"\t\t                       %-8.8s   : %s\n\n",loc_legend[70],nd_to_blng_serv.arr);
    
    fprintf(f1,"");
    ++page_no;

}

print_end_of_rep()
{
    fprintf(f1,"                                                    **%-s **                                                             \n",loc_legend[310]);
}

init_prev_values()
{
    d_prev_episode_type.arr[0]  = '\0';
    d_prev_episode_type.len     = 0;
}

copy_val()
{
    strcpy(d_prev_episode_type.arr,d_episode_type.arr);
    d_prev_episode_type.len     = strlen(d_prev_episode_type.arr);
}

episode_brk()
{
		return(strcmp(d_prev_episode_type.arr,d_episode_type.arr));	
}

init_facility_totals()
{
	l_facility_net_amt	   = 0;
	l_facility_gross_amt   = 0;
	l_facility_disc_amt	   = 0;
	l_facility_no_of_trans = 0;
}

init_epi_totals()
{
	g_epi_net_amt		= 0;
    g_epi_gross_amt		= 0;
    g_epi_disc_amt		= 0;
    g_epi_no_of_trans	= 0;
}

init_grand_totals()
{
	g_tot_net_amt      = 0;
    g_tot_gross_amt    = 0;
    g_tot_disc_amt     = 0;
    g_tot_no_of_trans  = 0;
}

print_formated(s_amt, l_amt)
double l_amt;
char s_amt[120];
{

 /*   if(l_amt < 0)
	{
 
        put_val(s_amt,-l_amt);
        format_amt(s_amt);
        strcat(s_amt,"-");
     }
    else 
	{

        put_val(s_amt,l_amt);		    

        format_amt(s_amt);
       strcat(s_amt," ");
     }*/
	char  str_amt[140];
    int s_amt_len=0;
	
   EXEC SQL SELECT no_of_decimal
               INTO :v_no_of_decimal
	  		   FROM sm_acc_entity_param
              WHERE acc_entity_id = (SELECT acc_entity_code 
									   FROM sy_acc_entity
									  WHERE acc_entity_id = :nd_facility_id);

 



if(l_amt < 0)
		{

            put_val(s_amt,-l_amt);        
	 		u_ltrim(s_amt);
			s_amt_len = strlen(s_amt);
			if (s_amt_len>=14)
				{
					strcat(s_amt,"-");
					sprintf(str_amt,"%14s",s_amt);  
					fprintf(f1,"%14s",s_amt);
				}
				else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
				{  
				   strcat(s_amt,"-");
				   sprintf(str_amt,"%14s",s_amt);  
				   fprintf(f1,"%14s",s_amt);
				}
				else 
				{   
				   format_amt(s_amt);
				   strcat(s_amt,"-");
			       sprintf(str_amt,"%14s",s_amt);  
				   fprintf(f1,"%14s",s_amt); 
				} 
					 
		}
		else 
		{ 
        put_val(s_amt,l_amt); 
		u_ltrim(s_amt);

		s_amt_len = strlen(s_amt);
	    	    		
		if (s_amt_len>=14)
		{ 
		sprintf(str_amt,"%14s",s_amt);  
		fprintf(f1,"%14s",s_amt);
		}
		else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
		{
 
		   sprintf(str_amt,"%14s",s_amt);  
		   fprintf(f1,"%14s",s_amt);
		   }
		else 
		{   
            sprintf(str_amt,"%14s",s_amt);  
		   format_amt(s_amt); 
		   fprintf(f1,"%14s",s_amt); 
		}
		

	}
  
}

form_hdr()
{

    static int first = 1;
    char buf[17];
    char ctmp[50];
	char dtmp[50];
    int col; 
	if (strcmp(nd_fm_t_dt.arr,"01/01/1800") == 0)
	strcpy(nd_fm_t_dt.arr,loc_legend[240]);
	
    if (strcmp(nd_to_t_dt.arr,"31/12/4712") == 0)
   	strcpy(nd_to_t_dt.arr,loc_legend[230]); 
   
	

    if(first) 
	{
        memset(hdr_line1,' ',REP_WIDTH+1);
        memset(hdr_line2,' ',REP_WIDTH+1);
  
        //strncpy(hdr_line1,"MDL : BL",8);
		strcpy(hdr_line1,loc_legend[280]);
		strcat(hdr_line1," : ");
		strcat(hdr_line1,loc_legend[320]);
		col = (int)(REP_WIDTH-strlen(comp_name.arr))/2;
        strcpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));
        col = (REP_WIDTH-strlen(rep_date.arr));
		
    
        //strncpy(hdr_line2,"OPR :",5);
		//strcpy(hdr_line2+6,oper_id.arr);
		strcpy(hdr_line2,loc_legend[290]);
		strcat(hdr_line2," : ");
        strcat(hdr_line2,oper_id.arr);

		first = 0;
	
    }

    memset(hdr_line3,' ',REP_WIDTH+1);

    //strncpy(hdr_line3,"REP : BLRTRSNT",14);
	strcpy(hdr_line3,loc_legend[300]);
	strcat(hdr_line3," : ");
	strcat(hdr_line3,loc_legend[40]);
    col = (int)(REP_WIDTH-strlen(rep_title))/2;
    strncpy(hdr_line3+col,loc_legend[50],strlen(rep_title));
	
	//strncpy(hdr_line3+col,rep_title,strlen(rep_title));
    sprintf(buf,"%-8.8s :  %4d",loc_legend[30],page_no);
	 //sprintf(buf,"PAGE :      %4d",page_no);
    strcpy(hdr_line3+(REP_WIDTH-16),buf);
	init_date_temp_var();                            
	    strcpy(date_convert1.arr,rep_date.arr);           
	    fun_change_loc_date1();
        //strcpy(hdr_line1+col,date_convert1.arr);
    fprintf(f1,"%-9.9s                           %-36s                            %-10s\n",hdr_line1,comp_name.arr,date_convert1.arr);
    fprintf(f1,"%-16.16s\n",hdr_line2);
    fprintf(f1,"%s                       %80s\n",hdr_line3,hdr_line3+col); 


    memset(hdr_line4,' ',REP_WIDTH+1);
	//sprintf(ctmp,"TRANSACTION DATE FROM : %s TO %s",nd_fm_t_dt.arr,
      //            nd_to_t_dt.arr);
	
	
 if(strcmp(nd_fm_t_dt.arr,loc_legend[240])==0)
   {
	 sprintf(ctmp,"%20.20s %8.8s : %s ",loc_legend[80],loc_legend[60],nd_fm_t_dt.arr);
	 
	 }
	 else
	 {
		init_date_temp_var();                            
	    strcpy(date_convert.arr,nd_fm_t_dt.arr);           
	    fun_change_loc_date();
	 	sprintf(ctmp,"%20.20s %8.8s : %s ",loc_legend[80],loc_legend[60],date_convert.arr);
		
	}
	
	if(strcmp(nd_to_t_dt.arr,loc_legend[230])==0)
     	{
	 sprintf(dtmp,"%5.5s %s",loc_legend[70],nd_to_t_dt.arr);
	 }
	 else
	{
	    init_date_temp_var();                            
	    strcpy(date_convert.arr,nd_to_t_dt.arr);           
	    fun_change_loc_date();
 	    sprintf(dtmp,"%5.5s %s",loc_legend[70],date_convert.arr);
	}

    col = (int)(REP_WIDTH-strlen(ctmp))/2;
    strncpy(hdr_line4+col,ctmp,strlen(ctmp));
    //fprintf(f1,"%s\n",hdr_line4); 
	fprintf(f1,"                        %s %s\n",ctmp,dtmp); 
	
{
if (strcmp(nd_fm_t_dt.arr,loc_legend[240]) == 0)
{
   strcpy(nd_fm_t_dt.arr,"01/01/1800");
   strcpy(nd_to_t_dt.arr,"31/12/4712");
   }
else
{
   strcpy(nd_fm_t_dt.arr,nd_fm_t_dt.arr);
   strcpy(nd_to_t_dt.arr,nd_to_t_dt.arr);

 }
} 
}
fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLRTRSNT.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}

get_local_date()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	
	  
	  :nd_loc_date :=sm_convert_date_2t(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id);

       	//get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);  
      
	   //:nd_loc_date := to_char(t_date,'DD/MM/YYYY');
	

	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

                     
init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';
date_convert1.arr[0] ='\0';

nd_temp_date.len = 0;
nd_temp_date.len = 0;
nd_loc_date.len  = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
date_convert1.len = 0;
}


fun_change_loc_date()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);


get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 

}



fun_change_loc_date1()
{

strcpy(nd_temp_date1.arr,date_convert1.arr);
nd_temp_date1.len = strlen(nd_temp_date1.arr);


get_local_date1();

strcpy(date_convert1.arr,nd_loc_date1.arr); 

}

get_local_date1()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date1  date;
	
	BEGIN
	
	  :nd_loc_date1 :=sm_convert_datetime_2t(to_date(:nd_temp_date1,'DD/MM/YYYY HH24:MI'),:p_language_id);
       
	   	//get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date1,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date1);  
      
	   //:nd_loc_date1 := to_char(t_date1,'DD/MM/YYYY HH24:MI');
	

	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}