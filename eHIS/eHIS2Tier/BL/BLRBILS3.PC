/************************************************************************/
/* OCS MEDICOM VER 1.0                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLRBILS3.PC                                  */  
/* AUTHOR                : M.NITIN KUMAR                                */
/* DATE WRITTEN          : 10-JUL-1993                                  */
/*                                                                      */
/* MODIFIED              : ajit        15/12/1997                       */  
/* MODIFIED              : VSK / 14/12/2000 / BLENH PURPOSE             */
/*                                                                      */
/* CALLED FROM           :                                              */
/*                                                                      */
/*  FUNCTION             :                                              */ 
/*                                                                      */
/*  TABLE DETAILS                                                       */
/*                                                                      */
/*  PARAMETERS           :            -                                 */
/*                                                                      */
/*  SUBROUTINES          :                                              */
/*                                                                      */
/*                                                                      */
/************************************************************************/
    
     
/*   All reference to HK$ change to Dhs
   -  For American Hospital Implementation. -- G. Viswanath/31/7/1996
*/   

#include <stdio.h>
#include <string.h>  
#include "bl.h"

#define OERROR (sqlca.sqlcode < 0)
#define NO_DATA_FOUND (sqlca.sqlcode == 1403)  
#define RESOURCE_BUSY (sqlca.sqlcode == -54)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define INIT_MESG "Report Generation In Progress..."

#define DEST_NAME "blrbils3.lis"

#define HSKIP_10 2
#define HSKIP_11 68
#define HSKIP_12 94
#define HSKIP_13 111

#define VSKIP_1 2
#define VSKIP_2 3
#define VSKIP_3 5

#define MAX_LINES 50

#define LEGEND 1

#define LENGTH_WORDS 65 

/*
#define DEBUG 
*/

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd      [132],
	   hosp_name    [31],
	   date_time    [20],
	   user_id      [91],
	   cur_str      [8],
	   sub_cur_str  [8],
	   nd_pgm_date  [35],
	   nd_session_id[16],
	   nd_operating_facility_id [3];

   VARCHAR nd_episode_id              [11],
	   nd_visit_id                [5],
	   nd_fm_date                 [11],
	   nd_to_date                 [11],
/*            Modified by Madesh--------->        */
	   nd_doc_type                            [7],
	   nd_doc_num                             [9],  
		   nd_stat                                        [2],
/*  <---------Modified by Madesh                */           
	   prt_grp_fm                 [3],
	   prt_line_fm                [3],
	   prt_grp_to                 [3],
	   prt_line_to                [3];

   char    nd_episode_type,nd_ins_pat,
	   nd_rep_opt,                        
/*            Modified by Madesh--------->        */               
	   nd_canc_chrg;                            
/*  <---------Modified by Madesh                */                                 
	   

   VARCHAR d_doc_type_code            [7],
	   d_doc_date                 [11],
	   nd_sys_date                 [11],
	   d_admission_date           [11],
	   d_ward_code                [5],
	   d_room_num                 [5],
	   d_bed_num                  [9],
	   d_physician_id             [16],
	   d_physician_name           [31],
	   d_blng_grp_id              [3],
	   d_prt_grp_hdr_code         [3],
	   d_prt_grp_line_code        [3],
	   d_blng_grp_desc            [31],
	   d_patient_id               [21],
	   d_patient_short_name       [61],
	   d_patient_short_name1      [61],
	   d_short_name_loc_lang      [61],
	   d_sex                      [2],
         d_short_name_full          [61],
	   d_hdr_long_desc            [41],
	   d_hdr_loc_lang_short_desc  [17],
	   d_line_long_desc           [41],
	   d_line_loc_lang_short_desc [17],
	   d_doc_num_prt              [9],
	   d_episode_id_prt           [9],
	   d_prv_doc_type_code        [7],
	   d_prv_doc_num              [9],
	   d_prv_doc_date             [11],
	   d_bill_fm_date             [11],
	   d_bill_to_date             [11],
	   d_last_doc_type_code       [7],
	   d_last_doc_num             [9],
	   d_last_doc_date            [11],
	   d_pkg_serv_desc            [41],
	   d_pkg_serv_desc_loc_lang   [17],
	   d_blng_serv_code           [11],
	   d_blng_serv_desc           [41],
	   d_blng_serv_desc_loc_lang  [16],
	   d_clinic_code              [5],
	   d_visit_date_time          [17],
	   d_serv_item_desc           [41],
	   d_folio_remarks            [51];

char       d_package_ind;   

int        d_num_of_deps_paid;
int	   no_of_dec;
float      d_qty;

long       d_doc_num;
	   

double     d_serv_disc_amt,
	   d_man_disc_amt,
	   d_overall_disc_amt,
	   d_prepay_adj_amt,
	   d_deposit_adj_amt,
/*            Modified by Madesh--------->        */
	   d_man_disc,
	   d_dep_amt,
	   d_pre_amt,
	   d_bill_amt,
/*  <---------Modified by Madesh                */                                                 

	   d_bill_paid_amt,
	   d_gross_amt,
	   d_prv_amt,
	   d_prv_outst_amt,
	   d_tot_dep_paid_amt,
           bl_hdr_bill_tot_adjust_amt             , //EPNH 29/10/2004
	   bl_hdr_bill_tot_exempt_amt             ,
           bl_hdr_bill_tot_write_off_amt    ;

char filename[150];

EXEC SQL END DECLARE SECTION;


/* EXEC ORACLE OPTION(HOLD_CURSOR = YES);
EXEC ORACLE OPTION(REBIND = NO); */

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

char g_prt_grp_hdr_code[3];
char g_prt_grp_line_code[3];

int  g_first_break ;
int  g_print_line_desc;
int g_print_subtot;
int lno = 0, pno = 0;

double g_cum_amt = 0,g_sub_tot = 0;
double tot_disc_amt = 0;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
   if (argc != 5)
   {
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"BLRBILL3");

   if(sql_connect() == -1)
   {
      disp_message(ORA_MESG,"Error in connecting to Oracle");
      if (uid_pwd.len == 0)
	 disp_message(ERR_MESG,"Null oracle uid/pwd");
      proc_exit();
   }

   set_meduser_role();

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);


   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   nd_episode_id.arr[0]    = '\0';
   d_episode_id_prt.arr[0] = '\0';
   nd_visit_id.arr[0]      = '\0';
   d_patient_id.arr[0]     = '\0';
   nd_fm_date.arr[0]       = '\0';
   nd_to_date.arr[0]       = '\0';
   prt_grp_fm.arr[0]       = '\0';
   prt_line_fm.arr[0]      = '\0';
   prt_grp_to.arr[0]       = '\0';
   prt_line_to.arr[0]      = '\0';
   d_doc_date.arr[0]       = '\0';
   nd_sys_date.arr[0]       = '\0';
   nd_operating_facility_id.arr[0] = '\0';

   nd_episode_id.len       = 0;
   d_episode_id_prt.len    = 0;
   nd_visit_id.len         = 0;
   d_patient_id.len        = 0;
   nd_fm_date.len          = 0;
   nd_to_date.len          = 0;
   prt_grp_fm.len          = 0;
   prt_line_fm.len         = 0;
   prt_grp_to.len          = 0; 
   prt_line_to.len         = 0;
   d_doc_date.len          = 0;
   nd_sys_date.len         = 0;
   nd_operating_facility_id.len =0;

   nd_episode_type = '\0';
   nd_rep_opt      = '\0';
   nd_ins_pat      = '\0';

   EXEC SQL SELECT OPERATING_FACILITY_ID,
				   PARAM1,PARAM2,
				   LTRIM(TO_CHAR(TO_NUMBER(PARAM2),'00000009')),
				   PARAM3,PARAM4,PARAM5,PARAM6,
				   PARAM7,PARAM8,PARAM9,PARAM10,PARAM11,
				   PARAM14,PARAM15,PARAM16,PARAM17,PARAM18,PARAM19,     
				   TO_CHAR(SYSDATE,'DD/MM/YYYY'),
				   PARAM20,
				   PARAM21,
				   PARAM22
	      INTO     :nd_operating_facility_id,
					:nd_episode_type,
					:nd_episode_id,
				    :d_episode_id_prt,
					:nd_visit_id,
				   :d_patient_id,
		   :nd_fm_date,
		   :nd_to_date,
		   :prt_grp_fm,
		   :prt_line_fm,
		   :prt_grp_to,
		   :prt_line_to,
		   :nd_rep_opt,
/*            Modified by Madesh--------->        */                   
		   :nd_canc_chrg,
		   :nd_doc_type,
		   :nd_doc_num,
		   :nd_stat,                        
/*  <---------Modified by Madesh                */                                                                    
		   :d_doc_date,
/*  <---------Modified by VSK 18/10/1998        */                 
		   :nd_ins_pat,   /* BLENH */                                                   
		   :nd_sys_date,
		   :bl_hdr_bill_tot_adjust_amt , //EPNH 29/10/2004
              	   :bl_hdr_bill_tot_exempt_amt ,
                   :bl_hdr_bill_tot_write_off_amt
	      FROM SY_PROG_PARAM
	     WHERE PGM_ID     = 'BLRBILL3'
	       AND SESSION_ID = :nd_session_id
	       AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
	err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
	err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_episode_id.arr[nd_episode_id.len]  = '\0';
   d_episode_id_prt.arr[d_episode_id_prt.len]  = '\0';
   nd_visit_id.arr[nd_visit_id.len]  = '\0';
   d_patient_id.arr[d_patient_id.len]  = '\0';
   nd_fm_date.arr[nd_fm_date.len]  = '\0';
   nd_to_date.arr[nd_to_date.len]  = '\0';
   prt_grp_fm.arr[prt_grp_fm.len]  = '\0';
   prt_line_fm.arr[prt_line_fm.len]  = '\0';
   prt_grp_to.arr[prt_grp_to.len]  = '\0';
   prt_line_to.arr[prt_line_to.len]  = '\0';
   d_doc_date.arr[d_doc_date.len]  = '\0';          
   nd_sys_date.arr[nd_sys_date.len]  = '\0';          
   nd_operating_facility_id.arr[nd_operating_facility_id.len] = '\0';

/*            Modified by Madesh--------->        */                      
   nd_doc_type.arr[nd_doc_type.len]= '\0';
   nd_doc_num.arr[nd_doc_num.len]= '\0';
   nd_stat.arr[nd_stat.len]='\0';
/*  <---------Modified by Madesh                */                                                 

   strcpy(g_facility_id, nd_operating_facility_id.arr);

/*
   EXEC SQL SELECT PARAM1,PARAM2,
		   LTRIM(TO_CHAR(TO_NUMBER(PARAM2),'00000009')),
		   PARAM3,PARAM4,PARAM5,PARAM6,
		   PARAM7,PARAM8,PARAM9,PARAM10,PARAM11,
		   TO_CHAR(SYSDATE,'DD/MM/YYYY')
	      INTO :nd_episode_type,
		   :nd_episode_id,
				   :d_episode_id_prt,
		   :nd_visit_id,
				   :d_patient_id,
		   :nd_fm_date,
		   :nd_to_date,
		   :prt_grp_fm,
		   :prt_line_fm,
		   :prt_grp_to,
		   :prt_line_to,
				   :nd_rep_opt,
			   :d_doc_date
	      FROM SY_PROG_PARAM
	     WHERE PGM_ID     = 'BLRBILL3'
	       AND SESSION_ID = :nd_session_id
	       AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
	err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
	err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_episode_id.arr[nd_episode_id.len]  = '\0';
   d_episode_id_prt.arr[d_episode_id_prt.len]  = '\0';
   nd_visit_id.arr[nd_visit_id.len]  = '\0';
   d_patient_id.arr[d_patient_id.len]  = '\0';
   nd_fm_date.arr[nd_fm_date.len]  = '\0';
   nd_to_date.arr[nd_to_date.len]  = '\0';
   prt_grp_fm.arr[prt_grp_fm.len]  = '\0';
   prt_line_fm.arr[prt_line_fm.len]  = '\0';
   prt_grp_to.arr[prt_grp_to.len]  = '\0';
   prt_line_to.arr[prt_line_to.len]  = '\0';
   d_doc_date.arr[d_doc_date.len]  = '\0';
*/
   start_prog_msg();

   hosp_name.arr[0]  = '\0';
   hosp_name.len     = 0;
   cur_str.arr[0]    = '\0';
   cur_str.len       = 0;
   sub_cur_str.arr[0]   = '\0';
   sub_cur_str.len      = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME,
				   RTRIM(BASE_CURRENCY),
				   BASE_CURRENCY_DEC
		    INTO   :hosp_name,
					cur_str,
					sub_cur_str
		    FROM   SY_ACC_ENTITY
			WHERE  ACC_ENTITY_ID = :nd_operating_facility_id;

    if(OERROR)
	err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]  = '\0';
   cur_str.arr[cur_str.len]      = '\0';
   sub_cur_str.arr[sub_cur_str.len] = '\0';

   prt_bill();

   EXEC SQL DELETE FROM SY_PROG_PARAM
		  WHERE PGM_ID     = 'BLRBILL3'
		    AND SESSION_ID = :nd_session_id
		    AND PGM_DATE   = :nd_pgm_date;
   if (OERROR)   
	err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");


   end_prog_msg();
   EXEC SQL COMMIT WORK RELEASE;
   return ;
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

declare_cursors()
{

    EXEC SQL DECLARE IP_EPISODE_CUR CURSOR FOR
	     SELECT  TO_CHAR(ADMISSION_DATE_TIME,'DD/MM/YYYY'),
		     CUR_WARD_CODE,
		     CUR_ROOM_NUM,
		     CUR_BED_NUM,
		     CUR_PHYSICIAN_ID
	     FROM    IP_EPISODE
	     WHERE   EPISODE_ID = :nd_episode_id
		 AND     FACILITY_ID = :nd_operating_facility_id;

    EXEC SQL DECLARE BL_PAT_FOLIO_CUR CURSOR FOR
	     SELECT  PRT_GRP_HDR_CODE,
		         PRT_GRP_LINE_CODE,
		         DECODE(PACKAGE_IND,'P','P',
			     DECODE(SERV_ITEM_CODE,NULL,'S',
				 SERV_ITEM_DESC)),
		         DECODE(PACKAGE_IND,'P',PACKAGE_SERVICE_CODE,
			     DECODE(SERV_ITEM_CODE,NULL,BLNG_SERV_CODE,
				 SERV_ITEM_CODE)),
		         SUM(NVL(UPD_NET_CHARGE_AMT,0)),
/**********************MODIFIED BY VSK FOR BLENH**********************
 The qty field modified to take the qty of the seq no 0 and not 1. The 
 seq no 1 will come only on split case. All other case 0 will be there
 defenitely. So only seq no 0, qty is picked up for displaying in the
 report.
 *********************************************************************/
		     SUM(DECODE(PACKAGE_IND,'P',
			   DECODE(TRX_DOC_REF_SEQ_NUM,1,NVL(SERV_QTY,0),0.00),
			   DECODE(TRX_DOC_REF_SEQ_NUM,0,NVL(SERV_QTY,0),0.00))),
		         SUM(NVL(UPD_DISC_AMT,0)),
		         FOLIO_REMARKS
	     FROM    BL_PATIENT_CHARGES_FOLIO
	     WHERE   EPISODE_TYPE = :nd_episode_type
	     AND     PATIENT_ID   = :d_patient_id
	     AND     EPISODE_ID   = :nd_episode_id
	     AND     VISIT_ID     = DECODE(:nd_episode_type,
					   'I',VISIT_ID,'D',VISIT_ID,:nd_visit_id)
	     AND     TRUNC(TRX_DATE) BETWEEN
		     TO_DATE(NVL(:nd_fm_date,'01/01/1000'),'DD/MM/YYYY')
			AND
		     TO_DATE(NVL(:nd_to_date,'01/01/3000'),'DD/MM/YYYY')
	     AND     RPAD(PRT_GRP_HDR_CODE,2,' ')||PRT_GRP_LINE_CODE BETWEEN 
		     RPAD(NVL(:prt_grp_fm,'!!'),2,' ')||NVL(:prt_line_fm,'!!')
			AND
		     RPAD(NVL(:prt_grp_to,'~~'),2,' ')||NVL(:prt_line_to,'~~')
/* BLENH */	 AND    NVL(INS_PKG_PAT_IND,'X') = DECODE(:nd_ins_pat,'I','I','P','P','A',NVL(INS_PKG_PAT_IND,'X'))
/* BLENH */  AND     NVL(INS_PKG_PAT_IND,'X') != 'K'
	     AND     NVL(TRX_FINALIZE_IND,'X') = 'Y'
/*            Modified by Madesh--------->        */                                 
	     AND ((TRX_STATUS IS NULL AND :nd_canc_chrg = 'N')
					   OR
			 ((TRX_STATUS LIKE '%' OR TRX_STATUS IS NULL) AND :nd_canc_chrg = 'Y'))
	     AND ((:nd_stat = 'B' AND BILL_DOC_TYPE_CODE = :nd_doc_type AND 
				 to_char(BILL_DOC_NUM) = :nd_doc_num AND BILLED_FLAG = 'Y')
				       OR
		     (:nd_stat is null and nvl(billed_flag,'N') in ('N','Y')))      
/*  <---------Modified by Madesh                */                                                                                          
	     AND     NVL(PACKAGE_TRX_IND,'X')  = 'N'
		 AND     OPERATING_FACILITY_ID = :nd_operating_facility_id
	     GROUP BY PRT_GRP_HDR_CODE, PRT_GRP_LINE_CODE,
		     DECODE(PACKAGE_IND,'P','P',
			  DECODE(SERV_ITEM_CODE,NULL,'S',
				 SERV_ITEM_DESC)),
		     DECODE(PACKAGE_IND,'P',PACKAGE_SERVICE_CODE,
			  DECODE(SERV_ITEM_CODE,NULL,BLNG_SERV_CODE,
				 SERV_ITEM_CODE)),FOLIO_REMARKS;

    EXEC SQL DECLARE BL_BLNG_GRP_CUR CURSOR FOR
	     SELECT  LONG_DESC
	     FROM    BL_BLNG_GRP 
	     WHERE   BLNG_GRP_ID = :d_blng_grp_id;

    EXEC SQL DECLARE MP_PATIENT_MAST_CUR CURSOR FOR
	     SELECT  substr(SHORT_NAME,1,30),
		         decode(substr(short_name,31,60),NULL,' ',substr(short_name,31,60)) shortname1,
		     	 SUBSTR(SHORT_NAME_LOC_LANG,1,16),
		     SEX,short_name
	     FROM    MP_PATIENT_MAST
	     WHERE   PATIENT_ID = :d_patient_id;

    EXEC SQL DECLARE SY_PHYSICIAN_MAST_CUR CURSOR FOR
	     SELECT  FULL_NAME
	     FROM    SY_PHYSICIAN_MAST
	     WHERE   PHYSICIAN_ID = :d_physician_id;

    EXEC SQL DECLARE PRT_GRP_HDR_CUR CURSOR FOR
	     SELECT  LONG_DESC,
		     LOC_LANG_SHORT_DESC
	     FROM   BL_BLNG_PRT_GRP_HDR
	     WHERE  PRT_GRP_HDR_CODE = :d_prt_grp_hdr_code;

    EXEC SQL DECLARE PRT_GRP_LINE_CUR CURSOR FOR
	     SELECT  LONG_DESC,
		     LOC_LANG_SHORT_DESC
	     FROM   BL_BLNG_PRT_GRP_LINE
	     WHERE  PRT_GRP_HDR_CODE  = :d_prt_grp_hdr_code
	     AND    PRT_GRP_LINE_CODE = :d_prt_grp_line_code;

}


prt_bill()
{

    open_files();
    declare_cursors();

    EXEC SQL OPEN IP_EPISODE_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor IP_EPISODE_CUR",0,"");


    if(fetch_ip_episode()) {

	pno = 1;
	g_cum_amt = 0;
	tot_disc_amt = 0;

	fetch_blng_grp_desc();
	fetch_patient_name();
	fetch_physician_name();
	print_page_head();

	EXEC SQL OPEN BL_PAT_FOLIO_CUR;

	if(OERROR)
	    err_mesg("OPEN failed on cursor BL_PAT_FOLIO_CUR",0,"");

	g_prt_grp_line_code[0] = '\0';
	g_first_break = 1;
	g_print_subtot = 0;

	while(fetch_folio()) {


	    if(strcmp(g_prt_grp_line_code,d_prt_grp_line_code.arr)) 
		print_break_line();

	    if(g_print_subtot) {
	       fprintf(fp,"\n");
	       lno++;
	    }

	    print_line();

	    strcpy(g_prt_grp_hdr_code,d_prt_grp_hdr_code.arr);
	    strcpy(g_prt_grp_line_code,d_prt_grp_line_code.arr);

	    g_cum_amt += d_gross_amt;
	    g_sub_tot += d_gross_amt;
	    tot_disc_amt += d_serv_disc_amt;
	    g_print_subtot = 1;


	} /* end of while fetch_folio() */

	if(g_print_subtot)
	    print_subtot();

	print_balance_due();


    } /* end of while fetch_bill_hdr()  */

    fflush(fp);
    fclose(fp);
    return 1;

}

open_files()
{
  strcpy(filename,WORKING_DIR);
  strcat(filename,"blrbils3.lis");
   
   if ((fp = fopen(filename,"w")) == NULL)
   {
	err_mesg("\nError while opening File blrbils3.lis\n",0,"");
	proc_exit();
   }

}

fetch_ip_episode()
{

    if(nd_episode_type == 'R')
	return 1;

    if(nd_episode_type == 'I' || nd_episode_type == 'D' ) {

	d_admission_date.arr[0]    = '\0';
	d_ward_code.arr[0]         = '\0';
	d_room_num.arr[0]          = '\0';
	d_bed_num.arr[0]           = '\0';
	d_physician_id.arr[0]      = '\0';
    
	d_admission_date.len       = 0;
	d_ward_code.len            = 0;
	d_room_num.len             = 0;
	d_bed_num.len              = 0;
	d_physician_id.len         = 0;

	EXEC SQL OPEN IP_EPISODE_CUR;
    
	if(OERROR)
	    err_mesg("OPEN failed on cursor IP_EPISODE_CUR",0,"");
    
	EXEC SQL FETCH IP_EPISODE_CUR INTO 
		       :d_admission_date,
		       :d_ward_code,
		       :d_room_num,
		       :d_bed_num,
		       :d_physician_id;
    
	if(OERROR)
	    err_mesg("FETCH failed on cursor IP_EPISODE_CUR",0,"");
    
	if(NO_DATA_FOUND)
	    return 0;
    
	d_admission_date.arr[d_admission_date.len]            = '\0';
	d_ward_code.arr[d_ward_code.len]              = '\0';
	d_room_num.arr[d_room_num.len]                = '\0';
	d_bed_num.arr[d_bed_num.len]                  = '\0';
	d_physician_id.arr[d_physician_id.len]        = '\0';
    
	return 1;
    }
    else if(nd_episode_type == 'O' || nd_episode_type == 'E' ) {

	d_clinic_code.arr[0]       = '\0';
	d_physician_id.arr[0]      = '\0';
	d_visit_date_time.arr[0]   = '\0';

	d_clinic_code.len          = 0;
	d_physician_id.len         = 0;
	d_visit_date_time.len      = 0;

	EXEC SQL SELECT CLINIC_CODE,
			PHYSICIAN_ID,
			TO_CHAR(VISIT_REGN_DATE_TIME,'DD/MM/YYYY HH24:MI')
		   INTO :d_clinic_code,
			:d_physician_id,
			:d_visit_date_time
		   FROM OP_VISIT
		  WHERE EPISODE_ID = :nd_episode_id
		    AND PATIENT_ID = :d_patient_id
		    AND VISIT_ID   = :nd_visit_id
			AND FACILITY_ID = :nd_operating_facility_id;

	if(OERROR)
	    err_mesg("FETCH failed on cursor IP_EPISODE_CUR",0,"");
    
	if(NO_DATA_FOUND)
	    return 0;

	d_clinic_code.arr[d_clinic_code.len]           = '\0';
	d_physician_id.arr[d_physician_id.len]         = '\0';
	d_visit_date_time.arr[d_visit_date_time.len]   = '\0';

	return 1;

    }

}

fetch_folio()
{

    d_prt_grp_hdr_code.arr[0]  = '\0';
    d_prt_grp_line_code.arr[0] = '\0';
    d_blng_serv_code.arr[0]    = '\0';
    d_serv_item_desc.arr[0]    = '\0';

    d_prt_grp_hdr_code.len     = 0;
    d_prt_grp_line_code.len    = 0;
    d_blng_serv_code.len       = 0;
    d_serv_item_desc.len       = 0;

    d_gross_amt     = 0;
    d_qty           = 0;
    d_serv_disc_amt = 0;

    EXEC SQL FETCH BL_PAT_FOLIO_CUR
	     INTO  :d_prt_grp_hdr_code,
		   :d_prt_grp_line_code,
		   :d_serv_item_desc,
		   :d_blng_serv_code,
		   :d_gross_amt,
		   :d_qty,
		   :d_serv_disc_amt,
		   :d_folio_remarks;

    if(OERROR)
	err_mesg("FETCH failed on cursor BL_PAT_FOLIO_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_prt_grp_hdr_code.arr[d_prt_grp_hdr_code.len]   = '\0';
    d_prt_grp_line_code.arr[d_prt_grp_line_code.len] = '\0';
    d_blng_serv_code.arr[d_blng_serv_code.len]       = '\0';
    d_serv_item_desc.arr[d_serv_item_desc.len]       = '\0';

    d_blng_serv_desc.arr[0]  = '\0';
    d_blng_serv_desc_loc_lang.arr[0]  = '\0';

    d_blng_serv_desc.len     = 0;
    d_blng_serv_desc_loc_lang.len     = 0;

    if (strlen(d_serv_item_desc.arr) == 1) {
	if (d_serv_item_desc.arr[0] == 'S') {
	    EXEC SQL SELECT LONG_DESC,
			    LOC_LANG_SHORT_DESC
		     INTO   :d_blng_serv_desc,
			    :d_blng_serv_desc_loc_lang
		     FROM   BL_BLNG_SERV
		     WHERE  BLNG_SERV_CODE = :d_blng_serv_code;
	
	    if(OERROR)
		err_mesg("SELECT failed on table BL_BLNG_SERV",0,"");
	}
	else {
	    EXEC SQL SELECT LONG_DESC,
			    LOC_LANG_SHORT_DESC
		     INTO   :d_blng_serv_desc,
			    :d_blng_serv_desc_loc_lang
		     FROM   BL_PACKAGE_HDR
		     WHERE  PACKAGE_CODE = :d_blng_serv_code;
	
	    if(OERROR)
		err_mesg("SELECT failed on table BL_BLNG_SERV",0,"");
	}

	d_blng_serv_desc.arr[d_blng_serv_desc.len]  = '\0';
	d_blng_serv_desc_loc_lang.arr[d_blng_serv_desc_loc_lang.len]  = '\0';
    }
    else {
	strcpy(d_blng_serv_desc.arr, d_serv_item_desc.arr);
    }

    return 1;

}

fetch_blng_grp_desc()
{

    EXEC SQL OPEN BL_BLNG_GRP_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor BL_BLNG_GRP_CUR",0,"");

    d_blng_grp_desc.arr[0] = '\0';

    EXEC SQL FETCH BL_BLNG_GRP_CUR INTO
		   :d_blng_grp_desc;

    if(OERROR)
	err_mesg("FETCH failed on cursor BL_BLNG_GRP_CUR",0,"");

    d_blng_grp_desc.arr[d_blng_grp_desc.len] = '\0';

}

fetch_patient_name()
{
   
    EXEC SQL OPEN MP_PATIENT_MAST_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor MP_PATIENT_MAST_CUR",0,"");

    d_patient_short_name.arr[0]   = '\0';
	d_patient_short_name1.arr[0]   = '\0';
    d_short_name_loc_lang.arr[0]  = '\0';
    d_sex.arr[0]                  = '\0';
  
    d_patient_short_name.len    = 0;
	d_patient_short_name1.len    = 0;
    d_short_name_loc_lang.len   = 0;
    d_sex.len                   = 0;

    EXEC SQL FETCH MP_PATIENT_MAST_CUR
	     INTO  :d_patient_short_name,
			   :d_patient_short_name1,
		       :d_short_name_loc_lang,
		       :d_sex,
                   :d_short_name_full;

    if(OERROR)
	err_mesg("FETCH failed on cursor MP_PATIENT_MAST_CUR",0,"");

    d_patient_short_name.arr[d_patient_short_name.len]    = '\0';
	d_patient_short_name1.arr[d_patient_short_name1.len]    = '\0';
    d_short_name_loc_lang.arr[d_short_name_loc_lang.len]  = '\0';
    d_sex.arr[d_sex.len]                                  = '\0';
    d_short_name_full.arr[d_short_name_full.len]               = '\0';
 
EXEC SQL EXECUTE
 BEGIN
 declare
      str1   varchar2(100);
     str2   varchar2(60);
     
    
   BEGIN
     blcommon.split_words(:d_short_name_full,30,'*',1,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_short_name   :=str2;
       END IF;
    blcommon.split_words(:d_short_name_full,30,'*',2,str1,str2);
       IF str2 IS NOT NULL THEN
         :d_patient_short_name1  := str2;
      END IF;
    blcommon.split_words(:d_short_name_full,30,'*',3,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_short_name1    := :d_patient_short_name1 || str2;
       end if;

	 
     
 END;
  END;
       
   END-EXEC;
       d_patient_short_name.arr[d_patient_short_name.len]  = '\0';
       d_patient_short_name1.arr[d_patient_short_name1.len]  = '\0';
  
}

fetch_physician_name()
{

    EXEC SQL OPEN SY_PHYSICIAN_MAST_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor SY_PHYSICIAN_MAST_CUR",0,"");

    d_physician_name.arr[0] = '\0';

    d_physician_name.len    = 0;

    EXEC SQL FETCH SY_PHYSICIAN_MAST_CUR
	     INTO  :d_physician_name;

    if(OERROR)
	err_mesg("FETCH failed on cursor SY_PHYSICIAN_MAST_CUR",0,"");

    d_physician_name.arr[d_physician_name.len] = '\0';

}


fetch_prt_grp_hdr_desc()
{

    d_hdr_long_desc.arr[0]           = '\0';
    d_hdr_loc_lang_short_desc.arr[0] = '\0';

    d_hdr_long_desc.len              = 0;   
    d_hdr_loc_lang_short_desc.len    = 0;

    EXEC SQL OPEN PRT_GRP_HDR_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor PRT_GRP_HDR_CUR",0,"");

    EXEC SQL FETCH PRT_GRP_HDR_CUR INTO
	     :d_hdr_long_desc,
	     :d_hdr_loc_lang_short_desc;

    if(OERROR)
	err_mesg("FETCH failed on cursor PRT_GRP_HDR_CUR",0,"");

    d_hdr_long_desc.arr[d_hdr_long_desc.len]                     = '\0';
    d_hdr_loc_lang_short_desc.arr[d_hdr_loc_lang_short_desc.len] = '\0';


}

fetch_prt_grp_line_desc()
{

    d_line_long_desc.arr[0]           = '\0';
    d_line_loc_lang_short_desc.arr[0] = '\0';

    d_line_long_desc.len              = 0;
    d_line_loc_lang_short_desc.len    = 0;

    EXEC SQL OPEN PRT_GRP_LINE_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor PRT_GRP_LINE_CUR",0,"");

    EXEC SQL FETCH PRT_GRP_LINE_CUR INTO
	     :d_line_long_desc,
	     :d_line_loc_lang_short_desc;

    if(OERROR)
	err_mesg("FETCH failed on cursor PRT_GRP_LINE_CUR",0,"");

    d_line_long_desc.arr[d_line_long_desc.len]                     = '\0';
    d_line_loc_lang_short_desc.arr[d_line_loc_lang_short_desc.len] = '\0';


}

print_page_head()
{
    int i;
    static int g_first = 1;

    if(!g_first) 
	fprintf(fp,"\f");

    g_first = 0;

    for(i = 0; i < VSKIP_1; i++) fprintf(fp,"\n");

fprintf(fp,"%-30s%60sPage No        : %-3d\n",hosp_name.arr," ",pno);
fprintf(fp,"%-40s%50sPeriod Covered : %10s - %10s\n",
	"BILLING DETAILS : ITEMIZED BREAKDOWN    "," ",nd_fm_date.arr,
						    nd_to_date.arr);
// nd_sys_date instead of d_doc_date vsk 18/10/1998 
fprintf(fp,"%90sDate           : %s\n\n"," ",nd_sys_date.arr);


fprintf(fp,"Patient Id : %-20s  Name : %-30.30s  %-16.16s\n",
	    d_patient_id.arr, d_patient_short_name.arr,
	    d_short_name_loc_lang.arr);

if(strlen(d_patient_short_name1.arr) > 2)
{
 fprintf(fp,"%42s %s \n\n"," ",d_patient_short_name1.arr);
}
else
{
 fprintf(fp,"\n");}
if(nd_episode_type == 'I' || nd_episode_type == 'D')
    fprintf(fp,"Adm. No.   : %-8s    Ward : %-4s    Room : %-4s  Bed : %-8s\n\n",
		d_episode_id_prt.arr, d_ward_code.arr, d_room_num.arr, 
		d_bed_num.arr);
else if(nd_episode_type == 'O' || nd_episode_type == 'E' )
    fprintf(fp,"Episode No.   : %-8s    Visit No : %-4s              Clinic : %-4s \n\n",
		nd_episode_id.arr, nd_visit_id.arr, d_clinic_code.arr);
/*      Modified By Madesh -----------> */
if (strcmp(nd_stat.arr,"B")==0) 
{
    fprintf(fp,"Bill Number   : %-4s / %-8s / %-4s \n",
	    nd_doc_type.arr, nd_doc_num.arr, d_doc_date.arr);
fprintf(fp,"Bill Total Adjusted :");  //EPNH 29/10/2004
print_formated(bl_hdr_bill_tot_adjust_amt,0);
fprintf(fp," Bill Total Exempted :");
print_formated(bl_hdr_bill_tot_exempt_amt,0);
fprintf(fp," Bill Total Write off :");
print_formated(bl_hdr_bill_tot_write_off_amt,0);
fprintf(fp,"\n");
}

/*      <----------- Modified By Madesh  */             

fprintf(fp,"            Service     Service                                                                \n");
fprintf(fp,"            Date       Code       Description                                           Qty              %s                  %s\n",cur_str.arr,cur_str.arr);
//fprintf(fp,"            Code        Description                                          Qty                Dhs                 Dhs\n");
fprintf(fp,"---------------------------------------------------------------------------------------------------------------------------------\n");

if(nd_episode_type == 'R')
    lno = 12;
else
    lno = 14;

}

print_break_hdr()
{

    int i;
    char s_amt[20];

    fetch_prt_grp_hdr_desc();

    if(lno > MAX_LINES)  print_next_page();

    for(i = 0; i < HSKIP_10; i++) fprintf(fp," ");
    fprintf(fp,"%-2s        %-40s  %10s%-16s\n",d_prt_grp_hdr_code.arr,
	       d_hdr_long_desc.arr, " ",d_hdr_loc_lang_short_desc.arr);

    lno++;
    /*
    g_prt_grp_line_code[0] = '\0';
    */

}

print_break_line()
{

    int i;
    char s_amt[20];

    fetch_prt_grp_line_desc();

    if(!g_first_break) {
       print_subtot();
       fprintf(fp,"\n\n");
       lno=lno+2;
    }

    if(strcmp(g_prt_grp_hdr_code,d_prt_grp_hdr_code.arr)) 
	print_break_hdr();
 
    g_first_break = 0;
    if(lno > MAX_LINES)  print_next_page();

    for(i = 0; i < HSKIP_10; i++) fprintf(fp," ");
    fprintf(fp,"      %-2s  %-40s  %10s%-16s  \n",d_prt_grp_line_code.arr,
		 d_line_long_desc.arr, " ",d_line_loc_lang_short_desc.arr);
    lno++;

}

print_line()
{
    int i;

    if(lno > MAX_LINES) print_next_page();

    for(i = 0; i < HSKIP_10; i++) fprintf(fp," ");
    fprintf(fp,"          %-10s  %-40s  %-16s  ", d_blng_serv_code.arr,
		d_blng_serv_desc.arr, d_blng_serv_desc_loc_lang.arr);
  /*
    if(equal(d_gross_amt,(double)0)) 
	print_formated((double)0,0);
    else
    {
	if (d_qty)
	   print_formated(d_gross_amt/d_qty,0);
	else
	   print_formated(d_gross_amt,0);
    }
  */
	fprintf(fp,"  %5.2f ",d_qty);
    
	print_formated(d_gross_amt, 0);  
	print_remarks();

}
   
print_remarks ()
 { fprintf(fp,"\n");
         lno++;
         fprintf(fp,"                        %-50s                                  ", d_folio_remarks.arr);
         
 }
   
print_next_page()
{
    int i;

    pno++;

    print_page_head();

}

print_balance_due()
{

    int i;
    int no_of_lines;
    char out_str[10][133];
    void calc_disc();

    for(i=0; i<10; i++) out_str[i][0] = '\0';

    if(lno+6 > MAX_LINES) print_next_page();


    fprintf(fp,"  ");
    for(i = 0; i < 18; i++) fprintf(fp,"-"); fprintf(fp,"\n");
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"SUB TOTAL                                   ");
    print_formated(g_cum_amt,1);


/*    Modified By Madesh   --------------> */
	calc_disc();

    if ( d_man_disc !=0 ) {
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Less Other Discounts                        ");
    print_formated(d_man_disc,1);
    g_cum_amt -= d_man_disc; 
    }

    if ( d_dep_amt !=0 ) {
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Less Deposits Adjusted                      ");
    print_formated(d_dep_amt,1);
    g_cum_amt -= d_dep_amt; 
    }

    if ( d_pre_amt !=0 ) {
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Less Prepayments Adjusted                   ");
    print_formated(d_pre_amt,1);
    g_cum_amt -= d_pre_amt; 
    }
    
/*
    if ( d_bill_amt !=0 ) {
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Less Payments Received                      ");
    print_formated(d_bill_amt,1);
    g_cum_amt -= d_bill_amt; 
    }
*/
/*   <------------- Modified By Madesh    */      


/*    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"LESS Discount                               ");
    print_formated(tot_disc_amt,1);
    g_cum_amt -= tot_disc_amt;
*/
/*
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"LESS Prepayments                             ");
    print_formated(d_prepay_adj_amt,1);
    g_cum_amt -= d_prepay_adj_amt;
   
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"TOTAL BALANCE DUE                            ");
    print_formated(g_cum_amt,1);

    for(i = 0; i < HSKIP_13; i++) fprintf(fp," ");
    for(i = 0; i < 18; i++) fprintf(fp,"-"); fprintf(fp,"\n");
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Previous Outstanding                         ");
    print_formated(d_prv_outst_amt,1);
    g_cum_amt += d_prv_outst_amt;
*/

    for(i = 0; i < HSKIP_13; i++) fprintf(fp," ");
    for(i = 0; i < 18; i++) fprintf(fp,"-"); fprintf(fp,"\n");
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Total Bill Amount                           ");
    print_formated(g_cum_amt,1);
 
    for(i = 0; i < HSKIP_13; i++) fprintf(fp," ");
    for(i = 0; i < 18; i++) fprintf(fp,"="); fprintf(fp,"\n");

    g_cum_amt = (g_cum_amt < 0) ? g_cum_amt * -1 : g_cum_amt;



    if(equal(g_cum_amt,0.00)) 
	no_of_lines=0;
    else
        EXEC SQL select NO_OF_DECIMAL into :no_of_dec from SM_ACC_ENTITY_PARAM 
				 where ACC_ENTITY_ID in (select acc_entity_code from sy_acc_entity where acc_entity_id = :nd_operating_facility_id);
        no_of_lines = print_in_words(g_cum_amt,LENGTH_WORDS,sub_cur_str.arr,out_str,no_of_dec);
    

	
    if (g_cum_amt != 0) 
       fprintf(fp,"%-6s",cur_str.arr);
	
	for (i =0;i<no_of_lines;i++)
   	    fprintf(fp,"     %s\n",out_str[i]);
    //for (i =0;i<no_of_lines;i++)
	//fprintf(fp,"     %s\n",out_str[i]);

}

print_subtot()
{
    int i;

    fprintf(fp,"    ");
    print_formated(g_sub_tot,1);

    for(i = 0; i < HSKIP_12; i++) fprintf(fp," ");
    for(i = 0; i < 15; i++) fprintf(fp,"-");

/*
    for(i = 0; i < HSKIP_11; i++) fprintf(fp," ");
    fprintf(fp,"Sub Total             :  ");
    print_formated(g_sub_tot,1);
    fprintf(fp,"\n");
*/
    g_sub_tot = 0;
    g_print_subtot = 0;
    lno += 1;
}


print_formated(loc_amount,flg)
double loc_amount;
int flg;
{
   char s_amt[20];

   sprintf(s_amt,"%15.2f",loc_amount);
   format_amt(s_amt);

   if (loc_amount < 0)
      fprintf(fp,"%15s",s_amt);
   else
      fprintf(fp,"%15s ",s_amt);
 
   if(flg)
       fprintf(fp,"\n");
}


/*   Added By Madesh  ------------->  */  
void calc_disc()
{
	if (strcmp(nd_stat.arr,"B")==0) 
	{
		EXEC SQL SELECT 
		      /*  NVL(SERV_DISC_AMT,0)+NVL(MAN_DISC_AMT,0)+NVL(OVERALL_DISC_AMT,0) */ 
		       0,
		       NVL(DEPOSIT_ADJ_AMT,0),
				  NVL(PREPAY_ADJ_AMT,0),NVL(BILL_TOT_AMT,0) - NVL(BILL_TOT_OUTST_AMT,0) INTO
				  d_man_disc,d_dep_amt,d_pre_amt,d_bill_amt
				 FROM BL_BILL_HDR 
				 WHERE DOC_TYPE_CODE = :nd_doc_type and
					   to_char(DOC_NUM)       = :nd_doc_num
					   and operating_facility_id = :nd_operating_facility_id;
					   
    if(OERROR)
	err_mesg("SELECT failed on BL_BILL_HDR",0,"");
	}
	else 
	{
		d_man_disc=0;
		d_bill_amt=0;   
		/*-- Only for 
		     I and all case prepayment and deposits should come. */
		
		if ((nd_ins_pat == 'A')||(nd_ins_pat == 'I'))
		{
		if (nd_episode_type == 'O' || nd_episode_type == 'E' )
		{
		EXEC SQL SELECT 
		    /* NVL(TOT_BUS_DISC_AMT,0)+NVL(TOT_BUS_MAN_DISC_AMT,0) */
		        0,
				NVL(TOT_UNADJ_DEP_AMT,0),
				NVL(TOT_UNADJ_PREP_AMT,0) 
				 INTO d_man_disc,d_dep_amt,d_pre_amt FROM
			 BL_VISIT_FIN_DTLS
				 WHERE EPISODE_ID = :nd_episode_id and
					   VISIT_ID   = :nd_visit_id and
					   EPISODE_TYPE = :nd_episode_type;
	if(OERROR)
	err_mesg("SELECT failed on BL_VISIT_FIN_DTLS",0,"");
		}         
		if (nd_episode_type == 'I' || nd_episode_type == 'D')
		{
		EXEC SQL
		      SELECT /* NVL(TOT_BUS_DISC_AMT,0)+NVL(TOT_BUS_MAN_DISC_AMT,0) */
		        0,
				NVL(TOT_UNADJ_DEP_AMT,0),
				NVL(TOT_UNADJ_PREP_AMT,0) 
				 INTO d_man_disc,d_dep_amt,d_pre_amt FROM
			 BL_EPISODE_FIN_DTLS
				 WHERE EPISODE_ID = :nd_episode_id and
				       EPISODE_TYPE = :nd_episode_type;
	if(OERROR)
	err_mesg("SELECT failed on BL_EPISODE_FIN_DTLS",0,"");
		}         
		}
		if (nd_episode_type == 'R')
		{
		EXEC SQL SELECT NVL(TOT_UNADJ_DEP_REF_AMT,0),NVL(TOT_UNADJ_PREP_REF_AMT,0) 
				 INTO d_dep_amt,d_pre_amt FROM
			 BL_PATIENT_FIN_DTLS
				 WHERE PATIENT_ID = :d_patient_id;
	if(OERROR)
	err_mesg("SELECT failed on BL_EPISODE_FIN_DTLS",0,"");
		}           
	 }      
		
}       
						  
/*   <-----------------Added By Madesh         */                                         
