
/* Preprocessor Directives  */

#include <stdio.h>
#include <string.h>
#include <math.h>
//#include <sqlca.h>      
//include <sqlda.h>
EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <bl.h>
#include <winproc.h>

/* Macros */

#define NODATAFOUND sqlca.sqlcode==1403
#define OERROR (sqlca.sqlcode < 0) 
#define MAX_LINES 55

/* Declarations */

EXEC SQL BEGIN DECLARE SECTION;	

	VARCHAR uid_pwd 				[95],	        
	     	nd_sysdate              [31],
			nd_user_id  	        [31],	
			nd_hospital_name		[61],
			nd_report_date			[31],
			nd_from_facility_id		[4] ,		
			nd_to_facility_id		[4] ,		
			nd_facility_id		[4] ,
			nd_facility		[31],
			nd_from_cash_counter_id	[4] ,    
			nd_to_cash_counter_id	[4] ,
			nd_cash_counter_id	[4] ,
			nd_cash_counter		[31],
			nd_from_shift		[4] ,
			nd_to_shift		[4] ,	
			nd_shift		[4] ,		
			nd_from_trn_type	[4] ,
			nd_trn_type		[16],
			nd_from_hcard_status	[4] ,
			nd_hcard_status		[20],
			nd_session_id		[20],
			nd_pgm_date		[30],
			nd_p_facility_id	[4],
			nd_pgm_id		[20],
                  d_short_name_full       [61],
			nd_patient_id		[21],
			nd_patient_name		[61],
			nd_patient_nam1		[61],
			nd_nationality		[16],
			nd_doc_date		[31],
			nd_doc_type		[10] ,
			nd_hcard_num		[21],								
		
			nd_prev_cash_counter_id [4] ,		
			nd_prev_cash_counter 	[31] ,		
			nd_prev_facility_id     [4] ,
			nd_prev_facility	[31],
			nd_prev_shift		[4] ;
		
	
	char    nd_filename	        [100];

	long	nd_doc_no		    ,
		nd_fmt_string		    ,
		nd_prev_fmt_string	    ;		
	
	double	nd_doc_amt		=0  ,		
		nd_shift_amt		=0  ,
		nd_cash_counter_amt	=0  ,
		nd_facility_amt		=0  ,
		nd_gt_amt		=0  ;	
	int     doc_check = 0;

EXEC SQL END DECLARE SECTION;

FILE *f1;
int page = 0;
int line = 0;
char prev_cash_counter_id[2];
char prev_facility_id    [2];

void proc_main(argc, argv)
int argc;
char *argv[];
{    
   void prt_line(int l, char spl_symbol[1]);
   void prt_hdr_initial();
   void prt_hdr();    
   void dec_cursor();
   void open_cursor();
   void close_cursor();
   void sub_hdr_prev_prt();
   int  fetch_cursor();
  
   void report_process();
   void line_check();
   void sub_hdr_prt();
   void rec_prt();
   void shift_rec_prt();
   void cash_rec_prt();
   void fc_rec_prt();

/* INPUT ARGUMENT CHECK */

  
 if(argc < 6) 
     {
       disp_message(ORA_MESG, "Usage BLRHCTXN uid/passwd@db Session Pgm-Date  Facility ");
       proc_exit();
     }

     strcpy(nd_pgm_id.arr, argv[0]);
     nd_pgm_id.len = strlen(nd_pgm_id.arr); 
     strcpy(g_pgm_id,nd_pgm_id.arr);

     strcpy(uid_pwd.arr, argv[1]);
     uid_pwd.len = strlen(uid_pwd.arr); 
    	
     strcpy(nd_session_id.arr, argv[2]);
     nd_session_id.len = strlen(nd_session_id.arr);      	 
     strcpy(g_session_id,nd_session_id.arr);

     strcpy(nd_pgm_date.arr, argv[3]);
     nd_pgm_date.len = strlen(nd_pgm_date.arr);      	 
     strcpy(g_pgm_date,nd_pgm_date.arr);

     strcpy(nd_p_facility_id.arr, argv[5]);
     nd_p_facility_id.len = strlen(nd_p_facility_id.arr);      	 
     strcpy(g_facility_id,nd_p_facility_id.arr);
   
/* DB LOGIN */

    EXEC SQL CONNECT :uid_pwd;
    if (OERROR) 
    {
    	disp_message (ORA_MESG, "USERID/PASSWORD failed to Connect");
        proc_exit();  
    }	  	

     set_meduser_role();

/* OUTPUT FILE */   
  
	strcpy(nd_filename,WORKING_DIR);   
	strcat(nd_filename,argv[0]);
	strcat(nd_filename,".lis");

	
	if((f1 = fopen(nd_filename, "w")) == NULL) 
	{
		 disp_message (ERR_MESG, " Error opening output file ....");
		 proc_exit();
        } 

		  nd_report_date.arr[0] = '\0';
		  nd_from_facility_id.arr[0] = '\0';
		  nd_to_facility_id.arr[0] = '\0';
		  nd_from_cash_counter_id.arr[0] = '\0';
		  nd_to_cash_counter_id.arr[0] = '\0';
		  nd_from_shift.arr[0] = '\0';
		  nd_to_shift.arr[0] = '\0';
		  nd_from_hcard_status.arr[0] = '\0';
		  nd_from_trn_type.arr[0] = '\0';

		  nd_report_date.len = 0;
		  nd_from_facility_id.len = 0;
		  nd_to_facility_id.len = 0;
		  nd_from_cash_counter_id.len = 0;
		  nd_to_cash_counter_id.len = 0;
		  nd_from_shift.len = 0;
		  nd_to_shift.len = 0;
		  nd_from_hcard_status.len = 0;
		  nd_from_trn_type.len = 0;

  EXEC SQL SELECT PARAM1,
		  PARAM2,
		  PARAM3,
		  PARAM4,
		  PARAM5,
                  PARAM6,
		  PARAM7,
		  PARAM8,
		  PARAM9
	  INTO    :nd_report_date,
		  :nd_from_facility_id,
		  :nd_to_facility_id,
		  :nd_from_cash_counter_id,
		  :nd_to_cash_counter_id,
		  :nd_from_shift,
		  :nd_to_shift,
		  :nd_from_hcard_status, 
		  :nd_from_trn_type
	  FROM    sy_prog_param
          WHERE   operating_facility_id = :nd_p_facility_id
	  AND 	  session_id = :nd_session_id
	  AND     pgm_date   = :nd_pgm_date
	  AND     pgm_id     = :nd_pgm_id;

   
   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

 
     nd_report_date.len = strlen(nd_report_date.arr);      	 	    
     nd_from_facility_id.len = strlen(nd_from_facility_id.arr);      	 
     nd_to_facility_id.len = strlen(nd_to_facility_id.arr);      	 
     nd_from_cash_counter_id.len = strlen(nd_from_cash_counter_id.arr);  
     nd_to_cash_counter_id.len = strlen(nd_to_cash_counter_id.arr);      
     nd_from_shift.len = strlen(nd_from_shift.arr);      	 
     nd_to_shift.len = strlen(nd_to_shift.arr);      	 
     nd_from_hcard_status.len = strlen(nd_from_hcard_status.arr);      	 
     nd_from_trn_type.len = strlen(nd_from_trn_type.arr);      	 

  EXEC SQL DELETE FROM sy_prog_param 
          WHERE   operating_facility_id = :nd_p_facility_id
	  AND 	  session_id = :nd_session_id
	  AND     pgm_date   = :nd_pgm_date
	  AND     pgm_id     = :nd_pgm_id;
   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");


  nd_sysdate.arr[0]		= '\0';  
  nd_sysdate.len		= 0;
  EXEC SQL SELECT to_char(SYSDATE,'DD/MM/YYYY HH24:MI') INTO :nd_sysdate FROM dual;
  nd_sysdate.arr[nd_sysdate.len]       = '\0';  
  
  nd_user_id.arr[0]		= '\0';  
  nd_user_id.len		=0;
  EXEC SQL SELECT USER INTO :nd_user_id FROM dual;
  nd_user_id.arr[nd_user_id.len]       = '\0';  
       
  nd_hospital_name.arr[0] = '\0';
  nd_hospital_name.len = 0;
  EXEC SQL SELECT accounting_name INTO :nd_hospital_name FROM sy_acc_entity
           WHERE acc_entity_id = :nd_p_facility_id;

  nd_hospital_name.arr[nd_hospital_name.len]	= '\0';  

/* PROCESS */   
   
  
   prt_hdr_initial();    
   report_process(); 
  
/* CLOSE FILE */
   EXEC SQL COMMIT RELEASE; 
   fclose(f1);   
   return;   
}

void line_check()
{
   if (line > MAX_LINES)
   {
	fprintf(f1,"\f");	
	prt_hdr();
	if (doc_check == 0)
	{ sub_hdr_prt();}
        else
	{ sub_hdr_prev_prt();}
   }
	doc_check = 1;
}       

void prt_hdr_initial()
{     
   line = 0;    
   page = page +1;
   fprintf(f1,"\n");       
   fprintf(f1,"MDL : BL");
   prt_line(40," "); 
   fprintf(f1,"%-31s",nd_hospital_name.arr);
   prt_line(30," "); 
   fprintf(f1,"%-20s",nd_sysdate.arr);           
   fprintf(f1,"\n"); 
   fprintf(f1,"OPR : %-31s",nd_user_id.arr); 
   prt_line(10," ");    
   fprintf(f1,"Health Card Receipts by Transaction Type");
   prt_line(25," "); 
   fprintf(f1,"Page :%5d",page);           
   fprintf(f1,"\n"); 
   fprintf(f1,"REP : BLRHCTXN"); 
   fprintf(f1,"					    (FOR THE DATE %-3s)",nd_report_date.arr);
   fprintf(f1,"\n"); 
   prt_line(132,"-");     
   fprintf(f1,"\n");    
   fprintf(f1,"VER : 4.1");
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"		INPUT PARAMETERS:");
   fprintf(f1,"\n");    
   fprintf(f1,"		------------------------------");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"			DATE                 : %-30s",nd_report_date.arr);
   fprintf(f1,"\n");    	
   fprintf(f1,"\n");    

   if (strcmp(nd_from_facility_id.arr,"~F1") == 0)
   fprintf(f1,"			FACILITY ID     FROM : LOWEST\n"); 
   else
   fprintf(f1,"			FACILITY ID     FROM : %-3s\n",nd_from_facility_id.arr);
   if (strcmp(nd_to_facility_id.arr,"~F2") == 0)
   fprintf(f1,"			FACILITY ID       TO : HIGHEST\n\n"); 
   else
   fprintf(f1,"			FACILITY ID       TO : %-3s\n\n",nd_to_facility_id.arr);
   if (strcmp(nd_from_cash_counter_id.arr,"~C1") == 0)
   fprintf(f1,"			CASH COUNTER    FROM : LOWEST\n");
   else
   fprintf(f1,"			CASH COUNTER    FROM : %-3s\n",nd_from_cash_counter_id.arr);
   if (strcmp(nd_to_cash_counter_id.arr,"~C2") == 0)
   fprintf(f1,"			CASH COUNTER      TO : HIGHEST\n\n");
   else
   fprintf(f1,"			CASH COUNTER      TO : %-3s\n\n",nd_to_cash_counter_id.arr);
   if (strcmp(nd_from_shift.arr,"~S1") == 0)
   fprintf(f1,"			SHIFT NUMBER    FROM : LOWEST\n");
   else
   fprintf(f1,"			SHIFT NUMBER    FROM : %-2s\n",nd_from_shift.arr);
   if (strcmp(nd_to_shift.arr,"~S2") == 0)
   fprintf(f1,"			SHIFT NUMBER      TO : HIGHEST\n\n");
   else
   fprintf(f1,"			SHIFT NUMBER      TO : %-2s\n\n",nd_to_shift.arr);
 
   if (strcmp(nd_from_hcard_status.arr,"P") == 0)
   {fprintf(f1,"			HEALTH CARD STATUS   : PERMANENT");}
   if (strcmp(nd_from_hcard_status.arr,"T") == 0)
   {fprintf(f1,"			HEALTH CARD STATUS   : TEMPORARY");}
   if (strcmp(nd_from_hcard_status.arr,"A") == 0)
   {fprintf(f1,"			HEALTH CARD STATUS   : ALL");}
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
  
   if (strcmp(nd_from_trn_type.arr,"N") == 0)
   {   fprintf(f1,"			TRANSACTION TYPE     : NEW");}
   if (strcmp(nd_from_trn_type.arr,"R") == 0)
   {   fprintf(f1,"			TRANSACTION TYPE     : RENEW");}
   if (strcmp(nd_from_trn_type.arr,"P") == 0)
   {   fprintf(f1,"			TRANSACTION TYPE     : REPLACEMENT");}

   fprintf(f1,"\n");    

   line = MAX_LINES + 1; 
   
}   
	
void prt_hdr()
{     
   line = 0;    
   page = page + 1;   
   fprintf(f1,"\n");       
   fprintf(f1,"MDL : BL");
   prt_line(40," "); 
   fprintf(f1,"%-30s",nd_hospital_name.arr);
   prt_line(30," "); 
   fprintf(f1,"%-16s",nd_sysdate.arr);           
   fprintf(f1,"\n"); 
   fprintf(f1,"OPR : %-31s",nd_user_id.arr); 
   prt_line(10," ");    
   fprintf(f1,"Health Card Receipts by Transaction Type");
   prt_line(25," "); 
   fprintf(f1,"Page :%5d",page);           
   fprintf(f1,"\n"); 
   fprintf(f1,"REP : BLRHCTXN"); 
   prt_line(20," ");    
   fprintf(f1,"     		   ( FOR THE DATE %-11s )",nd_report_date.arr);
   prt_line(35," "); 
   fprintf(f1,"\n"); 
   prt_line(132,"-");     
   fprintf(f1,"\n");    
   fprintf(f1,"Receipt Doc     Date      Health Card           Patient ID           Name              Nationality       Amount Trans. Status");
   fprintf(f1, "\n");   
   fprintf(f1,"Type / Number		   Number                                                                                Type ");
   fprintf(f1, "\n");   
   prt_line(132,"-");  
   fprintf(f1, "\n");    
}
void prt_line(int line_length, char spl_symbol[1])
{  
 int i;  
  for(i=1;i<=line_length;i=i+1)
	 {fprintf(f1,spl_symbol);}
}

void dec_cursor()
{ EXEC SQL DECLARE hcard_cursor CURSOR FOR   
  SELECT	a.patient_id			patient_id	,
	substr(b.short_name,1,15)				patient_name	,
	substr(b.short_name,16,60)        patient_nam1,
      b.short_name,
	c.nationality				nationality	,
	TRUNC(a.doc_date)			doc_date	,
	a.doc_type_code				doc_type	,
	a.doc_number				doc_no		,
	a.hcard_num				hcard_num	,	
	a.doc_amt				doc_amt		,
	decode(a.hcard_trx_type,'N','New','R','Renew','P','Replc.')	trn_type	,
	decode(a.hcard_expiry_date_final,NULL,
	       decode(a.hcard_status_initial,'T','Temporary','P','Permanent'),'Permanent') hcard_status	,
	e.acc_entity_name			facility	,
	a.operating_facility_id		facility_id	,
	d.short_desc				cash_counter	,
	a.cash_counter_code			casd_counter_id ,
	a.shift_id					shift		,
	e.no_of_decimal				fmt_string		
FROM	bl_health_card_trn	a	,
	mp_patient_mast		b	,
	mp_country_his_vw		c	, 
	bl_cash_counter		d	,
	sy_acc_entity		e	
WHERE	a.patient_id	    =	b.patient_id
AND	b.nationality_code  =   c.country_code
AND	a.cash_counter_code =   d.cash_counter_code
AND	e.acc_entity_id	    =	a.operating_facility_id   
AND     a.operating_facility_id = d.operating_facility_id
AND     a.operating_facility_id IN (SELECT facility_id 
				FROM sy_user WHERE user_id = USER)
AND	a.cash_counter_code IS NOT NULL
AND	trunc(a.doc_date)	    =  to_date(:nd_report_date,'DD/MM/YYYY')
AND	(((a.hcard_status_initial='P' OR (a.hcard_status_initial='T'
	  				 AND a.hcard_expiry_date_final IS NOT NULL))
					 AND :nd_from_hcard_status='P')
	OR
	(a.hcard_status_initial	 ='T'	 AND a.hcard_expiry_date_final IS NULL
				 	 AND :nd_from_hcard_status='T')
	OR
	(a.hcard_status_initial	 IS 	 NOT NULL AND :nd_from_hcard_status = 'A'))
and  a.hcard_trx_type = (decode(:nd_from_trn_type,'A',a.hcard_trx_type, :nd_from_trn_type))
and  ((a.hcard_status_initial = 'T' and a.hcard_trx_type <> 'P' ) OR
      (a.hcard_status_initial = 'P' ))
AND    a.operating_facility_id BETWEEN 
	RPAD(NVL(DECODE(:nd_from_facility_id,'~F1','',:nd_from_facility_id),'!!') ,2,'!')
	AND 
	RPAD(NVL(DECODE(:nd_to_facility_id,'~F2','',:nd_to_facility_id),'~~'),2,'~')	
AND    a.cash_counter_code BETWEEN 
	RPAD(NVL(DECODE(:nd_from_cash_counter_id,'~C1','',:nd_from_cash_counter_id),'!!'),2,'!')
	AND 
	RPAD(NVL(DECODE(:nd_to_cash_counter_id,'~C2','',:nd_to_cash_counter_id),'~~'),2,'~')
AND    a.shift_id BETWEEN 
	TO_NUMBER(DECODE(:nd_from_shift,'~S1','0',:nd_from_shift))
	AND 
	TO_NUMBER(DECODE(:nd_to_shift,'~S2','9',:nd_to_shift))
ORDER BY e.acc_entity_name,	d.short_desc,a.shift_id,a.doc_type_code,a.doc_number;
 return;
 }  

void open_cursor()
{ 
 EXEC SQL OPEN hcard_cursor;

 if (sqlca.sqlcode < 0) 
 {     disp_message (ORA_MESG, "Open HCard Cursor Failed");
       proc_exit();
 }
 
 return;
 }
int fetch_cursor()
{ 
		nd_patient_id.arr[0] ='\0';
		nd_patient_name.arr[0] ='\0';
		nd_patient_nam1.arr[0] ='\0';
		nd_nationality.arr[0] ='\0';
		nd_doc_date.arr[0] ='\0';
		nd_doc_type.arr[0] ='\0';
		nd_doc_no	= 0;
		nd_hcard_num.arr[0] ='\0';
		nd_doc_amt=0;
		nd_trn_type.arr[0] ='\0';	
		nd_hcard_status.arr[0] ='\0';
		nd_facility.arr[0] ='\0';
		nd_facility_id	.arr[0] ='\0';
		nd_cash_counter.arr[0] ='\0';
		nd_cash_counter_id.arr[0] ='\0';
		nd_shift.arr[0] ='\0';
		nd_fmt_string	= 0;

		nd_patient_id.len = 0;
		nd_patient_name.len = 0;
		nd_patient_nam1.len = 0;
		nd_nationality.len = 0;
		nd_doc_date.len = 0;
		nd_doc_type.len = 0;
		nd_hcard_num.len = 0;
		nd_trn_type.len = 0;
		nd_hcard_status.len = 0;
		nd_facility.len = 0;
		nd_facility_id.len = 0;
		nd_cash_counter.len = 0;
		nd_cash_counter_id.len = 0;
		nd_shift.len = 0;

  EXEC SQL FETCH hcard_cursor 
	   INTO :nd_patient_id		,
		:nd_patient_name	,
		:nd_patient_nam1	,
            :d_short_name_full ,
		:nd_nationality		,
		:nd_doc_date		,
		:nd_doc_type		,	
		:nd_doc_no		,
		:nd_hcard_num		,
		:nd_doc_amt		,
		:nd_trn_type		,
		:nd_hcard_status	,
		:nd_facility		,
		:nd_facility_id		,
		:nd_cash_counter	,	
		:nd_cash_counter_id	,
		:nd_shift		,
		:nd_fmt_string		;

    if (NODATAFOUND)
    return 0;    
  
    nd_patient_id.arr[nd_patient_id.len]		= '\0'; 
    nd_patient_name.arr[nd_patient_name.len]		= '\0'; 
	nd_patient_nam1.arr[nd_patient_nam1.len]		= '\0'; 
    nd_nationality.arr[nd_nationality.len]		= '\0'; 
    nd_doc_date.arr[nd_doc_date.len]			= '\0'; 
    nd_doc_type.arr[nd_doc_type.len]			= '\0';
    nd_hcard_num.arr[nd_hcard_num.len]			= '\0';
    nd_trn_type.arr[nd_trn_type.len]			= '\0';
    nd_hcard_status.arr[nd_hcard_status.len]		= '\0';   
    nd_facility.arr[nd_facility.len]			= '\0';
    nd_facility_id.arr[nd_facility_id.len]		= '\0';
    nd_cash_counter.arr[nd_cash_counter.len]	 	= '\0';
    nd_cash_counter_id.arr[nd_cash_counter_id.len] 	= '\0';
    nd_shift.arr[nd_shift.len]				= '\0';
    d_short_name_full.arr[d_short_name_full.len]               = '\0';
 
   EXEC SQL EXECUTE
 BEGIN
 declare
      str1   varchar2(100);
     str2   varchar2(60);
    
   BEGIN
     blcommon.split_words(:d_short_name_full,15,'*',1,str1,str2);
        IF str2 IS NOT NULL THEN
         :nd_patient_name   :=str2;
       END IF;
    blcommon.split_words(:d_short_name_full,15,'*',2,str1,str2);
       IF str2 IS NOT NULL THEN
         :nd_patient_nam1  := str2;
      END IF;
    blcommon.split_words(:d_short_name_full,15,'*',3,str1,str2);
        IF str2 IS NOT NULL THEN
         :nd_patient_nam1    := :nd_patient_nam1 || str2;
       end if;
     
 END;
  END;
       
   END-EXEC;
       nd_patient_name.arr[nd_patient_name.len]  = '\0';
       nd_patient_nam1.arr[nd_patient_nam1.len]  = '\0';

    return 1;
 }

void close_cursor()
{ 
 EXEC SQL CLOSE hcard_cursor;
 return;
 }

void sub_hdr_prt()
{
	fprintf(f1,"Facility: %-60s" ,nd_facility.arr); 		
	fprintf(f1,"Cash Counter: %-15s",nd_cash_counter.arr); 	
	fprintf(f1,"  Shift: %-2s",nd_shift.arr); 
	fprintf(f1, "\n");   
	fprintf(f1, "\n");   
}

void sub_hdr_prev_prt()
{
	fprintf(f1,"Facility: %-60s" ,nd_prev_facility.arr); 		
	fprintf(f1,"Cash Counter: %-15s",nd_prev_cash_counter.arr); 	
	fprintf(f1,"  Shift: %-2s",nd_prev_shift.arr); 
	fprintf(f1, "\n");   
	fprintf(f1, "\n");   
}

print_formated(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);
        format_amt(s_amt);
	strcat(s_amt,"-");
        sprintf(str_amt,"%8s",s_amt);        
        fprintf(f1,"%8s",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);        
        format_amt(s_amt);	
        sprintf(str_amt,"%8s",s_amt);
        fprintf(f1,"%8s",str_amt);
        }
}

   
void rec_prt()
{
		fprintf(f1,"%-6s/%8d"	,nd_doc_type.arr,nd_doc_no);			
	        fprintf(f1," %-10s"  	,nd_doc_date.arr);
		fprintf(f1," %-20.20s" 	,nd_hcard_num.arr);
	        fprintf(f1," %-20.20s" 	,nd_patient_id.arr);
		fprintf(f1," %-15.15s" 	,nd_patient_name.arr);		
	        fprintf(f1," %-15s  "  	,nd_nationality.arr);
		print_formated(nd_doc_amt);
	        fprintf(f1," %-5.5s"  	,nd_trn_type.arr);
		fprintf(f1,"  %-10s" 	,nd_hcard_status.arr);
	        fprintf(f1, "\n");   	

     if(strlen(nd_patient_nam1.arr) > 2)
	{
	 fprintf(f1,"%68s %s \n"," ",nd_patient_nam1.arr);
	}
}  
   
void shift_rec_prt()
{
/*	if (nd_prev_fmt_string == 3)
        {
	fprintf(f1,"Shift Total	           %8.3f",nd_shift_amt);
	}
        else
	{fprintf(f1,"Shift Total	          %8.2f",nd_shift_amt);}
*/
	fprintf(f1,"Shift Total                  ");
	print_formated(nd_shift_amt);

}

void cash_rec_prt()
{/*
	if (nd_prev_fmt_string == 3)
        {
	fprintf(f1,"Cash Counter Total	   %8.3f",nd_cash_counter_amt);
	}
        else
	{fprintf(f1,"Cash Counter Total	  %8.2f",nd_cash_counter_amt);}*/
	fprintf(f1,"Cash Counter Total           ");
	print_formated(nd_cash_counter_amt);

}

void fc_rec_prt()
{
	/*if (nd_prev_fmt_string == 3)
        {
	fprintf(f1,"Facility Total	           %8.3f",nd_facility_amt);
	}
        else
	{fprintf(f1,"Facility Total	          %8.2f",nd_facility_amt);}*/

	fprintf(f1,"Facility Total               ");
	print_formated(nd_facility_amt);

}

void report_process()
{        
    int fetch_cursor_check;
	dec_cursor();
	open_cursor();	    	
        fetch_cursor_check = fetch_cursor();
	strcpy(nd_prev_facility_id.arr,nd_facility_id.arr); 
 	strcpy(nd_prev_facility.arr,nd_facility.arr); 	        
	
	nd_prev_facility_id.len = strlen(nd_prev_facility_id.arr);      	 
	nd_prev_facility.len = strlen(nd_prev_facility.arr);      	 

        strcpy(nd_prev_cash_counter_id.arr,nd_cash_counter_id.arr);		
        strcpy(nd_prev_cash_counter.arr,nd_cash_counter.arr);		

	nd_prev_cash_counter_id.len = strlen(nd_prev_cash_counter_id.arr);      
	nd_prev_cash_counter.len = strlen(nd_prev_cash_counter.arr);       
        strcpy(nd_prev_shift.arr,nd_shift.arr);               

	nd_prev_shift.len = strlen(nd_prev_shift.arr); 

    	nd_prev_fmt_string = nd_fmt_string;     	 
         doc_check = 0;
	line_check();
         
  while(fetch_cursor_check)    {  
     if (strcmp(nd_prev_facility_id.arr,nd_facility_id.arr) == 0)
     { if (strcmp(nd_prev_cash_counter_id.arr,nd_cash_counter_id.arr) == 0)
       {if (strcmp(nd_prev_shift.arr,nd_shift.arr) == 0)
	{	rec_prt();
	
		line = line + 1;	
		line_check();
	}
	else
	{	
	fprintf(f1,"\n");   	        
	line = line + 1;
	doc_check = 1;
	line_check();

	prt_line(73," ");
	shift_rec_prt();
  	fprintf(f1,"\n");   	        

	nd_shift_amt = 0;
         	
        fprintf(f1, "\n");   	 	         
	line = line + 1;	
	doc_check = 0;
	line_check();

	if (line < MAX_LINES-3)
        {
	if (line != 0 )
	{sub_hdr_prt();}
	}
	else
	{ line = MAX_LINES +1;
	  doc_check = 0;
	  line_check();
        }

      rec_prt();
	line = line + 1;	
	line_check();
	}
        }
   else
	{

	fprintf(f1,"\n");   	        
	line = line + 1;
        doc_check = 1;
	line_check();

	prt_line(73," ");
	shift_rec_prt();
  	fprintf(f1,"\n");   	        
	prt_line(73," ");

	cash_rec_prt();
  	fprintf(f1,"\n");   	        

	nd_shift_amt 		= 0;
	nd_cash_counter_amt	= 0;
         	
        fprintf(f1, "\n");   	 	         
	line = line + 1;	
	doc_check = 0;
	line_check();
         
	if (line < MAX_LINES-3)
        {
	if (line != 0 )
	{sub_hdr_prt();}
	}
	else
	{ line = MAX_LINES +1;
	  doc_check = 0;
	  line_check();
        }
	  rec_prt();
	line = line + 1;	
	line_check();
	}
	}
     else
     {
	fprintf(f1,"\n");   	        
	line = line + 1;
	doc_check = 1;
	line_check();
	prt_line(73," ");

	shift_rec_prt();
  	fprintf(f1,"\n");   	        
	prt_line(73," ");

	cash_rec_prt();
  	fprintf(f1,"\n");   	        
	prt_line(73," ");

	fc_rec_prt();
	fprintf(f1,"\n");   	        


	nd_shift_amt 		= 0;
	nd_cash_counter_amt	= 0;
	nd_facility_amt		= 0;
         	
        fprintf(f1, "\n");   	 	         
	line = line + 1;	
	doc_check = 0;
	line_check();

        line = MAX_LINES +1; 

	if (line < MAX_LINES-3)
        {
	if (line != 0 )
	{sub_hdr_prt();}
	}
	else
	{ line = MAX_LINES +1;
	  doc_check = 0;
	  line_check();
        }

	rec_prt();
	line = line + 1;	
	line_check();
        }
	
 	nd_facility_amt		= nd_facility_amt 	+ nd_doc_amt;
 	nd_cash_counter_amt	= nd_cash_counter_amt	+ nd_doc_amt;
	nd_shift_amt		= nd_shift_amt	 	+ nd_doc_amt;	
	nd_gt_amt		= nd_gt_amt		+ nd_doc_amt;

	strcpy(nd_prev_facility_id.arr,nd_facility_id.arr);  	
	strcpy(nd_prev_facility.arr,nd_facility.arr);  	
	nd_prev_facility_id.len = strlen(nd_prev_facility_id.arr);      	 
	nd_prev_facility.len = strlen(nd_prev_facility.arr);      	 
        strcpy(nd_prev_cash_counter_id.arr,nd_cash_counter_id.arr);		
        strcpy(nd_prev_cash_counter.arr,nd_cash_counter.arr);		
	nd_prev_cash_counter_id.len = strlen(nd_prev_cash_counter_id.arr);      	 
	nd_prev_cash_counter.len = strlen(nd_prev_cash_counter.arr);      	 
        strcpy(nd_prev_shift.arr,nd_shift.arr);        
	nd_prev_shift.len = strlen(nd_prev_shift.arr);      	 
	
	nd_prev_fmt_string = nd_fmt_string;     	 
	
        fetch_cursor_check = fetch_cursor();	 		
   } 	

	fprintf(f1, "\n");   	        
	line = line + 1;
	doc_check = 0;
	line_check();
	prt_line(73," ");
	shift_rec_prt();
  	fprintf(f1,"\n");   	        
	line = line + 1;
	doc_check = 0;
	line_check();
	prt_line(73," ");

	cash_rec_prt();
  	fprintf(f1,"\n");   	        
	line = line + 1;
	doc_check = 0;
	line_check();
	prt_line(73," ");

	fc_rec_prt();
	fprintf(f1,"\n");   	        
	line = line + 1;
	doc_check = 0;
	line_check();
	prt_line(73," ");
	/*
	if (nd_prev_fmt_string == 3)
        {
	fprintf(f1,"Grand Total 	           %8.3f",nd_gt_amt); }
        else
	{
	fprintf(f1,"Grand Total 	          %8.2f",nd_gt_amt); 	
	}*/
	
	fprintf(f1,"Grand Total                  ");
	print_formated(nd_gt_amt); 	


        fprintf(f1,"\n");   	     	        
  
 	 
	 fprintf(f1,"\n");
	 prt_line(58," "); 
	 fprintf(f1,"*** End Of Report ***");
         fprintf(f1, "\n");   	 
	 close_cursor();
}
