/* Date :- 21-MAR-93    */
 
#include <stdio.h>
#include <string.h>
#include <gl.h>                     
                                                 
#define OERROR (sqlca.sqlcode < 0)

#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define DEST_NAME "arrstmt.lis"
                  
#define MAX_LINES 23                  

#define LEGEND 1

#define LENGTH_WORDS 65  /* ADDED ON 02/12/1999 */


#define SKIP_1  7
#define SKIP_2  1
#define SKIP_3  9
#define SKIP_4  40
#define SKIP_5  18
#define SKIP_6  08
#define SKIP_7  109
#define SKIP_8  88
#define SKIP_9  1
#define SKIP_10 98
#define SKIP_11 02
#define SKIP_12 34

#define DOUBLE_WIDTH 0x0E
#define EMPHASIZED_START 0x45
#define EMPHASIZED_END 0x46
#define ESC 0x1B

/*
#define DEBUG 0
*/                


EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd      [132],
           hosp_name    [120],
           date_time    [20],
           user_id      [20],
           nd_pgm_date  [35];

   VARCHAR nd_facility_id                [3],
		   nd_session_id                 [16],
           nd_fm_cust_code               [12],
           nd_to_cust_code               [12],
           nd_fm_alpha_code              [11],
           nd_to_alpha_code              [11],
           nd_stmt_freq_code             [3],
           nd_patient_det                [3],
           nd_zero_bal_flag              [3],
           nd_cutoff_date                [13],
           cut_off_dt_prn                [13],
           nd_rep_order_flg              [3],
   		   nd_fm_cust_type				 [3],
           nd_to_cust_type				 [3],
           nd_fm_cust_group				 [3],
           nd_to_cust_group				 [3],
           nd_fm_anal_cd1				 [9],
           nd_to_anal_cd1				 [9],
           nd_fm_anal_cd2				 [9],
           nd_to_anal_cd2				 [9],
           nd_fm_anal_cd3				 [9],
           nd_to_anal_cd3				 [9],
 		   currency						 [7], /* ADDED ON 02/12/1999 */
		   subcur						 [7],
           d_cust_cust_code              [9],
           d_cust_long_name_chinese      [101],   /* CRF-0120  */
           d_cust_short_name_chinese     [101],   /* CRF-0120  */
           d_cust_add1_desc_chinese      [61],
           d_cust_add2_desc_chinese      [61],
           d_cust_add3_desc_chinese      [61],
           d_cust_zip_desc_chinese       [31],
           d_cust_contact_name           [101],   /* CRF-0120  */
           d_cust_contact_name_ttl       [61],   /* CRF-0120  */
           d_tel_num                     [31],
           d_ar_pend_doc_type_code       [7],
           d_ar_pend_doc_num             [9],
           d_ar_pend_doc_date            [12],
           d_ar_pend_bill_num            [9],
           d_ar_pend_bill_doc_type_code  [7],
           d_ar_pend_patient_id          [21],
           d_ar_pend_cust_ref            [16],
           d_ar_mp_patient_name          [31],
		   d_ar_pend_narration           [51],
		   d_misc_cust_long_name         [101],   /* CRF-0120  */
		   d_misc_cust_short_name        [61],   /* CRF-0120  */
		   d_misc_cust_add1_desc         [61],
		   d_misc_cust_add2_desc         [61],
		   d_misc_cust_add3_desc         [61],
		   d_misc_cust_zip_desc          [31],
		   d_misc_cust_long_name_chi     [101],   /* CRF-0120  */
		   d_misc_cust_short_name_chi    [101],   /* CRF-0120  */
		   d_misc_cust_add1_desc_chi     [61],
		   d_misc_cust_add2_desc_chi     [61],
		   d_misc_cust_add3_desc_chi     [61],
		   d_misc_cust_zip_desc_chi      [31],
           d_misc_cust_contact_name      [101],   /* CRF-0120  */
           d_misc_cust_contact_name_ttl  [61],   /* CRF-0120  */
	   	   d_ar_pend_bill_type_code      [3],
           d_misc_tel_num                [31];

   VARCHAR p_language_id				 [4];
           
char       d_misc_customer_flag,
	   	   d_chinese_reporting_flag,
   		   amt_in_words	 [10][133]; /* ADDED ON 02/12/1999 */

double     d_ar_pend_pending_amt,
           d_ar_pend_payable_amt,
           d_ar_pend_alloc_amt,
           d_ar_pend_negative_amt,

           tot_payable_amt,
           tot_alloc_amt,
           tot_pending_amt,
		   tot_pending_amt1,
           nd_open_credit,

           amt_slot1,
           amt_slot2,
           amt_slot3,
           amt_slot4,
           amt_slot5;

int d_ar_pend_sign_amt,
    nd_age_slot1,
    nd_age_slot2,
    nd_age_slot3,
    nd_age_slot4,
    nd_age_slot5,
	no_of_decimal;
    
long  age_days;    

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

FILE *fp;
int lctr = 0,pctr =0;
int cust_lctr = 0, cust_pctr = 0;

int open_print_flag = 0;
char filename[150];

void proc_main(argc,argv)
char *argv[];
int argc;
{
	strcpy(filename,WORKING_DIR);
	strcpy(OUTPUT_FILE_NAME,argv[5]);
	strcat(filename,OUTPUT_FILE_NAME);

	//strcat(filename,DEST_NAME);

   if (argc != 6)
   {
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"ARRSTMT");  
   

   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle");
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd");
      proc_exit();
   }

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);
   strcpy(g_facility_id,argv[4]);

   set_meduser_role();
   strcpy(p_language_id.arr,l_language_id.arr);
   p_language_id.len = l_language_id.len;

   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   nd_fm_cust_code.arr[0]        = '\0';
   nd_to_cust_code.arr[0]        = '\0';
   nd_fm_alpha_code.arr[0]       = '\0';
   nd_to_alpha_code.arr[0]       = '\0';
   nd_stmt_freq_code.arr[0]      = '\0';
   nd_patient_det.arr[0]         = '\0';
   nd_zero_bal_flag.arr[0]       = '\0';
   nd_cutoff_date.arr[0]         = '\0';
   nd_rep_order_flg.arr[0]       = '\0';

   nd_fm_cust_type.arr[0]        = '\0';
   nd_to_cust_type.arr[0]        = '\0';
   nd_fm_cust_group.arr[0]       = '\0';
   nd_to_cust_group.arr[0]       = '\0';
   nd_fm_anal_cd1.arr[0]         = '\0';
   nd_to_anal_cd1.arr[0]         = '\0';
   nd_fm_anal_cd2.arr[0]         = '\0';
   nd_to_anal_cd2.arr[0]         = '\0';
   nd_fm_anal_cd3.arr[0]         = '\0';
   nd_to_anal_cd3.arr[0]         = '\0';

   nd_fm_cust_type.len           = 0;
   nd_to_cust_type.len           = 0;
   nd_fm_cust_group.len          = 0;
   nd_to_cust_group.len          = 0;
   nd_fm_anal_cd1.len            = 0;
   nd_to_anal_cd1.len            = 0;
   nd_fm_anal_cd2.len            = 0;
   nd_to_anal_cd2.len            = 0;
   nd_fm_anal_cd3.len            = 0;
   nd_to_anal_cd3.len            = 0;
   nd_fm_cust_code.len           = 0;
   nd_to_cust_code.len           = 0;
   nd_fm_alpha_code.len          = 0;
   nd_to_alpha_code.len          = 0;
   nd_stmt_freq_code.len         = 0;
   nd_patient_det.len            = 0;
   nd_zero_bal_flag.len          = 0;
   nd_cutoff_date.len            = 0;
   nd_rep_order_flg.len          = 0;

   EXEC SQL SELECT operating_facility_id,
				   NVL(PARAM1,'!!!!!!!!'),NVL(PARAM2,'~~~~~~~~'),
                   NVL(PARAM3,'!!!!!!!!!!'),NVL(PARAM4,'~~~~~~~~~~'),
                   PARAM5,PARAM6,PARAM7,PARAM8,
                   PARAM9,
   				   PARAM11,
                   PARAM12,
                   PARAM13,
                   PARAM14,
                   PARAM15,
                   PARAM16,
                   PARAM17,
                   PARAM18,
                   PARAM19,
				   PARAM20

              INTO :nd_facility_id,
				   :nd_fm_cust_code,
                   :nd_to_cust_code,
                   :nd_fm_alpha_code,
                   :nd_to_alpha_code,
                   :nd_stmt_freq_code,
                   :nd_zero_bal_flag,
                   :nd_patient_det,
                   :nd_cutoff_date,
                   :nd_rep_order_flg,
                   :nd_fm_cust_type,
				   :nd_to_cust_type,
                   :nd_fm_cust_group,
                   :nd_to_cust_group,
                   :nd_fm_anal_cd1,
                   :nd_to_anal_cd1,
                   :nd_fm_anal_cd2,
                   :nd_to_anal_cd2,
                   :nd_fm_anal_cd3,
                   :nd_to_anal_cd3

              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARRSTMT'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_facility_id.arr[nd_facility_id.len]        = '\0'; /*added for gdph-crf-107.6*/
   nd_fm_cust_code.arr[nd_fm_cust_code.len]        = '\0';
   nd_to_cust_code.arr[nd_to_cust_code.len]        = '\0';
   nd_fm_alpha_code.arr[nd_fm_alpha_code.len]      = '\0';
   nd_to_alpha_code.arr[nd_to_alpha_code.len]      = '\0';
   nd_stmt_freq_code.arr[nd_stmt_freq_code.len]    = '\0';
   nd_patient_det.arr[nd_patient_det.len]          = '\0';
   nd_zero_bal_flag.arr[nd_zero_bal_flag.len]      = '\0';
   nd_cutoff_date.arr[nd_cutoff_date.len]          = '\0';
   nd_rep_order_flg.arr[nd_rep_order_flg.len]      = '\0';
   nd_fm_cust_type.arr[nd_fm_cust_type.len]        = '\0';
   nd_to_cust_type.arr[nd_to_cust_type.len]        = '\0';
   nd_fm_cust_group.arr[nd_fm_cust_group.len]      = '\0';
   nd_to_cust_group.arr[nd_to_cust_group.len]      = '\0';
   nd_fm_anal_cd1.arr[nd_fm_anal_cd1.len]          = '\0';
   nd_to_anal_cd1.arr[nd_to_anal_cd1.len]          = '\0';
   nd_fm_anal_cd2.arr[nd_fm_anal_cd2.len]          = '\0';
   nd_to_anal_cd2.arr[nd_to_anal_cd2.len]          = '\0';
   nd_fm_anal_cd3.arr[nd_fm_anal_cd3.len]          = '\0';
   nd_to_anal_cd3.arr[nd_to_anal_cd3.len]          = '\0';


   start_prog_msg();

   fetch_detls();

   open_files();
   
   declare_cursors();

   while(fetch_customer())
   {
        cust_lctr = cust_pctr = 0;

        open_pending_doc();

       if(d_misc_customer_flag == 'Y') {

            while(fetch_pending_doc())
            {
		if(equal(d_ar_pend_pending_amt,(double)0) &&
		   nd_zero_bal_flag.arr[0] EQ 'N')
		   continue;
                cust_lctr = cust_pctr = 0;
                print_page_head();
                fetch_patient_name();
                process_ageing();
                print_details();
                print_footer();
            }

       }
       else {

            while(fetch_pending_doc())
            {
		if(equal(d_ar_pend_pending_amt,(double)0) &&
		   nd_zero_bal_flag.arr[0] EQ 'N')
		   continue;

                if (cust_pctr == 0)
                    print_page_head();
                fetch_patient_name();
                process_ageing();
                print_details();
            }
            if (cust_pctr != 0)
                print_footer();
	}
    
   }

   EXEC SQL DELETE FROM SY_PROG_PARAM
                  WHERE PGM_ID     = 'ARRSTMT'
                    AND SESSION_ID = :nd_session_id
                    AND PGM_DATE   = :nd_pgm_date;
   if (OERROR)   
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

   fclose(fp);
   end_prog_msg();
   EXEC SQL COMMIT WORK RELEASE;
}

fetch_detls()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   user_id.arr[0]        = '\0';
   cut_off_dt_prn.arr[0] = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   user_id.len        = 0;
   cut_off_dt_prn.len = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY'),
                   USER,
                   TO_CHAR(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),'DD/MM/YYYY'),
   				   BASE_CURRENCY,BASE_CURRENCY_DEC,    /* ADDED ON 02/12/1999 */
				   nvl(no_of_decimal,2)
              INTO :hosp_name, :date_time, :user_id,
                   :cut_off_dt_prn,:currency,:subcur,:no_of_decimal
              FROM SY_ACC_ENTITY
			 WHERE ACC_ENTITY_ID = :nd_facility_id;

   if (OERROR)
         err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   user_id.arr[user_id.len]               = '\0';
   cut_off_dt_prn.arr[cut_off_dt_prn.len] = '\0';

   currency.arr[currency.len]			  = '\0'; /* ADDED ON 02/12/1999 */
   subcur.arr[subcur.len]				  = '\0';


   EXEC SQL SELECT DAYS_AGE_SLOT_1, DAYS_AGE_SLOT_2,
                   DAYS_AGE_SLOT_3, DAYS_AGE_SLOT_4,
                   DAYS_AGE_SLOT_5
              INTO :nd_age_slot1, :nd_age_slot2,
                   :nd_age_slot3, :nd_age_slot4,
                   :nd_age_slot5
              FROM AR_PARAMETER
			  where operating_facility_id=:nd_facility_id; /*added for gdoh-crf-107.6*/

   if (OERROR)
         err_mesg("SELECT failed on table AR_PARAMETER",0,"");
 
   if (NOT_FOUND)
         err_mesg("Record not found in AR_PARAMETER",0,"");
}

open_files()
{
   char		text_msg[101];
   if ((fp = fopen(filename,"w")) == NULL)
   {
        sprintf(text_msg,"Error While Opening File %s",filename);
		err_mesg(text_msg,0,"");
		err_mesg("\nError while opening File arrstmt.lis\n",0,"");
        exit(0);
   }

}

print_page_head()
{ 
int i=0;
static int g_first = 1;
   pctr++;

   cust_lctr = 0;
   cust_pctr++;

   if (cust_pctr > 1)
      print_balance1(); 

   if(!g_first)
       fprintf(fp,"\f");

   g_first=0; 

   fprintf(fp,"%c",0x12); /**** Set Printer to Normal Mode ****/

   for (i=0;i<SKIP_1;i++) fprintf(fp,"\n");

   if (LEGEND)
   {
      for (i=0;i<SKIP_12;i++) fprintf(fp," ");
      fprintf(fp,"%c%cS T A T E M E N T\n",ESC,EMPHASIZED_START);
      for (i=0;i<SKIP_12;i++) fprintf(fp," ");
      fprintf(fp,"-----------------\n");
      for (i=0;i<SKIP_12;i++) fprintf(fp," ");
      fprintf(fp,"AS AT ");
   }
   else
   {
      fprintf(fp,"\n");
      fprintf(fp,"\n");
      for (i=0;i<SKIP_12;i++) fprintf(fp," ");
      fprintf(fp,"      ");
   }

   fprintf(fp,"%s%c%c\n",cut_off_dt_prn.arr,ESC,EMPHASIZED_END);

   for (i=0;i<SKIP_2;i++) fprintf(fp,"\n");
   
   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-8s",d_cust_cust_code.arr);
   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   if (LEGEND)
      fprintf(fp,"DATE : ");
   else
      fprintf(fp,"       ");
   fprintf(fp,"%s\n",date_time.arr);
   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-40.40s\n",d_cust_long_name_chinese.arr);

   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s",d_cust_add1_desc_chinese.arr);

   for (i=0;i<SKIP_5;i++) fprintf(fp," ");
   if (LEGEND)
      fprintf(fp,"PAGE : ");
   else
      fprintf(fp,"       ");
   fprintf(fp,"%2d\n",cust_pctr);

   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_add2_desc_chinese.arr);

   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_add3_desc_chinese.arr);

   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_zip_desc_chinese.arr);

   for (i=0;i<4;i++) fprintf(fp,"\n");
   for (i=0;i<SKIP_3;i++) fprintf(fp," ");

   if (LEGEND)
      fprintf(fp,"Tel  : ");
   else
      fprintf(fp,"       ");
   fprintf(fp,"%s \n", d_tel_num.arr);
      
   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   if (LEGEND)
      fprintf(fp,"ATTN : ");
   else
      fprintf(fp,"       ");
   fprintf(fp,"%s, %s \n", 
              d_cust_contact_name.arr,
              d_cust_contact_name_ttl.arr);
   for (i=0;i<3;i++) fprintf(fp,"\n");
   fflush(fp);
   fprintf(fp,"%c",0x0F); /*** set printer to compressed mode ***/
   if (LEGEND)
   {
fprintf(fp,"-------------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,"DOC DATE   DOC         DOC     BILL DOC.   PATIENT    NAME OF PATIENT            D.VOUCHER           DEBIT AMT     ALLOC AMT    O/S AMOUNT\n");
fprintf(fp,"           TYPE        NO.      NO. TYPE   NO.                                                                                 (%s)\n",currency.arr);

fprintf(fp,"-------------------------------------------------------------------------------------------------------------------------------------------\n");
   }
     if (cust_pctr > 1)
     { 
        print_balance2();
     }
}


declare_cursors()
{
    EXEC SQL DECLARE AR_CUSTOMER_CUR1 CURSOR FOR
        SELECT CUST_CODE,
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',LONG_NAME_CHINESE,LONG_NAME),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',SHORT_NAME_CHINESE,SHORT_NAME),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD1_DESC_CHINESE,ADD1_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD2_DESC_CHINESE,ADD2_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD3_DESC_CHINESE,ADD3_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ZIP_DESC_CHINESE,ZIP_DESC),' '),
               NVL(CONTACT_NAME,' '),
               NVL(CONTACT_NAME_TITLE,' '),
	       NVL(MISC_CUSTOMER_FLAG,' '),
	       NVL(CHINESE_REPORTING_FLAG,' '),
	       TEL_NUM
          FROM AR_CUSTOMER
         WHERE STMT_FREQ_CODE = NVL(:nd_stmt_freq_code,'W')
           AND CUST_CODE BETWEEN 
                    NVL(:nd_fm_cust_code,'        ')
                AND NVL(:nd_to_cust_code,'~~~~~~~~')
            AND NVL(PAT_COM_FLAG,'X') = DECODE(:nd_patient_det,'Y','Y',
                                          NVL(PAT_COM_FLAG,'X'))
			AND CUST_TYPE_CODE BETWEEN NVL(:nd_fm_cust_type,'  ')
                AND NVL(:nd_to_cust_type,'~~')
           AND CUST_GROUP_CODE BETWEEN NVL(:nd_fm_cust_group,'  ')
                AND NVL(:nd_to_cust_group,'~~')
           AND NVL(ANALYSIS_1_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd1,'        ')
                 AND NVL(:nd_to_anal_cd1,'~~~~~~~~')
           AND NVL(ANALYSIS_2_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd2,'        ')
                 AND NVL(:nd_to_anal_cd2,'~~~~~~~~')
           AND NVL(ANALYSIS_3_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd3,'        ')
                 AND NVL(:nd_to_anal_cd3,'~~~~~~~~')
			   ORDER BY CUST_CODE;

      EXEC SQL DECLARE AR_CUSTOMER_CUR2 CURSOR FOR
        SELECT CUST_CODE,
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',LONG_NAME_CHINESE,LONG_NAME),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',SHORT_NAME_CHINESE,SHORT_NAME),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD1_DESC_CHINESE,ADD1_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD2_DESC_CHINESE,ADD2_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ADD3_DESC_CHINESE,ADD3_DESC),' '),
               NVL(DECODE(CHINESE_REPORTING_FLAG,'Y',ZIP_DESC_CHINESE,ZIP_DESC),' '),
               NVL(CONTACT_NAME,' '),
               NVL(CONTACT_NAME_TITLE,' '),
	       NVL(MISC_CUSTOMER_FLAG,' '),
	       NVL(CHINESE_REPORTING_FLAG,' '),
	       TEL_NUM
          FROM AR_CUSTOMER
         WHERE STMT_FREQ_CODE = NVL(:nd_stmt_freq_code,'W')
           AND CUST_ALPHA_CODE BETWEEN 
                    NVL(:nd_fm_alpha_code,'          ')
                AND NVL(:nd_to_alpha_code,'~~~~~~~~~~')
            AND NVL(PAT_COM_FLAG,'X') = DECODE(:nd_patient_det,'Y','Y',
                                          NVL(PAT_COM_FLAG,'X'))
			AND CUST_TYPE_CODE BETWEEN NVL(:nd_fm_cust_type,'  ')
                AND NVL(:nd_to_cust_type,'~~')
           AND CUST_GROUP_CODE BETWEEN NVL(:nd_fm_cust_group,'  ')
                AND NVL(:nd_to_cust_group,'~~')
           AND NVL(ANALYSIS_1_CODE,'X')  
               BETWEEN NVL(:nd_fm_anal_cd1,'        ')
                 AND NVL(:nd_to_anal_cd1,'~~~~~~~~')
           AND NVL(ANALYSIS_2_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd2,'        ')
                 AND NVL(:nd_to_anal_cd2,'~~~~~~~~')
           AND NVL(ANALYSIS_3_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd3,'        ')
                 AND NVL(:nd_to_anal_cd3,'~~~~~~~~')
          ORDER BY CUST_ALPHA_CODE,CUST_CODE;
      
    EXEC SQL DECLARE AR_PENDING_DOC_CUR CURSOR FOR
              SELECT DOC_TYPE_CODE,
                     DOC_NUM,
                     TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                     NVL(BILL_NUM,0),
                     NVL(BILL_DOC_TYPE_CODE,' '),
                     NVL(PATIENT_ID,' '),
                     NVL(CUST_REF,' '),
                     NVL(CEIL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY') - NVL(BASE_DATE,DOC_DATE)),0),
                     NVL(PENDING_AMT,0), NVL(PAYABLE_AMT,0),
                     NVL(PENDING_AMT,0) - NVL(PAYABLE_AMT,0),
                     SIGN(PENDING_AMT),
                     DECODE(SIGN(NVL(PENDING_AMT,0)),-1,-NVL(PENDING_AMT,0),
                     NVL(PENDING_AMT,0)),
					 NVL(MISC_CUST_LONG_NAME,' '),
					 NVL(MISC_CUST_SHORT_NAME,' '),
					 NVL(MISC_CUST_ADD1_DESC,' '),
					 NVL(MISC_CUST_ADD2_DESC,' '),
					 NVL(MISC_CUST_ADD3_DESC,' '),
					 NVL(MISC_CUST_ZIP_DESC,' '),
					 NVL(MISC_CUST_LONG_NAME_CHINESE,' '),
					 NVL(MISC_CUST_SHORT_NAME_CHINESE,' '),
					 NVL(MISC_CUST_ADD1_DESC_CHINESE,' '),
					 NVL(MISC_CUST_ADD2_DESC_CHINESE,' '),
					 NVL(MISC_CUST_ADD3_DESC_CHINESE,' '),
					 NVL(MISC_CUST_ZIP_DESC_CHINESE,' '),
					 NVL(CONTACT_NAME,' '),
					 NVL(CONTACT_NAME_TITLE,' '),
					 NVL(BILL_TYPE_CODE,' '),
					 NVL(SUBSTR(NARRATION,1,26),' '),
					 TEL_NUM
	            FROM AR_PENDING_DOC
	           WHERE operating_facility_id =:nd_facility_id /*added for gdoh-crf-107.6*/
			   and  CUST_CODE = :d_cust_cust_code
                 AND NVL(DOC_DATE,BASE_DATE) <= to_date(:nd_cutoff_date,'DD/MM/YYYY')
               ORDER BY DOC_DATE,DOC_TYPE_CODE,DOC_NUM;

    EXEC SQL DECLARE AR_PATIENT_CUR CURSOR FOR
              SELECT LTRIM(SUBSTR(RTRIM(TITLE_CODE)||' '||SHORT_NAME,1,27))
                FROM MP_PATIENT_MAST
               WHERE PATIENT_ID = :d_ar_pend_patient_id;
     

    if (nd_rep_order_flg.arr[0] == 'C')
    {
         EXEC SQL OPEN AR_CUSTOMER_CUR1;
         if (OERROR)
            err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR1",0,"");
    }
    else
    {
         EXEC SQL OPEN AR_CUSTOMER_CUR2;
         if (OERROR)
            err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR2",0,"");
     }

}

fetch_customer()
{

d_cust_cust_code.arr[0]                = '\0';
d_cust_long_name_chinese.arr[0]        = '\0';
d_cust_short_name_chinese.arr[0]       = '\0';
d_cust_add1_desc_chinese.arr[0]        = '\0';
d_cust_add2_desc_chinese.arr[0]        = '\0';
d_cust_add3_desc_chinese.arr[0]        = '\0';
d_cust_zip_desc_chinese.arr[0]         = '\0';
d_cust_contact_name.arr[0]             = '\0';
d_cust_contact_name_ttl.arr[0]         = '\0';
d_tel_num.arr[0]                       = '\0';
d_misc_customer_flag                   = '\0';
d_chinese_reporting_flag               = '\0';

d_cust_cust_code.len                   = 0;
d_cust_long_name_chinese.len           = 0;
d_cust_short_name_chinese.len          = 0;
d_cust_add1_desc_chinese.len           = 0;
d_cust_add2_desc_chinese.len           = 0;
d_cust_add3_desc_chinese.len           = 0;
d_cust_zip_desc_chinese.len            = 0;
d_cust_contact_name.len                = 0;
d_cust_contact_name_ttl.len          = 0;

    if (nd_rep_order_flg.arr[0] == 'C')
    {
        EXEC SQL FETCH AR_CUSTOMER_CUR1
                  INTO :d_cust_cust_code,
                       :d_cust_long_name_chinese,
                       :d_cust_short_name_chinese,
                       :d_cust_add1_desc_chinese,
                       :d_cust_add2_desc_chinese,
                       :d_cust_add3_desc_chinese,
                       :d_cust_zip_desc_chinese,
                       :d_cust_contact_name,
                       :d_cust_contact_name_ttl,
				       :d_misc_customer_flag,
				       :d_chinese_reporting_flag,
				       :d_tel_num;
        if (OERROR)
            err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR1",0,"");
     }
     else
     {
        EXEC SQL FETCH AR_CUSTOMER_CUR2
                  INTO :d_cust_cust_code,
                       :d_cust_long_name_chinese,
                       :d_cust_short_name_chinese,
                       :d_cust_add1_desc_chinese,
                       :d_cust_add2_desc_chinese,
                       :d_cust_add3_desc_chinese,
                       :d_cust_zip_desc_chinese,
                       :d_cust_contact_name,
                       :d_cust_contact_name_ttl,
				       :d_misc_customer_flag,
				       :d_chinese_reporting_flag,
				       :d_tel_num;
        if (OERROR)
            err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR2",0,"");
     }
d_cust_cust_code.arr[d_cust_cust_code.len]                    = '\0';
d_cust_long_name_chinese.arr[d_cust_long_name_chinese.len]    = '\0';
d_cust_short_name_chinese.arr[d_cust_short_name_chinese.len]  = '\0';
d_cust_add1_desc_chinese.arr[d_cust_add1_desc_chinese.len]    = '\0';
d_cust_add2_desc_chinese.arr[d_cust_add2_desc_chinese.len]    = '\0';
d_cust_add3_desc_chinese.arr[d_cust_add3_desc_chinese.len]    = '\0';
d_cust_zip_desc_chinese.arr[d_cust_zip_desc_chinese.len]      = '\0';
d_cust_contact_name.arr[d_cust_contact_name.len]              = '\0';
d_tel_num.arr[d_tel_num.len]                                  = '\0';
d_cust_contact_name_ttl.arr[d_cust_contact_name_ttl.len]  = '\0';

   if (LAST_ROW)
       return(0);
   else
       return(1);
}

open_pending_doc()
{
    EXEC SQL OPEN AR_PENDING_DOC_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor AR_PENDING_DOC_CUR",0,"");
}

fetch_pending_doc()
{

d_ar_pend_doc_type_code.arr[0]            = '\0';
d_ar_pend_doc_num.arr[0]                  = '\0';
d_ar_pend_doc_date.arr[0]                 = '\0';
d_ar_pend_bill_num.arr[0]                 = '\0';
d_ar_pend_bill_doc_type_code.arr[0]       = '\0';
d_ar_pend_patient_id.arr[0]               = '\0';
d_ar_pend_cust_ref.arr[0]                 = '\0';
d_misc_cust_long_name.arr[0]       = '\0';
d_misc_cust_short_name.arr[0]      = '\0';
d_misc_cust_add1_desc.arr[0]       = '\0';
d_misc_cust_add2_desc.arr[0]       = '\0';
d_misc_cust_add3_desc.arr[0]       = '\0';
d_misc_cust_zip_desc.arr[0]        = '\0';
d_misc_cust_long_name_chi.arr[0]   = '\0';
d_misc_cust_short_name_chi.arr[0]  = '\0';
d_misc_cust_add1_desc_chi.arr[0]   = '\0';
d_misc_cust_add2_desc_chi.arr[0]   = '\0';
d_misc_cust_add3_desc_chi.arr[0]   = '\0';
d_misc_cust_zip_desc_chi.arr[0]    = '\0';
d_misc_cust_contact_name.arr[0]    = '\0';
d_misc_cust_contact_name_ttl.arr[0]= '\0';
d_misc_tel_num.arr[0]              = '\0';
d_ar_pend_bill_type_code.arr[0]    = '\0';
d_ar_pend_narration.arr[0]		   = '\0';

d_ar_pend_pending_amt              = 0;
d_ar_pend_payable_amt              = 0;
d_ar_pend_alloc_amt                = 0;
age_days						   = 0;
d_ar_pend_doc_type_code.len        = 0;
d_ar_pend_doc_num.len              = 0;
d_ar_pend_doc_date.len             = 0;
d_ar_pend_bill_num.len             = 0;
d_ar_pend_bill_doc_type_code.len   = 0;
d_ar_pend_patient_id.len           = 0;
d_ar_pend_cust_ref.len             = 0;
d_misc_cust_long_name.len          = 0;
d_misc_cust_short_name.len         = 0;
d_misc_cust_add1_desc.len          = 0;
d_misc_cust_add2_desc.len          = 0;
d_misc_cust_add3_desc.len          = 0;
d_misc_cust_zip_desc.len           = 0;
d_misc_cust_long_name_chi.len      = 0;
d_misc_cust_short_name_chi.len     = 0;
d_misc_cust_add1_desc_chi.len      = 0;
d_misc_cust_add2_desc_chi.len      = 0;
d_misc_cust_add3_desc_chi.len      = 0;
d_misc_cust_zip_desc_chi.len       = 0;
d_misc_cust_contact_name.len       = 0;
d_misc_cust_contact_name_ttl.len   = 0;
d_misc_tel_num.len                 = 0;
d_ar_pend_bill_type_code.len       = 0;
d_ar_pend_narration.len            = 0;

    EXEC SQL FETCH AR_PENDING_DOC_CUR
              INTO :d_ar_pend_doc_type_code,
                   :d_ar_pend_doc_num,
                   :d_ar_pend_doc_date,
                   :d_ar_pend_bill_num,
                   :d_ar_pend_bill_doc_type_code,
                   :d_ar_pend_patient_id,
                   :d_ar_pend_cust_ref,
                   :age_days,
                   :d_ar_pend_pending_amt,
                   :d_ar_pend_payable_amt,
                   :d_ar_pend_alloc_amt,
                   :d_ar_pend_sign_amt,
                   :d_ar_pend_negative_amt,
				   :d_misc_cust_long_name,
				   :d_misc_cust_short_name,
				   :d_misc_cust_add1_desc,
				   :d_misc_cust_add2_desc,
				   :d_misc_cust_add3_desc,
				   :d_misc_cust_zip_desc,
				   :d_misc_cust_long_name_chi,
				   :d_misc_cust_short_name_chi,
				   :d_misc_cust_add1_desc_chi,
				   :d_misc_cust_add2_desc_chi,
				   :d_misc_cust_add3_desc_chi,
				   :d_misc_cust_zip_desc_chi,
                   :d_misc_cust_contact_name,
                   :d_misc_cust_contact_name_ttl,
                   :d_ar_pend_bill_type_code,
                   :d_ar_pend_narration,
                   :d_misc_tel_num;
    if (OERROR)
         err_mesg("FETCH failed on cursor AR_PENDING_DOC_CUR",0,"");

  if (LAST_ROW)
      return(0);

d_ar_pend_doc_type_code.arr[d_ar_pend_doc_type_code.len] = '\0';
d_ar_pend_doc_num.arr[d_ar_pend_doc_num.len] = '\0';
d_ar_pend_doc_date.arr[d_ar_pend_doc_date.len] = '\0';
d_ar_pend_bill_num.arr[d_ar_pend_bill_num.len] = '\0';
d_ar_pend_bill_doc_type_code.arr[d_ar_pend_bill_doc_type_code.len] = '\0';
d_ar_pend_patient_id.arr[d_ar_pend_patient_id.len] = '\0';
d_ar_pend_cust_ref.arr[d_ar_pend_cust_ref.len] = '\0';
d_misc_cust_long_name.arr[d_misc_cust_long_name.len] = '\0';
d_misc_cust_short_name.arr[d_misc_cust_short_name.len] = '\0';
d_misc_cust_add1_desc.arr[d_misc_cust_add1_desc.len] = '\0';
d_misc_cust_add2_desc.arr[d_misc_cust_add2_desc.len] = '\0';
d_misc_cust_add3_desc.arr[d_misc_cust_add3_desc.len] = '\0';
d_misc_cust_zip_desc.arr[d_misc_cust_zip_desc.len] = '\0';
d_misc_cust_long_name_chi.arr[d_misc_cust_long_name_chi.len] = '\0';
d_misc_cust_short_name_chi.arr[d_misc_cust_short_name_chi.len] = '\0';
d_misc_cust_add1_desc_chi.arr[d_misc_cust_add1_desc_chi.len] = '\0';
d_misc_cust_add2_desc_chi.arr[d_misc_cust_add2_desc_chi.len] = '\0';
d_misc_cust_add3_desc_chi.arr[d_misc_cust_add3_desc_chi.len] = '\0';
d_misc_cust_zip_desc_chi.arr[d_misc_cust_zip_desc_chi.len] = '\0';
d_misc_cust_contact_name.arr[d_misc_cust_contact_name.len]  = '\0';
d_misc_cust_contact_name_ttl.arr[d_misc_cust_contact_name_ttl.len]  = '\0';
d_ar_pend_bill_type_code.arr[d_ar_pend_bill_type_code.len]   = '\0';
d_ar_pend_narration.arr[d_ar_pend_narration.len]  = '\0';
d_misc_tel_num.arr[d_misc_tel_num.len] = '\0';

if(d_misc_customer_flag == 'Y') {
    if(d_chinese_reporting_flag == 'Y') {
	strcpy(d_cust_long_name_chinese.arr,d_misc_cust_long_name_chi.arr);
	strcpy(d_cust_short_name_chinese.arr,d_misc_cust_short_name_chi.arr);
	strcpy(d_cust_add1_desc_chinese.arr,d_misc_cust_add1_desc_chi.arr);
	strcpy(d_cust_add2_desc_chinese.arr,d_misc_cust_add2_desc_chi.arr);
	strcpy(d_cust_add3_desc_chinese.arr,d_misc_cust_add3_desc_chi.arr);
	strcpy(d_cust_zip_desc_chinese.arr,d_misc_cust_zip_desc_chi.arr);
    }
    else {
	strcpy(d_cust_long_name_chinese.arr,d_misc_cust_long_name.arr);
	strcpy(d_cust_short_name_chinese.arr,d_misc_cust_short_name.arr);
	strcpy(d_cust_add1_desc_chinese.arr,d_misc_cust_add1_desc.arr);
	strcpy(d_cust_add2_desc_chinese.arr,d_misc_cust_add2_desc.arr);
	strcpy(d_cust_add3_desc_chinese.arr,d_misc_cust_add3_desc.arr);
	strcpy(d_cust_zip_desc_chinese.arr,d_misc_cust_zip_desc.arr);
    }

    strcpy(d_cust_contact_name.arr,d_misc_cust_contact_name.arr);
    strcpy(d_cust_contact_name_ttl.arr,d_misc_cust_contact_name_ttl.arr);
    strcpy(d_tel_num.arr, d_misc_tel_num.arr);
    
    d_cust_long_name_chinese.len = strlen(d_cust_long_name_chinese.arr);
    d_cust_short_name_chinese.len = strlen(d_cust_short_name_chinese.arr);
    d_cust_add1_desc_chinese.len = strlen(d_cust_add1_desc_chinese.arr);
    d_cust_add2_desc_chinese.len = strlen(d_cust_add2_desc_chinese.arr);
    d_cust_add3_desc_chinese.len = strlen(d_cust_add3_desc_chinese.arr);
    d_cust_zip_desc_chinese.len = strlen(d_cust_zip_desc_chinese.arr);
    d_cust_contact_name.len = strlen(d_cust_contact_name.arr);
    d_cust_contact_name_ttl.len = strlen(d_cust_contact_name_ttl.arr);
}


    EXEC SQL SELECT NVL(SUM(NVL(AMOUNT,0)),0) 
             INTO   :d_ar_pend_alloc_amt
		     FROM   AR_CUST_TRN
		     WHERE  CUST_CODE = :d_cust_cust_code
		     AND    ORG_DOC_TYPE_CODE = :d_ar_pend_doc_type_code
		     AND    ORG_DOC_NUM       = :d_ar_pend_doc_num
		     AND    RPAD(ORG_DOC_TYPE_CODE,6,' ')||TO_CHAR(ORG_DOC_NUM) <>
	         RPAD(DOC_TYPE_CODE,6,' ')||TO_CHAR(DOC_NUM)
		     AND    DOC_DATE <= TO_DATE(:nd_cutoff_date,'DD/MM/YYYY');


    if(OERROR)
	err_mesg("SELECT failed on table AR_CUST_TRN",0,"");

    d_ar_pend_pending_amt = d_ar_pend_payable_amt + d_ar_pend_alloc_amt;

    if(d_ar_pend_pending_amt < 0)
	d_ar_pend_sign_amt = -1;
    else if(d_ar_pend_pending_amt > 0)
	d_ar_pend_sign_amt = 1;
    else
        d_ar_pend_sign_amt = 0;

    d_ar_pend_negative_amt = (d_ar_pend_negative_amt > 0) ? 
			     d_ar_pend_negative_amt : 
			     d_ar_pend_negative_amt * -1;

 return(1);
}

fetch_patient_name()
{

d_ar_mp_patient_name.arr[0] = '\0';
d_ar_mp_patient_name.len    = 0;

     EXEC SQL OPEN AR_PATIENT_CUR;

     if (OERROR)
         err_mesg("OPEN failed on cursor AR_PATIENT_CUR",0,"");

     EXEC SQL FETCH AR_PATIENT_CUR
               INTO :d_ar_mp_patient_name;

     if (OERROR)
         err_mesg("FETCH failed on cursor AR_PATIENT_CUR",0,"");

    if(NO_DATA_FOUND)
	strcpy(d_ar_mp_patient_name.arr,d_ar_pend_narration.arr);
    else
       d_ar_mp_patient_name.arr[d_ar_mp_patient_name.len] = '\0';

}

print_details()
{
  char out_str[35],out_str1[35],misc_flag;
 
  if (cust_lctr > MAX_LINES) print_page_head();

  fprintf(fp,"%-10.10s %-6.6s %8.8s %8.8s %-6.6s %-10.10s %-26.26s %-15.15s",
					                  d_ar_pend_doc_date.arr,
					                  d_ar_pend_doc_type_code.arr,
					                  d_ar_pend_doc_num.arr,
					                  d_ar_pend_bill_num.arr,
					                  d_ar_pend_bill_doc_type_code.arr,
					                  d_ar_pend_patient_id.arr,
					                  d_ar_mp_patient_name.arr,
					                  d_ar_pend_cust_ref.arr);


   print_formated(d_ar_pend_payable_amt);
   print_formated(d_ar_pend_alloc_amt);
   print_formated(d_ar_pend_pending_amt);
   fprintf(fp,"\n");
   cust_lctr ++;

   tot_payable_amt   += d_ar_pend_payable_amt;
   tot_alloc_amt     += d_ar_pend_alloc_amt;
   tot_pending_amt   += d_ar_pend_pending_amt;

}

print_balance1()
{
 int i = 0;

    if (LEGEND)
       for (i=0;i<139;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    for (i=0;i<SKIP_7;i++) fprintf(fp," ");
    fprintf(fp,"C/F BALANCE  : ");
    print_formated(tot_pending_amt);
    fprintf(fp,"\n");
}
    
print_balance2()
{
 int i = 0;
    cust_lctr ++;
    for (i=0;i<SKIP_7;i++) fprintf(fp," ");
    fprintf(fp,"B/F BALANCE  : ");
    print_formated(tot_pending_amt);
    fprintf(fp,"\n");
}

print_footer()
{
 int i = 0;

 int no_of_lines; /* ADDED ON 02/12/1999 */

    for(i=0; i<10; i++) amt_in_words[i][0] = '\0';


    if (cust_lctr >= MAX_LINES) 
       print_page_head();

    for (i=cust_lctr;i<MAX_LINES-3;i++) fprintf(fp,"\n");
    if (LEGEND)
        for (i=0;i<139;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    for (i=0;i<SKIP_8;i++) fprintf(fp," ");
    if (LEGEND)
        fprintf(fp,"TOTAL : ");
    else
        fprintf(fp,"        ");

    print_formated(tot_payable_amt);
    print_formated(tot_alloc_amt);
    print_formated(tot_pending_amt);
    fprintf(fp,"\n");
    for (i=0;i<SKIP_9;i++) fprintf(fp,"\n");
    for (i=0;i<SKIP_10;i++) fprintf(fp," ");
    if (LEGEND)
        fprintf(fp,"TOTAL OUTSTANDING       : ");
    else
        fprintf(fp,"                          ");
    print_formated(tot_pending_amt);

	/*  added on 02/12/1999*/

     tot_pending_amt1 = tot_pending_amt;
   if (tot_pending_amt < 0.00)
     tot_pending_amt1 = (-1)*tot_pending_amt;   
  
   if(equal(tot_pending_amt,0.00)) 
	no_of_lines=0;
    else
	   	no_of_lines = print_in_words(tot_pending_amt1,LENGTH_WORDS,subcur.arr,amt_in_words,no_of_decimal);

    if (tot_pending_amt != 0) 
       fprintf(fp,"\nAMOUNT IN WORDS : %-6s",currency.arr);
	   
	for (i =0;i<no_of_lines;i++)
   	    fprintf(fp," %s",amt_in_words[i]);

   

    fprintf(fp,"\n");
    for (i=0;i<SKIP_10;i++) fprintf(fp," ");
    if (LEGEND)
        fprintf(fp,"                           =============");
    else
        fprintf(fp,"                                        ");
    print_ageing();
    tot_payable_amt  = 0;
    tot_alloc_amt    = 0;
    tot_pending_amt  = 0;

    fprintf(fp,"%c",0x12); /*** reset printer to normal mode ***/
}

print_ageing()
{
int i = 0;
    for (i=0;i<SKIP_11;i++) fprintf(fp,"\n");
    for (i=0;i<139;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    if (LEGEND)
       fprintf(fp,"TOTAL OUTSTANDING    OPEN CREDITS   ");
    else
       fprintf(fp,"                                    ");

    fprintf(fp,"%3d-%-3d",0, nd_age_slot1);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp,"%3d-%-3d",nd_age_slot1+1,nd_age_slot2);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp,"%3d-%-3d",nd_age_slot2+1,nd_age_slot3);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp,"%3d-%-3d",nd_age_slot3+1,nd_age_slot4);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp," > %-3d",nd_age_slot4);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");
    fprintf(fp,"\n");

    fprintf(fp,"   ");
    disp_message(INFO_MESG,"TOTAl PENDIng AMT");
    print_formated(tot_pending_amt);
    disp_message(INFO_MESG,"AFER TOTAl PENDIng AMT");
    fprintf(fp,"  ");
    print_formated(nd_open_credit);
    fprintf(fp," ");
    print_formated(amt_slot1);
    fprintf(fp,"   ");
    print_formated(amt_slot2);
    fprintf(fp,"   ");
    print_formated(amt_slot3);
    fprintf(fp,"   ");
    print_formated(amt_slot4);
    fprintf(fp,"  ");
    print_formated(amt_slot5);
    fprintf(fp,"\n");

    for (i=0;i<139;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    fprintf(fp,"REMARK : Please disregard this statement if payment has been made after the statement date.\n");

    tot_pending_amt  = 0;
    nd_open_credit   = 0;
    amt_slot1        = 0;
    amt_slot2        = 0;
    amt_slot3        = 0;
    amt_slot4        = 0;
    amt_slot5        = 0;
}

process_ageing()
{
   if (d_ar_pend_sign_amt != 1)
        nd_open_credit    += d_ar_pend_negative_amt;
   else if (d_ar_pend_sign_amt != 0)
   {
     if (age_days <= nd_age_slot1)
         amt_slot1    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot1 + 1 && age_days <= nd_age_slot2)
         amt_slot2    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot2 + 1 && age_days <= nd_age_slot3)
         amt_slot3    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot3 + 1 && age_days <= nd_age_slot4)
         amt_slot4    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot4 + 1)
         amt_slot5    += d_ar_pend_pending_amt;
   }
}

ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

rtrim(l_str)
char *l_str;
{
  while (*l_str != '\0') *l_str++;
  l_str--;
  while (*l_str == ' ') *l_str--;
  *(l_str+1) = '\0';
} 

print_formated(loc_amount)
double loc_amount;
{
   char out_str[20],out_str1[20];

   if (no_of_decimal == 3)
      sprintf(out_str,"%10.3f",loc_amount);
   else
      sprintf(out_str,"%10.2f",loc_amount);

      format_amt(out_str,no_of_decimal);


	if (loc_amount == 0)
	fprintf(fp,"%-13s"," ");
	 
	else if (loc_amount > 0)
	{
	  fprintf(fp,"%14s",out_str);
	}
	else
	{
  	  fprintf(fp,"%14s-",out_str);

	}


/*
   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {
      sprintf(out_str,"%10.2f",loc_amount);
      format_amt(out_str);
      disp_message(INFO_MESG,out_str);
      sprintf(out_str1,"%13s",out_str);
      fprintf(fp,"%-13s ",out_str1);
   }
   else
   {
      sprintf(out_str,"%10.2f",-loc_amount);
      format_amt(out_str);
      sprintf(out_str1,"%13s",out_str);
      fprintf(fp,"%-13s-",out_str1);
   }
*/
}
