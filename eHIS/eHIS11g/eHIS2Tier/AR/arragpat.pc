/* Date :- 27-DEC-98   */
                                                
#include <stdio.h>  
#include <string.h> 
#include "gl.h" 
/* 
#define OERROR (sqlca.sqlcode < 0)
*/
                                  
#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
/*
#define DEBUG 0
*/                                
#define ESC     0x1B
EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd         [132],
           hosp_name       [120],
           date_time       [20],
           user_id         [20],
           nd_pgm_date     [35],
           nd_rep_type     [3],
           nd_pat_details  [3];

  int      nd_age_slot1,
           nd_age_slot2,
           nd_age_slot3,
           nd_age_slot4,
		   rec_ctr,
		   pat_ctr,
           nd_age_slot5;

   VARCHAR nd_facility_id                [3],
		   nd_session_id                 [16],
           nd_fm_cust_code               [12],
		   fmcust						 [12],
		   tocust						 [12],
		   fmpat						 [20],
		   topat						 [20],
		   overdue						 [15],
		   nd_cust_code					 [9],
           nd_to_cust_code               [12],
		   nd_fm_pat_id				     [20],
		   nd_to_pat_id				     [20],
           nd_fm_alpha_code              [11],
           nd_to_alpha_code              [11],
           nd_age_method                 [3],
           nd_cutoff_date                [12],
           pr_cutoff_date                [12],
		   nd_overdue					 [2],
		   nd_pat_short_name			 [31],
		   nd_patient_id			     [21],
		   old_pat_id					 [11],
		   old_cust_code				 [9],
		   nd_cust_name					 [61],
           nd_order                      [11];
   
   VARCHAR nd_lang_id					 [4];		   

   VARCHAR ar_customer_cust_code         [9],
           ar_customer_long_name         [101],  -- CRF0120
           ar_customer_short_name        [61],  -- CRF0120
		   ar_customer_alpha_code        [11],
           ar_pend_doc_type_code         [7],
           ar_pend_doc_num               [9],
           ar_pend_base_date             [12],
           ar_pend_due_date              [12],
           ar_pend_cust_ref              [16],
           ar_pend_patient_id            [21],
           mp_pat_short_name             [61];

    int    ar_pend_sign_amt,
           ar_pend_cuttoff_base_dt,
		   same_pat,
		   cust_ctr,
           ar_pend_cuttoff_due_dt,
		   nd_no_of_decimal;

   double ar_pend_pending_amt,
          ar_pend_negative_amt;


   char string_var[100];
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

double nd_open_credit,
       nd_outstanding_amt,
       bal_amt_not_yet_due,
	   bal_amt_slot1,
       bal_amt_slot2,
       bal_amt_slot3,
       bal_amt_slot4,
       bal_amt_slot5,

       pat_d_outstanding_amt,
       pat_d_not_yet_due_amt,
       pat_d_open_credit,
       pat_d_amt_slot1,
       pat_d_amt_slot2,
       pat_d_amt_slot3,
       pat_d_amt_slot4,
       pat_d_amt_slot5,

       cus_d_outstanding_amt,
       cus_d_not_yet_due_amt,
       cus_d_open_credit,
       cus_d_amt_slot1,
       cus_d_amt_slot2,
       cus_d_amt_slot3,
       cus_d_amt_slot4,
       cus_d_amt_slot5,

       rep_d_outstanding_amt,
       rep_d_not_yet_due_amt,
       rep_d_open_credit,
       rep_d_amt_slot1,
       rep_d_amt_slot2,
       rep_d_amt_slot3,
       rep_d_amt_slot4,
       rep_d_amt_slot5,

///

	   sub_d_outstanding_amt,
       sub_d_not_yet_due_amt,
       sub_d_open_credit,
       sub_d_amt_slot1,
       sub_d_amt_slot2,
       sub_d_amt_slot3,
       sub_d_amt_slot4,
       sub_d_amt_slot5;
///

char old_patient_id     [21];

char string_var[100];
FILE *fp;
int lctr = 0,pctr =0, pend_doc_ctr = 0;
int age_days = 0;
char filename[150];

void proc_main(argc,argv)
char *argv[];
int argc;
{
 char mesg1[50];
 strcpy(filename,WORKING_DIR);

   if (argc != 7)
   {
    int i = 0;
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(g_pgm_id,"ARRAGPAT");

   strcpy(nd_rep_type.arr,argv[6]);   

   strcpy(OUTPUT_FILE_NAME,argv[5]);

   if (nd_rep_type.arr[0] == 'P')
     strcpy(g_pgm_id,"ARRAGSDP");
   else
      strcpy(g_pgm_id,"ARRAGSPA");

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle");
      sprintf(mesg1,"Error is %s\n",sqlca.sqlerrm.sqlerrmc);
      disp_message(ERR_MESG,mesg1);
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd");
      proc_exit();
   }

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);
   
   set_meduser_role();
   strcpy(nd_lang_id.arr,l_language_id.arr);
   nd_lang_id.len = l_language_id.len;
   
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);
 
   fetch_param();

   start_prog_msg();

   fetch_desc();

   open_files();

   declare_cursors();

   pend_doc_ctr = 0;

/*--------- Added on 27/12/1998 for enhancement --------*/
    rec_ctr = 0;
	pat_ctr = 0;
    while(fetch_patient())
    {

/*----- Getting the Patient Name   ------------*/

 mp_pat_short_name.arr[0] = '\0';
 mp_pat_short_name.len    = 0;


  EXEC SQL SELECT SHORT_NAME
             INTO :mp_pat_short_name
             FROM MP_PATIENT_MAST
            WHERE PATIENT_ID = :nd_patient_id;

  if (OERROR)
         err_mesg("SELECT failed on table MP_PATIENT_MAST",0,"");

mp_pat_short_name.arr[mp_pat_short_name.len] = '\0';
		
/*------------ Prnting The Patient & Name ----------------------------- GSK

 if(rec_ctr == 0)
 {	
 
    if (lctr > 55) print_head();	
	 fprintf(fp,"\n%-20.20s  %-40.40s \n",
                  nd_patient_id.arr,mp_pat_short_name.arr);
     lctr = lctr + 2;
     strcpy(old_pat_id.arr,nd_patient_id.arr);
	 rec_ctr = 1;
 }
 ------------------------------------------------------
	
if (strcmp(nd_patient_id.arr,old_pat_id.arr) != 0 )
{

       if (pat_ctr > 1)
    		print_sub_totals();
	   
	   pat_ctr = 0;

		strcpy(old_pat_id.arr,nd_patient_id.arr);
		if (lctr > 55) print_head();
		fprintf(fp,"\n%-20.20s  %-40.40s \n",
                  nd_patient_id.arr,mp_pat_short_name.arr);
        lctr = lctr +2;
--------- Initializing the Subtotals of Customers -----
	   
	   sub_d_outstanding_amt = 0;
       sub_d_not_yet_due_amt = 0;
       sub_d_open_credit = 0;
       sub_d_amt_slot1 = 0;
       sub_d_amt_slot2 = 0;
       sub_d_amt_slot3 = 0;
       sub_d_amt_slot4 = 0;
       sub_d_amt_slot5 = 0;

-------------------------------------------------------
			
		// rec_ctr = 0;
}
*/		
       
        old_patient_id[0]     = '\0';
        pend_doc_ctr = 0;

    
        open_pending_doc();

		
       while(fetch_pending_doc())
        {

		   /*-- This PROCEDURE  is to take the exact outstanding amt as of cutoff
                date for the customer aging.  VSK 26/10/1998 ---- */
			
		   fetch_ar_cust_trn();

/*---- Added by Venkat on 10/2/2000 ------------*/
	     if(ar_pend_pending_amt == 0)
		 continue;
/*----------------------------------------------*/
		    
           age_days = (nd_age_method.arr[0]  == 'B')?
                           ar_pend_cuttoff_base_dt:
                           ar_pend_cuttoff_due_dt;
         
		  
           if ( (age_days >= 0 && nd_age_method.arr[0] == 'B')||
		(nd_age_method.arr[0] != 'B'))
           {
               pend_doc_ctr++;

               if (pend_doc_ctr == 1)
		   {	
			if (strcmp(nd_cust_code.arr,old_cust_code.arr) != 0 )     				
		  	print_cust_det();  
			strcpy(old_cust_code.arr,nd_cust_code.arr);
               }           
        				
                   process_det();
				
                  // print_det_line();
            }
        }
        if (pend_doc_ctr > 0)
        {
		      
              print_pat_footer();
			  
              print_cus_footer();
        }
   
    pat_ctr ++;
	} /* while patient ending */	
    if (pat_ctr > 1)
		print_sub_totals();
	pat_ctr = 0;
	print_report_footer();
    print_end();

    EXEC SQL DELETE FROM SY_PROG_PARAM
                   WHERE PGM_ID     = 'ARRAGSUP'
                     AND SESSION_ID = :nd_session_id
                     AND PGM_DATE   = :nd_pgm_date;

    if (OERROR)
         err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

    end_prog_msg();
    EXEC SQL COMMIT WORK RELEASE;
}

fetch_desc()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   user_id.arr[0]        = '\0';
   pr_cutoff_date.arr[0] = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   user_id.len        = 0;
   pr_cutoff_date.len = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                   USER,TO_CHAR(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),'DD/MM/YYYY'),
				   NO_OF_DECIMAL
              INTO :hosp_name, :date_time, :user_id,
                   :pr_cutoff_date, :nd_no_of_decimal
              FROM SY_ACC_ENTITY
			 WHERE ACC_ENTITY_ID = :nd_facility_id;

   if (OERROR)
         err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   user_id.arr[user_id.len]               = '\0';
   pr_cutoff_date.arr[pr_cutoff_date.len] = '\0';

}

fetch_param()
{
   nd_fm_cust_code.arr[0]        = '\0';
   nd_to_cust_code.arr[0]        = '\0';
   nd_fm_alpha_code.arr[0]       = '\0';
   nd_to_alpha_code.arr[0]       = '\0';
   nd_order.arr[0]               = '\0';
   nd_age_method.arr[0]          = '\0';
   nd_cutoff_date.arr[0]         = '\0';
   nd_pat_details.arr[0]         = '\0';

   nd_fm_cust_code.len           = 0;
   nd_to_cust_code.len           = 0;
   nd_fm_alpha_code.len          = 0;
   nd_to_alpha_code.len          = 0;
   nd_order.len                  = 0;
   nd_age_method.len             = 0;
   nd_cutoff_date.len            = 0;
   nd_pat_details.len            = 0;


   EXEC SQL SELECT operating_facility_id,
				   NVL(PARAM1,'!!!!!!!!'),
				   NVL(PARAM2,'~~~~~~~~'),
				   PARAM3,PARAM4,
                   NVL(PARAM5,'D'),
                   NVL(PARAM6,SYSDATE),
                   NVL(TO_NUMBER(PARAM7),0),
                   NVL(TO_NUMBER(PARAM8),0),
                   NVL(TO_NUMBER(PARAM9),0),
                   NVL(TO_NUMBER(PARAM10),0),
                   NVL(TO_NUMBER(PARAM11),0),
                   PARAM12,
                   PARAM13,
				   NVL(PARAM14,'!!!!!!!!!!'),
				   NVL(PARAM15,'~~~~~~~~~~'),
				   PARAM16 
				   
              INTO :nd_facility_id,
				   :nd_fm_cust_code,
                   :nd_to_cust_code,
                   :nd_fm_alpha_code,
                   :nd_to_alpha_code,
                   :nd_age_method,
                   :nd_cutoff_date,
                   :nd_age_slot1,
                   :nd_age_slot2,
                   :nd_age_slot3,
                   :nd_age_slot4,
                   :nd_age_slot5,
                   :nd_order,
                   :nd_pat_details,
				   :nd_fm_pat_id,
				   :nd_to_pat_id,
				   :nd_overdue
				   
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARRAGSUP'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_fm_cust_code.arr[nd_fm_cust_code.len]        = '\0';
   nd_to_cust_code.arr[nd_to_cust_code.len]        = '\0';
   nd_fm_alpha_code.arr[nd_fm_alpha_code.len]      = '\0';
   nd_to_alpha_code.arr[nd_to_alpha_code.len]      = '\0';
   nd_age_method.arr[nd_age_method.len]            = '\0';
   nd_cutoff_date.arr[nd_cutoff_date.len]          = '\0';
   nd_order.arr[nd_order.len]                      = '\0';
   nd_pat_details.arr[nd_pat_details.len]          = '\0';

   nd_fm_pat_id.arr[nd_fm_pat_id.len]        = '\0';
   nd_to_pat_id.arr[nd_to_pat_id.len]        = '\0';
   nd_overdue.arr[nd_overdue.len]        = '\0';
  
}

open_files()
{
  
  char err_stmt[70];

   if (nd_rep_type.arr[0] == 'P')
     {
     //strcpy(filename,"arragsdp.lis");
	 //strcat(filename,"arragsdp.lis");
     //strcpy(OUTPUT_FILE_NAME, "arragsdp.lis");
	   strcat(filename,OUTPUT_FILE_NAME);

     }
   else if (nd_rep_type.arr[0] == 'C')
     {
     //strcpy(filename,"arragcus.lis");
     //strcat(filename,"arragcus.lis");
     //strcpy(OUTPUT_FILE_NAME, "arragcus.lis");
	   strcat(filename,OUTPUT_FILE_NAME);
     }
   else if (nd_rep_type.arr[0] == 'S')
     {
     //strcpy(filename,"arragspa.lis");
	 //strcat(filename,"arragspa.lis");
     //strcpy(OUTPUT_FILE_NAME, "arragspa.lis");
	   strcat(filename,OUTPUT_FILE_NAME); 
     }

   if ((fp = fopen(filename,"w")) == NULL)
   {
        sprintf(err_stmt,"Error while opening File %s",filename);
        err_mesg(err_stmt,0,"");
        proc_exit();
   }

   print_title();
   print_head();

}

print_title()
{
  void print_hospital_name();
{
  fprintf(fp,"%cg\n",ESC);
if (nd_rep_type.arr[0] == 'S')
  { 
  /*
  fprintf(fp,"\nMDL : AR                                                                     %-30s                                                          %-15s\n",      hosp_name.arr,date_time.arr);
  */
  fprintf(fp,"\n");
  print_hospital_name(181,"AR",hosp_name.arr,date_time.arr);
  }
  else if (nd_rep_type.arr[0] != 'S')
  {  
    /*
	fprintf(fp,"\nMDL : AR                                                                                %-30s                                               %-15s\n",      hosp_name.arr,date_time.arr);
    */
	fprintf(fp,"\n");
    print_hospital_name(181,"AR",hosp_name.arr,date_time.arr);
  }

}
     fprintf(fp,

"OPR : %-10s                                     %s\n",
user_id.arr,(nd_rep_type.arr[0] == 'P')?"              AGEING ANALYSIS PATIENTWISE SUMMARY REPORT":"");
{
  if (nd_rep_type.arr[0] == 'S')
  {
   
  if (nd_rep_type.arr[0] == 'P')
  fprintf(fp,"REP : %-8s                                                %-28s                                                             PAGE : %4d\n",    g_pgm_id,"           (FOR PATIENT LEVEL ANALYSIS ONLY)   ",++pctr);
else  
    fprintf(fp,
"REP : %-8s                                                %-28s                                                            PAGE : %4d\n",
    g_pgm_id, "      AGEING ANALYSIS PATIENTWISE SUMMARY REPORT", ++pctr);
/*
  fprintf(fp,
"REP : %-8s                                             %-28s                                                              PAGE : %4d\n",

    g_pgm_id,
    (nd_rep_type.arr[0] == 'P')? "           (FOR PATIENT LEVEL ANALYSIS ONLY)":
     "       AGEING ANALYSIS PATIENTWISE SUMMARY REPORT",
     ++pctr);
*/  
  } 
  else if (nd_rep_type.arr[0] != 'S')
 {
  if (nd_rep_type.arr[0] =='P')
   fprintf(fp,"REP : %-8s\t\t\t                              %-28s                                                                 PAGE : %4d\n",    g_pgm_id,
    "          (FOR PATIENT LEVEL ANALYSIS ONLY)",  ++pctr);
  else
   fprintf(fp,"REP : %-8s\t\t\t                                           %-28s                                                         PAGE : %4d\n",    g_pgm_id,
      "     AGEING ANALYSIS REPORT",     ++pctr);
 }  
}  
 {
  if (nd_rep_type.arr[0] != 'S')
  {
fprintf(fp,
"-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
  }
  else if (nd_rep_type.arr[0] == 'S')
  {
fprintf(fp,
"-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
  }
 }
  fflush(fp);

fprintf(fp,"\n\n\n\n        INPUT PARAMETERS :\n        ----------------\n\n");

//
if(strcmp(nd_fm_cust_code.arr,"!!!!!!!!")== 0)
   strcpy(fmcust.arr,"LOWEST");
else
   strcpy(fmcust.arr,nd_fm_cust_code.arr);
if(strcmp(nd_to_cust_code.arr,"~~~~~~~~")== 0)
   strcpy(tocust.arr,"HIGHEST");
else
   strcpy(tocust.arr,nd_to_cust_code.arr);

//
fprintf(fp,"                %-10s     FROM : %-10s\n",
(nd_order.arr[0]  =='C')?"CUST CODE":"ALPHA CODE",
(nd_order.arr[0]  =='C')?fmcust.arr:nd_fm_alpha_code.arr); 
fprintf(fp,"                %-10s     TO   : %-10s\n\n","",

(nd_order.arr[0]  =='C')?tocust.arr:nd_to_alpha_code.arr); 

//
if(strcmp(nd_fm_pat_id.arr,"!!!!!!!!!!")== 0)
   strcpy(fmpat.arr,"LOWEST");
else
   strcpy(fmpat.arr,nd_fm_pat_id.arr);
if(strcmp(nd_to_pat_id.arr,"~~~~~~~~~~")== 0)
   strcpy(topat.arr,"HIGHEST");
else
   strcpy(topat.arr,nd_to_pat_id.arr);
//

fprintf(fp,"                PATIENT ID     FROM : %-20s\n",fmpat.arr);
fprintf(fp,"	                          TO : %-20s\n\n",topat.arr);


fprintf(fp,"                AGEING           BY : %s\n\n",
(nd_age_method.arr[0]  =='D')?"DUE DATE":"BASE DATE"); 

fprintf(fp,"                CUT-OFF DATE        : %s\n\n",pr_cutoff_date.arr);
fprintf(fp,"                AGEING SLOT 1(DAYS) : %d\n\n",nd_age_slot1);
fprintf(fp,"                AGEING SLOT 2(DAYS) : %d\n\n",nd_age_slot2);
fprintf(fp,"                AGEING SLOT 3(DAYS) : %d\n\n",nd_age_slot3);
fprintf(fp,"                AGEING SLOT 4(DAYS) : %d\n\n",nd_age_slot4);
fprintf(fp,"                AGEING SLOT 5(DAYS) : %d\n\n",nd_age_slot5);

fprintf(fp,"                PATIENT DETAILS     : %s\n\n",
   (nd_rep_type.arr[0] == 'P')?"PATIENT LEVEL ANALYSIS":(nd_rep_type.arr[0] == 'C')?
   "ALL CUSTOMERS":
   (nd_pat_details.arr[0] =='Y')?"PATIENT LEVEL ANALYSIS":"ALL CUSTOMERS");



   if(strcmp(nd_overdue.arr,"Y")== 0)
      strcpy(overdue.arr,"ONLY OVERDUE");
   else
    strcpy(overdue.arr,"ALL BALANCES");

  fprintf(fp,"                BALANCE DETAILS     : %s\n\n",overdue.arr);


  fflush(fp);
} 


print_head()
{
  void print_hospital_name();
 {
  if (nd_rep_type.arr[0] == 'S')
  { 
  /*   
  fprintf(fp,"\fMDL : AR                                                                    %-30s                                                          %-15s\n",      hosp_name.arr,date_time.arr);
  */  
  fprintf(fp,"\f"); 
  print_hospital_name(181,"AR",hosp_name.arr,date_time.arr);
	 fprintf(fp,
"OPR : %-10s                            %s\n",
user_id.arr,(nd_rep_type.arr[0] == 'P')?"AGEING ANALYSIS PATIENTWISE SUMMARY REPORT":"");
  if (nd_rep_type.arr[0] == 'P')
    fprintf(fp,"REP : %-8s                             %-52s                                                                     PAGE : %4d\n",    g_pgm_id,"           (FOR PATIENT LEVEL ANALYSIS ONLY)    ",++pctr);
  else
  fprintf(fp,"REP : %-8s                                         %-52s                                                               PAGE : %4d\n",    g_pgm_id,"         AGEING ANALYSIS PATIENTWISE SUMMARY REPORT",    ++pctr);

/*
    (nd_rep_type.arr[0] == 'P')?"          (FOR PATIENT LEVEL ANALYSIS ONLY)        ":
                                "         AGEING ANALYSIS PATIENTWISE SUMMARY REPORT",
    ++pctr);
 */
  }
  else if (nd_rep_type.arr[0] != 'S')
  {
  
  /*
  fprintf(fp,"\fMDL : AR                                                                      %-30s\t\t\t\t\t                     %-15s\n",      hosp_name.arr,date_time.arr);
  */
  fprintf(fp,"\f");
  print_hospital_name(181,"AR",hosp_name.arr,date_time.arr);
fprintf(fp,
"OPR : %-10s                                                %s\n",
user_id.arr,(nd_rep_type.arr[0] == 'P')?"    AGEING ANALYSIS PATIENTWISE SUMMARY REPORT":"");
if (nd_rep_type.arr[0] == 'P')
  fprintf(fp,"REP : %-8s                                                %-28s                                                             PAGE : %4d\n",    g_pgm_id,"           (FOR PATIENT LEVEL ANALYSIS ONLY)   ",++pctr);
else  
    fprintf(fp,
"REP : %-8s                                                %-28s                                                                   PAGE : %4d\n",
    g_pgm_id, "      AGEING ANALYSIS PATIENTWISE SUMMARY REPORT", ++pctr);

  }  
 } 
 
fprintf(fp,
"-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");

/* -- Only for Alpha the legend Alphacode should be there and for customer
      It should not be there VSK 26/10/1998 ---- */

if (nd_order.arr[0] != 'A')
{
//fprintf(fp,"PATIENT ID   SHORT NAME \n");
  fprintf(fp,"CUSTOMER             CUSTOMER NAME \n");
fprintf(fp,
"PATIENT ID           SHORT NAME                                  OUTSTANDING    NOT YET DUE           OPEN     AGE SLOT 1     AGE SLOT 2     AGE SLOT 3     AGE SLOT 4     AGE SLOT 5\n");

fprintf(fp,
"                                                                      AMOUNT         AMOUNT         CREDIT   %3d-%-3d DAYS   %3d-%-3d DAYS   %3d-%-3d DAYS   %3d-%-3d DAYS   %3d-%-3d DAYS\n",
     0, nd_age_slot1,
     nd_age_slot1+1, nd_age_slot2,
     nd_age_slot2+1, nd_age_slot3,
     nd_age_slot3+1, nd_age_slot4,
     nd_age_slot4+1, nd_age_slot5);
fprintf(fp,
"                                                                                                                                                                          & above\n");  
} 
if (nd_order.arr[0] == 'A')
{

fprintf(fp,
"CUSTOMER CUSTOMER NAME                             ALPHA         OUTSTANDING    NOT YET DUE           OPEN     AGE SLOT 1     AGE SLOT 2     AGE SLOT 3     AGE SLOT 4     AGE SLOT 5\n");

fprintf(fp,
"CODE                                               CODE               AMOUNT         AMOUNT         CREDIT   %3d-%-3d DAYS   %3d-%-3d DAYS   %3d-%-3d DAYS   %3d-%-3d DAYS     %3d-%-3d DAYS\n",
     0, nd_age_slot1,
     nd_age_slot1+1, nd_age_slot2,
     nd_age_slot2+1, nd_age_slot3,
     nd_age_slot3+1, nd_age_slot4,
     nd_age_slot4+1, nd_age_slot5);
fprintf(fp,
"                                                                                                                                                                                & above\n");  
}

fprintf(fp,
"-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
lctr = 11; 
}
 

print_end()
{
fprintf(fp,
"\n                                                                          **   END  OF  REPORT   ** \n%c@",ESC);
  fflush(fp);
  fclose(fp);


}

declare_cursors()
{
   if (nd_rep_type.arr[0] == 'P' )
   {     
         EXEC SQL DECLARE AR_PEND_PATIENT_CUR CURSOR FOR
			SELECT A.CUST_CODE,A.PATIENT_ID FROM AR_PENDING_DOC A,AR_CUSTOMER B
			 WHERE A.PATIENT_ID <> ' '
			   AND A.CUST_CODE = B.CUST_CODE
			   AND NVL(B.PAT_COM_FLAG,'N') = 'Y'
			   AND A.PATIENT_ID BETWEEN NVL(:nd_fm_pat_id,A.PATIENT_ID) AND NVL(:nd_to_pat_id,A.PATIENT_ID)
			   AND A.CUST_CODE BETWEEN NVL(:nd_fm_cust_code,A.CUST_CODE) AND NVL(:nd_to_cust_code,A.CUST_CODE) 
			   and A.PENDING_AMT != 0   /* Commented by Venkat on 10/2/2000 */
		    GROUP BY A.CUST_CODE,A.PATIENT_ID;

         EXEC SQL OPEN AR_PEND_PATIENT_CUR;

         if (OERROR)
             err_mesg("OPEN failed on cursor AR_PEND_PATIENT_CUR",0,"");

      
         EXEC SQL DECLARE AR_PEND_CUR CURSOR FOR
                 SELECT DOC_TYPE_CODE,DOC_NUM,TO_CHAR(NVL(BASE_DATE,DOC_DATE),'DD/MM/YYYY'),
                        TO_CHAR(DUE_DATE,'DD/MM/YYYY'),NVL(PENDING_AMT,0),SIGN(PENDING_AMT),
                        DECODE(SIGN(NVL(PENDING_AMT,0)),-1,-NVL(PENDING_AMT,0),NVL(PENDING_AMT,0)),
                        CUST_REF,PATIENT_ID,CEIL(NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE) - BASE_DATE),
                        CEIL(NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE) - DUE_DATE)
                   FROM AR_PENDING_DOC
                  WHERE CUST_CODE = :nd_cust_code  
		        AND PATIENT_ID = :nd_patient_id 
                    AND PENDING_AMT != 0   /* Commented by Venkat on 10/2/2000 */
		        AND NVL(DOC_DATE,SYSDATE) <= NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE)
               ORDER BY PATIENT_ID, DOC_TYPE_CODE, DOC_NUM;

		 EXEC SQL OPEN AR_PEND_CUR;

         if (OERROR)
             err_mesg("OPEN failed on cursor AR_PEND_CUR",0,"");

    

      
   }
   /* The else part is if order type is not equal P*/
   else
   {               
         
		 		
		EXEC SQL DECLARE AR_PEND_PATIENT_SUM CURSOR FOR
				SELECT CUST_CODE,PATIENT_ID FROM AR_PENDING_DOC 
				 WHERE PATIENT_ID IS NOT NULL
				   AND PATIENT_ID BETWEEN NVL(:nd_fm_pat_id,PATIENT_ID) AND NVL(:nd_to_pat_id,PATIENT_ID)
				   AND CUST_CODE BETWEEN NVL(:nd_fm_cust_code,CUST_CODE) AND NVL(:nd_to_cust_code,CUST_CODE) 
				   AND PENDING_AMT != 0   /* Commented by Venkat on 10/2/2000 */
				GROUP BY CUST_CODE,PATIENT_ID;
        
		EXEC SQL OPEN AR_PEND_PATIENT_SUM;

         if (OERROR)
             err_mesg("OPEN failed on cursor AR_PEND_PATIENT_SUM",0,"");


         EXEC SQL DECLARE AR_PEND_CUR_SUM CURSOR FOR
                   SELECT DOC_TYPE_CODE,DOC_NUM,TO_CHAR(NVL(BASE_DATE,DOC_DATE),'DD/MM/YYYY'),
                          TO_CHAR(DUE_DATE,'DD/MM/YYYY'),NVL(PENDING_AMT,0),SIGN(PENDING_AMT),
                          DECODE(SIGN(NVL(PENDING_AMT,0)),-1,-NVL(PENDING_AMT,0),NVL(PENDING_AMT,0)),
                          CUST_REF,PATIENT_ID,CEIL(NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE) - BASE_DATE),
                          CEIL(NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE) - DUE_DATE)
                     FROM AR_PENDING_DOC
                    WHERE CUST_CODE = :nd_cust_code  
			    AND PATIENT_ID = :nd_patient_id 
			    AND PENDING_AMT != 0  /* Commented by Venkat on 10/2/2000 */
		          AND NVL(DOC_DATE,SYSDATE) <= NVL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),SYSDATE)
                 ORDER BY PATIENT_ID,DOC_TYPE_CODE, DOC_NUM;
    
        if (OERROR)
            err_mesg("DECLARE failed on table AR_PENDING_DOC",0,"");
   }

}       


fetch_patient()
{


if (nd_rep_type.arr[0] != 'P')
{

   nd_patient_id.arr     [0] = '\0';
   nd_cust_code.arr     [0] = '\0';
   
   nd_patient_id.len         = 0;
   nd_cust_code.len         = 0;   
   
   EXEC SQL FETCH AR_PEND_PATIENT_SUM INTO :nd_cust_code,:nd_patient_id;

nd_patient_id.arr[nd_patient_id.len]   = '\0';
nd_cust_code.arr[nd_cust_code.len]     = '\0';




/*----- Getting the Customer Name   ------------*/

 nd_cust_name.arr[0] = '\0';
 nd_cust_name.len    =   0 ;


  EXEC SQL SELECT LONG_NAME
             INTO :nd_cust_name
             FROM AR_CUSTOMER
            WHERE CUST_CODE = :nd_cust_code;

  if (OERROR)
         err_mesg("SELECT failed on table AR_CUSTOMER",0,"");

nd_cust_name.arr[nd_cust_name.len] = '\0';


/*-----------------------------------------*/


if (LAST_ROW)
    return(0);
else
    return(1);


    
if (OERROR)
    err_mesg("FETCH failed on cursor AR_PEND_PATIENT_SUM",0,"");

  

}
else if (nd_rep_type.arr[0] == 'P')
{

 
   nd_patient_id.arr     [0] = '\0';
   nd_cust_code.arr      [0] = '\0';
   
   nd_patient_id.len         = 0;
   nd_cust_code.len          = 0;   
   
   EXEC SQL FETCH AR_PEND_PATIENT_CUR INTO :nd_cust_code,:nd_patient_id;


nd_patient_id.arr[nd_patient_id.len]   = '\0';
nd_cust_code.arr[nd_cust_code.len]     = '\0';   


/*----- Getting the Customer Name   ------------*/

 nd_cust_name.arr[0] = '\0';
 nd_cust_name.len    =   0 ;


  EXEC SQL SELECT LONG_NAME
             INTO :nd_cust_name
             FROM AR_CUSTOMER
            WHERE CUST_CODE = :nd_cust_code;

  if (OERROR)
         err_mesg("SELECT failed on table AR_CUSTOMER",0,"");

nd_cust_name.arr[nd_cust_name.len] = '\0';


/*-----------------------------------------*/


if (LAST_ROW)
    return(0);
else
    return(1);
    
if (OERROR)
    err_mesg("FETCH failed on cursor AR_PEND_PATIENT_CUR",0,"");



}
/*----- End of condition -------*/
}	


open_pending_doc()
{
   if (nd_rep_type.arr[0] == 'P')
   {
       EXEC SQL OPEN AR_PEND_CUR;

       if (OERROR)
             err_mesg("OPEN failed on cursor AR_PEND_CUR",0,"");
   }
   else
   {
       EXEC SQL OPEN AR_PEND_CUR_SUM;

       if (OERROR)
             err_mesg("OPEN failed on cursor AR_PEND_CUR_SUM",0,"");
   }

}

fetch_pending_doc()
{
ar_pend_doc_type_code.arr[0]       = '\0';
ar_pend_doc_num.arr[0]             = '\0';
ar_pend_base_date.arr[0]           = '\0';
ar_pend_due_date.arr[0]            = '\0';
ar_pend_cust_ref.arr[0]            = '\0';
ar_pend_patient_id.arr[0]          = '\0';

ar_pend_doc_type_code.len          = 0;
ar_pend_doc_num.len                = 0;
ar_pend_base_date.len              = 0;
ar_pend_due_date.len               = 0;
ar_pend_cust_ref.len               = 0;
ar_pend_patient_id.len             = 0;

ar_pend_sign_amt                   = 0;
ar_pend_cuttoff_base_dt            = 0;
ar_pend_cuttoff_due_dt             = 0;
ar_pend_pending_amt                = 0;
ar_pend_negative_amt               = 0;

   if (nd_rep_type.arr[0] == 'P')
   {
      EXEC SQL FETCH AR_PEND_CUR
                INTO :ar_pend_doc_type_code,
                     :ar_pend_doc_num,
                     :ar_pend_base_date,
                     :ar_pend_due_date,
                     :ar_pend_pending_amt,
                     :ar_pend_sign_amt,
                     :ar_pend_negative_amt,
                     :ar_pend_cust_ref,
                     :ar_pend_patient_id, 
                     :ar_pend_cuttoff_base_dt,
                     :ar_pend_cuttoff_due_dt;

      if (OERROR)
            err_mesg("FETCH failed on cursor AR_PEND_CUR",0,"");
   } 
   else
   {

  

      EXEC SQL FETCH AR_PEND_CUR_SUM
                INTO :ar_pend_doc_type_code,
                     :ar_pend_doc_num,
                     :ar_pend_base_date,
                     :ar_pend_due_date,
                     :ar_pend_pending_amt,
                     :ar_pend_sign_amt,
                     :ar_pend_negative_amt,
                     :ar_pend_cust_ref,
                     :ar_pend_patient_id, 
                     :ar_pend_cuttoff_base_dt,
                     :ar_pend_cuttoff_due_dt;


  if (LAST_ROW){

      return 0;}
   else
      return(1);

      if (OERROR)
            err_mesg("FETCH failed on cursor AR_PEND_CUR_SUM",0,"");    
            
                  
    }

ar_pend_doc_type_code.arr[ar_pend_doc_type_code.len]     = '\0';
ar_pend_doc_num.arr[ar_pend_doc_num.len]                 = '\0';
ar_pend_base_date.arr[ar_pend_base_date.len]               = '\0';
ar_pend_due_date.arr[ar_pend_due_date.len]               = '\0';
ar_pend_cust_ref.arr[ar_pend_cust_ref.len]               = '\0';
ar_pend_patient_id.arr[ar_pend_patient_id.len]           = '\0';



 
}



/*-- This PROCEDURE  is to take the exact outstanding amt as of cutoff
     date for the customer aging.  VSK 26/10/1998 ---- */

fetch_ar_cust_trn()
{

ar_pend_sign_amt                   = 0;
ar_pend_pending_amt                = 0;
ar_pend_negative_amt               = 0;


EXEC SQL SELECT  SUM(NVL(AMOUNT,0)), SIGN(SUM(NVL(AMOUNT,0))),
		 DECODE(SIGN(SUM(NVL(AMOUNT,0))),-1,-SUM(NVL(AMOUNT,0)),SUM(NVL(AMOUNT,0))) 
		 INTO ar_pend_pending_amt,            
		      ar_pend_sign_amt,                   
			  ar_pend_negative_amt            
	     FROM    AR_CUST_TRN
	     WHERE   CUST_CODE = :nd_cust_code
	     AND     ORG_DOC_TYPE_CODE = :ar_pend_doc_type_code
	     AND     ORG_DOC_NUM       = :ar_pend_doc_num
	     AND     DOC_DATE <= TO_DATE(:nd_cutoff_date,'DD/MM/YYYY');

if (OERROR)
   err_mesg("SELECT failed on cursor AR_CUST_TRN_CUR",0,"");

return(0);

}



process_det()
{
    age_days = 0;

    nd_open_credit             = 0;
    nd_outstanding_amt         = 0;
	bal_amt_not_yet_due        = 0;
    bal_amt_slot1              = 0;
    bal_amt_slot2              = 0;
    bal_amt_slot3              = 0;
    bal_amt_slot4              = 0;
    bal_amt_slot5              = 0;
   
    age_days = (nd_age_method.arr[0]  == 'B')?
                    ar_pend_cuttoff_base_dt:
                    ar_pend_cuttoff_due_dt;



    if(age_days >= 0) 
	{
    
        if (ar_pend_sign_amt != 1)
        {
               nd_open_credit     = ar_pend_negative_amt;
               pat_d_open_credit += ar_pend_negative_amt;
        }
        else if (ar_pend_sign_amt != 0)
        {
            nd_outstanding_amt     = ar_pend_pending_amt;
            pat_d_outstanding_amt += ar_pend_pending_amt;
    



            if (age_days >= 0 && age_days <= nd_age_slot1)
            {
                  bal_amt_slot1     = ar_pend_pending_amt;
                  pat_d_amt_slot1   += ar_pend_pending_amt;
            }
            else if (age_days >= nd_age_slot1 + 1 && age_days <= nd_age_slot2)
            {
                  bal_amt_slot2     = ar_pend_pending_amt;
                  pat_d_amt_slot2  += ar_pend_pending_amt;
            }
            else if (age_days >= nd_age_slot2 + 1 && age_days <= nd_age_slot3)
            {
                  bal_amt_slot3     = ar_pend_pending_amt;
                  pat_d_amt_slot3  += ar_pend_pending_amt;
            }
            else if (age_days >= nd_age_slot3 + 1 && age_days <= nd_age_slot4)
            {
                  bal_amt_slot4     = ar_pend_pending_amt;
                  pat_d_amt_slot4  += ar_pend_pending_amt;
            }
            else if (age_days >= nd_age_slot4 + 1)
            {
                  bal_amt_slot5     = ar_pend_pending_amt;
                  pat_d_amt_slot5  += ar_pend_pending_amt;
            }
        }

    }    
    
    else {
        if (ar_pend_sign_amt != 1)
           {
               nd_open_credit     = ar_pend_negative_amt;
               pat_d_open_credit += ar_pend_negative_amt;
           }
	else   {
            nd_outstanding_amt     = ar_pend_pending_amt;
	        pat_d_not_yet_due_amt += ar_pend_pending_amt;
			bal_amt_not_yet_due   += ar_pend_pending_amt;
            pat_d_outstanding_amt += ar_pend_pending_amt;
	       } 
	     }

	
}
    
print_cust_det()
{
  if (lctr > 55) print_head();

     if (nd_order.arr[0] != 'A')
     {     
	  fprintf(fp,"\n");
      fprintf(fp,"CUSTOMER  : %-8.8s %-40.40s ",nd_cust_code.arr,nd_cust_name.arr);	  
	  fprintf(fp,"\n");
        rec_ctr = 1;
     }
     else if (nd_order.arr[0] == 'A')
     {      fprintf(fp,"%-8.8s %-40.40s  %-10.10s ",
                  ar_customer_cust_code.arr,
                  ar_customer_long_name.arr,
                  ar_customer_alpha_code.arr);
     }

}

print_pat_det()
{
  if (nd_rep_type.arr[0] != 'P')
          return(0);
  if (lctr > 55) print_head();

  mp_pat_short_name.arr[0] = '\0';
  mp_pat_short_name.len    = 0;


  EXEC SQL SELECT SHORT_NAME
             INTO :mp_pat_short_name
             FROM MP_PATIENT_MAST
            WHERE PATIENT_ID = :ar_pend_patient_id;

  if (OERROR)
         err_mesg("SELECT failed on table MP_PATIENT_MAST",0,"");

mp_pat_short_name.arr[mp_pat_short_name.len] = '\0';

  fprintf(fp,"PATIENT NO : %-20s   %-40.40s\n\n",
               ar_pend_patient_id.arr,mp_pat_short_name.arr);
  lctr+= 2;
}

print_pat_footer()
{

 /*
sprintf(string_var,"pat foot : %lf - %lf - %lf - %lf - %lf - %lf - %lf - %lf",
pat_d_outstanding_amt,pat_d_not_yet_due_amt,pat_d_open_credit,pat_d_amt_slot1,
pat_d_amt_slot2,pat_d_amt_slot3,pat_d_amt_slot4,pat_d_amt_slot5);
disp_message(ERR_MESG,string_var);
*/

   cus_d_outstanding_amt += pat_d_outstanding_amt;
   cus_d_not_yet_due_amt += pat_d_not_yet_due_amt;
   cus_d_open_credit     += pat_d_open_credit;
   cus_d_amt_slot1       += pat_d_amt_slot1;
   cus_d_amt_slot2       += pat_d_amt_slot2;
   cus_d_amt_slot3       += pat_d_amt_slot3;
   cus_d_amt_slot4       += pat_d_amt_slot4;
   cus_d_amt_slot5       += pat_d_amt_slot5;



   pat_d_outstanding_amt = 0;
   pat_d_not_yet_due_amt = 0;
   pat_d_open_credit     = 0;
   pat_d_amt_slot1       = 0;
   pat_d_amt_slot2       = 0;
   pat_d_amt_slot3       = 0;
   pat_d_amt_slot4       = 0;
   pat_d_amt_slot5       = 0;
}

print_cus_footer()
{


 if (lctr > 55) print_head();

	
/********** Column dicplay change  -- Sridharan -- 22/1/98 **********/

//fprintf(fp,"%-20.20s %-31.31s          ",nd_patient_id.arr,mp_pat_short_name.arr);
fprintf(fp,"%-20.20s %-40.40s",nd_patient_id.arr,mp_pat_short_name.arr);
if(strcmp(nd_overdue.arr,"N")==0)
{
     print_formated(cus_d_outstanding_amt - cus_d_open_credit); fprintf(fp," ");
     print_formated(cus_d_not_yet_due_amt); fprintf(fp," ");
}
else if(strcmp(nd_overdue.arr,"Y")==0)
{
 cus_d_outstanding_amt = cus_d_outstanding_amt - cus_d_not_yet_due_amt;
 cus_d_not_yet_due_amt = 0;
print_formated(cus_d_outstanding_amt - cus_d_open_credit); fprintf(fp," ");
print_formated(cus_d_not_yet_due_amt); fprintf(fp," ");
} 



/********************************************************************/

     print_formated(cus_d_open_credit); fprintf(fp," ");
     print_formated(cus_d_amt_slot1);   fprintf(fp," ");
     print_formated(cus_d_amt_slot2);   fprintf(fp," ");
     print_formated(cus_d_amt_slot3);   fprintf(fp," ");
     print_formated(cus_d_amt_slot4);   fprintf(fp," ");
     //print_formated(cus_d_amt_slot5);   fprintf(fp,"\n\n");
     print_formated(cus_d_amt_slot5);   fprintf(fp,"\n");

     lctr += 2;


   rep_d_outstanding_amt += cus_d_outstanding_amt;
   rep_d_not_yet_due_amt += cus_d_not_yet_due_amt;
   rep_d_open_credit     += cus_d_open_credit;
   rep_d_amt_slot1       += cus_d_amt_slot1;
   rep_d_amt_slot2       += cus_d_amt_slot2;
   rep_d_amt_slot3       += cus_d_amt_slot3;
   rep_d_amt_slot4       += cus_d_amt_slot4;
   rep_d_amt_slot5       += cus_d_amt_slot5;

   sub_d_outstanding_amt += cus_d_outstanding_amt;
   sub_d_not_yet_due_amt += cus_d_not_yet_due_amt;
   sub_d_open_credit     += cus_d_open_credit;
   sub_d_amt_slot1       += cus_d_amt_slot1;
   sub_d_amt_slot2       += cus_d_amt_slot2;
   sub_d_amt_slot3       += cus_d_amt_slot3;
   sub_d_amt_slot4       += cus_d_amt_slot4;
   sub_d_amt_slot5       += cus_d_amt_slot5;


   cus_d_outstanding_amt = 0;
   cus_d_not_yet_due_amt = 0;
   cus_d_open_credit     = 0;
   cus_d_amt_slot1       = 0;
   cus_d_amt_slot2       = 0;
   cus_d_amt_slot3       = 0;
   cus_d_amt_slot4       = 0;
   cus_d_amt_slot5       = 0;
  


}
print_sub_totals()
{
 if (lctr > 55) print_head();

/*
 fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,
"SUB TOTALS             :                                      ");

   print_formated(sub_d_outstanding_amt - sub_d_open_credit); fprintf(fp," ");
   print_formated(sub_d_not_yet_due_amt); fprintf(fp," ");
   

   print_formated(sub_d_open_credit); fprintf(fp," ");
   print_formated(sub_d_amt_slot1);   fprintf(fp," ");
   print_formated(sub_d_amt_slot2);   fprintf(fp," ");
   print_formated(sub_d_amt_slot3);   fprintf(fp," ");
   print_formated(sub_d_amt_slot4);   fprintf(fp," ");
   print_formated(sub_d_amt_slot5);   fprintf(fp,"\n");


fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");
*/


	   sub_d_outstanding_amt = 0;
       sub_d_not_yet_due_amt = 0;
       sub_d_open_credit = 0;
       sub_d_amt_slot1 = 0;
       sub_d_amt_slot2 = 0;
       sub_d_amt_slot3 = 0;
       sub_d_amt_slot4 = 0;
       sub_d_amt_slot5 = 0;

lctr = lctr +3;
}

print_report_footer()
{
  if (lctr > 55) print_head();

{
if (nd_rep_type.arr[0] == 'S')
    {
    if (nd_order.arr[0] == 'C')
    {
fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,
"GRAND TOTALS           :                                      ");
    }
else if (nd_order.arr[0] == 'A')
    {
fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,
"GRAND TOTALS           :                                      ");
    }
    }
else if (nd_rep_type.arr[0] != 'S')   
{
fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");

fprintf(fp,
"GRAND TOTALS           :                                      ");
//"GRAND TOTALS           :                                      ");
}
}


/****    Column display interchanged by Sridharan - 12/Jan/1998    ***/

   print_formated(rep_d_outstanding_amt - rep_d_open_credit); fprintf(fp," ");
   print_formated(rep_d_not_yet_due_amt); fprintf(fp," ");
   
/****    ******************************************************    ***/

   print_formated(rep_d_open_credit); fprintf(fp," ");
   print_formated(rep_d_amt_slot1);   fprintf(fp," ");
   print_formated(rep_d_amt_slot2);   fprintf(fp," ");
   print_formated(rep_d_amt_slot3);   fprintf(fp," ");
   print_formated(rep_d_amt_slot4);   fprintf(fp," ");
   print_formated(rep_d_amt_slot5);   fprintf(fp,"\n");

/******/
{
if (nd_rep_type.arr[0] == 'S')
  {
fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");
  }
else if (nd_rep_type.arr[0] != 'S')
  {
fprintf(fp,
"                          -----------------------------------------------------------------------------------------------------------------------------------------------------------\n");
  }  
}  


}



print_formated(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];
  
   if (nd_no_of_decimal ==3 ) 
     sprintf(out_str,"%11.3f",loc_amount);
   else
     sprintf(out_str,"%11.2f",loc_amount);

     format_amt(out_str,nd_no_of_decimal);    

	  if (loc_amount == 0)
        fprintf(fp,"%14s"," "); 
      else if (loc_amount > 0) 
      {
	   fprintf(fp,"%14s",out_str);
      } 
	  else
	  fprintf(fp,"%13s-",out_str);
/*
   if (loc_amount == 0)
      fprintf(fp,"%-14s"," ");
   else if (loc_amount > 0)
   {
      sprintf(out_str,"%11.2f",loc_amount);
      ltrim(out_str);
	  
	  put_comma(out_str);
	  	  
	  sprintf(out_str1,"%14s",out_str);
      fprintf(fp,"%-14s",out_str1);
   }
   else
   {
      sprintf(out_str,"%11.2f",-loc_amount);
      ltrim(out_str);

	  put_comma(out_str);
      
	  sprintf(out_str1,"%14s",out_str);
      fprintf(fp,"%-14s-",out_str1);
   }
*/
}

print_det_line()
{
   char out_str[30],out_str1[30];

  

  return(0);


}

ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}


void print_hospital_name(nd_rep_width    ,
                         nd_mod_id       ,
                         nd_hospital_name,
                         nd_date          )
int  nd_rep_width;
char nd_mod_id[3];
char nd_hospital_name[31]; 
char nd_date[17];
{    
	int i = 0 , pos = 0 , len = 0, len_date = 0 , pos_date = 0,len1 = 0;

    /*Find the length of Hospital Name*/
    for(len = 0; nd_hospital_name[len] != '\0'; len++);

    /*Find the length of Date*/
    for(len_date = 0; nd_date[len_date] != '\0'; len_date++);
    
    len1 = (len % 2 );

	if (len1 == 0)
	  len1=9;
	else 
	   len1=10;
 
	
    len = (len / 2 )  ;

    pos = (nd_rep_width / 2	) - len;

	pos_date = nd_rep_width - len_date;

	fprintf(fp,"MDL : %2s",nd_mod_id);
     
    
	for(i = len1; i < pos ; fprintf(fp," "),i++);

	fprintf(fp,"%s",nd_hospital_name);

	for(i = i + (len * 2) ; i < pos_date + 1; fprintf(fp," "),i++);

    fprintf(fp,"%s\n",nd_date);
}