/*****************************************************************************/
/*                            BLRDLREV.PC                                     */
/*****************************************************************************/
/* Created by Aldrin for AMH on 15/12/1996*/

/*                                        
 #define DEBUG
*/                                  
  
#define ESC 0x1B            
#define REP_WIDTH 80
#define INIT_MESG "Report Generation In Progress"
#include <stdio.h>
#include <string.h>
#include "bl.h"

EXEC SQL BEGIN DECLARE SECTION;

    VARCHAR uid_pwd[91],
		    d_session_id[16],  
		    d_pgm_date[14],
            rep_date[20],
            comp_name[50],   
			l_comp_name[50],
            oper_id[21],
		    d_pgm_id[10];
 	 
    VARCHAR nd_fr_last_yrd_date           [9],
            nd_to_last_yrd_date           [9],
			nd_fr_yrd_date                [9],
            nd_to_yrd_date                [9],            
			nd_fr_mth_date                [9],
            nd_to_mth_date                [9],  
            nd_fr_cur_mth_date            [9],
            nd_to_cur_mth_date            [9],
            nd_report_type                [2], 
			l_rep_date					  [25],
			l_len_value                   [9],
			 nd_fr_param_date              [9],
             nd_to_param_date              [9],            
			 nd_operating_facility_id      [3],
			 nd_fr_facility                [3],
			 nd_to_facility                [3],
			 nd_pre_facility_id			   [3],

             nd_episode_type               [2],
			 l_pk_value		    [100],
			 l_translated_value	[201],
			 p_language_id		[3],
			 nd_facility_id	    [3],

			 nd_temp_date[21],
			 nd_loc_date[21],
			 date_convert[21],
			 language_id[3],
			 user_id[10];
            

    VARCHAR  d_blng_grp_id                [5],
             d_prev_blng_id               [5],
             d_trx_date                   [9],
             d_episode_type               [2],
			 d_operating_facility_id      [3],
			 d_prv_opr_facility_id		  [3];
    
    VARCHAR  d_prev_episode_type          [2];
    
    VARCHAR  d_prt_grp_desc               [40];
       
        char  stmt_s1					  [500];     
	    char filename[150];
		char x_msg[200];
		char loc_legend[999][201];
		char l_mesg[200],temp[100];


     double  d_upd_net_charge_amt;

	 int i;
int line_no;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;

int page_no;
   

char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1];
	 


char rep_title[60] = "DAILY REVENUE REPORT FOR -";
char rep_title1[60];

double p_tot_today     =0,
       p_month         =0,
       p_ytd           =0,
       p_last_mtd      =0,
       p_last_ytd      =0,
       p_epi_tot_today =0,
       p_epi_month     =0,
       p_epi_ytd       =0,
       p_epi_last_mtd  =0,
       p_epi_last_ytd  =0,
       g_tot_today     =0,
       g_month         =0,
       g_ytd           =0,
       g_last_mtd      =0,
       g_last_ytd      =0;


void proc_main(argc,argv)
int argc;
char *argv[];
{
	
    //disp_message(ERR_MESG,"calling........");

	if(argc != 5) 
	{
		disp_message(ERR_MESG,"BLRDLREV : Usage BLRDLREV userid/password session_id pgm_date facility_id \n");
		proc_exit();
	}

	strcpy(uid_pwd.arr,argv[1]);
	uid_pwd.len = strlen(uid_pwd.arr);

	strcpy(d_session_id.arr,argv[2]);
	d_session_id.len = strlen(d_session_id.arr);

	strcpy(d_pgm_date.arr,argv[3]);
	d_pgm_date.len = strlen(d_pgm_date.arr);

	strcpy(nd_facility_id.arr,argv[4]);
    nd_facility_id.len = strlen(nd_facility_id.arr);
    //strcpy(g_facility_id,nd_facility_id.arr);
  

	EXEC SQL CONNECT :uid_pwd;

	if(OERROR) 
	{
		disp_message(ORA_MESG,"Unable to connect to oracle.\n");
		proc_exit();
	}

    
	set_meduser_role();
     	strcpy(p_language_id.arr,l_language_id.arr);
    	p_language_id.len = l_language_id.len;

	
	fetch_legend_value();

	nd_fr_last_yrd_date.arr[0]    = '\0';
	nd_to_last_yrd_date.arr[0]    = '\0';
	nd_fr_yrd_date.arr[0]         = '\0';
	nd_to_yrd_date.arr[0]         = '\0';   
	nd_fr_mth_date.arr[0]         = '\0';
	nd_to_mth_date.arr[0]         = '\0';   
	nd_fr_cur_mth_date.arr[0]     = '\0';
	nd_to_cur_mth_date.arr[0]     = '\0';   
	nd_report_type.arr[0]         = '\0';   
	nd_operating_facility_id.arr[0] = '\0';

	nd_fr_last_yrd_date.len       = 0;
	nd_to_last_yrd_date.len       = 0;
	nd_fr_yrd_date.len            = 0;
	nd_to_yrd_date.len            = 0;   
	nd_fr_mth_date.len            = 0;
	nd_to_mth_date.len            = 0;   
	nd_fr_cur_mth_date.len        = 0;
	nd_to_cur_mth_date.len        = 0;   
	nd_report_type.len            = 0;   
	nd_operating_facility_id.len  = 0;
	
	EXEC SQL SELECT OPERATING_FACILITY_ID,
					 PARAM1,
 	        		 PARAM2,
 	        		 PARAM3,
 	        		 PARAM4,
 	        		 PARAM5,
 	        		 PARAM6,
 	        		 PARAM7,
 	        		 PARAM8,
 	        		 PARAM9,
					 PARAM16,
					 PARAM17
 			  INTO   :nd_operating_facility_id,
					 :nd_fr_last_yrd_date,
					 :nd_to_last_yrd_date,
					 :nd_fr_mth_date,
					 :nd_to_mth_date,
					 :nd_fr_yrd_date,
					 :nd_to_yrd_date,
					 :nd_fr_cur_mth_date,
					 :nd_to_cur_mth_date,
					 :nd_report_type,
					 :nd_fr_facility,
					 :nd_to_facility
			  FROM   SY_PROG_PARAM
			  WHERE  PGM_ID     = 'BLRDLREV'
			  AND    PGM_DATE   = :d_pgm_date
			  AND    SESSION_ID = TO_NUMBER(:d_session_id);

	//sprintf(l_mesg,"nd_operating_facility_id : %s    nd_fr_last_yrd_date : %s    nd_to_last_yrd_date : %s   nd_fr_mth_date : %s     nd_to_mth_date : %s    nd_fr_yrd_date : %s     nd_to_yrd_date : %s    nd_fr_cur_mth_date : %s     nd_to_cur_mth_date : %s    nd_report_type : %s    nd_fr_facility : %s    nd_to_facility : %s",nd_operating_facility_id.arr,nd_fr_last_yrd_date.arr,nd_to_last_yrd_date.arr,nd_fr_mth_date.arr,nd_to_mth_date.arr,nd_fr_yrd_date.arr,nd_to_yrd_date.arr,nd_fr_cur_mth_date.arr,nd_to_cur_mth_date.arr,nd_report_type.arr,nd_fr_facility.arr,nd_to_facility.arr);

 
	 nd_fr_last_yrd_date.arr[nd_fr_last_yrd_date.len]    = '\0';
	 nd_to_last_yrd_date.arr[nd_to_last_yrd_date.len]    = '\0';
	 nd_fr_yrd_date.arr[nd_fr_yrd_date.len]              = '\0';
	 nd_to_yrd_date.arr[nd_to_yrd_date.len]              = '\0';   
	 nd_fr_mth_date.arr[nd_fr_mth_date.len] 	         = '\0';
	 nd_to_mth_date.arr[nd_to_mth_date.len]  		     = '\0';   
	 nd_fr_cur_mth_date.arr[nd_fr_cur_mth_date.len]      = '\0';
	 nd_to_cur_mth_date.arr[nd_to_cur_mth_date.len]      = '\0';   
	 nd_report_type.arr[nd_report_type.len]		         = '\0';   
 
 
	if(OERROR || NO_DATA_FOUND)
		err_mesg("SELECT failed on table  SY_PROG_PARAM",0,"");
	
	strcpy(filename,WORKING_DIR);
    strcat(filename,"blrdlrev.lis");
    strcpy(g_facility_id, nd_operating_facility_id.arr);

    if((f1=fopen(filename,"w")) == NULL) 
	{
        disp_message(ERR_MESG,"Error in opening output file...\n");
        proc_exit();
    }

    EXEC SQL SELECT ACC_ENTITY_NAME,
				    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
		     INTO   :comp_name,
				    :rep_date,
				    :oper_id
		     FROM   SY_ACC_ENTITY_lang_vw
			 WHERE  ACC_ENTITY_ID = :nd_operating_facility_id
			 AND		language_id=:p_language_id;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] 	= '\0';
    rep_date.arr[rep_date.len] 		= '\0';
    oper_id.arr[oper_id.len] 		= '\0';

    page_no=1;
    line_no=1;

    fetch_legend_value();

    decl_curs();

    fprintf(f1,"%c&l1O",ESC);   /* To Print Landscape           */
	fprintf(f1,"%c&a7L",ESC); 	/* To Set the Left margin  		*/
    fprintf(f1,"%c(s14H",ESC); 	/* To set the font size			*/
    
    do_report();

    fclose(f1);

    del_parm();

    EXEC SQL COMMIT WORK RELEASE;
    return;
    
}

del_parm()
{
    EXEC SQL DELETE SY_PROG_PARAM
	         WHERE  PGM_ID     = 'BLRDLREV' 
	         AND    PGM_DATE   = :d_pgm_date
	         AND    SESSION_ID = :d_session_id;

    if(OERROR) 
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,""); 
}

decl_curs()
{
    EXEC SQL DECLARE REV_DTL_LIST_CUR 
	        CURSOR 
			   FOR
	        SELECT  NVL(A.ORG_NET_CHARGE_AMT,0),
	                A.BLNG_GRP_ID,
	                TO_CHAR(A.TRX_DATE,'YYYYMMDD'),
	                A.EPISODE_TYPE ,
					A.OPERATING_FACILITY_ID
	        FROM    BL_PATIENT_CHARGES_FOLIO A,
					BL_BLNG_PRT_GRP_HDR B
	        WHERE   A.OPERATING_FACILITY_ID 
			BETWEEN NVL(:nd_fr_facility,'!!')
			AND     NVL(:nd_to_facility,'~~')
			AND		A.TRX_DATE
	        BETWEEN TO_DATE(:nd_fr_last_yrd_date,'YYYYMMDD')
	        AND     TO_DATE(:nd_to_cur_mth_date,'YYYYMMDD')
			AND     NVL(A.TRX_FINALIZE_IND,'N') = 'Y'
			AND		NVL(A.CONFIRMED_YN,'N')		= 'Y'
			AND		A.PRT_GRP_HDR_CODE			= B.PRT_GRP_HDR_CODE
			AND		NVL(B.INCOME_YN,'N')		= 'Y'
	        ORDER   
			BY		A.OPERATING_FACILITY_ID,
					EPISODE_TYPE,
					BLNG_GRP_ID,
					TRUNC(TRX_DATE);
   
   EXEC SQL OPEN REV_DTL_LIST_CUR;

   if(OERROR)
       err_mesg("OPEN failed on cursor REV_LIST_CUR",0,"");
}

do_report()
{
 int first = 1;
 put_hdr();

	while(fetch_dtl_trans_list()) 
	{

	  if (!nd_pre_facility_id.arr)
      {
	   		strcpy(nd_pre_facility_id.arr,d_operating_facility_id.arr);
      }
      
	  if (strcmp(nd_pre_facility_id.arr,d_operating_facility_id.arr)!=0) 
      {
			chk_break(2);
			strcpy(nd_pre_facility_id.arr,d_operating_facility_id.arr);
			
			l_comp_name.arr[0] = '\0';

			EXEC SQL SELECT ACC_ENTITY_NAME
					 INTO   :l_comp_name
					 FROM   SY_ACC_ENTITY_lang_vw
					 WHERE  ACC_ENTITY_ID = :nd_operating_facility_id
					 and language_id=:p_language_id;

			l_comp_name.arr[l_comp_name.len] = '\0';

			fprintf(f1,"%18s  :  %-40.40s\n\n" ,loc_legend[190],l_comp_name.arr);          
			line_no++;line_no++;
      }

      if (first ==1) 
	  {
		  d_prev_episode_type.arr[0]    = '\0';   
		  d_prev_episode_type.len       = 0;
          d_prev_blng_id.arr[0]         = '\0';   
          d_prev_blng_id.len            = 0;                 


          strcpy(d_prev_episode_type.arr,d_episode_type.arr);
          strcpy(d_prev_blng_id.arr,d_blng_grp_id.arr);

          d_prev_episode_type.len       = d_episode_type.len;
          d_prev_episode_type.arr[d_prev_episode_type.len]    = '\0';   
          d_prev_blng_id.len            = d_blng_grp_id.len;
          d_prev_blng_id.arr[d_prev_blng_id.len]              = '\0';   
          
          if (strcmp(d_episode_type.arr,"I") == 0)
             fprintf(f1,"%9s         ",loc_legend[170]);
          else if (strcmp(d_episode_type.arr,"D") == 0)		//31/10/2004
             fprintf(f1,"\n%7s           ",loc_legend[180]);
          else if(strcmp(d_episode_type.arr,"O") == 0)
             fprintf(f1,"\n%10s        ",loc_legend[140]);
          else if(strcmp(d_episode_type.arr,"E") == 0)
             fprintf(f1,"\n%9s         ",loc_legend[150]);
          else if(strcmp(d_episode_type.arr,"R") == 0)
             fprintf(f1,"\n%8s          ",loc_legend[160]);
       
	      if (strcmp(nd_report_type.arr,"D") == 0)
                fprintf(f1,"\n\n");
       }  
       else 
       {
           if (strcmp(d_prev_episode_type.arr,d_episode_type.arr) !=0 ) 
		   {
	          d_prev_episode_type.arr[0]    = '\0';   
    	      d_prev_episode_type.len       = 0;
              
              strcpy(d_prev_episode_type.arr,d_episode_type.arr);
              
              d_prev_episode_type.len      	= d_episode_type.len;
              d_prev_episode_type.arr[d_prev_episode_type.len]    = '\0';   
              
              print_rec();
              d_prev_blng_id.arr[0]         = '\0';   
  	          d_prev_blng_id.len            = 0;                 
              
              strcpy(d_prev_blng_id.arr,d_blng_grp_id.arr);
	          
	          d_prev_blng_id.len            = d_blng_grp_id.len;
    	      d_prev_blng_id.arr[d_prev_blng_id.len]              = '\0';   
    	      
              init_variables(); 
              print_epi_totals();
              first = 1;

              if(strcmp(d_episode_type.arr,"O") == 0)
                 fprintf(f1,"\n%10.10s        ",loc_legend[140]);
              else if (strcmp(d_episode_type.arr,"E") == 0)
                 fprintf(f1,"\n%9.9s         ",loc_legend[150]);
              else if(strcmp(d_episode_type.arr,"R") == 0)
                 fprintf(f1,"\n%8.8s          ",loc_legend[160]);
              else if(strcmp(d_episode_type.arr,"I") == 0)
                 fprintf(f1,"\n%9.9s         ",loc_legend[170]);
              else if(strcmp(d_episode_type.arr,"D") == 0)
                 fprintf(f1,"\n%7.7s           ",loc_legend[180]);


              

              if (strcmp(nd_report_type.arr,"D") == 0)
				 fprintf(f1,"\n\n");
           }
           else 
		   {
			 if(strcmp(d_prev_blng_id.arr,d_blng_grp_id.arr)!=0 )
			 {
				print_rec();
				init_variables(); 
				d_prev_blng_id.arr[0]         = '\0';   
        		d_prev_blng_id.len            = 0;                 
				strcpy(d_prev_blng_id.arr,d_blng_grp_id.arr);
				d_prev_blng_id.len            = d_blng_grp_id.len;
      			d_prev_blng_id.arr[d_prev_blng_id.len] = '\0';   
			 }  
           } 
       }
       first = 0;

      // Today 

      if (strcmp(d_trx_date.arr,nd_to_yrd_date.arr)==0)
         p_tot_today  =  p_tot_today + d_upd_net_charge_amt;
      

	  // Month 
	  if ((strcmp(d_trx_date.arr,nd_fr_cur_mth_date.arr)>=0)  &&
	      (strcmp(d_trx_date.arr,nd_to_cur_mth_date.arr)<=0))
  	 	  p_month  =  p_month + d_upd_net_charge_amt;        
  	 	  
  	 	  
	  // YTD 
	  if ((strcmp(d_trx_date.arr,nd_fr_yrd_date.arr)>=0)  &&
	      (strcmp(d_trx_date.arr,nd_to_yrd_date.arr)<=0))
 		  p_ytd  =  p_ytd + d_upd_net_charge_amt;        
	   
    
      // last MTD 
	  if ((strcmp(d_trx_date.arr,nd_fr_mth_date.arr)>=0)  &&
	      (strcmp(d_trx_date.arr,nd_to_mth_date.arr)<=0)) 
          p_last_mtd  =  p_last_mtd + d_upd_net_charge_amt;
                 
	   
	  // last YTD 
      if ((strcmp(d_trx_date.arr,nd_fr_last_yrd_date.arr)>=0) &&
	      (strcmp(d_trx_date.arr,nd_to_last_yrd_date.arr)<=0))
 		  p_last_ytd  =  p_last_ytd + d_upd_net_charge_amt;  

	} 
    
	//disp_message(ERR_MESG,"End of While Loop");
	
	strcpy(d_prev_blng_id.arr,d_blng_grp_id.arr);
	print_rec();             
	print_epi_totals();	

	chk_break(3);
    fprintf(f1,"-------------------------------------------------------------------------------------------------\n");
	print_grand_totals();
    fprintf(f1,"\n-------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"\n                               *** %15s ***\n",loc_legend[220]);
}

init_variables ()
{
 p_tot_today =0;
 p_month 	 =0;
 p_ytd 	 	 =0;  
 p_last_mtd  =0;
 p_last_ytd  =0;
}

print_rec()
{
  if (strcmp(nd_report_type.arr,"D") == 0)
  {
	  
	chk_break(2);
	fetch_prt_line_desc();
	fprintf(f1,"%-15.15s   ",d_prt_grp_desc.arr);
	print_line();
	
	 //for(line_no;line_no<=35;line_no++){ fprintf(f1,"\n");}
	fprintf(f1,"\n"); 
	
	 line_no++;

  }  
   
  compute_episode_total();
} 

compute_episode_total()
{
	 p_epi_tot_today  = p_epi_tot_today   + p_tot_today;
	 p_epi_month      = p_epi_month       + p_month;
	 p_epi_ytd        = p_epi_ytd         + p_ytd;
	 p_epi_last_mtd   = p_epi_last_mtd    + p_last_mtd;
	 p_epi_last_ytd   = p_epi_last_ytd    + p_last_ytd;

	//sprintf(l_mesg,"COMPUTE_EPISODE_TOTAL   %f",p_epi_ytd);
	 //disp_message(ERR_MESG,l_mesg);

} 

print_epi_totals()
{
	int i;

	chk_break(4);

	//sprintf(l_mesg,"PRINT_EPISODE_TOTAL   %f",p_epi_tot_today);
	//disp_message(ERR_MESG,l_mesg);

	 if (strcmp(nd_report_type.arr,"D") == 0)
	 {
	
		 for (i=0;i<REP_WIDTH+17;i++)
			fprintf(f1,"-"); 
		 fprintf(f1,"\n");

		fprintf(f1,"%9.9s:        ",loc_legend[210]);
	
	 }

	 print_formated(p_epi_tot_today);
	 print_formated(p_epi_month);
	 print_formated(p_epi_ytd);
	 print_formated(p_epi_last_mtd);
	 print_formated(p_epi_last_ytd); 
	 fprintf(f1,"\n");
	
	 compute_grand_tot();
	 init_epi_totals();
}

compute_grand_tot()
{
	 g_tot_today  = p_epi_tot_today + g_tot_today;
	 g_month      = p_epi_month     + g_month;
	 g_ytd        = p_epi_ytd       + g_ytd;
	 g_last_mtd   = p_epi_last_mtd  + g_last_mtd;
	 g_last_ytd   = p_epi_last_ytd  + g_last_ytd;
} 

init_epi_totals()
{
	 p_epi_tot_today =0;
	 p_epi_month 	 =0;
	 p_epi_ytd 		 =0;
	 p_epi_last_mtd  =0;
	 p_epi_last_ytd  =0;
}

print_grand_totals()
{
	 fprintf(f1,"%8.8s          ",loc_legend[200]);
	 print_formated(g_tot_today);
	 print_formated(g_month);
	 print_formated(g_ytd);
	 print_formated(g_last_mtd);
	 print_formated(g_last_ytd);
}

fetch_dtl_trans_list()
{
	EXEC SQL FETCH REV_DTL_LIST_CUR INTO
				   	 :d_upd_net_charge_amt,
					 :d_blng_grp_id,
					 :d_trx_date, 
					 :d_episode_type,
					 :d_operating_facility_id; 
 
	if(OERROR)
		err_mesg("FETCH failed on cursor TRANS_LIST_CUR",0,"");
    
	if(NO_DATA_FOUND)
		return 0;

	d_blng_grp_id.arr[d_blng_grp_id.len]   = '\0';
	d_trx_date.arr[d_trx_date.len]         = '\0';
	d_episode_type.arr[d_episode_type.len] = '\0';

	return 1;
}


chk_break(nol)
int nol;
{
  if(line_no+nol >= 35)   
  {
     fprintf(f1,"");
     line_no = 1;
     ++page_no;
     put_hdr();
  }  
}

fetch_prt_line_desc()
{
	  d_prt_grp_desc.arr[0]  = '\0';
	  EXEC SQL SELECT SHORT_DESC
			   INTO  :d_prt_grp_desc
			   FROM BL_BLNG_GRP_lang_vw
			   WHERE  BLNG_GRP_ID = :d_prev_blng_id
			   and language_id=:p_language_id;

	  if(OERROR)
		err_mesg("FETCH failed on cursor PRT_GRP_LINE_CUR",0,"");
	  d_prt_grp_desc.arr[d_prt_grp_desc.len]  = '\0';
}
/*fprintf(f1,"                       %8.8s %-16.16s%9.9s  %12.12s   %7.7s \n",  loc_legend[80],loc_legend[90],loc_legend[100],loc_legend[110],loc_legend[120]);
    fprintf(f1,"                                                                %8s    %8s \n", loc_legend[130],loc_legend[100]);*/

put_hdr()
{

    form_hdr();
//              01234567890123456789012345678901234567890123456789012345678901234567890123456789
    fprintf(f1,"-------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"                           %5.5s      %13.13s     %5.5s          %7.7s         %4.4s \n",  loc_legend[80],loc_legend[90],loc_legend[100],loc_legend[110],loc_legend[120]);
    fprintf(f1,"                                                                        %5.5s         %5.5s \n", loc_legend[130],loc_legend[100]);
	/*fprintf(f1,"%25.25s%6.6s   %13.13s    %6.6s      %7.7s       %5.5s \n"," ",loc_legend[80],loc_legend[90],loc_legend[100],loc_legend[110],loc_legend[120]);
    fprintf(f1,"                                                               %9.9s    %9.9s \n", loc_legend[130],loc_legend[100]);*/
    fprintf(f1,"-------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"\n");
    line_no=8;
  
}

/*print_formated(loc_amount)
double loc_amount;
{
	 char s_amt[100];
	 char ss[100];  			
	 if (loc_amount <0)
      {
	     	 sprintf(s_amt,"%f",loc_amount);
			 //put_val(s_amt,-loc_amount);
			 format_amt(s_amt);
			 strcpy(ss,"-"); 
             strcat(ss,s_amt); 
             //strcpy(s_amt,ss); 
             //	disp_message(ERR_MESG,s_amt);
			 fprintf(f1,"%14.14s",ss);
	   }
	   else
	   {
			 sprintf(s_amt,"%f",loc_amount);
			 //put_val(s_amt,loc_amount);
			 format_amt(s_amt);
			 fprintf(f1,"%14.14s",s_amt); 
		}
}*/

print_formated(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30], fstr_amt[30];
    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);        	       
        sprintf(str_amt,"%s",s_amt);				
		strcpy(fstr_amt,"-");
		strcat(fstr_amt,str_amt);		
		sprintf(str_amt,"%16s",fstr_amt);		
        fprintf(f1,"%16s",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%16s",s_amt);
        fprintf(f1,"%16s",str_amt);
     }
} 


form_hdr()
{
    static int first = 1;
    char buf[5];
    int col;
	  if(first) 
	{
        memset(hdr_line1,' ',REP_WIDTH+1);
        memset(hdr_line2,' ',REP_WIDTH+1);
 
        strcpy(hdr_line1,loc_legend[230]);
		strcat(hdr_line1," : ");
	    strcat(hdr_line1,loc_legend[70]);
        col = (int)(REP_WIDTH-strlen(comp_name.arr))/2;

        strncpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));
        //col = (REP_WIDTH-strlen(rep_date.arr));
        //strcpy(hdr_line1+col,rep_date.arr);
    
        strcpy(hdr_line2,loc_legend[240]);
		strcat(hdr_line2," : ");
        strcat(hdr_line2,oper_id.arr);
//  moved from down to inside the if clause  by Ravikiran S
	l_rep_date.arr[0] = '\0';

	EXEC SQL SELECT TO_CHAR(TO_DATE(:nd_to_mth_date,'YYYYMMDD'),'DD/MM/YYYY')
	           INTO :l_rep_date
			   FROM dual;
     	l_rep_date.arr[l_rep_date.len] = '\0';
		init_date_temp_var();
        strcpy(date_convert.arr,rep_date.arr);
        fun_change_loc_date();
		        //fprintf(f1,"%s                      %30         %12.12s :%11.11s\n",hdr_line1,hdr_line1+col,loc_legend[10],date_convert.arr);
		fprintf(f1,"%s                      %30s         %12.12s :%11.11s\n",hdr_line1,hdr_line1+col,loc_legend[10],date_convert.arr);
 
	//	first = 0;
    }

/*	l_rep_date.arr[0] = '\0';

	EXEC SQL SELECT TO_CHAR(TO_DATE(:nd_to_mth_date,'YYYYMMDD'),'DD/MM/YYYY')
	           INTO :l_rep_date
			   FROM dual;
	l_rep_date.arr[l_rep_date.len] = '\0';
*/
   memset(hdr_line3,' ',REP_WIDTH+1);

	//strcat(rep_title1,l_rep_date.arr);


    if (strcmp(nd_report_type.arr,"D") == 0)
	{
		strcpy(rep_title1,loc_legend[260]);
        strcat(rep_title1,loc_legend[60]);
	}
    else
    {
	    strcat(rep_title1,loc_legend[260]);
        strcat(rep_title1,loc_legend[50]);
	} 
    strncpy(hdr_line3,"REP : ",6);
	strncpy(hdr_line3+6,loc_legend[40],strlen(loc_legend[40]));/* Modified by Pradeep 28-09-2006*/
    col = (int)(REP_WIDTH+10-strlen(rep_title1))/2;
	strncpy(hdr_line3+col,rep_title1,strlen(rep_title1));
	//sprintf(buf,"%-5s %4d",loc_legend[30],page_no);
    //strcpy(hdr_line3+(REP_WIDTH-5),buf);
/*		init_date_temp_var();
        strcpy(date_convert.arr,rep_date.arr);
        fun_change_loc_date(); 
    fprintf(f1,"%s                         %-25.25s                          %12.12s\n",hdr_line1,hdr_line1+col,date_convert.arr);
   */

    fprintf(f1,"%-14s \n",hdr_line2);
		init_date_temp_var();
        strcpy(date_convert.arr,l_rep_date.arr);
        fun_change_loc_date();
    fprintf(f1,"%-3.3s : %-8.8s             %30.30s %12.12s              %5.5s %4d\n",loc_legend[250],loc_legend[40],hdr_line3+col+6,date_convert.arr,loc_legend[30],page_no); 
}


print_line()
{
	 print_formated(p_tot_today);
	 print_formated(p_month);
	 print_formated(p_ytd);
	 print_formated(p_last_mtd);
	 print_formated(p_last_ytd);
	
	 
}

filbuf(buf, fil_char, size)
char	*buf;
char	fil_char;
int	size;
{
  int ix;

  for (ix = 0; ix < size; ix++)
    buf[ix] = fil_char;
}


/*
fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLRDLREV.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}
*/


fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0';
		l_len_value.arr[0] = '\0';


		EXEC SQL SELECT LTRIM(RTRIM('BLRDLREV.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		EXEC SQL SELECT length(column_value) INTO :l_len_value 
		           FROM sm_record_trans_data 
				   WHERE language_id ='en' AND Pk_value = :l_pk_value;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_len_value.arr[l_len_value.len]= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		
		END;
		END-EXEC;

		EXEC SQL SELECT substr(:l_translated_value,1,(:l_len_value+4))  
		          INTO :l_translated_value
		          FROM DUAL;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
} 

get_local_date()
{
	get_p_language_id();
 	

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	//	get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);

	//	:nd_loc_date := to_char(t_date,'DD/MM/YYYY');

		   :nd_loc_date := sm_convert_date_2t(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id);  


	END;

	END-EXEC;

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}


init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
}


fun_change_loc_date()
{
strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);


get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 
}

	


get_p_language_id()
{
	p_language_id.arr[0] = '\0';
	user_id.arr[0]     = '\0';
	
	p_language_id.len = 0;
	user_id.len     = 0;
	
	EXEC SQL SELECT  USER INTO :user_id  FROM SY_ACC_ENTITY WHERE ACC_ENTITY_ID = :nd_facility_id;
	 if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	EXEC SQL SELECT LANGUAGE_ID INTO :p_language_id FROM SM_APPL_USER where APPL_USER_ID = :user_id;

	if (OERROR)
        err_mesg("SELECTING LANGUAGE_ID failed",0,"");
}

//	strcat(rep_title,l_rep_date.arr);

    /*if (strcmp(nd_report_type.arr,"D") == 0)
	{
		strcat(rep_title," -");
        strcat(rep_title,loc_legend[60]);
	}
    else
    {
	    strcat(rep_title," -");
        strcat(rep_title,loc_legend[50]);
	}

    strncpy(hdr_line3,"REP : ",6);
	strncpy(hdr_line3+6,loc_legend[40],strlen(loc_legend[40]));// Modified by Pradeep 28-09-2006
    col = (int)(REP_WIDTH+10-strlen(rep_title))/2;
	strncpy(hdr_line3+col,rep_title,strlen(rep_title));
	sprintf(buf,"%4d",page_no);
    strcpy(hdr_line3+(REP_WIDTH-5),buf);*/
