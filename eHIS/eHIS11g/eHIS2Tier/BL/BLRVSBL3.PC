/************************************************************************/
/*  OCS MEDICOM VER 1.10                                                */
/************************************************************************/
/* PROGRAM NAME          :	BLRVSBL1.PC                             */
/* AUTHOR                :	K.SARAVANAN                             */
/* DATE WRITTEN          :	14-AUG-2003                             */
/* DATE MODIFIED         :						*/
/* CALLED FROM           :						*/
/*                                                                      */
/* FUNCTION              :	TO PRINT CASH BILL CUM RECEIPT,         */
/*				PRINT_VISIT_BILL, PRINT_VISIT_BILL_NO_DISC,*/
/*				PRINT VISIT BILL - NO SETTLEMENT DTLS	*/
/************************************************************************/
/* UPGRADED TO 4.1 */

#include <stdio.h>     
#include <string.h>       
#include <bl.h>  



#define OERROR (sqlca.sqlcode < 0)

#define NODATAFOUND sqlca.sqlcode == 1403
#define RESOURCE_BUSY (sqlca.sqlcode == -54)


#define INIT_MESG "Visit Bill Printing in progress"

#define ONLINE_PRINTING 1

#define DEBUG  1
        
#define maxlines 11

#define LEGEND 1

#define LENGTH_WORDS 80 

#define ERR_MESG  4

#define ESC     0x1B

EXEC SQL BEGIN DECLARE SECTION;
		
VARCHAR nd_fm_doc_type  [31],
		trx_type 		[2],
		uid_pwd      	[132],		
		nd_episode_id 	[9],
		nd_visit_id 	[5],
		nd_fm_doc_num   [31],
		nd_to_doc_type  [31],  
		nd_to_doc_num   [31],
		nd_fm_doc_date  [31],
		d_cashfacility_id [3],
		nd_to_doc_date  [31],
		nd_facility_name[31],
		nd_acc_name	[31],
		nd_facility	[31],
		p_cash_counter	[3],
		p_document_id	[31],
		p_shift		[2],
		nd_pgm_date	[13],
		nd_session_id	[16],
		nd_ws_no	[40],
		l_printer_ids   [1000],
		l_printer_names [1000],
		l_printer_types [1000],
	        l_queue_names   [1000],
	        l_no_of_copies  [1000],
	        l_errortext     [1000],
		l_logo_yniflaser[1000],
		LOGO_DIR[1000],
	        l_logo_name[1000],
		l_errorlevel[10],
		l_sysmessageid[10],		
  	        currency 	[16],
	        sub_cur  	[10],
	        nn_cc_code      [3],
	        nd_curr_date    [20],
                nn_shift_id     [2],
		nn_cc_id        [31],
                nn_cc_name      [16],
		nd_user		[31],
		nd_calling_pgm_id[10],
		nd_logo_pgm_id[1000],
		bill_title[40];

VARCHAR dc_doc_type_code [7],
	    d_no			 [17],
	    d_doc_date		 [11],
	    dc_episode_id	 [9],
	    dc_epi_id		 [9],
	    dc_visit_id		 [5],
	    dc_admn_date	 [17],
	    dc_physician_id  [16],
	    dc_blng_grp_id	 [3],
	    dc_patient_id	 [21],
	    dc_cust_code	 [9],
	    dc_bill_type_code [3],
	    dc_clinic_code [5],
	    dc_bill_print_flag [2], 
	dc_credit_doc_ref_desc [51],
        dc_short_name [81],
	dc_short_name1 [81],
	dc_short_name2 [81],
	dc_short_name3 [81],
        dc_short_name_loc_lang [81], 
	dc_date_of_birth [11],
        dc_sex [10],
        dc_full_name [61],
        dc_long_name [61],
	dc_long_desc [51],
	    dc_blng_grp_desc [51],
 	    dc_short_desc [51],
        dc_ind [10],
	    dc_mpi_id [100],
   	    dc_credit_doc_ref_date [11],
	    dc_policy_type_code    [21] ,  
	    dc_policy_number        [31],
	    dc_policy_expiry_date [11],
		d1_doc_type_code [7],
		d1_prt_grp_hdr_code [3],
		d1_prt_grp_line_code [3],
        d1_long_desc [51],
        d1_long_desc1 [51],
		d1_mpi_id [47],
		d2_doc_type_code [7],
		d2_doc_date [11],
		d2_mpi_ind [2],
		d2_mpi_id [47],
		d2_short_name[16],
		d3_doc_type_code [7],
		d3_patient_id [21],
		d3_episode_id [9],
		d4_doc_type_code [7],
		d4_patient_id [21],
		d4_episode_id [9],
	
		d_bill_trx_type_code [41],
		d_bill_nature_code [2],
		d_nationality_num [21],
		d_doc_num [9],
		d2_doc_num [9],
		d3_doc_num [20],
		d4_doc_num [20],
		dc_tot_dep_paid_amt [21],
		last_recpt_doc_type_code [7],
		last_recpt_doc_num [9],
		slmt_short_desc [16],
		slmt_doc_ref_desc [21],
		slmt_doc_ref_date [11],
		slmt_remarks [31],
		temp  [10],
	        d_service_code[11],
	        d_service_date[12],
	        d_service_desc[41],
		d_dis_date[17],
		l_dflt_bill_print_in_summ_yn[5],

		l_line1[50],
		l_line2[50],
		l_line3[50],
		l_line4[50],
		l_line5[50],
		l_line6[50],
		l_line7[50],

		l_bill_contact_name[50],

		l_bill_contact_name_p[50],
		l_bill_contact_name_p1[50],
		l_bill_contact_name_p2[50],

		l_bill_contact_name_c[50],
		l_bill_contact_name_c1[50],
		l_bill_contact_name_c2[50],

		l_bill_contact_name_title[50],
		l_bill_contact_name_title_p[50],
		l_bill_contact_name_title_p1[50],
		l_bill_contact_name_title_p2[50],

		l_bill_contact_name_title_c[50],
		l_bill_contact_name_title_c1[50],
		l_bill_contact_name_title_c2[50],

		
		l_bill_long_desc[40],

		l_bill_long_desc_p[40],
		l_bill_long_desc_p1[40],
		l_bill_long_desc_p2[40],

		l_bill_long_desc_c[40],
		l_bill_long_desc_c1[40],
		l_bill_long_desc_c2[40],

		l_bill_add1_desc[40],

		l_bill_add1_desc_p[40],
		l_bill_add1_desc_p1[40],
		l_bill_add1_desc_p2[40],

		l_bill_add1_desc_c[40],
		l_bill_add1_desc_c1[40],
		l_bill_add1_desc_c2[40],

		l_bill_add2_desc[40],

		l_bill_add2_desc_p[40],
		l_bill_add2_desc_p1[40],
		l_bill_add2_desc_p2[40],

		l_bill_add2_desc_c[40],
		l_bill_add2_desc_c1[40],
		l_bill_add2_desc_c2[40],

		l_bill_add3_desc[40],

		l_bill_add3_desc_p[40],
		l_bill_add3_desc_p1[40],
		l_bill_add3_desc_p2[40],

		l_bill_add3_desc_c[40],
		l_bill_add3_desc_c1[40],
		l_bill_add3_desc_c2[40],

		l_bill_add3_desc_temp[40],
		l_episode_settlement_ind[4],
		l_episode_cust_code[10],
		l_nric_number[25],
		l_gl_holder_name[61],
		l_gl_holder_name1[45],
		l_gl_holder_name2[45],
		l_gl_ic[1000],
		l_pat_reln_with_gl_holder[35],
		l_pat_reln_with_gl_holder1[35],
		l_pat_reln_with_gl_holder2[35],
		l_detail_report_flag[3],
		l_print_without_disc_func[4],
		l_no_settlement_details[5],
		l_credit_doc_ref_desc[30],
		l_credit_doc_ref_desc1[30],
		l_credit_doc_ref_desc2[30],
		nd_acc_entity_code[5],
		nd_facility_id[3];

VARCHAR	nd_blng_grp			[31],
		nd_nationality		[16],
		nd_cash_counter		[16],
		nd_base_rate_qty	[20];	

VARCHAR	d_bill_type_desc[31],
		d_remarks_1[61],
		d_remarks_2[61],
		d_remarks_3[61],
		d_remarks_4[61],
		d_remarks_5[61],
		d_remarks_6[61],
		d_remarks_7[61];


		
VARCHAR	nd_file_name [50],
		nd_hosp_name    [1000],
		nd_add		[1000],
		nd_add_ln	[1000],
		nd_add_ln1	[1000],
		nd_add_ln2	[1000],
		nd_add_ln3	[1000],
	        nd_tel_fax	[1000],
		nd_telfax	[1000],

		nd_lang_id	[4],
		loc_legend1	[201],
		loc_legend2	[201],
		loc_legend3	[201],
		loc_legend4	[201],
		loc_legend5	[201],
		loc_legend6	[201],
		loc_legend7	[201],
		loc_legend8	[201],
		loc_legend9	[201],
		loc_legend10[201],
		loc_legend11[201],
		loc_legend12[201],
		loc_legend13[201],
		loc_legend14[201],
		loc_legend15[201],
		loc_legend16[201],
		loc_legend17[201],
		loc_legend18[201],
		loc_legend19[201],
		loc_legend20[201],
		loc_legend21[201],
		loc_legend22[201],
		loc_legend23[201],
		loc_legend24[201],
		loc_legend25[201],
		loc_legend26[201],
		loc_legend27[201],
		loc_legend28[201],
		loc_legend29[201],
		loc_legend30[201],
		loc_legend31[201],
		loc_legend32[201],
		loc_legend33[201],
		loc_legend34[201],
		loc_legend35[201],
		loc_legend36[201],
		loc_legend37[201],
		loc_legend38[201],
					/*----22/09/2005----*/
		loc_legend39[201],
		loc_legend40[201],
		loc_legend41[201],
		loc_legend42[201],
		loc_legend43[201],
		loc_legend44[201],
		loc_legend45[201],
		loc_legend46[201],
		loc_legend47[201],
		loc_legend48[201],
		loc_legend49[201],
		loc_legend50[201],
		loc_legend51[201],
		loc_legend52[201],
		loc_legend53[201],
		loc_legend54[201],
		loc_legend55[201],
		loc_legend56[201],
		loc_legend57[201],
		loc_legend58[201],
		loc_legend59[201],
		loc_legend60[201],
		loc_legend61[201],
		loc_legend62[201],
		loc_legend63[201];		
		
	   /*------Up To here------*/	

					
char nd_reprint_yn, discount_print_yn, sett_print_yn, l_include_refund;
char print_y, rec_out, grp_out, sec_box_out;
		
char    filename[300];
char	l_mesg[300];
char    d_summary_yn,nd_episode_type, nd_lang_ind, nd_online_print_yn,l_print_option;

long    d_age, max_lines = 11;

int l_lno = 0;

int     l_bill_print_opt_for_disc_print,cnt=0;
int	l_page_no = 0,l_dmp = 0, l_lsr = 0,l_margin_len= 30,l_bill_page_no = 0,
        l_main_hdr = 1;

int r_ctr = 0;
		
double     d_serv_disc_amt = 0,
		   d_man_disc_amt = 0,
		   d_overall_disc_amt = 0,
		   d_prepay_adj_amt = 0,
		   d_deposit_adj_amt = 0,
		   d_bill_paid_amt = 0,
		   l_rounding_amt = 0,
		   tot_amt = 0,
		   d_gross_amt = 0,
		   d_tot_bus_man_disc_amt = 0,
		   d_deposit_amt = 0,
		   d_tot_paid_amt = 0,
		   d1_gross_amt = 0,
		   grp_gross_amt = 0,
		   l_disc_grp_gross_amt,
		   l_disc_grp_disc_amt,
		   less_disc = 0,
		   vst_amt = 0,
		   p_vst_ded = 0,
		   d2_bill_tot_amt = 0,
	           vd_sub_total_amt=0,
		   net_total = 0,
		   d_deposit_doc_num = 0,
		   dcp_outst_amt = 0,
		   out_adj_amt = 0,
		   balance_due = 0,
		   bill_outst_amt = 0,
		   d4_doc_amt = 0,
		   d3_doc_amt = 0,
		   d1_net_amt = 0,
		   bill_paid_amt = 0,
		   d_service_amt = 0,
		   d_service_net = 0,
		   d_service_disc = 0,
		   nd_tot_spl_agency_amt = 0,
		   nd_spl_agency_amt = 0,
		   d_service_amt_tot = 0,
		   deposit_tot		 = 0,
		   bi_tot			 = 0,
		   amt_payable		 = 0,
		   l_bill_line_pr_gp_disc_amt = 0,
		   l_bill_rounding_amt = 0,
		   l_bill_tot_adjust_amt = 0,
		   l_bill_tot_exempt_amt = 0,
		   l_bill_tot_write_off_amt = 0,
		   less_billed_amt;

char	l_bill_tot_adjust_amt_str[100];
char	l_bill_tot_exempt_amt_str[100];
char	l_bill_tot_write_off_amt_str[100];
char	l_less_amt_str[1000],l_less_ins_amt_str[1000],l_less_ins_amt_dtl[1000]; 		   

int				hl		 = 196,
				vl		 = 179,
				tlc		 = 218,
				trc		 = 191,
				blc		 = 192,
				brc		 = 217,
				vlti	 = 195,
				vrti	 = 180,
				htti	 = 194,
				hbti	 = 193,
				plus	 = 197;

long 	ccount  = 0,
		glcheck = 1,
		gcount  = 0,
		rcheck	= 0,
		last_line_check = 0,
     	d_service_qty,
		d_base_rate,
		d_base_qty;






int mcount = 0, nd_decimal = 0,l_tit_len=0;

//char WORKING_DIR [300];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

char string_var[200], font_wide_on[200], font_wide_off[200], buf[200];

int v_lno = 0,  v_pno = 0;  

FILE *fp, *fp1;
CHAR nd_str[1000];
/* Main Part */

void proc_main(argc,argv)
char *argv[];
int argc;
{
	if (argc < 6)
	{    
		disp_message (ERR_MESG,"Usage : blrvsbl1 username/pwd@connect_string session_id pgm_date facility_id calling_pgm_id [filename]\n");
		proc_exit();
	}

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   nd_session_id.len = 0;
   nd_session_id.arr[nd_session_id.len] = '\0';

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);
   nd_session_id.arr[nd_session_id.len] = '\0'; 

   nd_pgm_date.len = 0;
   nd_pgm_date.arr[nd_pgm_date.len] = '\0';
   
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);
   nd_pgm_date.arr[nd_pgm_date.len] = '\0';

   strcpy(nd_facility_id.arr,argv[4]);
   nd_facility_id.len = strlen(nd_facility_id.arr);
   nd_facility_id.arr[nd_facility_id.len] = '\0';

   strcpy(nd_calling_pgm_id.arr,argv[5]);		
	nd_calling_pgm_id.len = strlen(nd_calling_pgm_id.arr);	
	nd_calling_pgm_id.arr[nd_calling_pgm_id.len] = '\0';

   if (argc > 6) 
   	   strcpy(nd_file_name.arr,argv[6]);
	else 
		strcpy(nd_file_name.arr,"blrvsbil.lis");

	   nd_file_name.len = strlen(nd_file_name.arr);
	   nd_file_name.arr[nd_file_name.len] = '\0';

   nd_fm_doc_type.arr[0]    = '\0';
   nd_fm_doc_num.arr[0]     = '\0';
   nd_fm_doc_date.arr[0]    = '\0';
   nd_to_doc_type.arr[0]    = '\0';
   nd_to_doc_num.arr[0]     = '\0';
   nd_to_doc_date.arr[0]    = '\0';
   trx_type.arr[0]			= '\0';

   nd_fm_doc_type.len       = 0;
   nd_fm_doc_num.len        = 0;
   nd_fm_doc_date.len       = 0;
   nd_to_doc_type.len       = 0;
   nd_to_doc_num.len        = 0;
   nd_to_doc_date.len       = 0;

   trx_type.len				= 0;


   EXEC SQL CONNECT :uid_pwd;
	
  if(OERROR)
   {
      disp_message (ORA_MESG,"Error in connecting to Oracle\n");
      if (uid_pwd.len == 0)
         disp_message (ERR_MESG,"Null oracle uid/pwd\n\n\n");
         proc_exit();
   }

   set_meduser_role();

   fetch_sy_prog_param();
   
	//prepare_file();
	
	get_print_routing();

	l_logo_yniflaser.arr[0] = 'N';

	//get_logo_dtl();	

	get_left_margin();

	prepare_file();


   nd_hosp_name.arr[0] = '\0';
   nd_hosp_name.len = 0;            

   nd_acc_entity_code.arr[0] = '\0';
   nd_acc_entity_code.len = 0;

   nd_add_ln1.arr[0] = '\0';
   nd_add_ln1.len = 0;
   
   nd_add_ln2.arr[0] = '\0';
   nd_add_ln2.len = 0;

   nd_add_ln3.arr[0] = '\0';
   nd_add_ln3.len = 0;

   nd_tel_fax.arr[0] = '\0';
   nd_tel_fax.len = 0;


   if (l_lsr != 0 && l_dmp == 0)
   {	
	if ( l_logo_yniflaser.arr[0] == 'Y')	
	{
		max_lines = 58;  //25
	}
	else
	{
		max_lines = 56;  //25
	}

	l_print_option = 'L';
   }
  else
   {
	max_lines = 11;
	l_print_option = 'D';

   }  


   EXEC SQL select acc_entity_code,
            lpad(' ',round((:l_margin_len-length(rtrim(substr(UPPER(ACC_ENTITY_NAME),1,50))))/2),' ')||UPPER(rtrim(substr(UPPER(ACC_ENTITY_NAME),1,50))),
	     LN1_ADD,LN2_ADD,LN3_ADD,
	    'TEL:'||TEL_NUM ||'  FAX:'||FAX_NUM        
            into :nd_acc_entity_code ,
	    :nd_hosp_name,
	    :nd_add_ln1,:nd_add_ln2,:nd_add_ln3,
	    :nd_tel_fax
	    from sy_acc_entity 
	    where acc_entity_id = :nd_facility_id;

	if (OERROR)
	{ 
	    disp_message (ERR_MESG,"Select failed in SY_ACC_ENTITY");
	    proc_exit();
	}


	nd_acc_entity_code.arr[nd_acc_entity_code.len] = '\0';
	nd_hosp_name.arr[nd_hosp_name.len] = '\0';

	nd_add_ln1.arr[nd_add_ln1.len] = '\0';
	nd_add_ln2.arr[nd_add_ln2.len] = '\0';
	nd_add_ln3.arr[nd_add_ln3.len] = '\0';

	nd_tel_fax.arr[nd_tel_fax.len] = '\0';

	nd_add_ln.arr[0] = '\0';
	nd_add_ln.len = 0;
	
	if (nd_add_ln1.arr[0] != '\0')
	{
		strcpy(nd_add_ln.arr,nd_add_ln1.arr);
		nd_add_ln.len = strlen(nd_add_ln.arr);
	}

	if (nd_add_ln1.arr[0] == '\0' && nd_add_ln2.arr[0] != '\0')
	{
		strcpy(nd_add_ln.arr,nd_add_ln2.arr);
		nd_add_ln.len = strlen(nd_add_ln.arr);
	}
	else if (nd_add_ln1.arr[0] != '\0' && nd_add_ln2.arr[0] != '\0')
	{
		strcat(nd_add_ln.arr,", ");
		nd_add_ln.len = strlen(nd_add_ln.arr);

		strcat(nd_add_ln.arr,nd_add_ln2.arr);
		nd_add_ln.len = strlen(nd_add_ln.arr);
	}

	if (nd_add_ln1.arr[0] == '\0' && nd_add_ln2.arr[0] == '\0' && nd_add_ln3.arr[0] != '\0')
	{
		strcpy(nd_add_ln.arr,nd_add_ln2.arr);
		nd_add_ln.len = strlen(nd_add_ln.arr);
	}
	else if ((nd_add_ln1.arr[0] != '\0' || nd_add_ln2.arr[0] != '\0') && 
				nd_add_ln3.arr[0] != '\0')
	{
		strcat(nd_add_ln.arr,", ");
		nd_add_ln.len = strlen(nd_add_ln.arr);

		strcat(nd_add_ln.arr,nd_add_ln3.arr);
		nd_add_ln.len = strlen(nd_add_ln.arr);
	}

	if (l_lsr != 0 && l_dmp == 0)
	{
	    if ( l_logo_yniflaser.arr[0] == 'Y')	
	        l_tit_len = 0;
	    else
		l_tit_len = 32;
	}

 
	nd_add.arr[0] = '\0';
	nd_add.len = 0;

	EXEC SQL SELECT lpad(' ',round((:l_margin_len+:l_tit_len-length(rtrim(:nd_add_ln)))/2),' ')||UPPER(rtrim(:nd_add_ln))
	into :nd_add from dual;

	nd_add.arr[nd_add.len] = '\0';


	nd_telfax.arr[0] = '\0';
	nd_telfax.len = 0;
	

	EXEC SQL SELECT lpad(' ',round((:l_margin_len+:l_tit_len-length(rtrim(:nd_tel_fax)))/2),' ')||UPPER(rtrim(:nd_tel_fax))
	into :nd_telfax from dual;

	nd_telfax.arr[nd_telfax.len] = '\0';
	
   

	declare_master_cur();

	open_master_cur();

	nd_tot_spl_agency_amt = 0;

	get_print_net_gross();

	

	while(fetch_master_cur())
	{
		v_pno = 1;

		l_bill_page_no = 0;

		if (l_lsr != 0 && l_dmp == 0)
		{
			
			l_main_hdr = 1;
			
			if ( l_logo_yniflaser.arr[0] != 'Y')
			  {
				if (l_page_no > 0)
				{
					l_page_no = 0;
					fprintf(fp,"\n");
					fprintf(fp,"");
					fprintf(fp,"\n");
				}
			  }
		}
		else
		{
			if(l_page_no > 1)
			{
				l_page_no = 0;
				fprintf(fp,"\n");
				fprintf(fp,"");
				fprintf(fp,"\n");
			}
		}

		nd_lang_id.arr[0] = '\0';
		nd_lang_id.len = 0;

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_language_ind_id(
				:nd_facility_id,
				:dc_patient_id,
				:nd_lang_ind,
				:nd_lang_id);
		END;
		END-EXEC;
 
		nd_lang_id.arr[strlen(nd_lang_id.arr)] = '\0';

		fetch_legend_value();

		declare_grp_hdr_cur();

		declare_cust_cur();

		declare_refund_cur();

		declare_prepay_cur();

		rec_out = 'N';
		grp_out = 'N';
		sec_box_out = 'N';		

		if (l_lsr != 0 && l_dmp == 0)
		{
		     get_bill_address_lsr();

		     if ( l_logo_yniflaser.arr[0] != 'Y')
		     {
		      fprintf(fp,"%c&a2L",ESC); 	/* To Set the Left margin */
		      fprintf(fp,"%c(s12H",ESC); 	/* To set the font size	  */
		      fprintf(fp,"%c(s3B",ESC); 	/* To set Bold style 	  */	      
		      }
		}
		else
		{
			get_bill_address();

			fprintf(fp,"%cg",ESC); 	/* To Set compressed mode */
		}

		print_report_head();

		open_grp_hdr_cur();

		grp_gross_amt = 0;
		l_disc_grp_gross_amt = 0;
		l_disc_grp_disc_amt = 0;

		EXEC SQL SELECT count(*) 
		         INTO :gcount	
			 FROM BL_BILL_LINE A,
			      BL_BLNG_PRT_GRP_HDR C,
			      BL_BLNG_PRT_GRP_LINE D
			 WHERE A.DOC_TYPE_CODE 
			 BETWEEN :nd_fm_doc_type 
			 AND :nd_to_doc_type 	
			 AND A.DOC_NUM 
			 BETWEEN TO_NUMBER(:nd_fm_doc_num) 
			 AND TO_NUMBER(:nd_to_doc_num)
			 AND C.PRT_GRP_HDR_CODE = D.PRT_GRP_HDR_CODE
			 AND A.PRT_GRP_HDR_CODE  = D.PRT_GRP_HDR_CODE (+)
			 AND A.PRT_GRP_LINE_CODE = D.PRT_GRP_LINE_CODE (+)
			 AND	NVL(A.MPI_ID,A.DOC_TYPE_CODE || A.DOC_NUM) = :dc_mpi_id
			 AND	A.OPERATING_FACILITY_ID = :nd_facility_id;

		ccount = 0;

		while(fetch_grp_hdr_cur())
		{ 	
			ccount = ccount + 1;				
			print_prt_grp_hdr();
		}

		if (l_lsr != 0 && l_dmp == 0 )
		{
			l_main_hdr = 0;
			fprintf(fp,"\n");
			v_lno = v_lno+1;	
			if (v_lno > max_lines) print_next_page1();
		}
		else
		{
			while(v_lno <= max_lines)
			{
				fprintf(fp,"\n");
				v_lno++;
			}
		}

		if (l_lsr != 0 && l_dmp == 0 )
		{
			fprintf(fp,"%-50.50s ",loc_legend13.arr," ");
		}
		else
		{
			fprintf(fp,"%20.20s %30s",loc_legend13.arr," ");
		}

		//Included by Harish against Point # 18 Customization document
		if(l_bill_print_opt_for_disc_print==3)
		{
			print_formated_amt_total(grp_gross_amt);
		}
		else
		{
			print_formated_amt_total(l_disc_grp_gross_amt);
		}
		fprintf(fp,"\n");

		if (l_lsr != 0 && l_dmp == 0 )
		{	
			l_main_hdr = 0;
			v_lno = v_lno+1;	
			if (v_lno > max_lines) print_next_page1();
		}
		
		amt_payable = grp_gross_amt - d_man_disc_amt - d_overall_disc_amt;

		if(l_bill_print_opt_for_disc_print==2)
		{
			fprintf(fp,"%20.20s %30s",loc_legend20.arr," ");
			print_formated_amt_total(l_disc_grp_disc_amt);
			fprintf(fp,"\n");
			if (l_lsr != 0 && l_dmp == 0 )
			{		
				l_main_hdr = 0;
				v_lno = v_lno+1;	
				if (v_lno > max_lines) print_next_page1();
			}
		}		

		open_cust_cur();
		print_ins_bill();
		print_ins_ded();

		get_ins_amt();  // to get l_less_ins_amt_str

		if (less_billed_amt != 0 && l_print_option == 'L')
		{
			fprintf(fp,"%20.20s %-30.30s",loc_legend34.arr,l_less_ins_amt_str);
			print_formated_amt_total(-less_billed_amt);
			fprintf(fp,"\n");
			if (l_lsr != 0 && l_dmp == 0 )
			{		
				l_main_hdr = 0;
				v_lno = v_lno+1;	
				if (v_lno > max_lines) print_next_page1();
			}
			else
			{
				v_lno++;
			}
			if (p_vst_ded != 0)
			{
				fprintf(fp,"%20.20s %30.30s",loc_legend35.arr,"");
				print_formated_amt_total(p_vst_ded);
				fprintf(fp,"\n");
				if (l_lsr != 0 && l_dmp == 0 )
				{		
					l_main_hdr = 0;
					v_lno = v_lno+1;	
					if (v_lno > max_lines) print_next_page1();
				}
				else
				{
					v_lno++;
				}
			}
		}
		if (l_lsr != 0 && l_dmp == 0)
		{	
			if ( less_billed_amt != 0 && l_print_option == 'D')
			{
				fprintf(fp,"%-20.20s(%-30.30s",loc_legend14.arr,l_less_ins_amt_str);
			}
			else
			{
				fprintf(fp,"%-50.50s ",loc_legend14.arr,"");
			}
		}
		else
		{
			if ( less_billed_amt != 0 && l_print_option == 'D')
				fprintf(fp,"%20.20s(%30.30s",loc_legend14.arr,l_less_ins_amt_str);
			else
				fprintf(fp,"%20.20s %30.30s",loc_legend14.arr,"");
		}

		print_formated_amt_total(amt_payable);

		prt_ins_ded_amt();
		fprintf(fp,"\n");	

		if (l_lsr != 0 && l_dmp == 0 )
		{		
			l_main_hdr = 0;
			v_lno = v_lno+1;	
			if (v_lno > max_lines) print_next_page1();
		}
		
		l_bill_rounding_amt =0;
		l_bill_tot_adjust_amt = 0;
		l_bill_tot_exempt_amt = 0;
		l_bill_tot_write_off_amt = 0;

		EXEC SQL SELECT nvl(bill_rounding_amt,0),
				nvl(bill_tot_adjust_amt,0),            
				nvl(bill_tot_exempt_amt,0),            
				nvl(bill_tot_write_off_amt,0)         
		         INTO	l_bill_rounding_amt,
				l_bill_tot_adjust_amt,
				l_bill_tot_exempt_amt,
				l_bill_tot_write_off_amt
			 FROM bl_bill_hdr
			 WHERE doc_type_code = :nd_fm_doc_type 
			 AND doc_num = :nd_fm_doc_num;

		if (OERROR)
		{ 
			disp_message (ERR_MESG,"SELECT failed on BL_BILL_HDR");
			proc_exit();
		}

		if(l_bill_rounding_amt!=0)
		{
			fprintf(fp,"%20.20s %30s",loc_legend22.arr," ");
			print_formated_amt_total(l_bill_rounding_amt);
			fprintf(fp,"\n");
			if (l_lsr != 0 && l_dmp == 0 )
			{		
				l_main_hdr = 0;
				v_lno = v_lno+1;	
				if (v_lno > max_lines) print_next_page1();
			}
		}
				
		grp_out = 'Y';


		//open_cust_cur();

		//print_ins_bill();

		print_less_total();

		print_less_disc();

		//print_ins_ded();

		if (sett_print_yn == 'N')
		{

			/*if (d_deposit_adj_amt > 0)
			{	
				open_refund_cur();

				while(fetch_refund_cur())
 				{	
					deposit_tot = deposit_tot + d_deposit_adj_amt;
				}
				close_refund_cur();
			}
		
			if (d_prepay_adj_amt > 0)
			{	    
				open_prepay_cur();

				while(fetch_prepay_cur())
 				{	
					deposit_tot = deposit_tot + d_prepay_adj_amt;
				}
					
				close_prepay_cur();
			}*/
			
			deposit_tot = deposit_tot + d_deposit_adj_amt;
			deposit_tot = deposit_tot + d_prepay_adj_amt;
		}

		if(strcmp(l_no_settlement_details.arr,"Y")==0)
		{
			deposit_tot = deposit_tot + nd_tot_spl_agency_amt;
		}
		else
		{
			EXEC SQL SELECT SUM(NVL(DOC_AMT,0)) 
					   INTO :bi_tot 
					   FROM BL_RECEIPT_REFUND_HDRDTL_VW
					  WHERE BILL_DOC_TYPE_CODE = :dc_doc_type_code
						AND BILL_DOC_NUMBER = :d_doc_num
						AND RECPT_NATURE_CODE = 'BI';

			deposit_tot = deposit_tot + bi_tot + nd_tot_spl_agency_amt;
		}

		sec_box_out = 'Y';

		get_ins_dtl();

		if (l_lsr != 0 && l_dmp == 0)
		{
			if ( less_billed_amt != 0 && l_print_option == 'D')
			{
				fprintf(fp,"%-20.20s%-30.30s)",loc_legend15.arr,l_less_ins_amt_dtl);
			}
			else
			{
				fprintf(fp,"%-50.50s ",loc_legend15.arr,"");
			}
		}
		else
		{
			if ( less_billed_amt != 0  && l_print_option == 'D')
				fprintf(fp,"%20.20s%30.30s)",loc_legend15.arr,l_less_ins_amt_dtl);
			else
				fprintf(fp,"%20.20s %30.30s",loc_legend15.arr,"");
		}

		print_formated_amt_total(-deposit_tot);
		fprintf(fp,"\n");

		if (l_lsr != 0 && l_dmp == 0 )
		{		
			l_main_hdr = 0;
			v_lno = v_lno+1;	
			if (v_lno > max_lines) print_next_page1();
		}

		//	Exemption / Adjustment Printing

		if (l_bill_tot_adjust_amt != 0||l_bill_tot_exempt_amt != 0||l_bill_tot_write_off_amt != 0) 
		{
			print_formated_amt_varstr(l_bill_tot_adjust_amt_str,l_bill_tot_adjust_amt);
			print_formated_amt_varstr(l_bill_tot_exempt_amt_str,l_bill_tot_exempt_amt);
			print_formated_amt_varstr(l_bill_tot_write_off_amt_str,l_bill_tot_write_off_amt);

			sprintf(l_less_amt_str,"%4.4s(",loc_legend25.arr); 

			if (l_bill_tot_adjust_amt != 0 )					
			{
				sprintf(l_less_amt_str,"%s%3.3s:%s",  l_less_amt_str,
								loc_legend26.arr,
								l_bill_tot_adjust_amt_str); 
				if (l_bill_tot_exempt_amt != 0||l_bill_tot_write_off_amt != 0)		
				sprintf(l_less_amt_str,"%s ",l_less_amt_str); 
			}
		
			if (l_bill_tot_exempt_amt != 0)		
			{		
				sprintf(l_less_amt_str,"%s%3.3s:%s", l_less_amt_str,
								      loc_legend27.arr,
								      l_bill_tot_exempt_amt_str);
				if (l_bill_tot_write_off_amt != 0)		
				sprintf(l_less_amt_str,"%s ",l_less_amt_str); 
				
			}

			if (l_bill_tot_write_off_amt != 0 )				
					sprintf(l_less_amt_str,"%s%2.2s:%s",l_less_amt_str, 
								     loc_legend28.arr,
								     l_bill_tot_write_off_amt_str); 

			sprintf(l_less_amt_str,"%s) ",l_less_amt_str); 

	
		
			fprintf(fp,"                %-35.35s",l_less_amt_str);
			print_formated_amt_total(l_bill_tot_adjust_amt + l_bill_tot_exempt_amt + l_bill_tot_write_off_amt);
			fprintf(fp,"\n");		
			if (l_lsr != 0 && l_dmp == 0 )
			{		
				l_main_hdr = 0;
				v_lno = v_lno+1;	
				if (v_lno > max_lines) print_next_page1();
			}
		
		}
	
		if (l_lsr != 0 && l_dmp == 0)
		{
			fprintf(fp,"%-50.50s ",loc_legend16.arr," ");
		}
		else
		{
			fprintf(fp,"%20.20s %30s",loc_legend16.arr," ");
		}

		print_formated_amt_total(amt_payable - deposit_tot + l_bill_rounding_amt
			- l_bill_tot_adjust_amt - l_bill_tot_exempt_amt - l_bill_tot_write_off_amt);

		fprintf(fp,"\n");

		if (l_lsr != 0 && l_dmp == 0 )
		{		
			l_main_hdr = 0;
			v_lno = v_lno+1;	
			if (v_lno > max_lines) print_next_page1();
		}

		print_net_total();

		print_balance_due1();


		EXEC SQL UPDATE BL_BILL_HDR
		  		    SET BILL_PRINT_FLAG = 'Y'
			      WHERE DOC_TYPE_CODE = :dc_doc_type_code 
				    AND	DOC_NUM  =  :d_doc_num;
	
	}

	close_cust_cur();
	close_grp_hdr_cur();
	close_master_cur();
	//fprintf(fp,"%c@",ESC);	/* To Reset the Printer */

	if ( l_logo_yniflaser.arr[0] != 'Y')
	{
		fprintf(fp,"");   /* Page break  */
	}

	if (l_lsr != 0 && l_dmp == 0)
	{
	     if ( l_logo_yniflaser.arr[0] != 'Y')
	     {
		fprintf(fp,"%cE",ESC);  /* To Reset Printer */			
	     }
	}

	fflush(fp);
	fclose(fp);  

	if (strcmp(nd_calling_pgm_id.arr,"BLTBILVT") == 0 )
	{	
		strcpy(nd_calling_pgm_id.arr,"BLRBILVT");
		nd_calling_pgm_id.arr[nd_calling_pgm_id.len] = '\0';
	}
 
    /*sprintf(nd_str,"[%s] [%s] [%s] [%s] [%s] ", uid_pwd.arr,nd_session_id.arr,
						d_cashfacility_id.arr, nd_calling_pgm_id.arr,
					filename);
    disp_message(ERR_MESG,nd_str);*/

	if (nd_online_print_yn == 'Y')
	{
		if (l_logo_yniflaser.arr[0] != 'Y')
		{
				PrintDocument(  uid_pwd.arr,		//char	*PUidPwd;
						nd_session_id.arr,	//char	*PSessionID;
						d_cashfacility_id.arr,	//char	*PFacilityID;
						"BL",				//char	*PModuleID;
						nd_calling_pgm_id.arr,			//char	*PDocumentID;
						filename,			//char	*POnlinePrintFileNames;
						"O",				//char	*PLocationTypes;
						" ",				//char	*PLocationCodes;
						1,					//int		PNumOfCopies;
						1,					//int		PPageFrom;
						9999);					//int		PPageTo;);
		}
	}
	else
	{
		if (l_lsr != 0 && l_dmp == 0 && l_logo_yniflaser.arr[0] == 'Y')
		{		

		l_errortext.arr[0] = '\0';
		l_errortext.len = 0;			

		EXEC SQL EXECUTE
		DECLARE
			l_print_status BOOLEAN;
		BEGIN		
	
			 
			APPPRINT.SUBMIT_ORACLE_REPORT
				 (:nd_ws_no,
				  :d_cashfacility_id,
				  'BL',
				  :nd_logo_pgm_id,
				  'P', --p_report_option
				  '',  --p_outputfile_format
				  '',  --p_outputfile_name
				  'O',
				  ' ', --p_location_code
				  NULL, --:l_printer_names,
				  NULL,
				  NULL, --p_page_from
				  NULL, --p_page_to
				  NULL, --p_print_mode
				  'P_FILE_NAME='||:nd_file_name||'+'||'P_LOGO_NAME='||:l_logo_name, --p_param_list
				  l_print_status, --OUT BOOLEAN,
				  :l_errortext);			  
		
		END;
		END-EXEC;

		if (l_errortext.arr[0] != '\0')
		{
			disp_message(ERR_MESG,l_errortext.arr);			
			proc_exit(0);
			
		}
	

	     }
	}


	if (nd_online_print_yn == 'N')
	{
		EXEC SQL DELETE 
		           FROM BL_BILL_PRINT_TEMP
				  WHERE SESSION_ID = :nd_session_id;
	}

	
	EXEC SQL DELETE FROM SY_PROG_PARAM
			  WHERE PGM_ID     = 'BLRVSBIL'
				AND SESSION_ID = :nd_session_id
				AND PGM_DATE   = :nd_pgm_date;
	
	//KGA COMMENT 
	/*
	sprintf(l_mesg,"Doc Type Code   :   %s   Doc Num Fm  :   %s   To  :  %s   Doc Date  Fm  :  %s  To  :  %s",nd_fm_doc_type.arr,nd_fm_doc_num.arr,nd_to_doc_num.arr,nd_fm_doc_date.arr,nd_to_doc_date.arr);
	disp_message(ERR_MESG,l_mesg);
	*/

	EXEC SQL UPDATE BL_BILL_HDR
				SET BILL_PRINT_FLAG = 'Y'
			  WHERE DOC_TYPE_CODE = :nd_fm_doc_type 
				AND	DOC_NUM  BETWEEN  NVL(:nd_fm_doc_num,0) AND 			NVL(:nd_to_doc_num,99999999) 
				AND	TRUNC(DOC_DATE) BETWEEN 			TO_DATE(NVL(:nd_fm_doc_date,'01/01/1800'),'DD/MM/YYYY')
				AND TO_DATE(NVL(:nd_to_doc_date,'31/12/4712'),'DD/MM/YYYY')
				AND	NVL(BILL_TRX_TYPE_CODE,'X') = :trx_type
				AND	NVL(BILL_STATUS,'Z') != 'C'; 

	EXEC SQL COMMIT WORK;

	return 1;
}

get_logo_dtl()
{
	
	  l_logo_yniflaser.arr[0] = 'N';

	  l_errorlevel.arr[0] = '\0';
	  l_errorlevel.len = 0;

	  l_sysmessageid.arr[0] = '\0';
	  l_sysmessageid.len = 0;

	  l_errortext.arr[0] = '\0';
	  l_errortext.len = 0;
			

	   if (l_lsr != 0 && l_dmp == 0)
	   {
		EXEC SQL EXECUTE	
		BEGIN					
			
			BLOPIN.GET_PRINT_SETUP_COL_VALUE(
				:nd_facility_id,
				'BLRVSBL1',
				'PRINT_LOGO_YN_IF_LASER',
				:l_logo_yniflaser,
				:l_errorlevel,
				:l_sysmessageid,
				:l_errortext) ;
				
			:l_logo_yniflaser := nvl(:l_logo_yniflaser,'N');

			if :l_sysmessageid is not null then
				:l_errorlevel := '10';
				:l_errortext := blcommon.get_error_text(:l_sysmessageid);
			end if;

		END;
		END-EXEC;

		if (strcmp(l_errorlevel.arr,"10") == 0 && l_errortext.arr[0] != '\0')
		{
			disp_message(ERR_MESG,l_errortext.arr);
			proc_exit(0);
		}

		l_errorlevel.arr[0] = '\0';
		l_errorlevel.len = 0;

		l_sysmessageid.arr[0] = '\0';
		l_sysmessageid.len = 0;

		l_errortext.arr[0] = '\0';
		l_errortext.len = 0;
	
		
		if (l_logo_yniflaser.arr[0] == 'Y')
		{
			EXEC SQL EXECUTE	
			BEGIN				
				BLOPIN.GET_PRINT_SETUP_COL_VALUE(
					:nd_facility_id,
					'BLRBILLO',
					'LOGO_NAME',
					:l_logo_name,
					:l_errorlevel,
					:l_sysmessageid,
					:l_errortext) ;
				

				if :l_sysmessageid is not null then
					:l_errorlevel := '10';
					:l_errortext := blcommon.get_error_text(:l_sysmessageid);
				end if;

			END;
			END-EXEC;
			if (strcmp(l_errorlevel.arr,"10") == 0 && l_errortext.arr[0] != '\0')
			{
				disp_message(ERR_MESG,l_errortext.arr);
				proc_exit(0);
			}

			LOGO_DIR.arr[0] = '\0';
			LOGO_DIR.len = 0;

		       l_errorlevel.arr[0] = '\0';
		       l_errorlevel.len = 0;

		       l_sysmessageid.arr[0] = '\0';
		       l_sysmessageid.len = 0;

		       l_errortext.arr[0] = '\0';
		       l_errortext.len = 0;	

			if (nd_online_print_yn == 'N')
			{			
				EXEC SQL EXECUTE	
				BEGIN				
					WORKSTATION.GET_WS_PARAM(
						:nd_ws_no,				
						'BLLOGODIR',
						:LOGO_DIR,
						:l_errortext);			
					if :l_errortext is not null then 
						:l_errortext	:= 'BLLOGODIR:'||:l_errortext;
					end if;

				END;
				END-EXEC;
				if (l_errortext.arr[0] != '\0')
				{
					disp_message(ERR_MESG,l_errortext.arr);
					proc_exit(0);
				}		
			}
		}
	    }
   }

get_print_routing()
{
	EXEC SQL EXECUTE
	DECLARE
		l_sys_mesg_id VARCHAR2(10);
		l_err_level VARCHAR2(10);
		l_err_text VARCHAR2(1000);
		l_document_value blcommon.rectype_Tab;
		l_format_type VARCHAR2(200);
		l_report_tool_ind VARCHAR2(1);
	BEGIN
	
		blcommon.get_doc_print_format_Tab(
     			:nd_facility_id,
			:nd_calling_pgm_id,
			l_document_value,
			l_sys_mesg_id,
			l_err_level,
			l_err_text);						

		FOR i IN l_document_value.FIRST..l_document_value.LAST LOOP
			if  l_document_value(i).id = 'FORMAT_TYPE' then
				l_format_type := l_document_value(i).value;
			end if;				
			
			if l_document_value(i).id = 'REPORT_TOOL_IND' then 
				l_report_tool_ind := l_document_value(i).value;
			end if;		 	

			if l_document_value(i).id = 'INCL_PRV_RFND_AMT_IN_TOT_OUTST' then 
				:l_include_refund := NVL(l_document_value(i).value,'N');
			end if;		 			
		END LOOP;		

		if l_format_type = 'DMP_PREPRINTED' then
			:l_dmp := 1;
			:l_lsr := 0;
		elsif l_format_type in('LASER_WITH_LOGO','LASER_WITHOUT_LOGO') then
			:l_dmp := 0;
			:l_lsr := 1;
		else
			:l_dmp := 0;
			:l_lsr := 0;
		end if;
		
		if :l_dmp = 0 and :l_lsr = 0 then

			APPPRINT.GET_ROUTING_PRINTERS(
			 :nd_ws_no,
			 :d_cashfacility_id,
			 'BL',
			 :nd_calling_pgm_id,
			 'O',
			 ' ',
			 :l_printer_ids,
			 :l_printer_names,
			 :l_printer_types, 
			 :l_queue_names,
			 :l_no_of_copies,
			 :l_errortext);

			 :l_dmp := NVL(instr(:l_printer_types,'D'),0);
			 :l_lsr := NVL(instr(:l_printer_types,'S'),0);			 

			 if :l_dmp != 0 and :l_lsr != 0 then 
			    :l_dmp := 0;
			    --if there is a laser setup, then output format will be laser
			 end if;	

			 if :l_dmp = 0 and :l_lsr = 0 then 
			    :l_lsr := 1;
			    --Default is Laser Format
			 end if;	 		 
		end if;

END;
END-EXEC;

		if ( l_errortext.arr[0] != '\0')
		{
			l_errortext.arr[0] = '\0';
			l_errortext.len = 0;
		}


}

get_ins_dtl()
{
	char l_str1[1000];	

	strcpy(l_str1,print_formated(-less_billed_amt));

	if (less_billed_amt != 0)
	{
		if (dc_ind.arr[0] == 'I')
			sprintf(l_less_ins_amt_dtl,"%s/%s:%s",d2_doc_type_code.arr,d2_doc_num.arr,l_str1);
		else
			sprintf(l_less_ins_amt_dtl,"%s/%s:%s",d2_doc_type_code.arr,d2_doc_num.arr,l_str1);
	}
}

prt_ins_ded_amt()
{
	char l_str1[1000];
	
	if (p_vst_ded != 0 &&  l_print_option == 'D')
	{
	    strcpy(l_str1,print_formated(p_vst_ded));	    
	    fprintf(fp,"(%s:%s)",loc_legend35.arr,l_str1);
	}
	

}

get_ins_amt()
{
	char l_str1[1000];

	amt_payable = amt_payable - less_billed_amt;

	amt_payable = amt_payable + p_vst_ded;

	strcpy(l_str1,print_formated(-less_billed_amt));
	
	if (less_billed_amt != 0 && l_print_option == 'D')
	{
	   if (dc_ind.arr[0] == 'I' )
		sprintf(l_less_ins_amt_str,"%-s %-s",loc_legend34.arr,loc_legend36.arr);
	   else
		sprintf(l_less_ins_amt_str,"%-s %-s",loc_legend34.arr,d2_short_name.arr);
	}
	else
	{
	   if (dc_ind.arr[0] == 'I' )
		sprintf(l_less_ins_amt_str,"%-s (%-s/%-s)",loc_legend36.arr,d2_doc_type_code.arr,d2_doc_num.arr);
	   else
		sprintf(l_less_ins_amt_str,"%-s (%-s/%-s)",d2_short_name.arr,d2_doc_type_code.arr,d2_doc_num.arr);
	}
}

/* Procedure Part */

fetch_sy_prog_param()
{
	l_detail_report_flag.arr[0] = '\0';
   l_print_without_disc_func.arr[0] = '\0';
   l_no_settlement_details.arr[0] = '\0';   
   nd_ws_no.arr[0] = '\0';
   nd_ws_no.len = 0;
   nd_logo_pgm_id.arr[0]	= '\0';

   nd_logo_pgm_id.len	= 0;
   
   
   EXEC SQL SELECT OPERATING_FACILITY_ID,PARAM1,NVL(PARAM2,0),PARAM3,
					NVL(PARAM4,99999999), PARAM5,PARAM6,PARAM7,PARAM8,
					'Y',NVL(PARAM10,'N'),PARAM20,PARAM21,
					NVL(PARAM22,operating_facility_id), NVL(PARAM30,'Y'),
					PARAM14, PARAM15, NVL(PARAM25,'N'),
					PARAM29,
					PARAM28
             INTO  :nd_facility_id,:nd_fm_doc_type,:nd_fm_doc_num,
                   :nd_to_doc_type,:nd_to_doc_num, 
   				   :nd_fm_doc_date,:nd_to_doc_date,
   				   :trx_type,:nd_reprint_yn,:discount_print_yn, 
				   :sett_print_yn,:p_cash_counter,:p_shift,
				   :d_cashfacility_id, :nd_online_print_yn,
				   :l_detail_report_flag, :l_print_without_disc_func,
				   :l_no_settlement_details,
				   :nd_ws_no,
				   :nd_logo_pgm_id
              FROM SY_PROG_PARAM
              WHERE PGM_ID     = 'BLRVSBIL'
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");




   nd_facility_id.arr[nd_facility_id.len]				= '\0';
   nd_fm_doc_type.arr[nd_fm_doc_type.len]				= '\0';
   nd_fm_doc_num.arr[nd_fm_doc_num.len]					= '\0';
   nd_to_doc_type.arr[nd_to_doc_type.len]				= '\0';
   nd_to_doc_num.arr[nd_to_doc_num.len]					= '\0';
   nd_fm_doc_date.arr[nd_fm_doc_date.len]				= '\0';
   nd_to_doc_date.arr[nd_to_doc_date.len]				= '\0';
   d_cashfacility_id.arr[d_cashfacility_id.len]			= '\0';
   p_cash_counter.arr[p_cash_counter.len]				= '\0';
   p_shift.arr[p_shift.len]  							= '\0';
   trx_type.arr[trx_type.len]	  						= '\0';
   l_detail_report_flag.arr[l_detail_report_flag.len]	= '\0';
   l_print_without_disc_func.arr[l_print_without_disc_func.len]	= '\0';
   l_no_settlement_details.arr[l_no_settlement_details.len] = '\0';
   nd_ws_no.arr[nd_ws_no.len] = '\0';
   nd_logo_pgm_id.arr[nd_logo_pgm_id.len]		= '\0';

   	
	strcpy(g_facility_id,nd_facility_id.arr);


}

prepare_file()
{
	if (LOGO_DIR.arr[0] != '\0') 
		strcpy(filename,LOGO_DIR.arr);
	else 
		strcpy(filename,WORKING_DIR);

		
	strcat(filename,nd_file_name.arr);

	strcpy (OUTPUT_FILE_NAME, filename);

	if ((fp = fopen(filename,"w")) == NULL)
		{ 		disp_message (ERR_MESG,"Error Opening Output File");
				proc_exit();
		}

		return;
}

declare_master_cur()
{
	EXEC SQL DECLARE BL_BILL_PRINT_TEMP_CUR CURSOR FOR
	SELECT	DOC_TYPE_CODE,
			DOC_NUM,	
			DOC_TYPE_CODE ||'/'||LTRIM(TO_CHAR(DOC_NUM,'00000009')) No,
			TO_CHAR(DOC_DATE,'DD/MM/YYYY') DOC_DATE,
			SERV_DISC_AMT,
			MAN_DISC_AMT,
			OVERALL_DISC_AMT,
			NVL(PREPAY_ADJ_AMT,0) PREPAY_ADJ_AMT,
			NVL(DEPOSIT_ADJ_AMT,0) DEPOSIT_ADJ_AMT,
			NVL(TOT_PAID_AMT,0) TOT_PAID_AMT,
			EPISODE_ID,
			LTRIM(TO_CHAR(EPISODE_ID,'00000009')) EPI_ID,
			VISIT_ID,
			TO_CHAR(ADMISSION_DATE,'DD/MM/YYYY HH24:MI'),
			PHYSICIAN_ID,
			BLNG_GRP_ID,
			PATIENT_ID,
			BILL_NATURE_CODE,
			CUST_CODE,
			BILL_TYPE_CODE,
			CLINIC_CODE,
			BILL_TRX_TYPE_CODE,
			BILL_PRINT_FLAG,
			NVL(TOT_BUS_MAN_DISC_AMT,0) TOT_BUS_MAN_DISC_AMT,
			NVL(TOT_DEP_PAID_AMT,0),
			CREDIT_DOC_REF_DESC,
			BLNG_GRP_DESC,
			SHORT_NAME,
			SHORT_NAME_LOC_LANG, 
			TO_CHAR(DATE_OF_BIRTH,'DD/MM/YYYY'),
			TRUNC((ABS(MONTHS_BETWEEN(SYSDATE,DATE_OF_BIRTH))/12)),
			DECODE(SEX,'M','MALE','F','FEMALE') SEX,
			FULL_NAME,
			CUST_NAME LONG_NAME,
			BILL_TYPE_DESC LONG_DESC,
 			SHORT_DESC,
			MPI_IND IND,
			NVL(MPI_ID,DOC_TYPE_CODE || DOC_NUM) MPI_ID,
   			TO_CHAR(CREDIT_DOC_REF_DATE,'DD/MM/YYYY'),
			POLICY_TYPE_CODE     ,  
			POLICY_NUMBER          ,
			TO_CHAR(POLICY_EXPIRY_DATE,'DD/MM/YYYY') ,
			CASH_COUNTER_CODE,
			SHIFT_ID,
			CASHIER_BY_ID,
            NVL(SPL_AGENCY_DEP_ADJ_AMT,0)                  	  
	FROM    BL_BILL_PRINT_TEMP
	WHERE	SESSION_ID = :nd_session_id
	ORDER	BY 1,2;

	if (OERROR)
	{ 
		disp_message (ERR_MESG,"Declare Master Cursor failed");
		proc_exit();
	}
	
	return;
}


open_master_cur()
{ 
	EXEC SQL OPEN BL_BILL_PRINT_TEMP_CUR;

if (OERROR) 
	{ disp_message (ERR_MESG,"Open BL_BILL_PRINT_TEMP_CUR cursor failed");
		proc_exit();
    }
return;
}

fetch_master_cur()
{

		dc_doc_type_code.arr[0] = '\0';
		dc_doc_type_code.len = 0;
		d_doc_num.arr[0] = '\0';
		d_doc_num.len = 0;
   		d_no.arr[0] = '\0';
		d_no.len = 0;
	   	d_doc_date.arr[0] = '\0';
		d_doc_date.len = 0;
	    dc_episode_id.arr[0] = '\0';
		dc_episode_id.len = 0;
	    dc_epi_id.arr[0] = '\0';
		dc_epi_id.len = 0;
	    dc_visit_id.arr[0] = '\0';
		dc_visit_id.len = 0;
	    dc_admn_date.arr[0] = '\0';
		dc_admn_date.len = 0;
	    dc_physician_id.arr[0] = '\0';
		dc_physician_id.len = 0;
	    dc_blng_grp_id.arr[0] = '\0';
		dc_blng_grp_id.len = 0;
	    dc_patient_id.arr[0] = '\0';
		dc_patient_id.len = 0;
		d_bill_nature_code.arr[0] = '\0';
		d_bill_nature_code.len = 0;
		d_bill_trx_type_code.arr[0] = '\0';
		d_bill_trx_type_code.len = 0;
	    dc_cust_code.arr[0] = '\0';
		dc_cust_code.len = 0;
	    dc_bill_type_code.arr[0] = '\0';
		dc_bill_type_code.len = 0;
	    dc_clinic_code.arr[0] = '\0';
		dc_clinic_code.len = 0;
	    dc_bill_print_flag.arr[0] = '\0';
		dc_bill_print_flag.len = 0;
		dc_tot_dep_paid_amt.arr[0] = '\0';
		dc_tot_dep_paid_amt.len = 0;
        dc_credit_doc_ref_desc.arr[0] = '\0';
		dc_credit_doc_ref_desc.len = 0;
        dc_blng_grp_desc.arr[0] = '\0';
		dc_blng_grp_desc.len = 0;
		dc_short_name.arr[0] = '\0';
		dc_short_name.len = 0;
	    dc_short_name_loc_lang.arr[0] = '\0';
		dc_short_name_loc_lang.len = 0;
	    dc_date_of_birth.arr[0] = '\0';
		dc_date_of_birth.len = 0;
        dc_sex.arr[0] = '\0';
		dc_sex.len = 0;
        dc_full_name.arr[0] = '\0';
		dc_full_name.len = 0;
        dc_long_name.arr[0] = '\0';
		dc_long_name.len = 0;
	    dc_long_desc.arr[0] = '\0';
		dc_long_desc.len = 0;
 	    dc_short_desc.arr[0] = '\0';
		dc_short_desc.len = 0;
        dc_ind.arr[0] = '\0';
		dc_ind.len = 0;
	    dc_mpi_id.arr[0] = '\0';
		dc_mpi_id.len = 0;
   	   	dc_credit_doc_ref_date.arr[0] = '\0';
		dc_credit_doc_ref_date.len = 0;
	   	dc_policy_type_code.arr[0] = '\0' ;
		dc_policy_type_code.len = 0;
	   	dc_policy_number.arr[0] = '\0';
		dc_policy_number.len = 0;
	   	dc_policy_expiry_date.arr[0] = '\0';
		dc_policy_expiry_date.len = 0;
	    nn_cc_code.arr[0] = '\0';
        nn_shift_id.arr[0] = '\0';
		nn_cc_id.arr[0] = '\0';
	    nn_cc_name.arr[0] = '\0';
	    nd_spl_agency_amt = 0;

                

	EXEC SQL FETCH BL_BILL_PRINT_TEMP_CUR INTO 
 			:dc_doc_type_code,
			:d_doc_num,
			:d_no,
			:d_doc_date,
			:d_serv_disc_amt,
			:d_man_disc_amt,
			:d_overall_disc_amt,
			:d_prepay_adj_amt,
			:d_deposit_adj_amt,
			:d_tot_paid_amt,
			:dc_episode_id,
			:dc_epi_id,
			:dc_visit_id,
			:dc_admn_date,
			:dc_physician_id,
			:dc_blng_grp_id,
			:dc_patient_id,
			:d_bill_nature_code,
			:dc_cust_code,
			:dc_bill_type_code,
			:dc_clinic_code,
			:d_bill_trx_type_code,
			:dc_bill_print_flag,
	        :d_tot_bus_man_disc_amt,
            :dc_tot_dep_paid_amt,
		    :dc_credit_doc_ref_desc,
	        :dc_blng_grp_desc,
			:dc_short_name,
            :dc_short_name_loc_lang, 
			:dc_date_of_birth,
            :d_age,
			:dc_sex,
            :dc_full_name,
            :dc_long_name,
			:dc_long_desc,
 			:dc_short_desc,
            :dc_ind,
			:dc_mpi_id,
   			:dc_credit_doc_ref_date,
			:dc_policy_type_code,  
			:dc_policy_number   ,
			:dc_policy_expiry_date,
	 	    :nn_cc_code,
			:nn_shift_id,
		    :nn_cc_id,
		   	:nd_spl_agency_amt;

	if(OERROR)
	{ 
		disp_message(ERR_MESG,"FETCH FAILED IN BL_BILL_PRINT_TEMP_CUR");
		proc_exit();
	}

    if(NODATAFOUND)
		{
			return 0;
		}


	    nn_cc_code.arr[nn_cc_code.len] = '\0';
        nn_shift_id.arr[nn_shift_id.len] = '\0';
		nn_cc_id.arr[nn_cc_id.len] = '\0';
	    nn_cc_name.arr[nn_cc_name.len] = '\0';

		dc_doc_type_code.arr[dc_doc_type_code.len] = '\0';
		d_doc_num.arr[d_doc_num.len] = '\0';
	   	d_no.arr[d_no.len] = '\0';
	   	d_doc_date.arr[d_doc_date.len] = '\0';
	    dc_episode_id.arr[dc_episode_id.len] = '\0';
	    dc_epi_id.arr[dc_epi_id.len] = '\0';
	    dc_visit_id.arr[dc_visit_id.len] = '\0';
	    dc_admn_date.arr[dc_admn_date.len] = '\0';
	    dc_physician_id.arr[dc_physician_id.len] = '\0';
	    dc_blng_grp_id.arr[dc_blng_grp_id.len] = '\0';
	    dc_patient_id.arr[dc_patient_id.len] = '\0';
		d_bill_nature_code.arr[d_bill_nature_code.len] = '\0';
		d_bill_trx_type_code.arr[d_bill_trx_type_code.len] = '\0';
	    dc_cust_code.arr[dc_cust_code.len] = '\0';
	    dc_bill_type_code.arr[dc_bill_type_code.len] = '\0';
	    dc_clinic_code.arr[dc_clinic_code.len] = '\0';
	    dc_bill_print_flag.arr[dc_bill_print_flag.len] = '\0';
		dc_tot_dep_paid_amt.arr[dc_tot_dep_paid_amt.len] = '\0';
        dc_credit_doc_ref_desc.arr[dc_credit_doc_ref_desc.len] = '\0';
        dc_blng_grp_desc.arr[dc_blng_grp_desc.len] = '\0';
	    dc_short_name.arr[dc_short_name.len] = '\0';
	    dc_short_name_loc_lang.arr[dc_short_name_loc_lang.len] = '\0';
	    dc_date_of_birth.arr[dc_date_of_birth.len] = '\0';
        dc_sex.arr[dc_sex.len] = '\0';
        dc_full_name.arr[dc_full_name.len] = '\0';
        dc_long_name.arr[dc_long_name.len] = '\0';
	    dc_long_desc.arr[dc_long_desc.len] = '\0';
 	    dc_short_desc.arr[dc_short_desc.len] = '\0';
        dc_ind.arr[dc_ind.len] = '\0';
	    dc_mpi_id.arr[dc_mpi_id.len] = '\0';
   	   	dc_credit_doc_ref_date.arr[dc_credit_doc_ref_date.len] = '\0';
	   	dc_policy_type_code.arr[dc_policy_type_code.len] = '\0' ;
	   	dc_policy_number.arr[dc_policy_number.len] = '\0';
	   	dc_policy_expiry_date.arr[dc_policy_expiry_date.len] = '\0';
	    nd_tot_spl_agency_amt = nd_tot_spl_agency_amt + nd_spl_agency_amt;

	    /* Episode Type */
		episode_type();

	return 1;
}

close_master_cur()
{ 
	EXEC SQL CLOSE BL_BILL_PRINT_TEMP_CUR;
	if (OERROR) 
		{
			disp_message (ERR_MESG,"Close bl_bill_print_temp_cur failed");
			proc_exit();
		}
return;
}

episode_type()
{
  nd_episode_type = 'O';

  EXEC SQL select episode_type into :nd_episode_type 
           from bl_bill_hdr 
		   where doc_type_code = :dc_doc_type_code
		   and doc_num = TO_NUMBER(:d_doc_num);
  if ( sqlca.sqlcode == 1403 )
	nd_episode_type = 'O';
}


declare_grp_hdr_cur()
{
    EXEC SQL DECLARE BL_BILL_GRP_HDR_LINE_CUR CURSOR FOR
	 SELECT	A.DOC_TYPE_CODE,
			A.PRT_GRP_HDR_CODE,
			A.PRT_GRP_LINE_CODE,
            SUM(NVL(A.GROSS_AMT,0)) GROSS_AMT,
		    SUM(NVL(A.NET_AMT,0)),
            C.LONG_DESC,
            D.LONG_DESC,NVL(A.MPI_ID,A.DOC_TYPE_CODE || A.DOC_NUM) MPI_ID,
			SUM(NVL(A.SERV_DISC_AMT,0)+NVL(MAN_DISC_AMT,0))
	FROM    BL_BILL_LINE A,BL_BLNG_PRT_GRP_HDR C,BL_BLNG_PRT_GRP_LINE D
	WHERE 	A.DOC_TYPE_CODE BETWEEN :nd_fm_doc_type AND :nd_to_doc_type
	AND     A.DOC_NUM BETWEEN TO_NUMBER(:nd_fm_doc_num) AND TO_NUMBER(:nd_to_doc_num)
	AND     C.PRT_GRP_HDR_CODE = D.PRT_GRP_HDR_CODE
	AND     A.PRT_GRP_HDR_CODE  = D.PRT_GRP_HDR_CODE (+)
	AND     A.PRT_GRP_LINE_CODE = D.PRT_GRP_LINE_CODE (+)
	AND		NVL(A.MPI_ID,A.DOC_TYPE_CODE || A.DOC_NUM) = :dc_mpi_id
	GROUP BY	A.DOC_TYPE_CODE,
				A.PRT_GRP_HDR_CODE,
				A.PRT_GRP_LINE_CODE,
                C.LONG_DESC,
              	D.LONG_DESC,NVL(A.MPI_ID,A.DOC_TYPE_CODE || A.DOC_NUM) 
	ORDER BY A.PRT_GRP_HDR_CODE, A.PRT_GRP_LINE_CODE;

	if (OERROR) 
	{	disp_message (ERR_MESG,"Failed to Declare Group Header Cursor");
		proc_exit;
	}
	
	return;
}

declare_cust_cur()
{
    EXEC SQL DECLARE BL_BILL_HDR_CUST_CUR CURSOR FOR
        SELECT A.DOC_TYPE_CODE,
		A.DOC_NUM,
		TO_CHAR(A.DOC_DATE,'DD/MM/YYYY'),
		DECODE(:discount_print_yn,'Y',nvl(A.BILL_AMT,0),nvl(A.GROSS_AMT,0)) BILL_TOT_AMT,
		A.MPI_IND,
		A.MPI_ID MPI_ID,B.SHORT_NAME
	 FROM	BL_BILL_HDR A,AR_CUSTOMER B
	 WHERE  A.DOC_TYPE_CODE BETWEEN :nd_fm_doc_type AND :nd_to_doc_type
	 AND 	A.DOC_NUM BETWEEN TO_NUMBER(:nd_fm_doc_num) AND TO_NUMBER(:nd_to_doc_num)
	 AND 	A.CUST_CODE =  B.CUST_CODE(+)
	 AND	A.DOC_TYPE_CODE = :dc_doc_type_code
	 AND	A.DOC_NUM	!= :d_doc_num
	 AND 	TO_CHAR(A.DOC_DATE,'DD/MM/YYYY') = :d_doc_date
	 AND    b.acc_entity_code (+)= :nd_acc_entity_code
	 AND 	NVL(A.MPI_ID,A.DOC_TYPE_CODE||A.DOC_NUM)	= :dc_mpi_id; 

if (OERROR) 
	{	disp_message (ERR_MESG,"Failed to Declare customer cursor");
		proc_exit;
	}
return;
}

fetch_bill_type_desc()
{
    d_bill_type_desc.arr[0]   = '\0';
	d_remarks_1.arr[0]        = '\0';
	d_remarks_2.arr[0]        = '\0';
	d_remarks_3.arr[0]        = '\0';
	d_remarks_4.arr[0]        = '\0';
	d_remarks_5.arr[0]        = '\0';
	d_remarks_6.arr[0]        = '\0';
	d_remarks_7.arr[0]        = '\0';

    d_bill_type_desc.len      = 0;
	d_remarks_1.len           = 0;
	d_remarks_2.len           = 0;
	d_remarks_3.len           = 0;
	d_remarks_4.len           = 0;
	d_remarks_5.len           = 0;
	d_remarks_6.len           = 0;
	d_remarks_7.len           = 0;
	
    EXEC SQL SELECT LONG_DESC, 
				REMARKS_1, 
				REMARKS_2, 
				REMARKS_3, 
				REMARKS_4, 
				REMARKS_5, 
				REMARKS_6, 
				REMARKS_7
		 INTO   :d_bill_type_desc, 
				:d_remarks_1, 
				:d_remarks_2,
				:d_remarks_3, 
				:d_remarks_4, 
				:d_remarks_5,
				:d_remarks_6, 
				:d_remarks_7
	         FROM BL_BILL_TYPE
	         WHERE BILL_TYPE_CODE = :dc_bill_type_code
		 AND ACC_ENTITY_CODE IN ( SELECT ACC_ENTITY_CODE FROM SY_ACC_ENTITY
					  WHERE ACC_ENTITY_ID = :nd_facility_id);

    if(OERROR)
	err_mesg("SELECT failed on table BL_BILL_TYPE",0,"");

    d_bill_type_desc.arr[d_bill_type_desc.len]  = '\0';
	d_remarks_1.arr[d_remarks_1.len]            = '\0';
	d_remarks_2.arr[d_remarks_2.len]            = '\0';
	d_remarks_3.arr[d_remarks_3.len]            = '\0';
	d_remarks_4.arr[d_remarks_4.len]            = '\0';
	d_remarks_5.arr[d_remarks_5.len]            = '\0';
	d_remarks_6.arr[d_remarks_6.len]            = '\0';
	d_remarks_7.arr[d_remarks_7.len]            = '\0';
}


declare_refund_cur()
{
    EXEC SQL DECLARE BL_REFUND_CUR CURSOR FOR
	 SELECT DOC_TYPE_CODE,
		DOC_NUMBER|| '   ' || TO_CHAR(DOC_DATE,'DD/MM/YYYY') DOC_NUMBER,
		PATIENT_ID,EPISODE_ID,DOC_AMT
	 FROM 	BL_RECEIPT_REFUND_HDR	 
	 WHERE 	EPISODE_TYPE IN ( 'E','O' ,'R')
	 AND    RECPT_NATURE_CODE = 'AD'
	 AND	((EPISODE_ID = :dc_episode_id AND :nd_episode_type in ('E','O'))
			  OR (:nd_episode_type = 'R'))
	 AND	PATIENT_ID = :dc_patient_id
	 AND	(DOC_TYPE_CODE,DOC_NUMBER) IN 
			(SELECT ORG_DOC_TYPE_CODE ,ORG_DOC_NUM FROM BL_PATIENT_LEDGER
			  WHERE RECPT_NATURE_CODE = 'AD' AND 
			  AD_PR_ADJ_BILL_DOC_TYPE = :dc_doc_type_code
			  AND AD_PR_ADJ_BILL_DOC_NUM  = :d_doc_num)
	 AND    CASH_COUNTER_FACILITY_ID = :nd_facility_id;

	if (OERROR) 
	{	disp_message(ERR_MESG,"Failed to Declare refund cursor");
		proc_exit;
	}
	
	return;
}


declare_prepay_cur()
{
    EXEC SQL DECLARE BL_PREPAY_CUR CURSOR FOR
	 SELECT DOC_TYPE_CODE,
			DOC_NUMBER||'   ' ||TO_CHAR(DOC_DATE,'DD/MM/YYYY') DOC_NUMBER,
			PATIENT_ID,
			EPISODE_ID,
			DOC_AMT
	   FROM BL_RECEIPT_REFUND_HDR
	  WHERE EPISODE_TYPE IN ('E', 'O' ,'R')
	    AND CASH_COUNTER_FACILITY_ID = :nd_facility_id	
	    AND RECPT_NATURE_CODE = 'PR'
	    AND	((EPISODE_ID = :dc_episode_id AND :nd_episode_type in ('E','O'))
			  OR (:nd_episode_type = 'R'))
		AND	(DOC_TYPE_CODE,DOC_NUMBER) IN 
			( SELECT ORG_DOC_TYPE_CODE ,ORG_DOC_NUM FROM BL_PATIENT_LEDGER
			  WHERE RECPT_NATURE_CODE = 'PR' AND 
			  AD_PR_ADJ_BILL_DOC_TYPE = :dc_doc_type_code
			  AND AD_PR_ADJ_BILL_DOC_NUM  = :d_doc_num )
		AND	PATIENT_ID = :dc_patient_id;

	if (OERROR) 
	{	disp_message (ERR_MESG,"Failed to declare prepay cursor");
		proc_exit();
    }
	return;
}


open_grp_hdr_cur()
{
	
	EXEC SQL OPEN BL_BILL_GRP_HDR_LINE_CUR;

	if (OERROR) 
	{	
		disp_message (ERR_MESG,"Open Cursor Group Header Failed");
		proc_exit();
	}

	return;
}

fetch_grp_hdr_cur()
{
	d1_doc_type_code.arr[0] = '\0';
	d1_doc_type_code.len = 0;
	d1_prt_grp_hdr_code.arr[0] = '\0';
	d1_prt_grp_hdr_code.len = 0;
	d1_prt_grp_line_code.arr[0] = '\0';
	d1_prt_grp_line_code.len = 0;
    d1_long_desc.arr[0] = '\0';
	d1_long_desc.len = 0;
    d1_long_desc1.arr[0] = '\0';
	d1_long_desc1.len = 0;
	d1_mpi_id.arr[0] = '\0';
	d1_mpi_id.len = 0;
	l_bill_line_pr_gp_disc_amt = 0;
	
	EXEC SQL FETCH BL_BILL_GRP_HDR_LINE_CUR INTO	
				:d1_doc_type_code,
				:d1_prt_grp_hdr_code,
				:d1_prt_grp_line_code,
                :d1_gross_amt,
				:d1_net_amt,
                :d1_long_desc,
              	:d1_long_desc1,
				:d1_mpi_id,
				:l_bill_line_pr_gp_disc_amt;

	if (OERROR)
	{ 
		disp_message(ERR_MESG,"Fetch Group Header Cursor Failed");
		proc_exit();
	}

    if(NODATAFOUND)
	{
   		return 0;
	}

	d1_doc_type_code.arr[d1_doc_type_code.len] = '\0';
	d1_prt_grp_hdr_code.arr[d1_prt_grp_hdr_code.len] = '\0';
	d1_prt_grp_line_code.arr[d1_prt_grp_line_code.len] = '\0';
    d1_long_desc.arr[d1_long_desc.len] = '\0';
    d1_long_desc1.arr[d1_long_desc1.len] = '\0';
	d1_mpi_id.arr[d1_mpi_id.len] = '\0';

	return 1;
}


declare_service_line_cur()
{
         EXEC SQL DECLARE BL_BILL_SERV_LINE_CUR CURSOR FOR
         SELECT 	A.PACKAGE_SERVICE_CODE,
			//DECODE(A.PACKAGE_IND, 'S', C.SHORT_DESC, 'P', D.SHORT_DESC),
			//DECODE(NVL(c.misc_serv_yn,'N'),'Y',NVL(b.serv_item_desc,c.long_desc),
			//DECODE(A.PACKAGE_IND, 'S', C.LONG_DESC, 'P', D.LONG_DESC)),
			DECODE(A.PACKAGE_IND, 'S',NVL(b.serv_item_desc,c.long_desc), 'P', D.LONG_DESC,NVL(b.serv_item_desc,c.long_desc)),			
			TO_CHAR(B.SERVICE_DATE,'DD/MM/YYYY'),
			NVL(B.SERV_QTY,0), 
			NVL(B.ORG_GROSS_CHARGE_AMT,0),
			NVL(B.ORG_NET_CHARGE_AMT,0),
			NVL(B.ORG_DISC_AMT,0),
			B.BASE_RATE,
			B.BASE_QTY,
			B.BASE_RATE||'/'||B.BASE_QTY 
		 FROM   BL_BILL_SERVICE_LINE A ,
		        BL_PATIENT_CHARGES_FOLIO B,
	                BL_BLNG_SERV  C,
			BL_PACKAGE_HDR D
		 WHERE	        
			A.OPERATING_FACILITY_ID = B.OPERATING_FACILITY_ID	AND
			A.OPERATING_FACILITY_ID = :nd_facility_id 		AND
			A.DOC_TYPE_CODE		= :dc_doc_type_code      AND
			((A.DOC_NUM		= :d_doc_num							
			  AND :dc_doc_type_code||:d_doc_num = :dc_mpi_id) or
			 (A.DOC_NUM in (select doc_num from bl_bill_hdr where
			  doc_type_code = :dc_doc_type_code and mpi_id = :dc_mpi_id
			  and operating_facility_id = :nd_facility_id) and :dc_doc_type_code||:d_doc_num <> :dc_mpi_id))
				AND
				A.PRT_GRP_HDR_CODE	= :d1_prt_grp_hdr_code	AND
				a.PRT_GRP_LINE_CODE	= :d1_prt_grp_line_code AND 
				A.DOC_TYPE_CODE  	= B.BILL_DOC_TYPE_CODE  AND
				A.DOC_NUM 		= B.BILL_DOC_NUM						AND
				A.PRT_GRP_HDR_CODE 	= B.PRT_GRP_HDR_CODE 	AND		
				A.PRT_GRP_LINE_CODE	= B.PRT_GRP_LINE_CODE	AND
				A.PACKAGE_SERVICE_CODE  = B.BLNG_SERV_CODE		AND  
				A.PACKAGE_IND		= B.PACKAGE_IND							AND
				B.BLNG_SERV_CODE	= C.BLNG_SERV_CODE (+)	AND   
				B.PACKAGE_SERVICE_CODE	= D.PACKAGE_CODE (+)	AND   
				A.AMT_SIGN_IND 			= 0			
and 
(
trx_status is null 
OR 
( 
	trx_status = 'C' and (
				orig_doc_ref is null 
				and 0 = ( select count(1) from bl_patient_charges_folio
					  where operating_facility_id = :nd_facility_id
					  and bill_doc_type_code = :dc_doc_type_code
					  and bill_doc_num = :d_doc_num
					  and orig_doc_ref = b.trx_doc_ref
					  and orig_doc_ref_line_num = b.trx_doc_ref_line_num
					  and orig_doc_ref_seq_num = b.trx_doc_ref_seq_num
					 )
			     )
			 OR
				     (
				orig_doc_ref is not null 
				and 0 = ( select count(1) from bl_patient_charges_folio
					  where operating_facility_id = :nd_facility_id
					  and bill_doc_type_code = :dc_doc_type_code
					  and bill_doc_num = :d_doc_num
					  and trx_doc_ref = b.orig_doc_ref
					  and trx_doc_ref_line_num = b.orig_doc_ref_line_num
					  and trx_doc_ref_seq_num = b.orig_doc_ref_seq_num
					 )
			     )
)
	   )
	 

		/*GROUP BY	A.PACKAGE_SERVICE_CODE,
			DECODE(A.PACKAGE_IND, 'S', C.SHORT_DESC, 'P', D.SHORT_DESC),
			TO_CHAR(B.SERVICE_DATE,'DD/MM/YYYY')*/
		ORDER BY	                3,1;	
				
}



int fetch_service_line_cur()
{

  d_service_code.arr[0] = '\0';
  d_service_code.len = 0;

  d_service_desc.arr[0] = '\0';
  d_service_desc.len = 0;

  d_service_date.arr[0] = '\0';
  d_service_date.len = 0;

  nd_base_rate_qty.arr[0] = '\0';
  nd_base_rate_qty.len = 0;
  
   EXEC SQL FETCH BL_BILL_SERV_LINE_CUR 
	    INTO 
		  :d_service_code,
		  :d_service_desc,
		  :d_service_date,
		  :d_service_qty,
		  :d_service_amt,
		  :d_service_net,
		  :d_service_disc,
		  :d_base_rate,
		  :d_base_qty,
		  :nd_base_rate_qty;
	if (OERROR)
	{ 
		disp_message(ERR_MESG,"FETCH FAILED IN BL_BILL_SERV_LINE_CUR ");
		proc_exit();
	}

    if(NODATAFOUND)
	{
		return 0;
	}

	d_service_code.arr[d_service_code.len] = '\0';
	d_service_desc.arr[d_service_desc.len] = '\0';
	d_service_date.arr[d_service_date.len] = '\0';   
	nd_base_rate_qty.arr[nd_base_rate_qty.len] = '\0';
}



open_cust_cur()
{
	EXEC SQL OPEN BL_BILL_HDR_CUST_CUR;

	if (OERROR) 
	{	disp_message(ERR_MESG,"Open Customer Cursor Failed");
		proc_exit();
	}

	return;
}

fetch_cust_cur()
{
	d2_doc_type_code.arr[0] = '\0';
	d2_doc_type_code.len = 0;
	d2_doc_num.arr[0] = '\0';
	d2_doc_num.len = 0;
	d2_doc_date.arr[0] = '\0';
	d2_doc_date.len = 0;
	d2_mpi_ind.arr[0] = '\0';
	d2_mpi_ind.len = 0;
	d2_mpi_id.arr[0] = '\0';
	d2_mpi_id.len =  0;
	d2_short_name.arr[0] = '\0';
	d2_short_name.len = 0;

	EXEC SQL FETCH BL_BILL_HDR_CUST_CUR INTO	
		:d2_doc_type_code,
		:d2_doc_num,
		:d2_doc_date,
		:d2_bill_tot_amt,
		:d2_mpi_ind,
		:d2_mpi_id,
		:d2_short_name;

	if (OERROR)
	{	
		disp_message(ERR_MESG,"Fetch Customer Cursor Failed");
		proc_exit();
	}

	if(NODATAFOUND)
	{
   		return 0;
	}

	d2_doc_type_code.arr[d2_doc_type_code.len] = '\0';
	d2_doc_num.arr[d2_doc_num.len] = '\0';
	d2_doc_date.arr[d2_doc_date.len] = '\0';
	d2_mpi_ind.arr[d2_mpi_ind.len] = '\0';
	d2_mpi_id.arr[d2_mpi_id.len] = '\0';
	d2_short_name.arr[d2_short_name.len] = '\0';

	return 1;
}

open_refund_cur()
{
	EXEC SQL OPEN BL_REFUND_CUR;
	if (OERROR) 
	{	
		disp_message (ERR_MESG,"Open Refund Cursor Failed");
		proc_exit();
	}

	return;
}

fetch_refund_cur()
{
		d3_doc_type_code.arr[0] = '\0';
		d3_doc_type_code.len = 0;
		d3_doc_num.arr[0] = '\0';
		d3_doc_num.len = 0;
		d3_patient_id.arr[0] = '\0';
		d3_patient_id.len = 0;
		d3_episode_id.arr[0] = '\0';
		d3_episode_id.len = 0;


	EXEC SQL FETCH BL_REFUND_CUR INTO
		:d3_doc_type_code,
		:d3_doc_num,
		:d3_patient_id,
		:d3_episode_id,
		:d3_doc_amt;

	if (OERROR)
	{	
		disp_message(ERR_MESG,"Fetch Refund Cursor Failed");
		proc_exit();
	}

	if (NODATAFOUND) 
	{ 
		return 0;
	}
		
	d3_doc_type_code.arr[d3_doc_type_code.len] = '\0';
	d3_doc_num.arr[d3_doc_num.len] = '\0';
	d3_patient_id.arr[d3_patient_id.len] = '\0';
	d3_episode_id.arr[d3_episode_id.len] = '\0';

	return 1;
}

open_prepay_cur()
{
	EXEC SQL OPEN BL_PREPAY_CUR;

	if (OERROR) 
	{	disp_message(ERR_MESG,"Open Prepay Cursor Failed");
		proc_exit();
	}

	return;
}

fetch_prepay_cur()
{

	d4_doc_type_code.arr[0] = '\0';
	d4_doc_type_code.len = 0;
	d4_doc_num.arr[0] = '\0';
	d4_doc_num.len = 0;
	d4_patient_id.arr[0] = '\0';
	d4_patient_id.len = 0;
	d4_episode_id.arr[0] = '\0';
	d4_episode_id.len = 0;

	EXEC SQL FETCH BL_PREPAY_CUR INTO
		:d4_doc_type_code,
		:d4_doc_num,
		:d4_patient_id,
		:d4_episode_id,
		:d4_doc_amt;
		
	if (OERROR)
	{	disp_message(ERR_MESG,"Fetch Prepay Cursor Failed");
		proc_exit();
	}

	if (NODATAFOUND)
	{
		return 0;
	}

	d4_doc_type_code.arr[d4_doc_type_code.len] = '\0';
	d4_doc_num.arr[d4_doc_num.len] = 0;
	d4_patient_id.arr[d4_patient_id.len] = '\0';
	d4_episode_id.arr[d4_episode_id.len] = '\0';

	return 1;
}


print_report_head()
{	
	int len1 = 0, i = 0;
	v_lno = 0;	

	l_page_no++;
	l_bill_page_no++;

	//disp_message(ERR_MESG,"1");
	//fprintf(fp,"%-75.75s %s %d\n"," ",loc_legend21.arr,l_page_no," ");

	//fprintf(fp,"\n\n");
	
	currency.arr[0] = '\0';
	sub_cur.arr[0]  = '\0';
	currency.len = 0;
	sub_cur.len = 0;
	nd_acc_name.arr[0] = '\0';
	nd_acc_name.len = 0;
	nd_decimal = 0;

	EXEC SQL SELECT base_currency,
			base_currency_dec,
			acc_entity_name ,
			accounting_name,
			no_of_decimal 
	INTO :currency,
			:sub_cur,
			:nd_facility_name ,
			:nd_acc_name,
			:nd_decimal
	FROM SY_ACC_ENTITY
	WHERE acc_entity_id = :d_cashfacility_id;

	if (OERROR) 
	{ 
		disp_message (ERR_MESG,"SELECT FACILITY STATEMENT FAILED");
		proc_exit();
	}

	currency.arr[currency.len] = '\0';
	sub_cur.arr[sub_cur.len] = '\0';
	nd_facility_name.arr[nd_facility_name.len] = '\0';
	nd_acc_name.arr[nd_acc_name.len] = '\0';

	EXEC SQL SELECT acc_entity_name 
	         INTO :nd_facility
		 FROM SY_ACC_ENTITY
		 WHERE acc_entity_id = :nd_facility_id;

	nd_facility.arr[nd_facility.len] = '\0';

	nd_curr_date.arr[0] = '\0';
	nd_curr_date.len = 0;

	EXEC SQL SELECT TO_CHAR(SYSDATE,'dd/mm/yyyy') 
		 INTO :nd_curr_date
		 FROM dual;
	nd_curr_date.arr[nd_curr_date.len] = '\0';


	get_gl_holder_name_nric();

	bill_title.arr[0] = '\0';
	bill_title.len = 0;

	if (dc_ind.arr[0] == 'P')
		strcpy(bill_title.arr,loc_legend32.arr);
	else if (dc_ind.arr[0] == 'I')
		strcpy(bill_title.arr,loc_legend33.arr);
	else
		strcpy(bill_title.arr," ");

       bill_title.len = strlen(bill_title.arr); 

	if (l_lsr != 0 && l_dmp == 0)
	{	 

	 if ( l_logo_yniflaser.arr[0] != 'Y')
	    {
		fprintf(fp,"%c(s8H",ESC);	
		fprintf(fp,"%c(s3B",ESC); 	/* To set Bold style 	  */	      
	    }

		fprintf(fp,"%-80.80s\n",loc_legend38.arr);		
		lsr_line_cnt();

		fprintf(fp,"%-80.80s\n",loc_legend37.arr);
		lsr_line_cnt();

		fprintf(fp,"%-80.80s\n",nd_hosp_name.arr);
		lsr_line_cnt();
		
	
	    if ( l_logo_yniflaser.arr[0] != 'Y')
		fprintf(fp,"%c(s12H",ESC);		

		fprintf(fp,"%-80.80s\n",nd_add.arr);
		lsr_line_cnt();

		fprintf(fp,"%-80.80s\n\n",nd_telfax.arr);
		lsr_line_cnt();

	     if ( l_logo_yniflaser.arr[0] != 'Y')
	     {
		fprintf(fp,"%c(s8H",ESC);			
	     }

		fprintf(fp,"%-80.80s\n",loc_legend30.arr);
		lsr_line_cnt();		

		fprintf(fp,"%-80.80s\n",bill_title.arr);
	        lsr_line_cnt();

             if ( l_logo_yniflaser.arr[0] != 'Y')
	      {
		fprintf(fp,"%c(s12H",ESC);	      	      
	      }	      

	    fprintf(fp,"%-s: %-s/%-s ",loc_legend7.arr,dc_doc_type_code.arr,d_doc_num.arr); 
	    	   
	/*
	    len1 = 30 - loc_legend7.len - dc_doc_type_code.len - d_doc_num.len;

	    if (len1 > 0)
	    {
	      for (i=0;i<len1;i++)
	      {
		fprintf(fp,"%-s"," ");		     
	      }
	    } 	      
	*/

	    fprintf(fp,"%-s: %-s ",loc_legend8.arr,d_doc_date.arr);

	    if (nd_reprint_yn == 'Y')
	    {
		if (strcmp(dc_bill_print_flag.arr,"Y") == 0)
		{			
		     if (l_lsr != 0 && l_dmp == 0)
		     {				
			fprintf(fp,"%-s: %-s ",loc_legend29.arr,nd_curr_date.arr);
			fprintf(fp,"\n\n");
			lsr_line_cnt();lsr_line_cnt();
		     }
		     else
		     {			
			fprintf(fp,"%-s: %-s ",loc_legend29.arr,nd_curr_date.arr);
			fprintf(fp,"\n\n");
			lsr_line_cnt();lsr_line_cnt();
		     }		     
		}
		else
		{
			fprintf(fp,"\n\n");
			lsr_line_cnt();lsr_line_cnt();
		}
	    }
	    else
	    {	
			fprintf(fp,"\n\n");
			lsr_line_cnt();lsr_line_cnt();
	    }
	
	    fprintf(fp,"%-45.45s",loc_legend56.arr);
	    fprintf(fp,"%-45.45s\n",loc_legend57.arr);	    
	    lsr_line_cnt();

	    prt_line();
	    fprintf(fp,"\n");    
	    lsr_line_cnt();	    
	
	    

	    dc_short_name1.arr[i] = '\0';
	    dc_short_name1.len = 0;	    

	    dc_short_name2.arr[0] = '\0';
	    dc_short_name2.len = 0;	    

	    dc_short_name3.arr[0] = '\0';
	    dc_short_name3.len = 0;	    

	    r_ctr = 0;   
	    if (dc_short_name.len >0)	
            split_text(dc_short_name.arr,25,dc_short_name1.arr,&r_ctr);	 
	    if (dc_short_name.len >25)
	    split_text(dc_short_name.arr,25,dc_short_name2.arr,&r_ctr);
	    if (dc_short_name.len >50)
	    split_text(dc_short_name.arr,25,dc_short_name3.arr,&r_ctr);	    
	    
	    
	    l_gl_holder_name1.arr[0] = '\0';
	    l_gl_holder_name1.len = 0;

	    l_gl_holder_name2.arr[0] = '\0';
	    l_gl_holder_name2.len = 0;	    


            r_ctr = 0; 
	    if(l_gl_holder_name.len > 0)
	    split_text(l_gl_holder_name.arr,25,l_gl_holder_name1.arr,&r_ctr);	    
	    if(l_gl_holder_name.len > 25)
	    split_text(l_gl_holder_name.arr,25,l_gl_holder_name2.arr,&r_ctr);	    
	    

	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend10.arr,dc_short_name1.arr);
	    fprintf(fp,"%-18.18s: %-25.25s\n",loc_legend1.arr,l_gl_holder_name1.arr);
	    lsr_line_cnt();
	    

	    if (dc_short_name2.arr[0] != '\0' || l_gl_holder_name2.arr[0] != '\0')
	    {
		fprintf(fp,"%-17.17s  %-25.25s ","",dc_short_name2.arr);
	        fprintf(fp,"%-18.18s  %-25.25s\n","",l_gl_holder_name2.arr);
	        lsr_line_cnt();
	    }

	    if (dc_short_name3.arr[0] != '\0')
	    {
		fprintf(fp,"%-17.17s  %-25.25s ","",dc_short_name3.arr);
	        fprintf(fp,"\n");
	        lsr_line_cnt();
	    }
	    

	    
		
	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend6.arr,l_nric_number.arr);   
	    fprintf(fp,"%-18.18s: %-25.25s\n",loc_legend58.arr,l_gl_ic.arr);   
	    lsr_line_cnt();	

	    /*

	    l_bill_contact_name_p1.arr[0] = '\0';
	    l_bill_contact_name_p1.len = 0;

	    l_bill_contact_name_p2.arr[0] = '\0';
	    l_bill_contact_name_p2.len = 0;
	    
	    r_ctr = 0; 
	    if(l_bill_contact_name_p.len > 0)
	    split_text(l_bill_contact_name_p.arr,25,l_bill_contact_name_p1.arr,&r_ctr);
	    if(l_bill_contact_name_p.len > 25)
	    split_text(l_bill_contact_name_p.arr,25,l_bill_contact_name_p2.arr,&r_ctr);

	    l_bill_contact_name_c1.arr[0] = '\0';
	    l_bill_contact_name_c1.len = 0;

	    l_bill_contact_name_c2.arr[0] = '\0';
	    l_bill_contact_name_c2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_contact_name_c.len > 0)
	    split_text(l_bill_contact_name_c.arr,25,l_bill_contact_name_c1.arr,&r_ctr);
	    if(l_bill_contact_name_c.len > 25)
	    split_text(l_bill_contact_name_c.arr,25,l_bill_contact_name_c2.arr,&r_ctr);	

	    l_credit_doc_ref_desc1.arr[0] = '\0';
	    l_credit_doc_ref_desc1.len = 0;

	    l_credit_doc_ref_desc2.arr[0] = '\0';
	    l_credit_doc_ref_desc2.len = 0;
	    

	    r_ctr = 0;
	    if(l_credit_doc_ref_desc.len > 0)
	    split_text(l_credit_doc_ref_desc.arr,25,l_credit_doc_ref_desc1.arr,&r_ctr);
	    if(l_credit_doc_ref_desc.len > 25)
	    split_text(l_credit_doc_ref_desc.arr,25,l_credit_doc_ref_desc2.arr,&r_ctr);
	    	     
	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend59.arr,l_bill_contact_name_p1.arr);	    
	    fprintf(fp,"%-18.18s: %-25.25s\n",loc_legend60.arr,l_credit_doc_ref_desc1.arr);
	    lsr_line_cnt();

	    if (l_bill_contact_name_p2.arr[0] != '\0' 
	          || l_credit_doc_ref_desc2.arr[0] != '\0')
	    {		    
		    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_contact_name_p2.arr);		    		    
		    fprintf(fp,"%-18.18s  %-25.25s\n",loc_legend61.arr,l_credit_doc_ref_desc2.arr);
		    lsr_line_cnt();

		    loc_legend61.arr[0] = '\0';
		    loc_legend61.len = 0;

		    strcpy(loc_legend61.arr,"");
		    loc_legend61.len = strlen(loc_legend61.arr);
	    }
	    */

	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend59.arr,l_bill_contact_name_p.arr);	    
	    fprintf(fp,"%-18.18s: %-25.25s\n",loc_legend60.arr,l_credit_doc_ref_desc.arr);
	    lsr_line_cnt();

	    /*
	    l_bill_contact_name_title_p1.arr[0] = '\0';
	    l_bill_contact_name_title_p1.len = 0;

	    l_bill_contact_name_title_p2.arr[0] = '\0';
	    l_bill_contact_name_title_p2.len = 0;	    

	    r_ctr = 0; 
	    if(l_bill_contact_name_title_p.len > 0)
	    split_text(l_bill_contact_name_title_p.arr,25,l_bill_contact_name_title_p1.arr,&r_ctr);
	    if(l_bill_contact_name_title_p.len > 25)
	    split_text(l_bill_contact_name_title_p.arr,25,l_bill_contact_name_title_p2.arr,&r_ctr);

	    l_bill_contact_name_title_c1.arr[0] = '\0';
	    l_bill_contact_name_title_c1.len = 0;

	    l_bill_contact_name_title_c2.arr[0] = '\0';
	    l_bill_contact_name_title_c2.len = 0;	    

	    r_ctr = 0;
	    if(l_bill_contact_name_title_c.len > 0)
	    split_text(l_bill_contact_name_title_c.arr,25,l_bill_contact_name_title_c1.arr,&r_ctr);
	    if(l_bill_contact_name_title_c.len > 25)
	    split_text(l_bill_contact_name_title_c.arr,25,l_bill_contact_name_title_c2.arr,&r_ctr);
    
	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_contact_name_title_p1.arr);    	    	    
	    fprintf(fp,"%-18.18s  %-25.25s\n",loc_legend61.arr,l_bill_contact_name_title_c1.arr);   
	    lsr_line_cnt();

	    if (l_bill_contact_name_title_p2.arr[0] != '\0' || 
		 l_bill_contact_name_title_c2.arr[0] != '\0' )
	    {
		
		fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_contact_name_title_p2.arr);		
		fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_contact_name_title_c2.arr);
		lsr_line_cnt();
	   }

	   */

	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_contact_name_title_p.arr);    	    	    
	    fprintf(fp,"%-18.18s  %-25.25s\n",loc_legend61.arr,l_bill_contact_name_title_c.arr);   
	    lsr_line_cnt();

	    /*
	    l_bill_long_desc_p1.arr[0] = '\0';
	    l_bill_long_desc_p1.len = 0;

	    l_bill_long_desc_p2.arr[0] = '\0';
	    l_bill_long_desc_p2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_long_desc_p.len > 0)
	    split_text(l_bill_long_desc_p.arr,25,l_bill_long_desc_p1.arr,&r_ctr);
	    if(l_bill_long_desc_p.len > 25)
	    split_text(l_bill_long_desc_p.arr,25,l_bill_long_desc_p2.arr,&r_ctr);

	    l_bill_long_desc_c1.arr[0] = '\0';
	    l_bill_long_desc_c1.len = 0;

	    l_bill_long_desc_c2.arr[0] = '\0';
	    l_bill_long_desc_c2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_long_desc_c.len > 0)
	    split_text(l_bill_long_desc_c.arr,25,l_bill_long_desc_c1.arr,&r_ctr);
	    if(l_bill_long_desc_c.len > 25)
	    split_text(l_bill_long_desc_c.arr,25,l_bill_long_desc_c2.arr,&r_ctr);
	    
	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_long_desc_p1.arr);	        
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_long_desc_c1.arr);
	    lsr_line_cnt();

	    if (l_bill_long_desc_p2.arr[0] != '\0' || l_bill_long_desc_c2.arr[0] != '\0')
	    {		    
		    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_long_desc_p2.arr);		    
		    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_long_desc_c2.arr);
		    lsr_line_cnt();
	    }
	    */

	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_long_desc_p.arr);	        
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_long_desc_c.arr);
	    lsr_line_cnt();

	    /*

	    l_bill_add1_desc_p1.arr[0] = '\0';
	    l_bill_add1_desc_p1.len = 0;

	    l_bill_add1_desc_p2.arr[0] = '\0';
	    l_bill_add1_desc_p2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add1_desc_p.len > 0)
	    split_text(l_bill_add1_desc_p.arr,25,l_bill_add1_desc_p1.arr,&r_ctr);
	    if(l_bill_add1_desc_p.len > 25)
	    split_text(l_bill_add1_desc_p.arr,25,l_bill_add1_desc_p2.arr,&r_ctr);

	    l_bill_add1_desc_c1.arr[0] = '\0';
	    l_bill_add1_desc_c1.len = 0;

	    l_bill_add1_desc_c2.arr[0] = '\0';
	    l_bill_add1_desc_c2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add1_desc_c.len > 0)
	    split_text(l_bill_add1_desc_c.arr,25,l_bill_add1_desc_c1.arr,&r_ctr);
	    if(l_bill_add1_desc_c.len > 25)
	    split_text(l_bill_add1_desc_c.arr,25,l_bill_add1_desc_c2.arr,&r_ctr);
	    
	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add1_desc_p1.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add1_desc_c1.arr);
	    lsr_line_cnt();

	    if (l_bill_add1_desc_p2.arr[0] != '\0' ||
			l_bill_add1_desc_c2.arr[0] != '\0')
	    {
		fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add1_desc_p2.arr);		    
		fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add1_desc_c2.arr);
		lsr_line_cnt();
	    }
	    */

	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add1_desc_p.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add1_desc_c.arr);
	    lsr_line_cnt();

	    /*
	    l_bill_add2_desc_p1.arr[0] = '\0';
	    l_bill_add2_desc_p1.len = 0;

	    l_bill_add2_desc_p2.arr[0] = '\0';
	    l_bill_add2_desc_p2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add2_desc_p.len > 0)
	    split_text(l_bill_add2_desc_p.arr,25,l_bill_add2_desc_p1.arr,&r_ctr);
	    if(l_bill_add2_desc_p.len > 25)
	    split_text(l_bill_add2_desc_p.arr,25,l_bill_add2_desc_p2.arr,&r_ctr);


	    l_bill_add2_desc_c1.arr[0] = '\0';
	    l_bill_add2_desc_c1.len = 0;

	    l_bill_add2_desc_c2.arr[0] = '\0';
	    l_bill_add2_desc_c2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add2_desc_c.len > 0)
	    split_text(l_bill_add2_desc_c.arr,25,l_bill_add2_desc_c1.arr,&r_ctr);
	    if(l_bill_add2_desc_c.len > 25)
	    split_text(l_bill_add2_desc_c.arr,25,l_bill_add2_desc_c2.arr,&r_ctr);
	    
	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add2_desc_p1.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add2_desc_c1.arr);
	    lsr_line_cnt();

            if (l_bill_add2_desc_p2.arr[0] != '\0' ||
			l_bill_add2_desc_c2.arr[0] != '\0')
	    {
		    
		fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add2_desc_p2.arr);		    
		fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add2_desc_c2.arr);
		lsr_line_cnt();
	    }

	    */

	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add2_desc_p.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add2_desc_c.arr);
	    lsr_line_cnt();
		
	    /*
	    l_bill_add3_desc_p1.arr[0] = '\0';
	    l_bill_add3_desc_p1.len = 0;

	    l_bill_add3_desc_p2.arr[0] = '\0';
	    l_bill_add3_desc_p2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add3_desc_p.len > 0)
	    split_text(l_bill_add3_desc_p.arr,25,l_bill_add3_desc_p1.arr,&r_ctr);
	    if(l_bill_add3_desc_p.len > 25)
	    split_text(l_bill_add3_desc_p.arr,25,l_bill_add3_desc_p2.arr,&r_ctr);

	    l_bill_add3_desc_c1.arr[0] = '\0';
	    l_bill_add3_desc_c1.len = 0;

	    l_bill_add3_desc_c2.arr[0] = '\0';
	    l_bill_add3_desc_c2.len = 0;

	    r_ctr = 0; 
	    if(l_bill_add3_desc_c.len > 0)
	    split_text(l_bill_add3_desc_c.arr,25,l_bill_add3_desc_c1.arr,&r_ctr);
	    if(l_bill_add3_desc_c.len > 25)
	    split_text(l_bill_add3_desc_c.arr,25,l_bill_add3_desc_c2.arr,&r_ctr);
	    
	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add3_desc_p1.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add3_desc_c1.arr);	    
	    lsr_line_cnt();

            if(l_bill_add3_desc_p2.arr[0] != '\0' ||
			l_bill_add3_desc_c2.arr[0] != '\0')
	    {
		    
		    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add3_desc_p2.arr);		    
		    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add3_desc_c2.arr);	    
		    lsr_line_cnt();
	    }
	    */

	    fprintf(fp,"%-17.17s  %-25.25s ","",l_bill_add3_desc_p.arr);	    
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_bill_add3_desc_c.arr);	    
	    lsr_line_cnt();

	    if (l_pat_reln_with_gl_holder.arr[0] != '\0')
	    {

                l_pat_reln_with_gl_holder1.arr[0] = '\0';
		l_pat_reln_with_gl_holder1.len = 0;

		r_ctr = 0; 
		if(l_pat_reln_with_gl_holder.len > 0)
		split_text(l_pat_reln_with_gl_holder.arr,25,l_pat_reln_with_gl_holder1.arr,&r_ctr);
		if(l_pat_reln_with_gl_holder.len > 25)
		split_text(l_pat_reln_with_gl_holder.arr,25,l_pat_reln_with_gl_holder2.arr,&r_ctr);
	    }
		
	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend2.arr,dc_admn_date.arr);
	    fprintf(fp,"%-18.18s: %-25.25s\n",loc_legend24.arr,l_pat_reln_with_gl_holder1.arr);
	    lsr_line_cnt();

	    fprintf(fp,"%-17.17s: %-25.25s ",loc_legend4.arr,d_dis_date.arr);
	    fprintf(fp,"%-18.18s  %-25.25s\n","",l_pat_reln_with_gl_holder2.arr);
	    lsr_line_cnt();
	
	    fprintf(fp,"%-17.17s: %-25.25s \n",loc_legend5.arr,dc_patient_id.arr);   
	    lsr_line_cnt();

	    fprintf(fp,"%-17.17s: %-8s",loc_legend9.arr,dc_epi_id.arr); 

	    if ( nd_episode_type == 'O' || nd_episode_type == 'E' ) 
		fprintf(fp,"/%-4s\n",dc_visit_id.arr);
	    else
		fprintf(fp,"\n");	

            lsr_line_cnt();
	    
	}

	  if (dc_ind.arr[0] == 'P')
		strcpy(bill_title.arr,loc_legend32.arr);
	  else if (dc_ind.arr[0] == 'I')
		strcpy(bill_title.arr,loc_legend33.arr);
	  else
		strcpy(bill_title.arr," ");
	
	
	if (nd_reprint_yn == 'Y')
	{
		if (strcmp(dc_bill_print_flag.arr,"Y") == 0)
		{    
		     //fprintf(fp,"%c(s4H",ESC);
			
		     if (l_lsr != 0 && l_dmp == 0)
		     {		        
		      /*
			fprintf(fp,"%52.52s        ",bill_title.arr);
			fprintf(fp,"%-17.17s: %-40.40s ",loc_legend29.arr,nd_curr_date.arr);
			fprintf(fp,"\n");
		      */
			
		     }
		     else
		     {
			fprintf(fp,"%-79.79s %s\n"," ",loc_legend19.arr);
			fprintf(fp,"%52.52s        ",bill_title.arr);
			fprintf(fp,"%-17.17s: %-40.40s ",loc_legend29.arr,nd_curr_date.arr);
			fprintf(fp,"\n");
		     }
		     // fprintf(fp,"%c&k2S",ESC);
		}
		else
		{
		     if (l_lsr != 0 && l_dmp == 0)
		     {
			//
		     }
		     else
		     {
			fprintf(fp,"%52.52s        \n\n", bill_title.arr);
		     }
		}
	}
	else
	{
	   if (l_lsr != 0 && l_dmp == 0)
	   {
		//
	   }
	   else
	   {
		fprintf(fp,"%57.57s        \n\n",bill_title.arr);
	   }

	}

	/* LINE 3 */

	/*if(d_bill_nature_code.arr[0] == 'C')
		fprintf(fp,"%-20.20s : %-20.20s ",loc_legend1.arr,dc_credit_doc_ref_desc.arr);
	else
		fprintf(fp,"%-20.20s : %-20.20s ",loc_legend1.arr,dc_long_name.arr);*/

       if (l_lsr != 0 && l_dmp == 0)
       {
		//
       }
       else
       {
		fprintf(fp,"%-17.17s: %-40.40s ",loc_legend1.arr,l_gl_holder_name.arr);
	
		fprintf(fp,"%-17.17s: %-10.10s\n",loc_legend2.arr,dc_admn_date.arr);	

		fprintf(fp,"%-17.17s: %-40.40s ",loc_legend3.arr,l_credit_doc_ref_desc.arr);

		fprintf(fp,"%-17.17s: %-10.10s\n",loc_legend4.arr,d_dis_date.arr);
	
		//fprintf(fp,"%-55.55s",l_bill_contact_name_title.arr);
	
	
		if((strlen(l_bill_contact_name.arr)>0)&&(strlen(l_bill_contact_name_title.arr)>0))
			fprintf(fp,"%-19.19s%-19.19s/%-20.20s"," ",l_bill_contact_name.arr, l_bill_contact_name_title.arr);
		else if((strlen(l_bill_contact_name.arr)>0)||(strlen(l_bill_contact_name_title.arr)==0)) 
			fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_contact_name.arr);
		else if((strlen(l_bill_contact_name.arr)==0)||(strlen(l_bill_contact_name_title.arr)>0)) 
			fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_contact_name_title.arr);
		else if((strlen(l_bill_contact_name.arr)==0)||(strlen(l_bill_contact_name_title.arr)==0))
			fprintf(fp,"%-19.19s%-19.19s %-20.20s"," "," ", " ");
		
		fprintf(fp," %-17.17s: %-20.20s\n",loc_legend5.arr,dc_patient_id.arr);   

		//fprintf(fp,"%-55.55s",l_bill_long_desc.arr);
		fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_long_desc.arr);
		fprintf(fp," %-17.17s: %-20.20s\n",loc_legend6.arr,l_nric_number.arr);   

		//fprintf(fp,"%-55.55s",l_bill_add1_desc.arr);
		fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_add1_desc.arr);
		fprintf(fp," %-17.17s: %-6s/%-8s\n",loc_legend7.arr,dc_doc_type_code.arr,d_doc_num.arr); 

		//fprintf(fp,"%-55.55s",l_bill_add2_desc.arr);
		fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_add2_desc.arr);
		fprintf(fp," %-17.17s: %-12.12s\n",loc_legend8.arr,d_doc_date.arr); 

		//fprintf(fp,"%-55.55s"," ",l_bill_add3_desc.arr);
		fprintf(fp,"%-19.19s%-40.40s"," ",l_bill_add3_desc.arr);
		fprintf(fp," %-17.17s: %-8s",loc_legend9.arr,dc_epi_id.arr); 

		if ( nd_episode_type == 'O' || nd_episode_type == 'E' ) 
			fprintf(fp,"/%-4s\n",dc_visit_id.arr);
		else
			fprintf(fp,"\n");


		/* LINE 4 */
	
		//Before Incoropation Pat Relation legend	
		/*fprintf(fp,"%-17.17s: %-s",loc_legend10.arr,dc_short_name.arr);

		if((l_pat_reln_with_gl_holder.len)>0)
		{
			fprintf(fp," (%-s)",l_pat_reln_with_gl_holder.arr);	
		}*/

		//After Incoropation Pat Relation legend	
		fprintf(fp,"%-17.17s: %-40.40s ",loc_legend10.arr,dc_short_name.arr);
		fprintf(fp,"%-17.17s: %-16.16s",loc_legend24.arr,l_pat_reln_with_gl_holder.arr);

		fprintf(fp,"\n\n");
	}

		//check_report_format();

		/* LINE 5 */
		//if(d_summary_yn=='Y')

	if (l_lsr != 0 && l_dmp == 0)
	{
		prt_line_uc();		
		fprintf(fp,"\n");
		lsr_line_cnt();
		if (l_main_hdr == 0)
		{
			// no need to print Subhdr 
		}
		else
		{
			fprintf(fp,"%6s %-20.20s %5s %-20.20s        %4.4s  %-20.20s\n"," ",loc_legend11.arr," "," ",currency.arr,loc_legend12.arr);		
			lsr_line_cnt();
			prt_line();
			fprintf(fp,"\n");
			lsr_line_cnt();
		}
	}	
	else
	{	
		fprintf(fp,"%6s %-20.20s %5s %-20.20s        %4.4s  %-20.20s\n\n"," ",loc_legend11.arr," "," ",currency.arr,loc_legend12.arr);
	}

	
		//else			
		//fprintf(fp,"%6s %-20.20s %5s %-20.20s %12s%-20.20s\n\n"," ",loc_legend11.arr," ",loc_legend18.arr," ",loc_legend12.arr);
	
	if (l_lsr != 0 && l_dmp == 0)
	{
		l_main_hdr = 1;
	}
	else
	{
		v_lno = 0;
	}
}

prt_line()
{
  int i;
  {
     for (i=0;i<90;i++)
     {
	if ( l_logo_yniflaser.arr[0] == 'Y')	
		fprintf(fp,"%c",175);
	else
		fprintf(fp,"_");		     
     }
  } 	      
}


prt_line_uc()
{
  int i;
  {
     for (i=0;i<90;i++)
     {
	fprintf(fp,"_");		     
     }
  } 	      
}

lsr_line_cnt()
{
	if (l_lsr != 0 && l_dmp == 0)
	{
		v_lno = v_lno  + 1;
	}

}

print_prt_grp_hdr()
{ 
	int fetch_service_line;
	
	//Printing of print group hdr and line commented after discussion with Madam Norijan
	//on 24/01/2004.	
	//fprintf(fp,"%-2s-%-3s",d1_prt_grp_hdr_code.arr,d1_prt_grp_line_code.arr);
	fprintf(fp,"%-2s %-3s"," "," ");
	fprintf(fp," %-35.35s%9s",d1_long_desc1.arr," ");

	check_report_format();

	if (d_summary_yn == 'Y')
	{               
		glcheck = 1;
		
		if (discount_print_yn == 'N')
		{	
			print_formated_amt(d1_gross_amt);
			
			//---------------------------------------------------
			//Added by Harish on 08/11/2003 agianst Customization document
			//Point # 18 - Bill Printing
			/*if (d1_gross_amt==l_bill_line_pr_gp_disc_amt)
			{
				//fprintf(fp," Exempted");
				fprintf(fp," %s",loc_legend23.arr);
			}
			else if((l_bill_line_pr_gp_disc_amt!=0)&&(d1_gross_amt!=l_bill_line_pr_gp_disc_amt))
			{
				//fprintf(fp," Exempted ");
				fprintf(fp," %s ",loc_legend23.arr);
				print_formated_amt_exempt(l_bill_line_pr_gp_disc_amt);
			}*/
			//---------------------------------------------------
			grp_gross_amt   = grp_gross_amt + d1_gross_amt;
		}
		else
		{
			
			if(l_bill_print_opt_for_disc_print==3)
			{
				print_formated_amt(d1_net_amt);
			}
			else
			{
				print_formated_amt(d1_gross_amt);
			
				//---------------------------------------------------
				//Added by Harish on 08/11/2003 agianst Customization document
				//Point # 18 - Bill Printing
															  //If Service amount is 0 then exempted should
															  //Not be printed.	   28/01/2004 Harish
				if ((d1_gross_amt==l_bill_line_pr_gp_disc_amt)&&(d1_gross_amt!=0))
				{
					//fprintf(fp," Exempted");
					fprintf(fp," %s",loc_legend23.arr);
				}
				else if((l_bill_line_pr_gp_disc_amt!=0)&&(d1_gross_amt!=l_bill_line_pr_gp_disc_amt))
				{
					//fprintf(fp," Exempted ");
					fprintf(fp," %s ",loc_legend23.arr);
					print_formated_amt_exempt(l_bill_line_pr_gp_disc_amt);
				}
				
				l_disc_grp_gross_amt = l_disc_grp_gross_amt + d1_gross_amt;
				l_disc_grp_disc_amt  = l_disc_grp_disc_amt  + l_bill_line_pr_gp_disc_amt; 
				//---------------------------------------------------
			}
			grp_gross_amt = grp_gross_amt + d1_net_amt;
		}

		fprintf(fp,"\n");

		v_lno++;
		if (v_lno > max_lines) print_next_page1();

	}
    else
    {	

		glcheck = 2;

        EXEC SQL OPEN BL_BILL_SERV_LINE_CUR; 

        if(OERROR)
		{
			disp_message(ERR_MESG,"Open failed on Cursor declare_service_line_cur");
			proc_exit();
		}

		d_service_amt_tot = 0;
		fetch_service_line = fetch_service_line_cur();

		fprintf(fp,"\n");
		v_lno++;
		if (v_lno > max_lines) print_next_page1();

        while(fetch_service_line)
		{ 
			//As per request from MOH, Malaysia (Madam Norizan) the service code is 
			//not printed - Changed by Harish.
			//fprintf(fp," %-10.10s/%-20.20s ",d_service_code.arr,d_service_desc.arr);			
			
			fprintf(fp,"%-32.32s ",d_service_desc.arr);
			//fprintf(fp," %7d/%-2d ",d_base_rate,d_base_qty); 
			fprintf(fp," %9s ",nd_base_rate_qty.arr); 			
			fprintf(fp," %4d "  ,d_service_qty);

			if (discount_print_yn == 'N')
				print_formated_amt(d_service_amt);		
			else
			{
	
				if(l_bill_print_opt_for_disc_print==3)
				{	
					print_formated_amt(d_service_net);
				}
				else
				{
					//---------------------------------------------------
					//Added by Harish on 08/11/2003 agianst Customization document
					//Point # 18 - Bill Printing
					print_formated_amt(d_service_amt);
													  //If Service amount is 0 then exempted should
													  //Not be printed.	  28/01/2004 Harish
					if ((d_service_amt==d_service_disc)&&(d_service_amt!=0))
					{
						//fprintf(fp," Exempted");
						fprintf(fp," %s",loc_legend23.arr);
					}
					else if((d_service_disc!=0)&&(d_service_amt!=d_service_disc))
					{
						//fprintf(fp," Exempted ");
						fprintf(fp," %s ",loc_legend23.arr);
						print_formated_amt_exempt(d_service_disc);
					}
					//---------------------------------------------------
					l_disc_grp_gross_amt = l_disc_grp_gross_amt + d_service_amt;
					l_disc_grp_disc_amt  = l_disc_grp_disc_amt  + d_service_disc; 
				}
			}
						
			//if (d_service_amt == d_service_disc)
			//	fprintf(fp,"Exempted");		

			fprintf(fp,"\n");
			
			if (discount_print_yn == 'N')	
				d_service_amt_tot = d_service_amt_tot + d_service_amt;	
			else
				d_service_amt_tot = d_service_amt_tot + d_service_net;	

        	v_lno++;
	        if (v_lno > max_lines) print_next_page1();

			fetch_service_line = fetch_service_line_cur();
		}

        EXEC SQL CLOSE BL_BILL_SERV_LINE_CUR; 

		grp_gross_amt = grp_gross_amt + d_service_amt_tot;

		if (ccount != gcount)
		{
			fprintf(fp,"\n");	
			v_lno++;
			if (v_lno > max_lines) print_next_page1();
		}
	}
}

print_ins_bill()
{ 
	fetch_cust_cur();

	mcount = 0;

	EXEC SQL SELECT NVL(COUNT(*),0) INTO :mcount FROM BL_BILL_HDR
	WHERE  nvl(mpi_id,DOC_TYPE_CODE||DOC_NUM) = :dc_mpi_id
	AND    patient_id = :dc_patient_id;

	if ( mcount > 1 ) 
		less_billed_amt = d2_bill_tot_amt;
	else
		less_billed_amt = 0;
}

print_less_total()
{ int i;

	tot_amt = 0;
	vst_amt = 0;

	EXEC SQL SELECT sum(DECODE(:discount_print_yn,'Y',nvl(bill_amt,0),nvl(gross_amt,0))) 
		 INTO :vst_amt
		 FROM BL_BILL_HDR 
		 WHERE DOC_TYPE_CODE  = :dc_doc_type_code
		 AND DOC_NUM        != :d_doc_num
		 AND TO_CHAR(DOC_DATE,'dd/mm/yyyy') = :d_doc_date
		 AND NVL(MPI_ID,DOC_TYPE_CODE||DOC_NUM) = :dc_mpi_id;

	tot_amt = grp_gross_amt - vst_amt;

	if (dc_episode_id.arr[0] == '\0' && nd_episode_type != 'R' )
	{
		EXEC SQL EXECUTE
		BEGIN
		blcommon.proc_get_rounded_Amt
			(
			nvl(:tot_amt,0),
			blcore.get_decimal_place(:nd_facility_id) , 
			:tot_amt ,
			:l_rounding_amt 
			);
		END;
		END-EXEC;
	}
}

print_less_disc()
{ 
	less_disc = 0;

	if (discount_print_yn == 'N')
	{
		if ((strcmp(d_bill_trx_type_code.arr,"O") == 0) || (strcmp(d_bill_trx_type_code.arr,"R") == 0))
  			less_disc = d_serv_disc_amt + d_man_disc_amt + d_overall_disc_amt;

		else
 			less_disc = d_serv_disc_amt + d_tot_bus_man_disc_amt;
	}
	else
	{	
		less_disc = 0;
	}
}


print_ins_ded()
{
	p_vst_ded = 0;

 	EXEC SQL SELECT nvl(vst_ded_amt,0) INTO :p_vst_ded FROM BL_BILL_HDR
    		WHERE  DOC_TYPE_CODE = :dc_doc_type_code
    		AND    DOC_NUM       = :d_doc_num; 
}

print_deposit()
{
	fprintf(fp,"       %-8s %-25s ",d3_doc_type_code.arr,d3_doc_num.arr);
}


print_prepay()
{
	fprintf(fp,"     %-8s %-25s ",d4_doc_type_code.arr,d4_doc_num.arr);
}

print_net_total()
{ 
	net_total = 0;

if (dc_episode_id.arr[0] != '\0' || nd_episode_type == 'R')
{
	net_total = grp_gross_amt - less_disc - d_deposit_adj_amt - d_prepay_adj_amt 
					+ p_vst_ded - vst_amt - nd_tot_spl_agency_amt;

	/*EXEC SQL EXECUTE
	BEGIN
	blcommon.proc_get_rounded_Amt
			(
			nvl(:net_total,0),
			blcore.get_decimal_place(:nd_facility_id), 
			:net_total ,
			:l_rounding_amt 
			);
	END;
	END-EXEC;


	
	if (strcmp(nd_calling_pgm_id.arr,"BLTBILVT") != 0 ||
	strcmp(nd_calling_pgm_id.arr,"BLROPDS2") != 0)
	{

	if ((!equal(d_deposit_adj_amt,(double) 0)) || (!equal(d_prepay_adj_amt,(double) 0)) 
		|| (!equal(p_vst_ded,(double) 0)) 
		||(!equal(nd_tot_spl_agency_amt,(double) 0)) 
		|| (!equal(less_disc,(double) 0))||net_total != 0)
	
//  if (net_total != 0 ) 
	{		
			replicate(vl,1);
			replicate(' ',60);
			fprintf(fp,"TOTAL");
			replicate(vl,1);
			replicate(' ',5);
			print_formated_amt(net_total);
			replicate(' ',1);
			replicate(vl,1);
			fprintf(fp,"\n");
			v_lno++;
				//if (v_lno > max_lines) print_next_page1();

			if ((strcmp(d_bill_nature_code.arr,"C") == 0) && (dc_credit_doc_ref_desc.arr[0] == '\0') && (sett_print_yn == 'N'))
			{	print_tot_box(); }
			else
			{	replicate(vl,1);
				replicate(' ',65);
				replicate(blc,1);
				//replicate(vlti,1);
				replicate(hl,22);
				replicate(vrti,1);
				fprintf(fp,"\n");
				v_lno++;
				//if (v_lno > max_lines) print_next_page1();
			}
			}
		 else
			{	if ((strcmp(d_bill_nature_code.arr,"C") == 0) && (sett_print_yn == 'N'))
					{	one_line_gap(); 
						
						one_line_gap(); 
						
					}
				else
					{	print_border();
						print_border();
					}
			}
		}
		else
		{
					replicate(vl,1);
					replicate(' ',60);
					fprintf(fp,"TOTAL");
					replicate(vl,1);
					replicate(' ',5);
					print_formated_amt(net_total);
					replicate(' ',1);
					replicate(vl,1);
					fprintf(fp,"\n");
					v_lno++;
					print_tot_box();
		}*/

}
}

pat_gen_det()
{   
 
	EXEC SQL SELECT long_desc INTO :nd_blng_grp
		 FROM bl_blng_grp WHERE blng_grp_id = :dc_blng_grp_id;

	nd_blng_grp.arr[nd_blng_grp.len] = '\0';

	EXEC SQL SELECT nationality  INTO :nd_nationality FROM mp_country_HIS_VW 
	 	 WHERE country_code IN (
				SELECT nationality_code 
				FROM mp_patient_mast  
				WHERE patient_id = :dc_patient_id);
	
	nd_nationality.arr[nd_nationality.len] = '\0';
	
	EXEC SQL SELECT short_desc INTO :nd_cash_counter FROM bl_cash_counter
	 	 WHERE cash_counter_code = :nn_cc_code
		 AND operating_facility_id = :nd_facility_id;

	nd_cash_counter.arr[nd_cash_counter.len] = '\0';

   
   EXEC SQL select user into :nd_user from dual;
   nd_user.arr[nd_user.len] = '\0';
	
}


print_balance_due1()
{
	int i,r,j,l;
	char first_line_yn;
    int no_of_lines = 0;
    double prt_cum_amt  = 0;
    char out_str[10][133];

	balance_due = 0;
	out_adj_amt = 0;

    for(i=0; i<10; i++) out_str[i][0] = '\0';

	last_recpt_doc_type_code.arr[0]	= '\0';
	last_recpt_doc_num.arr[0]		= '\0';
	slmt_short_desc.arr[0]			= '\0';
	slmt_doc_ref_desc.arr[0]		= '\0';
	slmt_doc_ref_date.arr[0]		= '\0';
	slmt_remarks.arr[0]				= '\0';

	last_recpt_doc_type_code.len	= 0;
	last_recpt_doc_num.len			= 0;
	slmt_short_desc.len				= 0;
	slmt_doc_ref_desc.len			= 0;
	slmt_doc_ref_date.len			= 0;
	slmt_remarks.len				= 0;
	if ((dc_episode_id.arr[0] != '\0' || nd_episode_type == 'R') && (sett_print_yn == 'N'))
	{
		/*if ((strcmp(d_bill_nature_code.arr,"C") == 0) || (strcmp(nd_calling_pgm_id.arr,"BLTBILVT") == 0 ||
			strcmp(nd_calling_pgm_id.arr,"BLROPDS2") == 0 ))
		{	
			if (strcmp(nd_calling_pgm_id.arr,"BLTBILVT") == 0 || strcmp(nd_calling_pgm_id.arr,"BLROPDS2") == 0)
			{
				EXEC SQL SELECT LAST_RECPT_DOC_TYPE_CODE, 
								LAST_RECPT_DOC_NUM,
								(NVL(BILL_PAID_AMT,0) - NVL(TOT_REFUND_AMT,0))
				           INTO	:last_recpt_doc_type_code, 
								:last_recpt_doc_num,
								:bill_paid_amt
						   FROM	BL_BILL_HDR
						  WHERE	DOC_TYPE_CODE = :dc_doc_type_code
							AND	DOC_NUM       = :d_doc_num
							AND	PATIENT_ID    = :dc_patient_id
							AND	((EPISODE_ID			= :dc_episode_id 
								  AND VISIT_ID			= :dc_visit_id
							      AND :nd_episode_type  in ('E','O') ) 
								  OR 
								  (:nd_episode_type = 'R'));


						last_recpt_doc_type_code.arr[last_recpt_doc_type_code.len]	= '\0';
						last_recpt_doc_num.arr[last_recpt_doc_num.len]				= '\0';
			}

			if (strcmp(d_bill_nature_code.arr,"C") == 0) 
			{ */



				EXEC SQL SELECT	nvl(sum(bill_tot_outst_amt),0) 
						   INTO	:bill_outst_amt
  						   FROM BL_BILL_HDR
  						  WHERE PATIENT_ID = :dc_patient_id 
						    AND (DOC_TYPE_CODE||' '||DOC_NUM)
						    != :dc_doc_type_code||' '||:d_doc_num
				            AND BILL_STATUS IS NULL
					    and ((nvl(bill_tot_outst_amt,0)>0 AND NVL(:l_include_refund,'N') = 'N')
				           OR
				           (nvl(bill_tot_outst_amt,0) != 0 AND NVL(:l_include_refund,'N') = 'Y'));
					   //AND	BILL_NATURE_CODE = 'C';
  
				EXEC SQL SELECT	nvl(tot_def_pat_outst_amt,0) 
						   INTO	:dcp_outst_amt
          				   FROM	BL_PATIENT_FIN_DTLS
          				  WHERE	PATIENT_ID = :dc_patient_id
					  AND nvl(tot_def_pat_outst_amt,0) > 0;

				balance_due = bill_outst_amt + dcp_outst_amt;
				//out_adj_amt = balance_due - net_total;
 				out_adj_amt = balance_due;
			/*}
			else
			{ 
				balance_due = net_total - bill_paid_amt;
				out_adj_amt = 0;
			}

			if ((strcmp(d_bill_nature_code.arr,"C") == 0) && (strcmp(nd_calling_pgm_id.arr,"BLTBILVT") == 0 ||
				strcmp(nd_calling_pgm_id.arr,"BLROPDS2") == 0 ) && (balance_due != 0))
			{
				out_adj_amt = balance_due + bill_paid_amt - net_total;
			}

			if ((strcmp(nd_calling_pgm_id.arr,"BLTBILVT") == 0 || strcmp(nd_calling_pgm_id.arr,"BLROPDS2") == 0) && ((strcmp(d_bill_nature_code.arr,"C") != 0) || (balance_due == 0)))
			{
				out_adj_amt = 0;
			}   */

			if (l_lsr != 0 && l_dmp == 0)
			{
				fprintf(fp,"%-50.50s ",loc_legend17.arr," ");
			}
			else  
			{  			
				fprintf(fp,"%20.20s %30s",loc_legend17.arr," ");
			}


			//print_formated_amt_total(balance_due);
			print_formated_amt_total(out_adj_amt);


			if (l_lsr != 0 && l_dmp == 0 )
			{	
				fprintf(fp,"\n");

				if (l_lsr != 0 && l_dmp == 0 )
				{		
					l_main_hdr = 0;
					v_lno = v_lno+1;	
				        if (v_lno > max_lines) print_next_page1();
				}

				//prt_line_uc();
				fprintf(fp,"\n");    
				lsr_line_cnt();

				fprintf(fp,"%-50.50s ",loc_legend62.arr,"");
				print_formated_amt_total(out_adj_amt+amt_payable - deposit_tot + l_bill_rounding_amt
					- l_bill_tot_adjust_amt - l_bill_tot_exempt_amt - l_bill_tot_write_off_amt);
			
				fprintf(fp,"\n");
			
				if (l_lsr != 0 && l_dmp == 0 )
				{		
				l_main_hdr = 0;
				v_lno = v_lno+1;	
				if (v_lno > max_lines) print_next_page1();
				}

				prt_line_uc();
						
			}

			if (l_lsr != 0 && l_dmp == 0 )
			{
			   /*-----------------------22/09/2005------------------*/

	                       if (loc_legend39.arr[0] != '\0' || loc_legend40.arr[0] != '\0'||
				   loc_legend41.arr[0] != '\0' || loc_legend42.arr[0] != '\0'||
				   loc_legend43.arr[0] != '\0' || loc_legend44.arr[0] != '\0'||
				   loc_legend45.arr[0] != '\0' || loc_legend46.arr[0] != '\0'||
				   loc_legend47.arr[0] != '\0' || loc_legend48.arr[0] != '\0'||
				   loc_legend49.arr[0] != '\0' || loc_legend50.arr[0] != '\0'||
				   loc_legend51.arr[0] != '\0' || loc_legend52.arr[0] != '\0'||
				   loc_legend53.arr[0] != '\0' || loc_legend54.arr[0] != '\0') 
			       {
				   remarks_cnt_chk();

				   while(v_lno <= (max_lines-l_lno))
				   {
					fprintf(fp,"\n");
					v_lno++;
				   }

				   // This  is a check for accommodating remarks with in a page.

				    l_main_hdr = 0;	
				    fprintf(fp,"\n"); 
				    v_lno++;
				    if (v_lno > max_lines) print_next_page1();
				    

			
				if (l_logo_yniflaser.arr[0] != 'Y')			    
				{
				      fprintf(fp,"%c9",ESC);          /* To Release the margin */				  
				      fprintf(fp,"%c(s8H",ESC); 	/* To set the font size	  */
				      fprintf(fp,"%c(s3B",ESC); 	/* To set Bold style 	  */
				      
				      l_main_hdr = 0;
				      fprintf(fp,"\n");					      
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				}

					if (loc_legend39.arr[0]	!= '\0')
					{
					fprintf(fp,"%-s\n\n",loc_legend39.arr);
					l_main_hdr = 0;
					 v_lno=v_lno+2;
					 if (v_lno > max_lines) print_next_page1();
					}

				if (l_logo_yniflaser.arr[0] != 'Y')			    
				{
				      fprintf(fp,"%c(s12.5H",ESC); 	/* To set the font size	  */
				}
				    				      
				      if (loc_legend40.arr[0] != '\0')	
				      {
				      fprintf(fp,"%-s\n",loc_legend40.arr); 
				      l_main_hdr = 0;
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend41.arr[0] != '\0') 
				      {
				      fprintf(fp,"%-s\n",loc_legend41.arr);
				      l_main_hdr = 0;
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend42.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend42.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend43.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend43.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend44.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend44.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend45.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend45.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend46.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				       fprintf(fp,"%-s\n",loc_legend46.arr);
				       v_lno++;
				       if (v_lno > max_lines) print_next_page1();
				       }


				      if (loc_legend47.arr[0] != '\0') 
				      {
					l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend47.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				      if (loc_legend48.arr[0] != '\0') 
				      {
				      l_main_hdr = 0;
				      fprintf(fp,"%-s\n",loc_legend48.arr);
				      v_lno++;
				      if (v_lno > max_lines) print_next_page1();
				      }

				     
				     //fprintf(fp,"\n"); v_lno++;

				     if (loc_legend49.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend49.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }

				     if (loc_legend50.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend50.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }

				     if (loc_legend51.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend51.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }

				     if (loc_legend52.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend52.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }

				     if (loc_legend53.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend53.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }

				     if (loc_legend54.arr[0] != '\0') 
				     {
				     l_main_hdr = 0;
				     fprintf(fp,"%-s\n",loc_legend54.arr);
				     v_lno++;
				     if (v_lno > max_lines) print_next_page1();
				     }
				 }
				 else
				 {
					fprintf(fp,"\n");
					v_lno++;
				 }
				 
				 fprintf(fp,"%-s\n",loc_legend55.arr);
				 v_lno++;
				
				                           
				while(v_lno <= max_lines)
				{
					fprintf(fp,"\n");
					v_lno++;
				}
                             
				fprintf(fp,"\n\n");	
				v_lno=v_lno+2;					
			}
			
			if(l_bill_page_no>1)
			{
				//fprintf(fp,"%-50.50s %s %d"," ",loc_legend21.arr,l_bill_page_no);				
				fprintf(fp,"%80.80s %d",loc_legend21.arr,l_bill_page_no);
			}			
			fprintf(fp,"\n");
				v_lno++;

			if (l_lsr != 0 && l_dmp == 0 )
			{
				if ( l_logo_yniflaser.arr[0] == 'Y')
				{
					fprintf(fp,"\n\n\n");
				}
			}
			

			//sprintf(string_var,"1:%d",v_lno);
			//disp_message(ERR_MESG,string_var);
		//}
	}	
}


remarks_cnt_chk()
{
      l_lno = 0;      
				    
      // fprintf(fp,"\n"); 
      l_lno++;			    

      if (l_logo_yniflaser.arr[0] != 'Y')			    
      {				      
	l_lno++;				    
      }

      if (loc_legend39.arr[0]	!= '\0')
      {					
	l_lno = l_lno + 2;
      }				    				      
      if (loc_legend40.arr[0] != '\0')	
      {      
	l_lno++;      
      }

      if (loc_legend41.arr[0] != '\0') 
      {				      
	l_lno++;      
      }

      if (loc_legend42.arr[0] != '\0') 
      {      
	l_lno++;      
      }

      if (loc_legend43.arr[0] != '\0') 
      {      
	l_lno++;      
      }

      if (loc_legend44.arr[0] != '\0') 
      {				      
	l_lno++;      
      }

      if (loc_legend45.arr[0] != '\0') 
      {				      
	l_lno++;      
      }

      if (loc_legend46.arr[0] != '\0') 
      {      
	l_lno++;       
      }

      if (loc_legend47.arr[0] != '\0') 
      {	
	l_lno++;      
      }

      if (loc_legend48.arr[0] != '\0') 
      {				      
	l_lno++;				      
      }			     

     if (loc_legend49.arr[0] != '\0') 
     {				     
	l_lno++;				     
     }

     if (loc_legend50.arr[0] != '\0') 
     {				     
	l_lno++;				     
     }

     if (loc_legend51.arr[0] != '\0') 
     {				     
	l_lno++;				     
     }

     if (loc_legend52.arr[0] != '\0') 
     {     
	l_lno++;     
     }

     if (loc_legend53.arr[0] != '\0') 
     {     
	l_lno++;     
     }

     if (loc_legend54.arr[0] != '\0') 
     {     
	l_lno++;     
     }                  
          
    //fprintf(fp,"%-s\n",loc_legend55.arr); 
    
    l_lno++;   
    
    if ( (l_lno+v_lno) > max_lines) 
    {       
       print_next_page1();
    }		
}


last_line_prt()
{	
	fprintf(fp,"\n");
	last_line_check = 0;
	rec_out = 'Y';
}

fetch_legend_value()
{
	loc_legend1.arr[0]		= '\0';
	loc_legend2.arr[0]		= '\0';
	loc_legend3.arr[0]		= '\0';
	loc_legend4.arr[0]		= '\0';
	loc_legend5.arr[0]		= '\0';
	loc_legend6.arr[0]		= '\0';
	loc_legend7.arr[0]		= '\0';
	loc_legend8.arr[0]		= '\0';
	loc_legend9.arr[0]		= '\0';
	loc_legend10.arr[0]		= '\0';
	loc_legend11.arr[0]		= '\0';
	loc_legend12.arr[0]		= '\0';
	loc_legend13.arr[0]		= '\0';
	loc_legend14.arr[0]		= '\0';
	loc_legend15.arr[0]		= '\0';
	loc_legend16.arr[0]		= '\0';
	loc_legend17.arr[0]		= '\0';
	loc_legend18.arr[0]		= '\0';
	loc_legend19.arr[0]		= '\0';
	loc_legend20.arr[0]		= '\0';
	loc_legend21.arr[0]		= '\0';
	loc_legend22.arr[0]		= '\0';
	loc_legend23.arr[0]		= '\0';
	loc_legend24.arr[0]		= '\0';
	loc_legend25.arr[0]		= '\0';
	loc_legend26.arr[0]		= '\0';
	loc_legend27.arr[0]		= '\0';
	loc_legend28.arr[0]		= '\0';
	loc_legend29.arr[0]		= '\0';
	loc_legend30.arr[0]		= '\0';
	loc_legend31.arr[0]		= '\0';
	loc_legend32.arr[0]		= '\0';
	loc_legend33.arr[0]		= '\0';
	loc_legend34.arr[0]		= '\0';
	loc_legend35.arr[0]		= '\0';
	loc_legend36.arr[0]		= '\0';
	loc_legend37.arr[0]		= '\0';
	loc_legend38.arr[0]		= '\0';
	loc_legend39.arr[0]		= '\0';
	loc_legend40.arr[0]		= '\0';
	loc_legend41.arr[0]		= '\0';
	loc_legend42.arr[0]		= '\0';
	loc_legend43.arr[0]		= '\0';
	loc_legend44.arr[0]		= '\0';
	loc_legend45.arr[0]		= '\0';
	loc_legend46.arr[0]		= '\0';
	loc_legend47.arr[0]		= '\0';
	loc_legend48.arr[0]		= '\0';
	loc_legend49.arr[0]		= '\0';
	loc_legend50.arr[0]		= '\0';
	loc_legend51.arr[0]		= '\0';
	loc_legend52.arr[0]		= '\0';
	loc_legend53.arr[0]		= '\0';
	loc_legend54.arr[0]		= '\0';
	loc_legend55.arr[0]		= '\0';
	loc_legend56.arr[0]		= '\0';
	loc_legend57.arr[0]		= '\0';
	loc_legend58.arr[0]		= '\0';
	loc_legend59.arr[0]		= '\0';
	loc_legend60.arr[0]		= '\0';
	loc_legend61.arr[0]		= '\0';
	loc_legend62.arr[0]		= '\0';
	loc_legend63.arr[0]		= '\0';

	loc_legend1.len			= 0;
	loc_legend2.len			= 0;
	loc_legend3.len			= 0;
	loc_legend4.len			= 0;
	loc_legend5.len			= 0;
	loc_legend6.len			= 0;
	loc_legend7.len			= 0;
	loc_legend8.len			= 0;
	loc_legend9.len			= 0;
	loc_legend10.len		= 0;
	loc_legend11.len		= 0;
	loc_legend12.len		= 0;
	loc_legend13.len		= 0;
	loc_legend14.len		= 0;
	loc_legend15.len		= 0;
	loc_legend16.len		= 0;
	loc_legend17.len		= 0;
	loc_legend18.len		= 0;
	loc_legend19.len		= 0;
	loc_legend20.len		= 0;
	loc_legend21.len		= 0;
	loc_legend22.len		= 0;
	loc_legend23.len		= 0;
	loc_legend24.len		= 0;
	loc_legend25.len		= 0;
	loc_legend26.len		= 0;
	loc_legend27.len		= 0;
	loc_legend28.len		= 0;
	loc_legend29.len		= 0;
	loc_legend30.len		= 0;
	loc_legend31.len		= 0;
	loc_legend32.len		= 0;
	loc_legend33.len		= 0;
	loc_legend34.len		= 0;
	loc_legend35.len		= 0;
	loc_legend36.len		= 0;
	loc_legend37.len		= 0;
	loc_legend38.len		= 0;
	loc_legend39.len		= 0;
	loc_legend40.len		= 0;
	loc_legend41.len		= 0;
	loc_legend42.len		= 0;
	loc_legend43.len		= 0;
	loc_legend44.len		= 0;
	loc_legend45.len		= 0;
	loc_legend46.len		= 0;
	loc_legend47.len		= 0;
	loc_legend48.len		= 0;
	loc_legend49.len		= 0;
	loc_legend50.len		= 0;
	loc_legend51.len		= 0;
	loc_legend52.len		= 0;
	loc_legend53.len		= 0;
	loc_legend54.len		= 0;
	loc_legend55.len		= 0;
	loc_legend56.len		= 0;
	loc_legend57.len		= 0;
	loc_legend58.len		= 0;
	loc_legend59.len		= 0;
	loc_legend60.len		= 0;
	loc_legend61.len		= 0;
	loc_legend62.len		= 0;
	loc_legend63.len		= 0;



	EXEC SQL	select	rtrim(substr(COLUMN_VALUE,1,50))
				  into	:loc_legend1
				  from	SM_RECORD_TRANS_DATA a,
						sm_lang_legend b
				 where	MODULE_ID   = 'SM' 
				   and	TABLE_ID    = 'SM_LANG_LEGEND'
				   and  COLUMN_ID   = 'DFLT_LEGEND_VALUE'
				   and  PK_VALUE    = LEGEND_ID
				   and  LEGEND_ID   = 'BILL_01.LEGEND_010' 
				   and  LANGUAGE_ID = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value 
		           into :loc_legend1
			  	   from sm_lang_legend
				  where LEGEND_ID = 'BILL_01.LEGEND_010';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 1",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
			 into  :loc_legend2
			 from  SM_RECORD_TRANS_DATA a,sm_lang_legend b
			 where MODULE_ID = 'SM' 
			 and   TABLE_ID = 'SM_LANG_LEGEND'
			 and   COLUMN_ID = 'DFLT_LEGEND_VALUE'
			 and   PK_VALUE = LEGEND_ID
			 and   LEGEND_ID = 'BILL_01.LEGEND_020' 
			 and   LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend2
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_020';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 2",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend3
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_030' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend3
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_030';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 3",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend4
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_040' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend4
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_040';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 4",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend5
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_050' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend5
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_050';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 5",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend6
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_060' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend6
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_060';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 6",0,"");
	}


	EXEC SQL select /*rtrim(substr(COLUMN_VALUE,1,50))*/ rtrim(COLUMN_VALUE)
				into :loc_legend7
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_070' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend7
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_070';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 7",0,"");
	}


	EXEC SQL select /*rtrim(substr(COLUMN_VALUE,1,50))*/ rtrim(COLUMN_VALUE)
				into :loc_legend8
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_080' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend8
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_080';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 8",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend9
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_090' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend9
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_090';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 9",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend10
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_100' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend10
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_100';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 10",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend11
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_110' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend11
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_110';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 11",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend12
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_120' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend12
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_120';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 12",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend13
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_130' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend13
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_130';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 13",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend14
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_140' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend14
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_140';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 14",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend15
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_150' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend15
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_150';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 15",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend16
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_160' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend16
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_160';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 16",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend17
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_170' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend17
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_170';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 17",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend18
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_180' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend18
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_180';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 18",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend19
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_190' 
				and LANGUAGE_ID = :nd_lang_id;

if (sqlca.sqlcode == 1403)
{
	EXEC SQL select dflt_legend_value into :loc_legend19
				from sm_lang_legend
				where LEGEND_ID = 'BILL_01.LEGEND_190';
}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 19",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend20
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_200' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend20
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_200';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 20",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend21
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_210' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend21
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_210';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 21",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend22
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_220' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend22
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_220';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 22",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend23
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_230' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend23
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_230';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 23",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend24
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_240' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend24
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_240';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 24",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend25
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_250' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend25
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_250';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 25",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend26
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_260' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend26
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_260';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 26",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend27
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_270' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend27
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_270';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 27",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend28
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_280' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend28
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_280';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 28",0,"");
	}


	EXEC SQL select /*rtrim(substr(COLUMN_VALUE,1,50))*/ rtrim(COLUMN_VALUE)
				into :loc_legend29
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_290' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend29
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_290';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 29",0,"");
	}

     if (l_lsr != 0 && l_dmp == 0)
      {
	EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(COLUMN_VALUE,1,50))))/2),' ')||UPPER(rtrim(substr(COLUMN_VALUE,1,50)))	   
				into :loc_legend30
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_300' 
				and LANGUAGE_ID = :nd_lang_id;
     }
     else
     {

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend30
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_300' 
				and LANGUAGE_ID = :nd_lang_id;
      }      

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend30
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_300';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 30",0,"");
	}


	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend31
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_310' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend31
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_310';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 31",0,"");
	}

	if (l_lsr != 0 && l_dmp == 0)
       {
		EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(COLUMN_VALUE,1,50))))/2),' ')||UPPER(rtrim(substr(COLUMN_VALUE,1,50)))	   
				into :loc_legend32
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_320' 
				and LANGUAGE_ID = :nd_lang_id;
	}
	else
	{
		EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend32
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_320' 
				and LANGUAGE_ID = :nd_lang_id;
	}

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend32
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_320';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 32",0,"");
	}

	if (l_lsr != 0 && l_dmp == 0)
	{
		EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(COLUMN_VALUE,1,50))))/2),' ')||UPPER(rtrim(substr(COLUMN_VALUE,1,50)))	   
				into :loc_legend33
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_330' 
				and LANGUAGE_ID = :nd_lang_id;
	}
	else
	{
		EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend33
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_330' 
				and LANGUAGE_ID = :nd_lang_id;

	}

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend33
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_330';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 33",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend34
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_340' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend34
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_340';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 34",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend35
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_350' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend35
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_350';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 35",0,"");
	}

	EXEC SQL select rtrim(substr(COLUMN_VALUE,1,50))
				into :loc_legend36
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_360' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend36
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_360';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 36",0,"");
	}



	EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(COLUMN_VALUE,1,50))))/2),' ')||UPPER(rtrim(substr(COLUMN_VALUE,1,50)))	
				into :loc_legend37
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_370' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(dflt_legend_value,1,50))))/2),' ')||UPPER(rtrim(substr(dflt_legend_value,1,50)))				
				        into :loc_legend37
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_370';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 37",0,"");
	}


	EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(COLUMN_VALUE,1,50))))/2),' ')||UPPER(rtrim(substr(COLUMN_VALUE,1,50)))	
				into :loc_legend38
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_380' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select lpad(' ',round((:l_margin_len-length(rtrim(substr(dflt_legend_value,1,50))))/2),' ')||UPPER(rtrim(substr(dflt_legend_value,1,50)))				
					into :loc_legend38
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_380';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 38",0,"");
	}

	/*------------------------22/09/2005-----------------------*/

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend39
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_390' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend39
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_390';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 39",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend40
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_400' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend40
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_400';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 40",0,"");
	}


	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend41
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_410' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend41
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_410';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 41",0,"");
	}



 EXEC SQL select  COLUMN_VALUE 
				into :loc_legend42
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_420' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend42
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_420';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 42",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend43
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_430' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend43
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_430';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 43",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend44
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_440' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend44
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_440';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 44",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend45
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_450' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend45
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_450';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 45",0,"");
	}


	
	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend46
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_460' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend46
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_460';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 46",0,"");
	}






	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend47
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_470' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend47
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_470';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 47",0,"");
	}




	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend48
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_480' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend48
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_480';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 48",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend49
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_490' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend49
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_490';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 49",0,"");
	}





	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend50
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_500' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend50
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_500';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 50",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend51
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_510' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend51
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_510';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 51",0,"");
	}




	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend52
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_520' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend52
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_520';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 52",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend53
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_530' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend53
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_530';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 53",0,"");
	}


	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend54
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_540' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend54
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_540';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 54",0,"");
	}



	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend55
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_550' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend55
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_550';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 55",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend56
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_560' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend56
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_560';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 56",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend57
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_570' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend57
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_570';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 57",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend58
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_580' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend58
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_580';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 58",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend59
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_590' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend59
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_590';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 59",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend60
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_600' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend60
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_600';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 60",0,"");
	}


	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend61
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_610' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend61
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_610';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 61",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend62
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_620' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend62
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_620';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 62",0,"");
	}

	EXEC SQL select  COLUMN_VALUE 
				into :loc_legend63
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'BILL_01.LEGEND_630' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend63
					from sm_lang_legend
					where LEGEND_ID = 'BILL_01.LEGEND_630';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 63",0,"");
	}




	loc_legend1.arr[loc_legend1.len]		= '\0';
	loc_legend2.arr[loc_legend2.len]		= '\0';
	loc_legend3.arr[loc_legend3.len]		= '\0';
	loc_legend4.arr[loc_legend4.len]		= '\0';
	loc_legend5.arr[loc_legend5.len]		= '\0';
	loc_legend6.arr[loc_legend6.len]		= '\0';
	loc_legend7.arr[loc_legend7.len]		= '\0';
	loc_legend8.arr[loc_legend8.len]		= '\0';
	loc_legend9.arr[loc_legend9.len]		= '\0';
	loc_legend10.arr[loc_legend10.len]		= '\0';
	loc_legend11.arr[loc_legend11.len]		= '\0';
	loc_legend12.arr[loc_legend12.len]		= '\0';
	loc_legend13.arr[loc_legend13.len]		= '\0';
	loc_legend14.arr[loc_legend14.len]		= '\0';
	loc_legend15.arr[loc_legend15.len]		= '\0';
	loc_legend16.arr[loc_legend16.len]		= '\0';
	loc_legend17.arr[loc_legend17.len]		= '\0';
	loc_legend18.arr[loc_legend18.len]		= '\0';
	loc_legend19.arr[loc_legend19.len]		= '\0';
	loc_legend20.arr[loc_legend20.len]		= '\0';
	loc_legend21.arr[loc_legend21.len]		= '\0';
	loc_legend22.arr[loc_legend22.len]		= '\0';
	loc_legend23.arr[loc_legend23.len]		= '\0';
	loc_legend24.arr[loc_legend24.len]		= '\0';
	loc_legend25.arr[loc_legend25.len]		= '\0';
	loc_legend26.arr[loc_legend26.len]		= '\0';
	loc_legend27.arr[loc_legend27.len]		= '\0';
	loc_legend28.arr[loc_legend28.len]		= '\0';
	loc_legend29.arr[loc_legend29.len]		= '\0';
	loc_legend30.arr[loc_legend30.len]		= '\0';
	loc_legend31.arr[loc_legend31.len]		= '\0';
	loc_legend32.arr[loc_legend32.len]		= '\0';
	loc_legend33.arr[loc_legend33.len]		= '\0';
	loc_legend34.arr[loc_legend34.len]		= '\0';
	loc_legend35.arr[loc_legend35.len]		= '\0';
	loc_legend36.arr[loc_legend36.len]		= '\0';
	loc_legend37.arr[loc_legend37.len]		= '\0';
	loc_legend38.arr[loc_legend38.len]		= '\0';
	loc_legend39.arr[loc_legend39.len]		= '\0';
	loc_legend40.arr[loc_legend40.len]		= '\0';
	loc_legend41.arr[loc_legend41.len]		= '\0';
	loc_legend42.arr[loc_legend42.len]		= '\0';
	loc_legend43.arr[loc_legend43.len]		= '\0';
	loc_legend44.arr[loc_legend44.len]		= '\0';
	loc_legend45.arr[loc_legend45.len]		= '\0';
	loc_legend46.arr[loc_legend46.len]		= '\0';
	loc_legend47.arr[loc_legend47.len]		= '\0';
	loc_legend48.arr[loc_legend48.len]		= '\0';
	loc_legend49.arr[loc_legend49.len]		= '\0';
	loc_legend50.arr[loc_legend50.len]		= '\0';
	loc_legend51.arr[loc_legend51.len]		= '\0';
	loc_legend52.arr[loc_legend52.len]		= '\0';
	loc_legend53.arr[loc_legend53.len]		= '\0';
	loc_legend54.arr[loc_legend54.len]		= '\0';
	loc_legend55.arr[loc_legend55.len]		= '\0';
	loc_legend56.arr[loc_legend56.len]		= '\0';
	loc_legend57.arr[loc_legend57.len]		= '\0';
	loc_legend58.arr[loc_legend58.len]		= '\0';
	loc_legend59.arr[loc_legend59.len]		= '\0';	
	loc_legend60.arr[loc_legend60.len]		= '\0';	
	loc_legend61.arr[loc_legend61.len]		= '\0';	
	loc_legend62.arr[loc_legend62.len]		= '\0';	
	loc_legend63.arr[loc_legend63.len]		= '\0';	
}


print_formated_amt(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30], fstr_amt[30];

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);        
        sprintf(str_amt,"%14s",s_amt);				
		ltrim (str_amt);		
		rtrim (str_amt);		
		//strcpy(fstr_amt,"CR ");
		//strcat(fstr_amt,str_amt);		
		//ltrim (fstr_amt);		
		//rtrim (fstr_amt);
		//sprintf(str_amt,"%15s",str_amt);		
        fprintf(fp,"%15s CR",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s ",str_amt);
     }

}                        


print_formated(loc_amount)
double loc_amount;
{
    char s_amt[30], str_amt[30], fstr_amt[30];

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);        
        sprintf(str_amt,"%14s",s_amt);				
		ltrim (str_amt);		
		rtrim (str_amt);
		sprintf(str_amt,"%sCR",str_amt);
		return str_amt;
 
        }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%sDR",s_amt);
	return str_amt;
     }
}                        

print_next_page1()
{
	int i;
	
	while(v_lno <= max_lines)
	{
		fprintf(fp,"\n");
		v_lno++;
	}	

	if (l_lsr != 0 && l_dmp == 0)
	{	 
		fprintf(fp,"\n\n");
	}
	else
	{
		fprintf(fp,"\n\n\n\n");
	}
		

	//fprintf(fp,"%-80.80s %s %d\n"," ",loc_legend21.arr,l_bill_page_no);
	fprintf(fp,"%80.80s %d\n",loc_legend21.arr,l_bill_page_no);
	if ( l_logo_yniflaser.arr[0] != 'Y')
	{
	fprintf(fp,""); /* To Eject Page */
	}
        fprintf(fp,"\n");

	if (l_lsr != 0 && l_dmp == 0 )
	{
		if ( l_logo_yniflaser.arr[0] == 'Y')
		{
			fprintf(fp,"\n\n");
		}
	}


	//sprintf(string_var,"%d",v_lno);
	//disp_message(ERR_MESG,string_var);

	print_report_head();
}




close_grp_hdr_cur()
{
	EXEC SQL CLOSE BL_BILL_GRP_HDR_LINE_CUR;
}


close_prepay_cur()
{
	EXEC SQL CLOSE BL_PREPAY_CUR;	
}

close_refund_cur()
{
	EXEC SQL CLOSE BL_REFUND_CUR;
}	

close_cust_cur()
{
	EXEC SQL CLOSE BL_BILL_HDR_CUST_CUR;
}	


ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

rtrim(l_str)
char *l_str;
{
  while (*l_str != '\0') *l_str++;
  l_str--;
  while (*l_str == ' ') *l_str--;
  *(l_str+1) = '\0';
}

get_left_margin()
{

	if (l_lsr != 0 && l_dmp == 0)
	  {
		if (l_logo_yniflaser.arr[0] == 'Y')			    
			l_margin_len = 94;				
		else
			l_margin_len = 60;

	  }
}


get_print_net_gross()
{
	//Modified by Harish against the instructions from Mr. Kuila 
	//Date - 06/11/2003 Point # 18 - Customization document.
	l_bill_print_opt_for_disc_print=0;
	
	EXEC SQL SELECT bill_print_opt_for_disc_print
	           INTO :l_bill_print_opt_for_disc_print
	           FROM bl_parameters
			  WHERE operating_facility_id = :nd_facility_id;

   if (OERROR)
        err_mesg("SELECT failed on table BL_PARAMETERS",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in BL_PARAMETERS",0,"");

	//This option will be used while the bill is printed form 
	//Print Visit Bill - No Discount option.
	if(strcmp(l_print_without_disc_func.arr,"1")==0)
	{
		l_bill_print_opt_for_disc_print=3;
	}
}

print_formated_amt_exempt(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30], fstr_amt[30];

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);        
        sprintf(str_amt,"%14s",s_amt);				
		ltrim (str_amt);		
		rtrim (str_amt);		
		strcpy(fstr_amt,"(-)");
		strcat(fstr_amt,str_amt);		
		ltrim (fstr_amt);		
		rtrim (fstr_amt);
		sprintf(str_amt,"%15s",fstr_amt);		
        fprintf(fp,"%15s ",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
		ltrim(s_amt);
		rtrim(s_amt);
        sprintf(str_amt,"%-15s",s_amt);
        fprintf(fp,"%-15s ",str_amt);
     }
}                        

get_bill_address()
{
	l_bill_contact_name.arr[0] = '\0';
	l_bill_contact_name.len = 0;

	l_bill_contact_name_title.arr[0] = '\0';
	l_bill_contact_name_title.len = 0;

	l_bill_long_desc.arr[0] = '\0';
	l_bill_long_desc.len = 0;

	l_bill_add1_desc.arr[0] = '\0';
	l_bill_add1_desc.len = 0;

	l_bill_add2_desc.arr[0] = '\0';
	l_bill_add2_desc.len = 0;

	l_bill_add3_desc.arr[0] = '\0';
	l_bill_add3_desc.len = 0;
	
	if(strcmp(d_bill_nature_code.arr,"A")==0)
	{
		EXEC SQL SELECT substr(contact_name,1,19),
						substr(contact_name_title,1,20),
						substr(long_name,1,40),
						substr(add1_desc,1,40),
						substr(add2_desc,1,40),
						substr(add3_desc,1,40)						
				   INTO :l_bill_contact_name,
						:l_bill_contact_name_title,
						:l_bill_long_desc,
						:l_bill_add1_desc,
						:l_bill_add2_desc,
						:l_bill_add3_desc
				   FROM ar_customer
				  WHERE cust_code = :dc_cust_code;

			   if (OERROR)
					err_mesg("SELECT failed on table AR_CUSTOMER",0,"");

	}
	else if(strcmp(d_bill_nature_code.arr,"C")==0)
	{
		EXEC SQL SELECT substr(mail_contact_name,1,19),
						substr(mail_postal_code,1,20),
						substr(ln1_mail_add,1,40),
						substr(ln2_mail_add,1,40),
						substr(ln3_mail_add,1,40),
						substr(mail_country_code,1,40)						
				   INTO :l_bill_contact_name,
						:l_bill_contact_name_title,
						:l_bill_long_desc,
						:l_bill_add1_desc,
						:l_bill_add2_desc,
						:l_bill_add3_desc
				   FROM mp_pat_other_dtls
				  WHERE patient_id = :dc_patient_id;

			   if (OERROR)
					err_mesg("SELECT failed on table MP_PAT_OTHER_DTLS",0,"");
	}

	l_bill_contact_name.arr[l_bill_contact_name.len] = '\0';
	l_bill_contact_name_title.arr[l_bill_contact_name_title.len] = '\0';
	l_bill_long_desc.arr[l_bill_long_desc.len] = '\0';
	l_bill_add1_desc.arr[l_bill_add1_desc.len] = '\0';
	l_bill_add2_desc.arr[l_bill_add2_desc.len] = '\0';
	l_bill_add3_desc.arr[l_bill_add3_desc.len] = '\0';

	if(l_bill_add3_desc.len > 0)
	{
		l_bill_add3_desc_temp.arr[0] = '\0';
		l_bill_add3_desc_temp.len = 0;		

		EXEC SQL SELECT long_name
				   INTO :l_bill_add3_desc_temp
				   FROM mp_country
				  WHERE country_code = :l_bill_add3_desc;

		l_bill_add3_desc_temp.arr[l_bill_add3_desc_temp.len] = '\0';

		if((strcmp(l_bill_add3_desc_temp.arr,l_bill_add3_desc.arr)!=0) && (l_bill_add3_desc_temp.len > 0))
		{
			strcpy(l_bill_add3_desc.arr,l_bill_add3_desc_temp.arr);
			l_bill_add3_desc.len = strlen(l_bill_add3_desc.arr);
		}
	}
}


get_bill_address_lsr()
{   
        int cnt1 = 0;

	l_bill_contact_name_p.arr[0] = '\0';
	l_bill_contact_name_p.len = 0;

	l_bill_contact_name_title_p.arr[0] = '\0';
	l_bill_contact_name_title_p.len = 0;

	l_bill_long_desc_p.arr[0] = '\0';
	l_bill_long_desc_p.len = 0;

	l_bill_add1_desc_p.arr[0] = '\0';
	l_bill_add1_desc_p.len = 0;

	l_bill_add2_desc_p.arr[0] = '\0';
	l_bill_add2_desc_p.len = 0;

	l_bill_add3_desc_p.arr[0] = '\0';
	l_bill_add3_desc_p.len = 0;


	l_bill_contact_name_c.arr[0] = '\0';
	l_bill_contact_name_c.len = 0;

	l_bill_contact_name_title_c.arr[0] = '\0';
	l_bill_contact_name_title_c.len = 0;

	l_bill_long_desc_c.arr[0] = '\0';
	l_bill_long_desc_c.len = 0;

	l_bill_add1_desc_c.arr[0] = '\0';
	l_bill_add1_desc_c.len = 0;

	l_bill_add2_desc_c.arr[0] = '\0';
	l_bill_add2_desc_c.len = 0;

	l_bill_add3_desc_c.arr[0] = '\0';
	l_bill_add3_desc_c.len = 0;


	l_line1.arr[0] = '\0';
	l_line2.arr[0] = '\0';
	l_line3.arr[0] = '\0';
	l_line4.arr[0] = '\0';
	l_line5.arr[0] = '\0';
	l_line6.arr[0] = '\0';

	l_line1.len = 0;
	l_line2.len = 0;
	l_line3.len = 0;
	l_line4.len = 0;
	l_line5.len = 0;
	l_line6.len = 0;
	
	if(strcmp(d_bill_nature_code.arr,"A")==0)
	{
		EXEC SQL SELECT		contact_name,
					contact_name_title,
					long_name,
					add1_desc,
					add2_desc,
					add3_desc
				   INTO 
						/*:l_bill_contact_name_c,
						:l_bill_contact_name_title_c,
						:l_bill_long_desc_c,
						:l_bill_add1_desc_c,
						:l_bill_add2_desc_c,
						:l_bill_add3_desc_c*/
					:l_line1,
					:l_line2,
					:l_line3,
					:l_line4,
					:l_line5,
					:l_line6
				   FROM ar_customer
				  WHERE cust_code = :dc_cust_code;

			   if (OERROR)
					err_mesg("SELECT failed on table AR_CUSTOMER",0,"");

	l_line1.arr[l_line1.len] = '\0';
	l_line2.arr[l_line2.len] = '\0';
	l_line3.arr[l_line3.len] = '\0';
	l_line4.arr[l_line4.len] = '\0';
	l_line5.arr[l_line5.len] = '\0';
	l_line6.arr[l_line6.len] = '\0';

	if(l_line6.len > 0)
		{
			l_bill_add3_desc_temp.arr[0] = '\0';
			l_bill_add3_desc_temp.len = 0;

			EXEC SQL SELECT long_name
				 INTO :l_bill_add3_desc_temp
				 FROM mp_country
				 WHERE country_code = :l_line6;

			l_bill_add3_desc_temp.arr[l_bill_add3_desc_temp.len] = '\0';

			if((strcmp(l_bill_add3_desc_temp.arr,l_line6.arr)!=0)
				&& (l_bill_add3_desc_temp.len > 0))
			{
				strcpy(l_line6.arr,l_bill_add3_desc_temp.arr);
				l_line6.len = strlen(l_line6.arr);
			}
		}
	
	if (l_line1.arr[0] != '\0')
	{
		cnt1 = cnt1+1;
		strcpy(l_bill_contact_name_c.arr,l_line1.arr);
	}

	if (l_line2.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_c.arr,l_line2.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_c.arr,l_line2.arr);	
		}
	}

	if (l_line3.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_c.arr,l_line3.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_c.arr,l_line3.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_c.arr,l_line3.arr);	
		}
	}

	if (l_line4.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_c.arr,l_line4.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_c.arr,l_line4.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_c.arr,l_line4.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_c.arr,l_line4.arr);	
		}
	}

	if (l_line5.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_c.arr,l_line5.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_c.arr,l_line5.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_c.arr,l_line5.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_c.arr,l_line5.arr);	
		}

		else if (cnt1 == 4)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add2_desc_c.arr,l_line5.arr);	
		}
	}

	if (l_line6.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_c.arr,l_line6.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_c.arr,l_line6.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_c.arr,l_line6.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_c.arr,l_line6.arr);	
		}

		else if (cnt1 == 4)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add2_desc_c.arr,l_line6.arr);	
		}

		else if (cnt1 == 5)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add3_desc_c.arr,l_line6.arr);	
		}
	}
	
	l_bill_contact_name_c.len = strlen(l_bill_contact_name_c.arr);
	l_bill_contact_name_title_c.len = strlen(l_bill_contact_name_title_c.arr);
	l_bill_long_desc_c.len = strlen(l_bill_long_desc_c.arr);
	l_bill_add1_desc_c.len = strlen(l_bill_add1_desc_c.arr);
	l_bill_add2_desc_c.len = strlen(l_bill_add2_desc_c.arr);
	l_bill_add3_desc_c.len = strlen(l_bill_add3_desc_c.arr);
	
	l_bill_contact_name_c.arr[l_bill_contact_name_c.len] = '\0';
	l_bill_contact_name_title_c.arr[l_bill_contact_name_title_c.len] = '\0';
	l_bill_long_desc_c.arr[l_bill_long_desc_c.len] = '\0';
	l_bill_add1_desc_c.arr[l_bill_add1_desc_c.len] = '\0';
	l_bill_add2_desc_c.arr[l_bill_add2_desc_c.len] = '\0';
	l_bill_add3_desc_c.arr[l_bill_add3_desc_c.len] = '\0';


	}

	cnt1 = 0;

	l_line1.arr[0] = '\0';
	l_line2.arr[0] = '\0';
	l_line3.arr[0] = '\0';
	l_line4.arr[0] = '\0';
	l_line5.arr[0] = '\0';
	l_line6.arr[0] = '\0';	

	l_line1.len = 0;
	l_line2.len = 0;
	l_line3.len = 0;
	l_line4.len = 0;
	l_line5.len = 0;
	l_line6.len = 0;	

	
	EXEC SQL SELECT		mail_contact_name,								
				ln1_mail_add,
				ln2_mail_add,
				ln3_mail_add,
				mail_postal_code,
				mail_country_code
			   INTO 
				:l_line1,
				:l_line2,
				:l_line3,
				:l_line4,
				:l_line5,
				:l_line6
			   FROM mp_pat_other_dtls
			   WHERE patient_id = :dc_patient_id;

			   if (OERROR)
				  err_mesg("SELECT failed on table MP_PAT_OTHER_DTLS",0,"");

	l_line1.arr[l_line1.len] = '\0';
	l_line2.arr[l_line2.len] = '\0';
	l_line3.arr[l_line3.len] = '\0';
	l_line4.arr[l_line4.len] = '\0';
	l_line5.arr[l_line5.len] = '\0';
	l_line6.arr[l_line6.len] = '\0';		

	if (l_line5.arr[0] != '\0' && loc_legend63.arr[0] != '\0')
	{
		strcat(loc_legend63.arr," ");		
		strcat(loc_legend63.arr,l_line5.arr);		

		l_line5.arr[0] = '\0';
		l_line5.len = 0;
		strcpy(l_line5.arr,loc_legend63.arr);
		l_line5.len = strlen(l_line5.arr);

	}

	if(l_line6.len > 0)   // country code
	{
		l_bill_add3_desc_temp.arr[0] = '\0';
		l_bill_add3_desc_temp.len = 0;

		EXEC SQL SELECT long_name
			 INTO :l_bill_add3_desc_temp
			 FROM mp_country
			 WHERE country_code = :l_line6;

		l_bill_add3_desc_temp.arr[l_bill_add3_desc_temp.len] = '\0';

		if((strcmp(l_bill_add3_desc_temp.arr,l_line6.arr)!=0)
			&& (l_bill_add3_desc_temp.len > 0))
		{
			strcpy(l_line6.arr,l_bill_add3_desc_temp.arr);
			l_line6.len = strlen(l_line6.arr);
		}
	}

	if (l_line1.arr[0] != '\0')
	{
		cnt1 = cnt1+1;
		strcpy(l_bill_contact_name_p.arr,l_line1.arr);
	}

	if (l_line2.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_p.arr,l_line2.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_p.arr,l_line2.arr);	
		}
	}

	if (l_line3.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_p.arr,l_line3.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_p.arr,l_line3.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_p.arr,l_line3.arr);	
		}
	}

	if (l_line4.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_p.arr,l_line4.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_p.arr,l_line4.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_p.arr,l_line4.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_p.arr,l_line4.arr);	
		}
	}

	if (l_line5.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_p.arr,l_line5.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_p.arr,l_line5.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_p.arr,l_line5.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_p.arr,l_line5.arr);	
		}

		else if (cnt1 == 4)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add2_desc_p.arr,l_line5.arr);	
		}
	}

	if (l_line6.arr[0] != '\0')
	{
		if (cnt1 == 0)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_p.arr,l_line6.arr);
		}
		else if (cnt1 == 1)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_contact_name_title_p.arr,l_line6.arr);	
		}
		else if (cnt1 == 2)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_long_desc_p.arr,l_line6.arr);	
		}
		else if (cnt1 == 3)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add1_desc_p.arr,l_line6.arr);	
		}

		else if (cnt1 == 4)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add2_desc_p.arr,l_line6.arr);	
		}

		else if (cnt1 == 5)
		{
		   cnt1 = cnt1+1;
		   strcpy(l_bill_add3_desc_p.arr,l_line6.arr);	
		}
	}
	
	
	l_bill_contact_name_p.len = strlen(l_bill_contact_name_p.arr);
	l_bill_contact_name_title_p.len = strlen(l_bill_contact_name_title_p.arr);
	l_bill_long_desc_p.len = strlen(l_bill_long_desc_p.arr);
	l_bill_add1_desc_p.len = strlen(l_bill_add1_desc_p.arr);
	l_bill_add2_desc_p.len = strlen(l_bill_add2_desc_p.arr);
	l_bill_add3_desc_p.len = strlen(l_bill_add3_desc_p.arr);

	l_bill_contact_name_p.arr[l_bill_contact_name_p.len] = '\0';
	l_bill_contact_name_title_p.arr[l_bill_contact_name_title_p.len] = '\0';
	l_bill_long_desc_p.arr[l_bill_long_desc_p.len] = '\0';
	l_bill_add1_desc_p.arr[l_bill_add1_desc_p.len] = '\0';
	l_bill_add2_desc_p.arr[l_bill_add2_desc_p.len] = '\0';
	l_bill_add3_desc_p.arr[l_bill_add3_desc_p.len] = '\0';
		
}


get_gl_holder_name_nric()
{
	l_gl_holder_name.arr[0] = '\0';
	l_gl_holder_name.len = 0;

	l_pat_reln_with_gl_holder.arr[0] = '\0';
	l_pat_reln_with_gl_holder.len = 0;

	l_credit_doc_ref_desc.arr[0] = '\0';
	l_credit_doc_ref_desc.len = 0;
	
	l_gl_ic.arr[0] = '\0';
	l_gl_ic.len = 0;

	
	if(strcmp(d_bill_nature_code.arr,"A")==0)
	{
	   if (l_lsr != 0 && l_dmp == 0)
	   {
		EXEC SQL SELECT (substr(gl_holder_name,1,decode(instr(gl_holder_name,';'),0,9999,instr(gl_holder_name,';'))-1)),
			        pat_reln_with_gl_holder,
				credit_doc_ref_desc,
				ltrim(substr(gl_holder_name,decode(instr(gl_holder_name,';'),0,9999,instr(gl_holder_name,';'))+1)) 
		INTO :l_gl_holder_name,
		     :l_pat_reln_with_gl_holder,
		     :l_credit_doc_ref_desc,
		     :l_gl_ic
		FROM bl_bill_hdr
		WHERE operating_facility_id = :nd_facility_id
		AND doc_type_code = :dc_doc_type_code
		AND doc_num       = :d_doc_num;
	   }
	   else
	   {
		EXEC SQL SELECT substr(gl_holder_name,1,40),
			pat_reln_with_gl_holder,
			substr(credit_doc_ref_desc,1,29)||' '||to_char(credit_doc_ref_date,'DD/MM/YYYY')		   
		INTO :l_gl_holder_name,
		     :l_pat_reln_with_gl_holder,
		     :l_credit_doc_ref_desc
	        FROM bl_bill_hdr
		WHERE operating_facility_id = :nd_facility_id
		AND doc_type_code = :dc_doc_type_code
		AND doc_num = :d_doc_num;
	   }

	  if (OERROR)
		err_mesg("SELECT failed on table BL_BILL_HDR - get_gl_holder_name_nric",0,"");
	
	
		l_gl_holder_name.arr[l_gl_holder_name.len] = '\0';
		l_pat_reln_with_gl_holder.arr[l_pat_reln_with_gl_holder.len] = '\0';
		l_gl_ic.arr[l_gl_ic.len] = '\0';
	}
	else
	{
		if (l_lsr != 0 && l_dmp == 0)
		{
			strcpy(l_gl_holder_name.arr,"");
			l_gl_holder_name.len = strlen(l_gl_holder_name.arr);
		}
		else
		{
			strcpy(l_gl_holder_name.arr,dc_short_name.arr);
			l_gl_holder_name.len = strlen(l_gl_holder_name.arr);
		}
	}
	
	l_nric_number.arr[0] = '\0';

	EXEC SQL SELECT national_id_num
	           INTO :l_nric_number
			   FROM mp_patient_mast
			  WHERE patient_id = :dc_patient_id;

	if (OERROR)
		err_mesg("SELECT failed on table MP_PATIENT_MAST - get_gl_holder_name_nric",0,"");

	l_nric_number.arr[l_nric_number.len] = '\0';
	l_credit_doc_ref_desc.arr[l_credit_doc_ref_desc.len] = '\0';
}

print_formated_amt_varstr(loc_amount_varstr,loc_amount)
char loc_amount_varstr[100];
double loc_amount;
{
    char s_amt[30], str_amt[30], fstr_amt[30];    

    if(loc_amount < 0)
	{
        put_val(loc_amount_varstr,-loc_amount);        
        format_amt(loc_amount_varstr);                
	ltrim (loc_amount_varstr);		
	rtrim (loc_amount_varstr);		
	strcpy(fstr_amt,"(-)");
	strcat(fstr_amt,loc_amount_varstr);		
	ltrim (fstr_amt);		
	rtrim (fstr_amt);
	sprintf(loc_amount_varstr,"%s",fstr_amt);		  
        }
    else 
	{
        put_val(loc_amount_varstr,loc_amount);         	
	format_amt(loc_amount_varstr);		
	ltrim (loc_amount_varstr);		
	rtrim (loc_amount_varstr);		
     }


}                        

print_formated_amt_total(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30], fstr_amt[30];

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);        
        sprintf(str_amt,"%14s",s_amt);				
		ltrim (str_amt);		
		rtrim (str_amt);		
		//strcpy(fstr_amt,"CR ");
		//strcat(fstr_amt,str_amt);		
		//ltrim (fstr_amt);		
		//rtrim (fstr_amt);
		//sprintf(str_amt,"%15s",fstr_amt);	
        fprintf(fp,"%15s CR",str_amt);
    }
    else if(loc_amount > 0)
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s DR",str_amt);
    }
	else if(loc_amount==0)
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s",str_amt);
	 }
}

check_report_format()
{
	//Modified by Harish 
	//Date - 06/11/2003 Point # 1 - modification document.
	//----------------------------------------------------------

    d_summary_yn = '\0';

	l_dflt_bill_print_in_summ_yn.arr[0] = '\0';

	EXEC SQL SELECT NVL(DFLT_BILL_PRINT_IN_SUMM_YN,'N')
			   INTO l_dflt_bill_print_in_summ_yn 
	           FROM bl_parameters
			  WHERE operating_facility_id = :nd_facility_id;

	l_dflt_bill_print_in_summ_yn.arr[l_dflt_bill_print_in_summ_yn.len] = '\0';

	//First preference given to front end Summary parameter.	
	if(strcmp(l_dflt_bill_print_in_summ_yn.arr,"Y")==0)
	{
		d_summary_yn='Y';
	}
	else
	{
		EXEC SQL SELECT NVL(SUMMARY_YN,'N')
				   INTO :d_summary_yn
				   FROM BL_SUM_DET_PRINT
				  WHERE BLNG_GRP_ID       = :dc_blng_grp_id
    				AND PRT_GRP_HDR_CODE  = :d1_prt_grp_hdr_code
					AND operating_facility_id = :nd_facility_id;       	

			if (sqlca.sqlcode == 1403 )
			{
				     EXEC SQL SELECT NVL(summary_yn,'N')
							    INTO :d_summary_yn
							    FROM bl_sum_det_print
							   WHERE blng_grp_id           = '**'
    						 	 AND prt_grp_hdr_code      = :d1_prt_grp_hdr_code
								 AND operating_facility_id = :nd_facility_id;

					 if (sqlca.sqlcode == 1403 )
							d_summary_yn='Y';
			}
	}

	//If condition will be considered only in reprint options.
	if(strcmp(l_detail_report_flag.arr,"Y")==0)
	{
			EXEC SQL SELECT NVL(SUMMARY_YN,'N')
					   INTO :d_summary_yn
					   FROM BL_SUM_DET_PRINT
					  WHERE BLNG_GRP_ID       = :dc_blng_grp_id
    					AND PRT_GRP_HDR_CODE  = :d1_prt_grp_hdr_code
						AND operating_facility_id = :nd_facility_id;       	

			if (sqlca.sqlcode == 1403 )
			{
				     EXEC SQL SELECT NVL(summary_yn,'N')
							    INTO :d_summary_yn
							    FROM bl_sum_det_print
							   WHERE blng_grp_id           = '**'
    						 	 AND prt_grp_hdr_code      = :d1_prt_grp_hdr_code
								 AND operating_facility_id = :nd_facility_id;

					 if (sqlca.sqlcode == 1403 )
							d_summary_yn='Y';
			}
	}
}



