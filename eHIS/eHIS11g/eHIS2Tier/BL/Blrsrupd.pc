   

/************************************************************************/
/* CSS MEDICOM VER 2.0                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLRSRUPD.PC                                  */
/* AUTHOR				 :                                              */
/* DATE WRITTEN          :                                              */
/* MODIFIED BY           : V.SRIKANTH                                   */
/* DATE MODIFIED         : 23/03/1999                                   */
/*                                                                      */
/* FUNCTION              : BILLING SERVICE RATE UPDATION                */
/*                                                                      */
/*                                                                      */
/************************************************************************/
      
/*                                
#define DEBUG     
*/
// #define INIT_MESG "Report Generation In Progress"
#include <stdio.h>
#include <string.h>
#include "gl.h"
#include <bl.h>

EXEC SQL BEGIN DECLARE SECTION;

    VARCHAR uid_pwd[95],
	    d_session_id[16],
	    d_pgm_date[14],
            rep_date[20],
            comp_name[50],
            oper_id[21],
            d_curr_pgm_name[15];

    VARCHAR nd_date_time             [17],
	    nd_date_time_1 [17],
	    nd_service_fm            [11],
		nd_operating_facility_id [3],
		nd_ws_no                 [31],
	    nd_service_to            [11],
	    d_rowid                  [25],
	    d_blng_serv_code         [11],
	    d_blng_serv_desc         [41],
	    d_ip_rate                [11],
	    d_op_rate                [11],
	    d_ref_rate               [11],
	    d_min_charge_amt         [11],
	    d_old_ip_rate            [11],
	    d_old_op_rate            [11],
	    d_old_ref_rate           [11],
	    d_old_min_charge_amt     [11];

    double d_ip_rate_num,
           d_op_rate_num,
           d_ref_rate_num,
	   d_min_charge_amt_num;
	   

char        nd_option;  /* 
			   1 - Print Edit List only
			   2 - Update price and print revised list
			   3 - Print Revised List only
			*/

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

char hdr_line1[200],
     hdr_line2[200],
     hdr_line3[200],
     hdr_line4[200],
     hdr_line5[200];

char rep_title1[50],
     rep_title2[35];

FILE *f1;

int page_no,
    line_no,
    first_line,
    g_count;

char filename[150];

int rep_width;

void proc_main(argc,argv)
int argc;
char *argv[];
{
     if(argc  < 5) 
	{
        disp_message(ERR_MESG,"BLRSRUPD : Usage BLRSRUPD userid/password session_id pgm_date facility_id");
        proc_exit();
    }

    strcpy(g_pgm_id,"BLRSRUPD");

    strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_session_id.arr,argv[2]);
    d_session_id.len = strlen(d_session_id.arr);
    
    strcpy(d_pgm_date.arr,argv[3]);
    d_pgm_date.len = strlen(d_pgm_date.arr);

    EXEC SQL CONNECT :uid_pwd;
	set_meduser_role();

    if(OERROR) {
        disp_message(ORA_MESG,"Unable to connect to oracle.");
        proc_exit();
    }

    fetch_prog_param();
    fetch_sys_info();

	strcpy(filename,WORKING_DIR);
    strcat(filename,"blrsrupd.lis");


//    strcpy(filename,"blrsrupd.lis");

    if( (f1=fopen(filename,"w")) == NULL) {
        disp_message(ERR_MESG,"Error in opening output file...\n");
	proc_exit();
    }

    page_no=1;
    line_no=1;

    decl_curs();

    /*put_inp_parm();*/

    if (nd_option == '1')
        do_report();
    else if (nd_option == '2')
	/*do_update();
    else */
	do_report1();

    print_end_of_rep();

    fclose(f1);

    EXEC SQL COMMIT WORK RELEASE;

    return;
}

fetch_prog_param()
{
    nd_date_time.arr[0]  = '\0';
    nd_service_fm.arr[0] = '\0';
    nd_service_to.arr[0] = '\0';
    nd_operating_facility_id.arr[0] = '\0';
	nd_ws_no.arr[0] = '\0';

    nd_date_time.len     = 0;
    nd_service_fm.len    = 0;
    nd_service_to.len    = 0;
    nd_operating_facility_id.len = 0;
    nd_ws_no.len = 0;

    nd_option = '\0';

   EXEC SQL SELECT PARAM1,
		   PARAM2,
		   PARAM3,
		   PARAM4,
		   PARAM5,
		   OPERATING_FACILITY_ID
              INTO :nd_date_time,
                   :nd_service_fm,
                   :nd_service_to,
				   :nd_option,
				   :nd_ws_no,
				   :nd_operating_facility_id
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = :d_curr_pgm_name
               AND SESSION_ID = :d_session_id
               AND PGM_DATE   = :d_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NO_DATA_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

    nd_date_time.arr[nd_date_time.len]                 = '\0';
    nd_service_fm.arr[nd_service_fm.len]               = '\0';
    nd_service_to.arr[nd_service_to.len]               = '\0';
	nd_operating_facility_id.arr[nd_operating_facility_id.len] = '\0';
    nd_ws_no.arr[nd_ws_no.len]               = '\0';

    if(nd_option == '1') {
	rep_width = 100;
        strcpy(rep_title1, "EDIT LIST FOR BILLING SERVICE PRICE UPDATE");
    }
    else {
	rep_width = 140;
        strcpy(rep_title1, "REVISED LIST FOR BILLING SERVICE PRICE UPDATE");
    }

    strcpy(rep_title2,"EFFECTIVE FROM ");
    strcat(rep_title2,nd_date_time.arr);

   EXEC SQL DELETE SY_PROG_PARAM
             WHERE PGM_ID     = :d_curr_pgm_name
               AND SESSION_ID = :d_session_id
               AND PGM_DATE   = :d_pgm_date;

   if (OERROR)
         err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

}


decl_curs()
{

    EXEC SQL DECLARE PRICE_UPDT_CUR CURSOR FOR
	      SELECT ROWID,
		     BLNG_SERV_CODE,
		     LTRIM(TO_CHAR(IP_RATE, '999,990.99')),
		     LTRIM(TO_CHAR(OP_RATE, '999,990.99')),
		     LTRIM(TO_CHAR(REF_RATE,'999,990.99')),
		     LTRIM(TO_CHAR(MIN_CHARGE_AMT ,'999,990.99')),
		     IP_RATE,
		     OP_RATE,
		     REF_RATE,
		     MIN_CHARGE_AMT
		FROM BL_SERV_PRICE_UPDT
	       WHERE EFF_DATE_TIME = TO_DATE(:nd_date_time,'DD/MM/YYYY HH24:MI')
		 AND BLNG_SERV_CODE  BETWEEN NVL(:nd_service_fm,'!!!!!!!!!!') AND 
		       NVL(:nd_service_to,'~~~~~~~~~~')
	       ORDER BY BLNG_SERV_CODE;

    EXEC SQL DECLARE REVISED_UPDT_CUR CURSOR FOR
		SELECT 
				LTRIM(TO_CHAR(IP_RATE, '999,990.99')),
				LTRIM(TO_CHAR(OP_RATE, '999,990.99')),
				LTRIM(TO_CHAR(REF_RATE,'999,990.99')),
                LTRIM(TO_CHAR(MIN_CHARGE_AMT ,'999,990.99'))

		FROM   BL_SERV_CUST_PC_PRICE b
		WHERE  CUST_PC_IND  ='S'
		AND    BLNG_SERV_CODE BETWEEN NVL(:nd_service_fm,'!!!!!!!!!!') AND 
		       NVL(:nd_service_to,'~~~~~~~~~~')
		AND   (TRUNC(VALID_TO), BLNG_SERV_CODE) IN
				(SELECT MAX(TRUNC(VALID_TO)), BLNG_SERV_CODE FROM   BL_SERV_CUST_PC_PRICE C
		WHERE NVL(VALID_TO,TRUNC(SYSDATE)) < TO_DATE(:nd_date_time,'DD/MM/YYYY HH24:MI')
		AND CUST_PC_IND  ='S'
		AND B.BLNG_SERV_CODE = C.BLNG_SERV_CODE
		GROUP BY BLNG_SERV_CODE)
		ORDER BY BLNG_SERV_CODE;


    EXEC SQL DECLARE REVISED_UPDT_CUR1 CURSOR FOR
		 SELECT blng_serv_code,
				ip_rate,
				op_rate,
				ref_rate,
				LTRIM(TO_CHAR(MIN_CHARGE_AMT ,'999,990.99'))
		 FROM   BL_SERV_CUST_PC_PRICE 
		 WHERE  CUST_PC_IND    = 'S'
		 AND    BLNG_SERV_CODE BETWEEN NVL(:nd_service_fm,'!!!!!!!!!!') AND 
		        NVL(:nd_service_to,'~~~~~~~~~~')
		 AND    TO_DATE(:nd_date_time,'DD/MM/YYYY HH24:MI')
		        between trunc(VALID_FROM) and  trunc(VALID_TO);
}

fetch_data()
{

    d_rowid.arr[0]             = '\0';
    d_blng_serv_code.arr[0]    = '\0';
    d_blng_serv_desc.arr[0]    = '\0';
    d_ip_rate.arr[0]           = '\0';
    d_op_rate.arr[0]           = '\0';
    d_ref_rate.arr[0]          = '\0';
    d_min_charge_amt.arr[0]    = '\0';

    d_rowid.len                = 0;
    d_blng_serv_code.len       = 0;
    d_blng_serv_desc.len       = 0;
    d_ip_rate.len              = 0;
    d_op_rate.len              = 0;
    d_ref_rate.len             = 0;
    d_min_charge_amt.len       = 0;

    d_ip_rate_num              = 0;
    d_op_rate_num              = 0;
    d_ref_rate_num             = 0;
    d_min_charge_amt_num       = 0;

    EXEC SQL FETCH PRICE_UPDT_CUR
	      INTO :d_rowid,
		   :d_blng_serv_code,
                   :d_ip_rate,
                   :d_op_rate,
                   :d_ref_rate,
                   :d_min_charge_amt,
                   :d_ip_rate_num,
                   :d_op_rate_num,
                   :d_ref_rate_num,
                   :d_min_charge_amt_num;

    if(OERROR)
	err_mesg("FETCH failed on cursor PRICE_UPDT_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_rowid.arr[d_rowid.len]                    = '\0';
    d_blng_serv_code.arr[d_blng_serv_code.len]  = '\0';
    d_ip_rate.arr[d_ip_rate.len]                = '\0';
    d_op_rate.arr[d_op_rate.len]                = '\0';
    d_ref_rate.arr[d_ref_rate.len]              = '\0';
    d_min_charge_amt.arr[d_min_charge_amt.len]  = '\0';


    EXEC SQL SELECT LONG_DESC
	       INTO :d_blng_serv_desc
	       FROM BL_BLNG_SERV
	      WHERE BLNG_SERV_CODE = :d_blng_serv_code;

    if(OERROR)
	err_mesg("SELECT failed on table BL_BLNG_SERV",0,"");

    d_blng_serv_desc.arr[d_blng_serv_desc.len]  = '\0';

    return 1;
}

fetch_data1()
{

    d_blng_serv_code.arr[0]    = '\0';
    d_blng_serv_desc.arr[0]    = '\0';
    d_ip_rate.arr[0]           = '\0';
    d_op_rate.arr[0]           = '\0';
    d_ref_rate.arr[0]          = '\0';
    d_min_charge_amt.arr[0]    = '\0';
    d_old_ip_rate.arr[0]       = '\0';
    d_old_op_rate.arr[0]       = '\0';
    d_old_ref_rate.arr[0]      = '\0';
    d_old_min_charge_amt.arr[0]= '\0';

    d_blng_serv_code.len       = 0;
    d_blng_serv_desc.len       = 0;
    d_ip_rate.len              = 0;
    d_op_rate.len              = 0;
    d_ref_rate.len             = 0;
    d_min_charge_amt.len       = 0;
    d_old_ip_rate.len          = 0;
    d_old_op_rate.len          = 0;
    d_old_ref_rate.len         = 0;
    d_old_min_charge_amt.len   = 0;

    EXEC SQL FETCH REVISED_UPDT_CUR
	      INTO     :d_old_ip_rate,
                   :d_old_op_rate,
                   :d_old_ref_rate,
                   :d_old_min_charge_amt;

	EXEC SQL FETCH REVISED_UPDT_CUR1
	       INTO  :d_blng_serv_code,
		         :d_ip_rate,
				 :d_op_rate,
				 :d_ref_rate,
				 :d_min_charge_amt;


    if(OERROR)
	err_mesg("FETCH failed on cursor REVISED_UPDT_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_blng_serv_code.arr[d_blng_serv_code.len]          = '\0';
    d_ip_rate.arr[d_ip_rate.len]                        = '\0';
    d_op_rate.arr[d_op_rate.len]                        = '\0';
    d_ref_rate.arr[d_ref_rate.len]                      = '\0';
    d_min_charge_amt.arr[d_min_charge_amt.len]          = '\0';
    d_old_ip_rate.arr[d_old_ip_rate.len]                = '\0';
    d_old_op_rate.arr[d_old_op_rate.len]                = '\0';
    d_old_ref_rate.arr[d_old_ref_rate.len]              = '\0';
    d_old_min_charge_amt.arr[d_old_min_charge_amt.len]  = '\0';


    EXEC SQL SELECT LONG_DESC
	       INTO :d_blng_serv_desc
	       FROM BL_BLNG_SERV
	      WHERE BLNG_SERV_CODE = :d_blng_serv_code;

    if(OERROR)
	err_mesg("SELECT failed on table BL_BLNG_SERV",0,"");

    d_blng_serv_desc.arr[d_blng_serv_desc.len]  = '\0';

    return 1;
}


do_report()
{

    put_hdr();

    EXEC SQL OPEN PRICE_UPDT_CUR;
    if(OERROR)
	err_mesg("OPEN failed on cursor PRICE_UPDT_CUR",0,"");

    while(fetch_data()) {

	chk_break(1);
	fprintf(f1,"%-10s %-40s %10s %10s %10s %10s\n",
                  d_blng_serv_code.arr,
                  d_blng_serv_desc.arr,
                  d_ip_rate.arr,
                  d_op_rate.arr,
                  d_ref_rate.arr,
                  d_min_charge_amt.arr);
	line_no ++;

    }

    EXEC SQL CLOSE PRICE_UPDT_CUR;
    if(OERROR)
	err_mesg("CLOSE failed on cursor PRICE_UPDT_CUR",0,"");
}

do_update()
{
/*

//--Store the date time for updating audit table. 
	nd_date_time_1.arr[0] = '\0';
    EXEC SQL SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI') INTO :nd_date_time_1 FROM DUAL;    
	nd_date_time_1.arr[nd_date_time_1.len] = '\0';

    EXEC SQL OPEN PRICE_UPDT_CUR;
    if(OERROR)
	err_mesg("OPEN failed on cursor PRICE_UPDT_CUR",0,"");

    while(fetch_data()) 
	{
	    EXEC SQL UPDATE BL_BLNG_SERV
	            SET OLD_IP_RATE        = IP_RATE,
	                OLD_OP_RATE        = OP_RATE,
	                OLD_REF_RATE       = REF_RATE,
	                OLD_MIN_CHARGE_AMT = MIN_CHARGE_AMT,
	                IP_RATE            = :d_ip_rate_num,
	                OP_RATE            = :d_op_rate_num,
	                REF_RATE           = :d_ref_rate_num,
	                MIN_CHARGE_AMT     = :d_min_charge_amt_num,
	                PRICE_REVISED_DATE = 
	                        TO_DATE(:nd_date_time,'DD/MM/YYYY HH24:MI'),
			MODIFIED_BY_ID     = USER,
			MODIFIED_DATE      =   SYSDATE,
			MODIFIED_AT_WS_NO  = :nd_ws_no,
			MODIFIED_FACILITY_ID = :nd_operating_facility_id
		  WHERE BLNG_SERV_CODE     = :d_blng_serv_code;

	    if(OERROR)
	         err_mesg("UPDATE failed on table BL_BLNG_SERV",0,"");

//INSERT RECORDS IN BL_BLNG_SERV_AUDIT_DTLS ON EVERY SERVICE PRICE 
//    UPDATION. VSK 23/03/1999 

    EXEC SQL  INSERT INTO BL_BLNG_SERV_AUDIT_DTLS (
		 BLNG_SERV_CODE                 ,
		 LONG_DESC                      ,
		 SHORT_DESC                     ,
		 LOC_LANG_LONG_DESC     ,
		 LOC_LANG_SHORT_DESC    ,
		 SERV_GRP_CODE                 ,
		 SERV_CLASSIFICATION_CODE,
		 PRT_GRP_HDR_CODE              ,
		 PRT_GRP_LINE_CODE              ,
		 SOURCE_MODULE_DEPT_FLAG        ,
		 DEPT_CODE                      ,
		 ICD_CODE                       ,
		 BLNG_GRP_PC_PRICE_YN           ,
		 DR_FEE_FLAG                    ,
		 DIR_ENTRY_FLAG                ,
		 SOURCE_MODULE_RATE_FLAG        ,
		 RATE_ENTRY_BY_USER_FLAG        ,
		 DEF_CHARGE                     ,
		 DEF_REF_BILL_TYPE_CODE,
		 IP_RATE                        ,
		 OP_RATE                       ,
		 REF_RATE                      ,
		 EMER_RATE      		              ,
		 DAYCARE_RATE               ,
		 MIN_CHARGE_AMT            ,
		 BASE_QTY                       ,
		 SERV_LOCN_CODE           ,
		 SERV_ANAL_GRP1             ,
		 SERV_ANAL_GRP2              ,
		 OLD_IP_RATE                    ,
		 OLD_OP_RATE                   ,
		 OLD_REF_RATE                  ,
		 OLD_EMER_RATE                ,
		 OLD_DAYCARE_RATE           ,
		 OLD_MIN_CHARGE_AMT        ,
		 PRICE_REVISED_DATE           ,
		 ADDED_BY_ID                    ,
		 MODIFIED_BY_ID            ,
		 ADDED_DATE                     ,
		 MODIFIED_DATE              ,
		 STATUS                         ,
		 PHYS_CAT_CODE             ,
		 MISC_SERV_YN                 ,
		 NURSING_SERV_YN           ,
		 TRX_DATE_TIME                  ,
		 TRX_USER_ID                    ,
		 TRX_TYPE                       ,
		 TRX_REMARKS                ,
		 ADDED_AT_WS_NO          ,
		 ADDED_FACILITY_ID          ,
		 MODIFIED_AT_WS_NO       ,
		 MODIFIED_FACILITY_ID              )

		SELECT   BLNG_SERV_CODE                 ,
			 LONG_DESC                      ,
			 SHORT_DESC                     ,
			 LOC_LANG_LONG_DESC     ,
			 LOC_LANG_SHORT_DESC    ,
			 SERV_GRP_CODE                 ,
			 SERV_CLASSIFICATION_CODE,
			 PRT_GRP_HDR_CODE              ,
			 PRT_GRP_LINE_CODE              ,
			 SOURCE_MODULE_DEPT_FLAG        ,
			 DEPT_CODE                      ,
			 ICD_CODE                       ,
			 BLNG_GRP_PC_PRICE_YN           ,
			 DR_FEE_FLAG                    ,
			 DIR_ENTRY_FLAG                ,
			 SOURCE_MODULE_RATE_FLAG        ,
			 RATE_ENTRY_BY_USER_FLAG        ,
			 DEF_CHARGE                     ,
			 DEF_REF_BILL_TYPE_CODE,
			 IP_RATE                        ,
			 OP_RATE                       ,
			 REF_RATE                      ,
			 EMERG_RATE                    ,
			 DAYCARE_RATE               ,
			 MIN_CHARGE_AMT            ,
			 BASE_QTY                       ,
			 SERV_LOCN_CODE           ,
			 SERV_ANAL_GRP1             ,
			 SERV_ANAL_GRP2              ,
			 OLD_IP_RATE                    ,
			 OLD_OP_RATE                   ,
			 OLD_REF_RATE                  ,
			 OLD_EMER_RATE                ,
			 OLD_DAYCARE_RATE           ,
			 OLD_MIN_CHARGE_AMT        ,
			 PRICE_REVISED_DATE           ,
			 ADDED_BY_ID                    ,
			 user,
			 ADDED_DATE                     ,
			 sysdate,
			 STATUS                         ,
			 PHYS_CAT_CODE             ,
			 MISC_SERV_YN                 ,
			 NURSING_SERV_YN           ,
			 null                  ,
			 null                    ,
			 null                       ,
			 null               ,
			 ADDED_AT_WS_NO          ,
			 ADDED_FACILITY_ID          ,
			 :nd_ws_no,--MODIFIED_AT_WS_NO       ,
			 :nd_operating_facility_id
			 FROM BL_BLNG_SERV
		         WHERE BLNG_SERV_CODE = :d_blng_serv_code;        

if(OERROR)
			err_mesg("INSERT failed on table BL_BLNG_SERV_AUDIT_DTLS",0,"");


    }


//--UPDATE THE FOLLOWING FIELDS IN AUDIT_DTLS FILE VSK 23/03/1999 
	
	EXEC SQL UPDATE BL_BLNG_SERV_AUDIT_DTLS
				SET TRX_DATE_TIME = SYSDATE,
					TRX_TYPE = 'M',
					TRX_USER_ID = USER ,
					TRX_REMARKS = 'FUTURE PRICE REVISION',
					MODIFIED_BY_ID = USER,        
					MODIFIED_DATE  = SYSDATE,        
					MODIFIED_AT_WS_NO = :nd_ws_no,
					MODIFIED_FACILITY_ID  = :nd_operating_facility_id 
				WHERE   TO_DATE(TO_CHAR(MODIFIED_DATE,
					'DD/MM/YYYY HH24:MI'),'DD/MM/YYYY HH24:MI') >= 
						TO_DATE(:nd_date_time_1,'DD/MM/YYYY HH24:MI');

    if(OERROR)
	    err_mesg("UPDATE failed on table BL_BLNG_SERV_audit_dtls",0,"");

    EXEC SQL CLOSE PRICE_UPDT_CUR;
    if(OERROR)
	err_mesg("CLOSE failed on cursor PRICE_UPDT_CUR",0,"");

    EXEC SQL DELETE BL_SERV_PRICE_UPDT
              WHERE EFF_DATE_TIME = TO_DATE(:nd_date_time,'DD/MM/YYYY HH24:MI');

    if(OERROR)
        err_mesg("DELETE failed on BL_SERV_PRICE_UPDT",0,"");
*/
    do_report1();

}   

do_report1()
{

    put_hdr();

    EXEC SQL OPEN REVISED_UPDT_CUR;
    if(OERROR)
	err_mesg("OPEN failed on cursor REVISED_UPDT_CUR",0,"");

   EXEC SQL OPEN REVISED_UPDT_CUR1;
    if(OERROR)
	err_mesg("OPEN failed on cursor REVISED_UPDT_CUR1",0,"");




    while(fetch_data1()) {

	chk_break(1);
	fprintf(f1,"%-10s %-40s %10s %10s %10s %10s %10s %10s %10s %10s\n",
                  d_blng_serv_code.arr,
                  d_blng_serv_desc.arr,
                  d_old_ip_rate.arr,
                  d_ip_rate.arr,
                  d_old_op_rate.arr,
                  d_op_rate.arr,
                  d_old_ref_rate.arr,
                  d_ref_rate.arr,
                  d_old_min_charge_amt.arr,
                  d_min_charge_amt.arr);
	line_no ++;

    }

    EXEC SQL CLOSE REVISED_UPDT_CUR;
    if(OERROR)
	err_mesg("CLOSE failed on cursor REVISED_UPDT_CUR",0,"");

    EXEC SQL CLOSE REVISED_UPDT_CUR1;
    if(OERROR)
	err_mesg("CLOSE failed on cursor REVISED_UPDT_CUR1",0,"");
}

chk_break(nol)
int nol;
{

	if(line_no+nol >= 55) {
           line_no = 1;
	   g_count = 1;
	   put_hdr();
	}

}

put_inp_parm()
{

    form_hdr();
    fprintf(f1,"VER : 1.10.01\n");
    fprintf(f1,"\n\n\n\n");
    fprintf(f1,"\tINPUT PARAMETERS\n");
    fprintf(f1,"\t----------------\n\n");
    fprintf(f1,"\t\tEFFECTIVE DATE/TIME   : %s\n",nd_date_time.arr);

}

print_end_of_rep()
{
    int col;
    char buff[200];

    memset(buff,' ',rep_width+1);
    col = (int)(rep_width-19)/2;

    strcpy(buff+col,"** END OF REPORT **",19);
    fprintf(f1,"\n%s\n",buff);
}

put_hdr()
{

    form_hdr();

    if(nd_option == '1')
        fprintf(f1,"BILLING SERVICE CODE AND DESCRIPTION               IP RATE    OP RATE   REF RATE MIN CHARGE\n");
    else {
        fprintf(f1,"BILLING SERVICE CODE AND DESCRIPTION             <------IP RATE-----> <------OP RATE------> <-----REF RATE------> <----MIN CHARGE----->\n");
        fprintf(f1,"                                                  PREVIOUS    REVISED   PREVIOUS    REVISED   PREVIOUS    REVISED   PREVIOUS    REVISED\n");
    }


/*
XXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 999,990.99 999,990.99 999,990.99 999,990.99
*/

/*
XXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 999,990.99 999,990.99 999,990.99 999,990.99 999,990.99 999,990.99 999,990.99 999,990.99
*/

    fprintf(f1,"%s\n",hdr_line5);
    fprintf(f1,"\n");
    line_no=9;

}

form_hdr()
{

    static int first = 1;
    char buf[15];
    int col;

    if(first) {
        memset(hdr_line1,' ',rep_width+1);
        memset(hdr_line2,' ',rep_width+1);
        memset(hdr_line4,' ',rep_width+1);
	memset(hdr_line5,'-',rep_width);
	hdr_line5[rep_width] = '\0';

        strncpy(hdr_line1,"MDL : BL",8);
        col = (int)(rep_width-strlen(comp_name.arr))/2;
        strncpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));
        col = (rep_width-strlen(rep_date.arr));
        strcpy(hdr_line1+col,rep_date.arr);
    
        strncpy(hdr_line2,"OPR :",5);
        strcpy(hdr_line2+6,oper_id.arr);

    }

    memset(hdr_line3,' ',rep_width+1);

    strncpy(hdr_line3,"REP : BLRSRUPD",14);
    col = (int)(rep_width-strlen(rep_title1))/2;
    strncpy(hdr_line3+col,rep_title1,strlen(rep_title1));
    sprintf(buf,"PAGE : %4d",page_no++);
    strcpy(hdr_line3+(rep_width-strlen(buf)),buf);

    col = (int)(rep_width-strlen(rep_title2))/2;
    strcpy(hdr_line4+col,rep_title2);

    if(first)
        fprintf(f1,"%s\n",hdr_line1);
    else
        fprintf(f1,"\f%s\n",hdr_line1);
    fprintf(f1,"%s\n",hdr_line2);
    fprintf(f1,"%s\n",hdr_line3);
    fprintf(f1,"%s\n",hdr_line4);
    fprintf(f1,"%s\n",hdr_line5);

    first = 0;
}

fetch_sys_info()
{

    EXEC SQL SELECT accounting_name,
		    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
	     INTO   :comp_name,
		    :rep_date,
		    :oper_id
	     FROM   SY_ACC_ENTITY
		 WHERE ACC_ENTITY_ID = :nd_operating_facility_id;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';
}

print_formated(s_amt, l_amt)
double l_amt;
char *s_amt;
{

    if(l_amt < 0){
        put_val(s_amt,-l_amt);
        format_amt(s_amt);
        strcat(s_amt,"-");
    }
    else {
        put_val(s_amt,l_amt);
        format_amt(s_amt);
        strcat(s_amt," ");
    }
}
