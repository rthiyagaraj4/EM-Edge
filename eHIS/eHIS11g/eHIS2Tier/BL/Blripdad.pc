/*
  #define DEBUG
*/
  
#include <stdio.h>
#include <math.h>
#include <string.h>  
#include "gl.h"
#include "bl.h"
                                        
EXEC SQL BEGIN DECLARE SECTION;

    VARCHAR uid_pwd[41],
	    d_session_id[16],
	    d_pgm_date[14],
            rep_date[20],
            comp_name[50],
            oper_id[21],
			d_facility_id [10],
            d_curr_pgm_name[15];

    VARCHAR nd_episode_id      [9],
	    nd_patient_id      [21],
	    nd_blng_grp_id     [3],

	    d_patient_name            [61],
	    d_trx_doc_ref             [21],
	    d_trx_doc_ref_line_num    [6],
	    d_trx_doc_ref_seq_num     [6],
	    d_blng_grp_id             [3],
	    d_blng_grp_desc           [31],     
	    d_blng_serv_code          [11],
	    d_serv_date               [17],
            d_prt_grp_hdr_code        [3],
            d_prt_grp_line_code       [3],
	    d_package_service_code    [11],
	    d_pkg_serv_code           [11],
	    d_trx_date                [11],
	    d_pkg_serv_desc           [41];

    double  d_serv_qty,
	    d_base_charge_amt,
	    d_upd_gross_charge_amt,
	    d_upd_disc_amt,
	    d_upd_net_charge_amt,
	    d_ip_disc_perc;

    char    d_package_ind,
	    d_package_trx_ind,
	    d_rate_charge_flag,
	    d_df_service_ind,
	    d_disc_app_yn;

    int     d_flag;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

#define REP_WIDTH 169
char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1],
     hdr_line4[REP_WIDTH+1];

double mtot_service_gross = 0,
       mtot_service_disc  = 0,
       mtot_service_net   = 0,
       mdisc_amt          = 0,
       mnet_amt           = 0,
       g_tot_gross        = 0,
       g_tot_disc         = 0,
       g_tot_net          = 0;

char rep_title[] = "ADJUSTMENTS DUE TO CHANGE IN BILLING GROUP";

FILE *f1;

int page_no,
    line_no,
    first_line,
    g_count;

char filename[150];

char p_trx_doc_ref[21],
     p_trx_doc_ref_line_num[6],
     p_package_ind,
     p_blng_grp_id[7], 
     p_blng_serv_code[11],
     p_serv_date[17],
     p_prt_grp_hdr_code[3],
     p_prt_grp_line_code[3],
     p_package_service_code[11],
     p_trx_date[11];

double p_serv_qty;

void proc_main(argc,argv)
int argc;
char *argv[];
{

    if(argc < 5) {
        disp_message(ERR_MESG,"BLRIPDAD : Usage BLRIPDAD userid/password session_id pgm_date facility_id");
        proc_exit();
    }

    strcpy(g_pgm_id,"BLRIPDAD");

    strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_session_id.arr,argv[2]);
    d_session_id.len = strlen(d_session_id.arr);
    
    strcpy(d_pgm_date.arr,argv[3]);
    d_pgm_date.len = strlen(d_pgm_date.arr);

    EXEC SQL CONNECT :uid_pwd;

	set_meduser_role();

    if(OERROR) {
        disp_message(ORA_MESG,"Unable to connect to oracle.");
        proc_exit();
    }

    fetch_prog_param();
    fetch_sys_info();

    strcpy(filename,WORKING_DIR);
    strcat(filename,"blripdad.lis");

    if( (f1=fopen(filename,"w")) == NULL) {
        disp_message(ERR_MESG,"Error in opening output file...");
	proc_exit();
    }

    page_no=1;
    line_no=1;

    decl_curs();

    do_report();

    fclose(f1);

    EXEC SQL COMMIT WORK RELEASE;

    return;
}

fetch_prog_param()
{

    nd_episode_id.arr[0]   = '\0';
    nd_patient_id.arr[0]   = '\0';
    nd_blng_grp_id.arr[0]  = '\0';

    nd_episode_id.len      = 0;
    nd_patient_id.len      = 0;
    nd_blng_grp_id.len     = 0;

   EXEC SQL SELECT PARAM1,
		   PARAM2,
		   PARAM3,
		   operating_facility_id
              INTO :nd_episode_id,
                   :nd_patient_id,
                   :nd_blng_grp_id,
				   :d_facility_id
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = :d_curr_pgm_name
               AND SESSION_ID = :d_session_id
               AND PGM_DATE   = :d_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NO_DATA_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   EXEC SQL DELETE SY_PROG_PARAM
             WHERE PGM_ID     = :d_curr_pgm_name
               AND SESSION_ID = :d_session_id
               AND PGM_DATE   = :d_pgm_date;

   if (OERROR)
         err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

    nd_episode_id.arr[nd_episode_id.len]    = '\0';
    nd_patient_id.arr[nd_patient_id.len]    = '\0';
    nd_blng_grp_id.arr[nd_blng_grp_id.len]  = '\0';
	d_facility_id.arr[d_facility_id.len]	= '\0';
	strcpy(g_facility_id, d_facility_id.arr);

    d_disc_app_yn = '\0';
    d_blng_grp_desc.arr[0] = '\0';
    d_blng_grp_desc.len    = 0;

    EXEC SQL SELECT NVL(SERV_DISC_APPL_IND,'N'),
		    LONG_DESC
	     INTO   :d_disc_app_yn,
		    :d_blng_grp_desc
	     FROM   BL_BLNG_GRP
	     WHERE  BLNG_GRP_ID = :nd_blng_grp_id;

    if(OERROR)
	err_mesg("SELECT failed on table BL_BLNG_GRP",0,"");

    d_blng_grp_desc.arr[d_blng_grp_desc.len]  = '\0';

    d_patient_name.arr[0]  = '\0';
    d_patient_name.len     = 0;

    EXEC SQL SELECT SHORT_NAME
	     INTO   :d_patient_name
	     FROM   MP_PATIENT_MAST
	     WHERE  PATIENT_ID = :nd_patient_id;

    if(OERROR)
	err_mesg("SELECT failed on table MP_PATIENT_MAST",0,"");
   
    d_patient_name.arr[d_patient_name.len] = '\0';


}


decl_curs()
{

    EXEC SQL DECLARE PATIENT_FOLIO_CUR CURSOR FOR
              SELECT TRX_DOC_REF,
		     TRX_DOC_REF_LINE_NUM,
		     TRX_DOC_REF_SEQ_NUM,
                     SERV_QTY,
		     BASE_CHARGE_AMT,
		     UPD_GROSS_CHARGE_AMT,
		     UPD_DISC_AMT,
                     UPD_NET_CHARGE_AMT,
		     PACKAGE_IND,
		     PACKAGE_TRX_IND,
                     BLNG_GRP_ID,
		     BLNG_SERV_CODE,
		     RATE_CHARGE_FLAG,
                     NVL(DF_SERVICE_IND,'Z'),
		     TO_CHAR(SERVICE_DATE,'DD/MM/YYYY HH24:MI'),
                     PRT_GRP_HDR_CODE,
                     PRT_GRP_LINE_CODE,
                     PACKAGE_SERVICE_CODE,
		     TO_CHAR(TRX_DATE,'DD/MM/YYYY')
                FROM BL_PATIENT_CHARGES_FOLIO 
               WHERE EPISODE_TYPE IN ('I','D') 
	         AND EPISODE_ID   = :nd_episode_id
                 AND PATIENT_ID   = :nd_patient_id
                 AND NVL(TRX_FINALIZE_IND,'N') = 'Y'
                 AND TRX_STATUS IS NULL
		 AND NVL(operating_facility_id,'X') = NVL(:d_facility_id,'X')
               ORDER BY TRX_DOC_REF,TRX_DOC_REF_LINE_NUM,
                        TRX_DOC_REF_SEQ_NUM;
}

fetch_folio()
{

    d_trx_doc_ref.arr[0]            = '\0';
    d_trx_doc_ref_line_num.arr[0]   = '\0';
    d_trx_doc_ref_seq_num.arr[0]    = '\0';
    d_blng_grp_id.arr[0]            = '\0';
    d_blng_serv_code.arr[0]         = '\0';
    d_serv_date.arr[0]              = '\0';
    d_prt_grp_hdr_code.arr[0]       = '\0';
    d_prt_grp_line_code.arr[0]      = '\0';
    d_package_service_code.arr[0]   = '\0';
    d_trx_date.arr[0]               = '\0';

    d_trx_doc_ref.len               = 0;
    d_trx_doc_ref_line_num.len      = 0;
    d_trx_doc_ref_seq_num.len       = 0;
    d_blng_grp_id.len               = 0;
    d_blng_serv_code.len            = 0;
    d_serv_date.len                 = 0;
    d_prt_grp_hdr_code.len          = 0;
    d_prt_grp_line_code.len         = 0;
    d_package_service_code.len      = 0;
    d_trx_date.len                  = 0;

    d_serv_qty               = 0;
    d_base_charge_amt        = 0;
    d_upd_gross_charge_amt   = 0;
    d_upd_disc_amt           = 0;
    d_upd_net_charge_amt     = 0;

    d_package_ind            = '\0';
    d_package_trx_ind        = '\0';
    d_rate_charge_flag       = '\0';
    d_df_service_ind         = '\0';

    EXEC SQL FETCH PATIENT_FOLIO_CUR 
	     INTO  :d_trx_doc_ref,
		   :d_trx_doc_ref_line_num,
		   :d_trx_doc_ref_seq_num,
                   :d_serv_qty,
		   :d_base_charge_amt,
		   :d_upd_gross_charge_amt,
		   :d_upd_disc_amt,
                   :d_upd_net_charge_amt,
		   :d_package_ind,
		   :d_package_trx_ind,
                   :d_blng_grp_id,
		   :d_blng_serv_code,
		   :d_rate_charge_flag,
                   :d_df_service_ind,
		   :d_serv_date,
                   :d_prt_grp_hdr_code,
                   :d_prt_grp_line_code,
                   :d_package_service_code,
                   :d_trx_date;

    if(OERROR)
	err_mesg("FETCH failed on cursor PATIENT_FOLIO_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_trx_doc_ref.arr[d_trx_doc_ref.len]                    = '\0';
    d_trx_doc_ref_line_num.arr[d_trx_doc_ref_line_num.len]  = '\0';
    d_trx_doc_ref_seq_num.arr[d_trx_doc_ref_seq_num.len]    = '\0';
    d_blng_grp_id.arr[d_blng_grp_id.len]                    = '\0';
    d_blng_serv_code.arr[d_blng_serv_code.len]              = '\0';
    d_serv_date.arr[d_serv_date.len]                        = '\0';
    d_prt_grp_hdr_code.arr[d_prt_grp_hdr_code.len]          = '\0';
    d_prt_grp_line_code.arr[d_prt_grp_line_code.len]        = '\0';
    d_package_service_code.arr[d_package_service_code.len]  = '\0';
    d_trx_date.arr[d_trx_date.len]                          = '\0';

    return 1;
}


do_report()
{
    int first = 1;

    put_hdr();

    EXEC SQL OPEN PATIENT_FOLIO_CUR;

    if(OERROR)
	err_mesg("OPEN failed on cursor PATIENT_FOLIO_CUR",0,"");

    while(fetch_folio()) {

	if(d_package_trx_ind == 'Y') {
	    p_serv_qty = d_serv_qty;
	    continue;
	}

	if(first) {
            strcpy(p_trx_doc_ref, d_trx_doc_ref.arr);
            strcpy(p_trx_doc_ref_line_num, d_trx_doc_ref_line_num.arr);
            p_package_ind = d_package_ind;
	    first = 0;
	}

	if(strcmp(p_trx_doc_ref, d_trx_doc_ref.arr) ||
	   strcmp(p_trx_doc_ref_line_num, d_trx_doc_ref_line_num.arr)) {

	    print_rec();
            mtot_service_gross = 0;
            mtot_service_disc  = 0;
            mtot_service_net   = 0;

            strcpy(p_trx_doc_ref, d_trx_doc_ref.arr);
            strcpy(p_trx_doc_ref_line_num, d_trx_doc_ref_line_num.arr);
            p_package_ind = d_package_ind;
	}

/*
	if(d_package_trx_ind == 'N') {
*/

	if(d_disc_app_yn == 'Y' && d_rate_charge_flag == 'R') {
	       if(!get_serv_disc(1))
	           if(!get_serv_disc(2))
	               if(!get_serv_disc(3))
			   err_mesg("Service Discount not found",1,"");

                mdisc_amt = ceil(d_upd_gross_charge_amt * d_ip_disc_perc / 100);
                mnet_amt  = d_upd_gross_charge_amt - mdisc_amt;
	}
	else {
            mdisc_amt = d_upd_disc_amt;
            mnet_amt  = d_upd_net_charge_amt;
	}

        mtot_service_gross = mtot_service_gross + d_upd_gross_charge_amt;
        mtot_service_disc  = mtot_service_disc  + mdisc_amt;
        mtot_service_net   = mtot_service_net   + mnet_amt;

        strcpy(p_blng_grp_id, d_blng_grp_id.arr);
        strcpy(p_blng_serv_code, d_blng_serv_code.arr);
        strcpy(p_serv_date, d_serv_date.arr);
        strcpy(p_trx_date, d_trx_date.arr);
        strcpy(p_prt_grp_hdr_code, d_prt_grp_hdr_code.arr);
        strcpy(p_prt_grp_line_code, d_prt_grp_line_code.arr);
        strcpy(p_package_service_code, d_package_service_code.arr);

	if(d_package_ind != 'Y')
	    p_serv_qty = d_serv_qty;

    }

    if(!first) {
	 print_rec();
	 print_tot();
	 print_end_of_rep();
    }
}

print_tot()
{
    char s_gross_amt[20],
	 s_disc_amt[20],
	 s_net_amt[20];

    chk_break(3);

    print_formated(s_gross_amt, g_tot_gross);
    print_formated(s_disc_amt , g_tot_disc);
    print_formated(s_net_amt  , g_tot_net);

    fprintf(f1,"%125s-------------- -------------- --------------\n","");
    fprintf(f1,"%125s %14s %14s %14s\n", "",s_gross_amt, s_disc_amt, s_net_amt);
    fprintf(f1,"%125s============== ============== ==============\n","");

    line_no += 3;
}

chk_break(nol)
int nol;
{

	if(line_no+nol >= 55) {
           line_no = 1;
	   g_count = 1;
	   put_hdr();
	}

}

print_end_of_rep()
{
    int col;
    char buff[REP_WIDTH+1];

    memset(buff,' ',REP_WIDTH+1);
    col = (int)(REP_WIDTH-19)/2;

    strcpy(buff+col,"** END OF REPORT **",19);
    fprintf(f1,"\n%s\n",buff);
}

put_hdr()
{

    form_hdr();
    fprintf(f1,"BLNG PKG/ SERVICE                                          PRT GRP/                                                                   GROSS       DISCOUNT            NET\n");
    fprintf(f1,"GRP  SRV  CODE    DESCRIPTION                              PRT LINE TRX REFERENCE        TRX DATE   SERVICE DATE/TIME  QTY           AMOUNT         AMOUNT         AMOUNT\n");

/*
		xx    x   xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx     xxxxxxxxxxxxxxxxxxxx dd/mm/yyyy dd/mm/yyyy hh24:mi 99.99 999,999,990.99 999,999,990.99 999,999,990.99
*/

    fprintf(f1,"%s\n",hdr_line4);
    fprintf(f1,"ADMISSION NUMBER : %s %s\n",nd_episode_id.arr, d_patient_name.arr);
    fprintf(f1,"BILLING GROUP    : %s %s\n", nd_blng_grp_id.arr, d_blng_grp_desc.arr);
    fprintf(f1,"\n");
    line_no=11;

}

form_hdr()
{

    static int first = 1;
    char buf[15];
    int col;

    if(first) {
        memset(hdr_line1,' ',REP_WIDTH+1);
        memset(hdr_line2,' ',REP_WIDTH+1);
	memset(hdr_line4,'-',REP_WIDTH);
	hdr_line4[REP_WIDTH] = '\0';

        strncpy(hdr_line1,"MDL : BL",8);
        col = (int)(REP_WIDTH-strlen(comp_name.arr))/2;
        strncpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));
        col = (REP_WIDTH-strlen(rep_date.arr));
        strcpy(hdr_line1+col,rep_date.arr);
    
        strncpy(hdr_line2,"OPR :",5);
        strcpy(hdr_line2+6,oper_id.arr);

    }

    memset(hdr_line3,' ',REP_WIDTH+1);

    strncpy(hdr_line3,"REP : BLRIPDAD",14);
    col = (int)(REP_WIDTH-strlen(rep_title))/2;
    strncpy(hdr_line3+col,rep_title,strlen(rep_title));
    sprintf(buf,"PAGE : %4d",page_no++);
    strcpy(hdr_line3+(REP_WIDTH-strlen(buf)),buf);

    if(first)
        fprintf(f1,"%s\n",hdr_line1);
    else
        fprintf(f1,"\f%s\n",hdr_line1);
    fprintf(f1,"%s\n",hdr_line2);
    fprintf(f1,"%s\n",hdr_line3);
    fprintf(f1,"%s\n",hdr_line4);

    first = 0;
}            

fetch_sys_info()
{    

    EXEC SQL SELECT ACC_ENTITY_NAME,
		    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
	     INTO   :comp_name,
		    :rep_date,
		    :oper_id
	     FROM   SY_ACC_ENTITY
		WHERE   acc_entity_id =  :d_facility_id;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';
}

get_serv_disc(flag)
int flag;
{
    d_flag = flag;
    d_ip_disc_perc = 0;


    EXEC SQL SELECT IP_DISC_PERC
               INTO :d_ip_disc_perc
               FROM BL_BLNG_SERV_FOR_GRP
              WHERE BLNG_GRP_ID       = :nd_blng_grp_id
                AND BLNG_SERV_CODE    = DECODE(:d_flag,1,:d_blng_serv_code,
					2,SUBSTR(:d_blng_serv_code,1,2),'ALL');

    if(OERROR)
	err_mesg("SELECT failed on table BL_BLNG_SERV_FOR_GRP",0,"");

    if(NO_DATA_FOUND)
	return 0;

    return 1;
}

print_rec()
{
    char s_gross_amt[20],
	 s_disc_amt[20],
	 s_net_amt[20];

    chk_break(1);
    get_pkg_serv_desc();

    fprintf(f1,"%-2s    %c   %-10s  %-40s %-2s%-2s     %-20s %-10s %-16s %5.2lf    ",
     p_blng_grp_id,
     p_package_ind,
     (p_package_ind == 'P')? p_package_service_code:p_blng_serv_code,
     d_pkg_serv_desc.arr,
     p_prt_grp_hdr_code,
     p_prt_grp_line_code,
     p_trx_doc_ref,
     p_trx_date,
     p_serv_date,
     p_serv_qty);


     print_formated(s_gross_amt, mtot_service_gross);
     print_formated(s_disc_amt , mtot_service_disc);
     print_formated(s_net_amt  , mtot_service_net);

     g_tot_gross += mtot_service_gross;
     g_tot_disc  += mtot_service_disc;
     g_tot_net   += mtot_service_net;

     fprintf(f1,"%14s %14s %14s\n", s_gross_amt, s_disc_amt, s_net_amt);

     line_no ++;
}

get_pkg_serv_desc()
{

    d_pkg_serv_desc.arr[0] = '\0';
    d_pkg_serv_desc.len    = 0;

    if(p_package_ind == 'P')
	{

	strcpy(d_pkg_serv_code.arr, p_package_service_code);
        d_pkg_serv_code.len = strlen(d_pkg_serv_code.arr);

	EXEC SQL SELECT LONG_DESC 
		   INTO :d_pkg_serv_desc
		   FROM BL_PACKAGE_HDR
		  WHERE PACKAGE_CODE = :d_pkg_serv_code;

	if(OERROR)
	    err_mesg("SELECT failed on table BL_PACKAGE_HDR",0,"");
    }
    else {
	strcpy(d_pkg_serv_code.arr, p_blng_serv_code);
        d_pkg_serv_code.len = strlen(d_pkg_serv_code.arr);

	EXEC SQL SELECT LONG_DESC 
		   INTO :d_pkg_serv_desc
		   FROM BL_BLNG_SERV
		  WHERE BLNG_SERV_CODE = :d_pkg_serv_code;

	if(OERROR)
	    err_mesg("SELECT failed on table BL_BLNG_SERV",0,"");
    }
                       
    d_pkg_serv_desc.arr[d_pkg_serv_desc.len] = '\0';
}

print_formated(s_amt, l_amt)
double l_amt;
char *s_amt;
{

    if(l_amt < 0){
        put_val(s_amt,-l_amt);
        format_amt(s_amt);
        strcat(s_amt,"-");
    }
    else {
        put_val(s_amt,l_amt);
        format_amt(s_amt);
        strcat(s_amt," ");
    }
}
