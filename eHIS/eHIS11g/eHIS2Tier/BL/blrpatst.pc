/*  Output File : blrpatst.lis  */


#include <stdio.h>  
#include <math.h> 
#include <string.h>
#include <bl.h>

#define ONLINE_PRINTING 1 

#define MAX_LINES 60
#define MAX_COL   109
#define OERROR (sqlca.sqlcode < 0)
#define NODATAFOUND sqlca.sqlcode==1403
#define ESC     0x1B
#define VER  "VER : 1.10.01\n"

EXEC SQL BEGIN DECLARE SECTION;
                                      
VARCHAR	    uid_pwd						[50], 
			nd_pgm_id					[30],
			nd_patient_id				[21],
			nd_as_on_date				[15],
			nd_bill_ageing_report_flag	[2],
			nd_outst_bills_only_flag	[2], 
			nd_bill_ageing_report_type	[2],		
			d_acc_entity_name			[41],
			nd_print_option             [2],
			nd_line_text                [1000],
			d_user						[21],
			nd_month_year1              [20],
        	d_sysdate					[20],
			nd_from_date				[12],
			nd_to_date					[12],		
   	  		nd_patient_name				[61],
			nd_national_id				[50],
        	nd_dob						[15],
			nd_area						[16],
			nd_town						[16],
			nd_session_id				[16],
			nd_pgm_date					[20],
			nd_phone					[21],
			d_bill_date1				[15],
			nd_facility_id				 [3],
			l_pk_value					[100],
			l_translated_value			[202],
			p_language_id				[3],
            nd_bill_date				[15];

VARCHAR		d_patient_id				[21],
		    d_physician_id				[21],
	        d_bill_date					[15], 
      		d_bill_type					[11],
	        d_trans_det					[15],
	        d_bill_no					[15],
			d_receipt_no				[15],
            rep_date					[20],
            comp_name					[50],
            oper_id						[21],
	        nd_age_bill_num				[15] ;

VARCHAR		nd_bill_no1					[15],
			nd_bill_date1				[12],
			nd_cons_invoice_ind			[2],
			d_order_date				[12];

VARCHAR		nd_resp_for_bill_payment	[31],
			nd_credit_doc_ref			[16],
			nd_practice_num				[16],
			p_ws_no						[16];


int			nd_ageing_days1,
			nd_cut1_bills=0,
			nd_cut2_bills=0,
			nd_cut3_bills=0,
			nd_cut4_bills=0,
			nd_total_bills=0,
			nd_cts_flag = 0,
			bill_ct		= 0,
			nd_cut_bills =0,
			i,
			hl = 95,
			initialise=1,
			age_analysis=1;		
		
double		nd_bill_tot_amt1,
			nd_cut1_amt =0,
			nd_cut2_amt =0,
			nd_cut3_amt =0,
			nd_cut4_amt =0,
			nd_cut1s_amt =0,
			nd_cut2s_amt =0,
			nd_cut3s_amt =0,
			nd_cut4s_amt =0,
			nd_age_tot   =0,
			nd_dcp_tot   =0,
			nd_ar_tot    =0,
			nd_grand_tot =0;

VARCHAR 	nd_mail_add1[31],
			nd_mail_add2[31],
			nd_mail_add3[31],
			nd_mail_add4[31],
			nd_postal_code[31];

varchar     nd_month_year[10];

double 		d_debit			 = 0,
    		d_credit		 = 0,
			d_prev_balance   = 0,
			nd_ct            = 0,
			nd_cut_range     = 0,
			d_balance         =0;

int 		nd_order_catg,
			nd_total_bills1 = 0,
			nd_cut1,
			nd_cut2,
	        nd_counter = 0,
			nd_cut3;
double		nd_days;

char		filename[150],sex,txn_type,nd_online_print_yn;

VARCHAR     doc_date[21],
            nd_prev_date[15],
            doc_det[20],
			trx_type[15],
			episode_det[20];

Varchar		nd_cut1_str[30],
			nd_cut2_str[30],
			nd_cut3_str[30],
			nd_cut4_str[30],
			str_temp[500],
			currency[7];

VARCHAR     nd_temp_date[20],
			nd_loc_date	[20],
			date_convert[20];


double      debit_amt=0,
            credit_amt=0,
			sign_ind = 0,
			tot_debit_amt=0,
			tot_credit_amt=0,
			open_bal=1;

char	loc_legend[999][201];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA;

int   line=0, 
      page=1,
	spaces=0;

FILE *f1;
 
EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

void proc_main(argc, argv)
int argc;
char *argv[];
{
   if(argc < 4) 
   {
     disp_message(ERR_MESG,"Usage blrpatst uid/passwd session_id pgm_date");
     proc_exit();
   }
    
    strcpy(nd_pgm_id.arr, argv[0]);
    nd_pgm_id.len = strlen(nd_pgm_id.arr);


   strcpy(uid_pwd.arr, argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr); 

   strcpy(nd_session_id.arr, argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr); 

   strcpy(nd_pgm_date.arr, argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr); 

   strcpy(nd_facility_id.arr, argv[4]);
   nd_facility_id.len = strlen(nd_facility_id.arr); 
   
   EXEC SQL CONNECT :uid_pwd;
   if (OERROR)
   { disp_message(ORA_MESG,"Connect failed");
     proc_exit();
   }

    set_meduser_role();

    strcpy(p_language_id.arr,l_language_id.arr);
    p_language_id.len = l_language_id.len;

    fetch_legend_value();

    get_sy_prog_param();        

    strcpy(filename,WORKING_DIR);
    strcat(filename,nd_pgm_id.arr);
    if (nd_online_print_yn == 'N')
    {
	strcat(filename,"_");
	strcat(filename,nd_patient_id.arr);
    }
    strcat(filename,".lis");

   if((f1 = fopen(filename, "w")) == NULL) {
     disp_message(ERR_MESG,"Error opening output file");
     proc_exit();
     } 

   get_header_dtls();
    
   nd_cts_flag = 0;

   rep_bill_process_out();


 
 if(nd_bill_ageing_report_flag.arr[0]=='Y')
 {
   if(line+6>MAX_LINES)
   {
    fprintf(f1,"\f");	
    line = 0;
    page = page +1;
    page_hdr('Y','A');
  }
  else
   {
    page_hdr('N','A');
   }

    rep_bill_process_age();
 }
   fclose(f1);
   
   if (nd_online_print_yn == 'Y')
   {
	printdoc();
   }

   EXEC SQL COMMIT WORK RELEASE;
   return;
}   

rep_bill_process_out()
{   
   get_pat_dtls();  
   page_hdr('Y','O');    
   txn_type='O';
   declare_cursor_stat_out();
   open_cursor_stat_out();
   
    while(fetch_cursor_stat_out())
   {
    line_check('Y','O');
    if((open_bal==1) && sign_ind>=0)
    {
     put_bal('O','O');
     open_bal=0;
    }

    tot_debit_amt=tot_debit_amt+debit_amt;
    tot_credit_amt=tot_credit_amt+credit_amt;
    
	if(doc_date.arr[0]!='\0')
	 {
	   init_date_temp_var();
       strcpy(date_convert.arr,doc_date.arr);
       fun_change_loc_date();
     }	  

	if(!open_bal)
    {
             
    fprintf(f1,"%-17.17s %-17.17s%-15.15s ",date_convert.arr,doc_det.arr,trx_type.arr);
    print_formated_out(debit_amt,'N');    
    print_formated_out(credit_amt,'N');
    print_formated_out(tot_debit_amt - tot_credit_amt,'Y');
    fprintf(f1," %-20.20s",episode_det.arr);
    fprintf(f1,"\n");
    line=line+1;
    }
   }
   put_bal('C','O');
   close_cursor_stat_out();  
}

rep_bill_process_age()
{   
    txn_type='A';
    declare_cursor_stat_out();
    open_cursor_stat_out();
    open_bal=1;
   
    while(fetch_cursor_stat_out())
   {
    nd_cut1_amt=0;
    nd_cut2_amt=0;
    nd_cut3_amt=0;
    nd_cut4_amt=0;

    line_check('Y','A');
    if((open_bal==1) && sign_ind>=0)
    {
     put_bal('O','A');
     open_bal=0;
    }

    EXEC SQL  Select sysdate - to_date(:doc_date,'dd/mm/yyyy hh24:mi')
         into :nd_days
   from dual;
    if (OERROR)
   { 
     disp_message(ORA_MESG,"Select failed from dual");
     proc_exit();
   }
  
   if (nd_days <=nd_cut1)
     {
      nd_cut1_amt=d_balance;
      nd_cut1s_amt=nd_cut1s_amt+d_balance;
      }
   else if (nd_days <=nd_cut2)
    {
     nd_cut2_amt=d_balance;
     nd_cut2s_amt=nd_cut2s_amt+d_balance;
    }
   else if (nd_days <=nd_cut3) 
    {
     nd_cut3_amt=d_balance;
     nd_cut3s_amt=nd_cut3s_amt+d_balance;
    }
   else
    {
     nd_cut4_amt=d_balance;
     nd_cut4s_amt=nd_cut4s_amt+d_balance;
    }
    
    if(doc_date.arr[0]!='\0')
     {
	   init_date_temp_var();
       strcpy(date_convert.arr,doc_date.arr);
       fun_change_loc_date();
     }	  

  
    if(!open_bal && nd_bill_ageing_report_type.arr[0]=='D') 
    {

	
    fprintf(f1,"%-17.17s %-17.17s%-15.15s ",date_convert.arr,doc_det.arr,trx_type.arr);
    print_formated_age(nd_cut1_amt,'Y');    
    print_formated_age(nd_cut2_amt,'Y');
    print_formated_age(nd_cut3_amt,'Y'); 
    print_formated_age(nd_cut4_amt,'Y'); 
    fprintf(f1,"\n");
    line=line+1;
    }

   }
   put_bal('S','A');
   close_cursor_stat_out();  
}




line_check(char header,char trx_type)
{
   if (line  > MAX_LINES)
   {
    put_bal('E',trx_type);//Carry Forward 
    fprintf(f1,"\f");	
    line = 0;
    page = page +1;
    page_hdr(header,trx_type);	
    put_bal('B',trx_type);//Brought Forward
   }       
}

page_hdr(char header,char trx_type)
{

if (initialise)
{
 fprintf(f1,"%cE",ESC);
 fprintf(f1,"%c&l0O",ESC); 	/* To Print in Portait Mode 		*/
 fprintf(f1,"%c&a2L",ESC); 	/* To Set the Left margin  		*/
 fprintf(f1,"%c(s14H",ESC); 	/* To set the font 			*/
 initialise=0;
}


if(header=='Y')
{
//spaces=(MAX_COL - comp_name.len)/2; COMMNETED BY SAIKIRAN FOR 21441
 fprintf(f1,"\n");
/*spaces=spaces-10;
 prt_line(spaces," "); COMMNETED BY SAIKIRAN FOR 21441 */
 
 fun_centre(comp_name.arr,110);
 fprintf(f1,"%-36.36s",comp_name.arr);
/*fprintf(f1,"%30s",comp_name.arr);
 spaces=(MAX_COL - 16) - (spaces+30);
 prt_line(spaces," ");COMMNETED BY SAIKIRAN FOR 21441 */

 if(rep_date.arr[0]!='\0')
 {
   init_date_temp_var();
   strcpy(date_convert.arr,rep_date.arr);
   fun_change_loc_date();
  }
 fprintf(f1,"%13.13s","");
 fprintf(f1,"%-s\n",date_convert.arr);
 /*spaces=(MAX_COL - (nd_patient_name.len+strlen(loc_legend[1])))/2;
 prt_line(spaces," ");COMMNETED BY SAIKIRAN FOR 21441 */

 //fprintf(f1,"STATEMENT OF ACCOUNT FOR:%-30.30s",nd_patient_name.arr);
 //fprintf(f1,"%s:%s",loc_legend[1],nd_patient_name.arr);COMMNETED BY SAIKIRAN FOR 21441
 fun_centre(loc_legend[1],90);
 fprintf(f1,"%-s",loc_legend[1]);
 fprintf(f1,":%-19.19s ",nd_patient_name.arr);
  
 
  if (strcmp(nd_month_year.arr,"01/1900")==0) 
   {
 	  fprintf(f1,"%-4.4s:%-6.6s %4.4s",loc_legend[25],loc_legend[24]," ");
  }
 else
 {
   fprintf(f1,"%-4.4s: %-s %4.4s",loc_legend[25],nd_month_year.arr," ");
 } 
/* spaces=(MAX_COL-15 ) - (spaces+nd_patient_name.len+strlen(loc_legend[1]));
 prt_line(spaces," ");COMMNETED BY SAIKIRAN FOR 21441*/

//fprintf(f1,"Page :%3d\n",page);
 fprintf(f1," %-4.4s:%3d\n",loc_legend[2],page); 


 replicate(hl,MAX_COL);
 fprintf(f1,"\n");
 line = line + 4;
 //fprintf(f1,"Patient No      : %-20.20s ",nd_patient_id.arr);
 fprintf(f1,"%-16.16s: %-20.20s ",loc_legend[3],nd_patient_id.arr);

 //fprintf(f1," National Id : %-20.20s ",nd_national_id.arr);
 fprintf(f1,"%-13.13s: %-20.20s ",loc_legend[4],nd_national_id.arr);

 //fprintf(f1," DOB : %-10.10s ",nd_dob.arr);

 if(nd_dob.arr[0]!='\0')
 {
   init_date_temp_var();
   strcpy(date_convert.arr,nd_dob.arr);
   fun_change_loc_date1();
  }

 fprintf(f1,"%-5.5s: %-10.10s ",loc_legend[5],date_convert.arr);

 //DOB
 if(sex=='M')
   fprintf(f1,"%-5.5s: %s",loc_legend[6],loc_legend[22]);
 else
   fprintf(f1,"%-5.5s: %s",loc_legend[6],loc_legend[23]);

 fprintf(f1,"\n");
 nd_ct = 0;
 //fprintf(f1,"Patient Address : ");
 fprintf(f1,"%-16.16s: ",loc_legend[7]);
 line = line + 2;

  if (nd_mail_add1.arr[0])
     {
      nd_ct = 1;
      fprintf(f1,"%-30.30s",nd_mail_add1.arr);
      line = line + 1;
      fprintf(f1,"\n");
      }
  if (nd_mail_add2.arr[0])
     {
      nd_ct = 1;
      if (nd_ct == 1 )
      {
      fprintf(f1,"                  %-30s",nd_mail_add2.arr);
      }
      else
      {
      fprintf(f1,"%-30.30s",nd_mail_add2.arr);
      }
      line = line + 1;
      fprintf(f1,"\n");
     }
  if (nd_mail_add3.arr[0])
     {
      nd_ct = 1;
      if (nd_ct == 1 )
      {
       fprintf(f1,"                  %-30s",nd_mail_add3.arr);
      }
      else
      {
       fprintf(f1,"%-30.30s",nd_mail_add3.arr);
      }
      line = line + 1;
      fprintf(f1,"\n");
      }
  if (nd_mail_add4.arr[0])
     {
      nd_ct = 1;
      if (nd_ct == 1)
      {
       fprintf(f1,"                  %-30s",nd_mail_add4.arr);
      }
      else
      {
      fprintf(f1,"%-30.30s",nd_mail_add4.arr);
      }	
      line = line + 1;
      fprintf(f1,"\n");
     }
     
     if  (nd_ct==0) 
     {
      fprintf(f1,"\n"); 
      line=line+1;
     }
      replicate(hl,MAX_COL);
      fprintf(f1,"\n"); 
      line = line + 2;
 }    

 if(trx_type=='O') //Oustanding Balance
 {
//   fprintf(f1,"Trx Date          Document        Trx Type                Debit        Credit         Balance  Encounter");               
   fprintf(f1,"%-18.18s%-17.17s%-15.15s%15.15s %13.13s%14.13s   %s",
           loc_legend[8],loc_legend[9],loc_legend[10],loc_legend[11],loc_legend[12],loc_legend[13],loc_legend[14]
	   );
   fprintf(f1,"\n"); 
   fprintf(f1,"                                                    %s        %s             %s            ",currency.arr,currency.arr,currency.arr);               
   fprintf(f1,"\n"); 
   replicate(hl,MAX_COL);
   fprintf(f1,"\n"); 
   line = line + 3;
 }

 if(trx_type=='A') //Ageing Analysis 
 {

   if(age_analysis)
   {
   //fprintf(f1,"Ageing Analysis :");
   fprintf(f1,"%-16.16s:",loc_legend[19]);
   fprintf(f1,"\n"); 
   replicate(hl,MAX_COL);
   fprintf(f1,"\n"); 
   line = line + 2;
   age_analysis=0;
   }

   //fprintf(f1,"Trx Date          Document        Trx Type        ");
   fprintf(f1,"%-18.18s%-17.17s%-16.16s",loc_legend[8],loc_legend[9],loc_legend[10]);
   fprintf(f1,"%13s%14s%14s%14s",nd_cut1_str.arr,nd_cut2_str.arr,nd_cut3_str.arr,nd_cut4_str.arr);
   fprintf(f1,"\n"); 
   fprintf(f1,"                                                ");
   fprintf(f1,"%14s%14s%14s%14s",currency.arr,currency.arr,currency.arr,currency.arr);
   fprintf(f1,"\n"); 
   replicate(hl,MAX_COL);
   fprintf(f1,"\n"); 
   line = line + 3;
 }


}

prt_line(int line_length, char spl_symbol[1])
{  
 int i;  
  for(i=1;i<=line_length;i=i+1)
	 {fprintf(f1,spl_symbol);}
}


get_sy_prog_param()
{
   nd_patient_id.arr[0]='\0';
   nd_as_on_date.arr[0]='\0';
   nd_bill_ageing_report_flag.arr[0]='\0';
   nd_outst_bills_only_flag.arr[0]='\0';
   nd_bill_ageing_report_type.arr[0]='\0';
   nd_month_year.arr[0]='\0';
   nd_cut1_str.arr[0]='\0';
   nd_cut2_str.arr[0]='\0';
   nd_cut3_str.arr[0]='\0';
   nd_cut4_str.arr[0]='\0';
   p_ws_no.arr[0]='\0';

   nd_patient_id.len=0;
   nd_as_on_date.len=0;
   nd_bill_ageing_report_flag.len=0;
   nd_outst_bills_only_flag.len=0;
   nd_bill_ageing_report_type.len=0;
   nd_month_year.len=0;
   nd_cut1_str.len=0;
   nd_cut2_str.len=0;
   nd_cut3_str.len=0;
   nd_cut4_str.len=0;
   p_ws_no.len=0;



   nd_cut1 = 0;
   nd_cut2 = 0;
   nd_cut3 = 0;
  
   


  EXEC SQL  SELECT 
		   PARAM1,
		   PARAM2,
		   PARAM3,
		   NVL(PARAM4,0),
		   NVL(PARAM5,0),
		   NVL(PARAM6,0),
		   '<='||NVL(PARAM4,0),
		   '<='||NVL(PARAM5,0),
                   '<='||NVL(PARAM6,0),
                   '>'||NVL(PARAM6,0),
		   PARAM7,
		   PARAM8,
                   substr(PARAM7,4,7),
		   param9,
		   NVL(param10,'Y')
            INTO 
		   :nd_patient_id,
   		   :nd_bill_ageing_report_flag,
		   :nd_bill_ageing_report_type,
		   :nd_cut1,
		   :nd_cut2,
		   :nd_cut3,
		   :nd_cut1_str,
                   :nd_cut2_str,
		   :nd_cut3_str,
		   :nd_cut4_str,
		   :nd_from_date,
		   :nd_outst_bills_only_flag,
		   :nd_month_year,
		   :p_ws_no,
		   :nd_online_print_yn
            FROM   SY_PROG_PARAM
	    WHERE  PGM_ID = upper(:nd_pgm_id) 
  	    AND    SESSION_ID = TO_NUMBER(:nd_session_id)
	    AND    PGM_DATE = :nd_pgm_date;
    if (OERROR)
      {   disp_message(ORA_MESG,"Oracle error at get_sy_prog_param() occured");
	  proc_exit();
      }

    if (NODATAFOUND)
      {   
       disp_message(ORA_MESG,"No Record Found in sy_prog_param");
       proc_exit();
      }


    nd_patient_id.arr[nd_patient_id.len]='\0';
    nd_as_on_date.arr[nd_as_on_date.len]='\0';
    nd_bill_ageing_report_flag.arr[nd_bill_ageing_report_flag.len]='\0';
    nd_bill_ageing_report_type.arr[nd_bill_ageing_report_type.len]='\0';
    nd_outst_bills_only_flag.arr[nd_outst_bills_only_flag.len]='\0';
    nd_facility_id.arr[nd_facility_id.len]='\0';
    nd_from_date.arr[nd_from_date.len] = '\0';   
    nd_to_date.arr[nd_to_date.len] = '\0';
    nd_month_year.arr[nd_month_year.len]='\0';
    nd_cut1_str.arr[nd_cut1_str.len]='\0';
    nd_cut2_str.arr[nd_cut1_str.len]='\0';
    nd_cut3_str.arr[nd_cut1_str.len]='\0';
    nd_cut4_str.arr[nd_cut1_str.len]='\0';
    p_ws_no.arr[p_ws_no.len]='\0';

    strcpy(g_facility_id, nd_facility_id.arr);

    strcat(nd_cut1_str.arr,loc_legend[20]);
    strcat(nd_cut2_str.arr,loc_legend[20]);
    strcat(nd_cut3_str.arr,loc_legend[20]);
    strcat(nd_cut4_str.arr,loc_legend[20]);


    EXEC SQL DELETE FROM sy_prog_param
    WHERE PGM_ID   = :nd_pgm_id
    AND SESSION_ID = :nd_session_id
    AND PGM_DATE   = :nd_pgm_date;


    if (OERROR)
      {   disp_message(ORA_MESG,"Oracle error at get_sy_prog_param() occured");
	  proc_exit();
      }

    currency.arr[0]='\0';  
    currency.len=0;
    
	EXEC SQL SELECT ACC_ENTITY_NAME,
		            TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER,
		            '('||BASE_CURRENCY||')'
	     INTO       :comp_name,
					:rep_date,
					:oper_id,
					:currency
	     FROM   SY_ACC_ENTITY_LANG_VW
		 WHERE  ACC_ENTITY_ID = :nd_facility_id
		 AND    LANGUAGE_ID   = :p_language_id;

    if(OERROR)
      {   disp_message(ORA_MESG,"Oracle error while fetching from SY ACC ENTITY");
	  proc_exit();
      }


    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';
    currency.arr[currency.len] = '\0';

     return;
}

get_pat_dtls()
{
     nd_patient_name.arr[0] = '\0';
     nd_national_id.arr[0] = '\0';

     nd_dob.arr[0] = '\0';

     nd_patient_name.len = 0;
     nd_national_id.len = 0;
     nd_dob.len = 0;

     EXEC SQL 
     SELECT MP.SHORT_NAME, TO_CHAR(MP.DATE_OF_BIRTH, 'DD/MM/YYYY'), SEX, MP.NATIONAL_ID_NUM	
     INTO :nd_patient_name, :nd_dob, :sex, :nd_national_id
     FROM MP_PATIENT_MAST MP
     WHERE MP.PATIENT_ID = :nd_patient_id;

     nd_patient_name.arr[nd_patient_name.len] = 0;
     nd_national_id.arr[nd_national_id.len] = '\0';
     nd_dob.arr[nd_dob.len] = 0;

    if (OERROR)
     { disp_message(ORA_MESG,"Select failed in MP_PATIENT_MAST");
       proc_exit();
     }
   if (NODATAFOUND)
     { disp_message(ORA_MESG,"No record found in MP_PATIENT_MAST");
       proc_exit();
    }

  nd_mail_add1.arr[0] 	= '\0';
  nd_mail_add2.arr[0] 	= '\0';
  nd_mail_add3.arr[0] 	= '\0';
  nd_mail_add4.arr[0] 	= '\0';
  nd_postal_code.arr[0] = '\0';

  nd_mail_add1.len 	= 0;
  nd_mail_add2.len 	= 0;
  nd_mail_add3.len 	= 0;
  nd_mail_add4.len 	= 0;
  nd_postal_code.len 	= 0;

  EXEC SQL     SELECT
		      LN1_RES_ADD,
		      LN2_RES_ADD,
		      LN3_RES_ADD,
		      LN4_RES_ADD
               INTO 
		      :nd_mail_add1,
		      :nd_mail_add2,
		      :nd_mail_add3,
		      :nd_mail_add4
	       FROM MP_PAT_OTHER_DTLS 
               WHERE PATIENT_ID = :nd_patient_id;

  nd_mail_add1.arr[nd_mail_add1.len] 		= '\0';
  nd_mail_add2.arr[nd_mail_add2.len] 		= '\0';
  nd_mail_add3.arr[nd_mail_add3.len] 		= '\0';
  nd_mail_add4.arr[nd_mail_add4.len] 		= '\0';
  nd_postal_code.arr[nd_postal_code.len] 	= '\0';

  return;
}

get_header_dtls()
{

   d_acc_entity_name.arr[0] = '\0';
   d_user.arr[0] = '\0';
   d_sysdate.arr[0] = '\0';
   nd_practice_num.arr[0] = '\0';

   d_acc_entity_name.len = 0;
   d_user.len = 0;
   d_sysdate.len = 0;
   nd_practice_num.len = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, 
		   USER,
		   TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI'),
		   PRACTICE_NUM   
	    INTO :d_acc_entity_name,
		 :d_user,
		 :d_sysdate,
		 :nd_practice_num
        FROM SY_ACC_ENTITY_lang_vw
		WHERE acc_entity_id =:nd_facility_id
		and language_id=:p_language_id;
   if (OERROR)
   { disp_message(ORA_MESG,"Oracle error at get_header_dtls() occured");
     proc_exit();
   }

  d_acc_entity_name.arr[d_acc_entity_name.len] = '\0';
  d_user.arr[d_user.len]                       = '\0';
  d_sysdate.arr[d_sysdate.len]                 = '\0';
  nd_practice_num.arr[nd_practice_num.len]     = '\0';

}

print_formated_out(loc_amount,print_dr_cr)
double loc_amount;
char   print_dr_cr;
{
	char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
	    l_ltrim(s_amt);
        fprintf(f1,"%14s",str_amt);
	if(print_dr_cr=='Y')
	    fprintf(f1,"%s","CR");
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
		l_ltrim(s_amt);
        fprintf(f1,"%14s",str_amt);
	if (print_dr_cr=='Y')
  	fprintf(f1,"%s","DR");
    }

}

print_formated_age(loc_amount,print_dr_cr)
double loc_amount;
char   print_dr_cr;
{
	char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%12s",s_amt);
	l_ltrim(s_amt);
        fprintf(f1,"%12s",str_amt);
	if (print_dr_cr=='Y')
	  fprintf(f1,"%s","CR");
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%12s",s_amt);
		l_ltrim(s_amt);
        fprintf(f1,"%12s",str_amt);
	if (print_dr_cr=='Y')
  	fprintf(f1,"%s","DR");
    }

}


declare_cursor_stat_out()
{
EXEC SQL DECLARE pat_stat_vw CURSOR FOR
	SELECT  to_char(doc_date,'dd/mm/yyyy hh24:mi'),
	        doc_type_code||'/'||DOC_NUMBER||'/'||DOC_SLNO,
		trx_type,
		decode(:nd_outst_bills_only_flag,'N',debit_amt,
		          decode(sign(outstdg_amt),1,outstdg_amt,0)) debit_amt,
		decode(:nd_outst_bills_only_flag,'N',credit_amt,
		          decode(sign(outstdg_amt),-1,(-1)*outstdg_amt,0)) credit_amt,
		decode(episode_type,Null,' ','R',' ',
		       episode_type||'/'||nvl(to_char(episode_id),' ')||'/'||nvl(to_char(visit_id),' ')),
		sign(trunc(doc_date) - to_date(:nd_from_date,'dd/mm/yyyy')),
                outstdg_amt		
from     bl_patient_statement_vw 
	 where  patient_id=:nd_patient_id 
	 and  (  
	       ( :txn_type='O' and 
	         ( :nd_outst_bills_only_flag='N' Or 
	           (:nd_outst_bills_only_flag='Y'  And outstdg_amt<>0 AND valid_for_outstdg_yn = 'Y' )
	         )
      	       )  
	       OR
	       ( :txn_type='A' and  outstdg_amt<>0  AND valid_for_outstdg_yn = 'Y' 
	       )
              )	order by doc_date; 
         
 if (OERROR)
  { 
    disp_message(ORA_MESG,"Declare Failed in pat_stat_vw");
    proc_exit();
  }
}

close_cursor_stat_out()
{
EXEC SQL CLOSE pat_stat_vw;
}

open_cursor_stat_out()
{
 EXEC SQL OPEN pat_stat_vw;
 if (OERROR)
  { disp_message(ORA_MESG,"Open Failed pat_stat_vw");
    proc_exit();
  }
}


fetch_cursor_stat_out()
{

  debit_amt =0;
  credit_amt=0;
  sign_ind  =0;
  d_balance = 0;

  doc_date.arr[0] = '\0';
  doc_det.arr[0] = '\0';
  trx_type.arr[0] = '\0';
  episode_det.arr[0] = '\0';


  doc_date.len=0;
  doc_det.len=0;
  trx_type.len=0;
  episode_det.len=0;


  EXEC SQL FETCH pat_stat_vw INTO 	
       :doc_date,
	   :doc_det,
	   :trx_type,
	   :debit_amt,
	   :credit_amt,
	   :episode_det,
	   :sign_ind,
	   :d_balance;

  if (OERROR) 
  { 
    disp_message(ORA_MESG,"Fetch Failed in pat_stat_vw");
    proc_exit();
  }

 if (NODATAFOUND)
    return 0;

  doc_date.arr[doc_date.len]  = '\0';
  doc_det.arr[doc_det.len]    = '\0';
  trx_type.arr[trx_type.len]  = '\0';
  episode_det.arr[episode_det.len]  = '\0';

    return 1;
}


put_bal(char type,char trx_type)
{

//type 'C' CLosing Balance, 'E' Carry Forward , 'S' Brought Forward, 'O' opening Balance
//trx_type 'O' Oustatnding 'A' 'Age analysis'

if(type=='C') //Closing Balance
{
replicate(hl,MAX_COL);
//fprintf(f1,"\n                                  Closing Balance");
fprintf(f1,"\n%50.50s ",loc_legend[18]);
line=line+1;
}
else if(type=='S') //Summary
{
replicate(hl,MAX_COL);
//fprintf(f1,"\n                                  Summary        ");
fprintf(f1,"\n%42.42s         ",loc_legend[21]);
line=line+1;
}
else if(type=='O')//Opening Balance
{
nd_prev_date.arr[0]='\0';
nd_prev_date.len=0;

EXEC SQL select to_char(to_date(:nd_from_date,'dd/mm/yyyy')-1,'dd/mm/yyyy')
         into   :nd_prev_date 
	     from   dual;
nd_prev_date.arr[nd_prev_date.len]='\0';

//fprintf(f1,"%-10.10s                        Opening Balance",nd_prev_date.arr);
 if(nd_prev_date.arr[0]!='\0')
 {
   init_date_temp_var();
   strcpy(date_convert.arr,nd_prev_date.arr);
   fun_change_loc_date1();
  }

//fprintf(f1,"%-10.10s%40.40s ",date_convert.arr,loc_legend[15]); COMMENTED BY SAIKIRAN FOR 21441
fprintf(f1,"%-10.10s%40.40s ","",loc_legend[15]);
}
else if(type=='B') //Brought Forward
{
//fprintf(f1,"                                  Brought Forward");
fprintf(f1,"%49.49s ",loc_legend[17]);
}
else //Carry FOrward
{
replicate(hl,MAX_COL);
//fprintf(f1,"\n                                  Carry  Forward ");
fprintf(f1,"\n%48.48s ",loc_legend[16]);
line=line+1;
}

if (trx_type=='O')
{
print_formated_out(tot_debit_amt,'N');    
print_formated_out(tot_credit_amt,'N');
print_formated_out(tot_debit_amt-tot_credit_amt,'Y');
}

if (trx_type=='A')
{
print_formated_age(nd_cut1s_amt,'Y');    
print_formated_age(nd_cut2s_amt,'Y');
print_formated_age(nd_cut3s_amt,'Y'); 
print_formated_age(nd_cut4s_amt,'Y'); 
}


fprintf(f1,"\n");
line=line+1;

//CLosing Or C/F or summary 
if (type=='C' || type=='E' || type=='S')
{
replicate(hl,MAX_COL);
fprintf(f1,"\n");
line=line+1;
}


}

replicate(printchar,no_of_times)
int printchar;
int no_of_times;
{
int i;
    for (i = 0; i < no_of_times; i++)
	    
	    fprintf(f1,"%c",printchar);
	   	          
  	return;
}


printdoc()
{

WSPrintDocument
(
uid_pwd.arr,			//char	*PUidPwd;
nd_session_id.arr,		//char	*PSessionID;
nd_facility_id.arr,	//char	*PFacilityID;
"BL",					//char	*PModuleID;
"BLRPATST",	//char	*PDocumentID;
filename,				//char	*POnlinePrintFileNames;
"O",					//char	*PLocationTypes;
" ",					//char	*PLocationCodes;
1,						//int	PNumOfCopies;
1,						//int	PPageFrom;
9999,					//int	PPageTo;
p_ws_no.arr, 
" "
);

}
 
fetch_legend_value()
{
	for(i=1;i<=27;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLRPATST.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';
 
		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
						     'SM',
						     'SM_LANG_LEGEND',
						     'DFLT_LEGEND_VALUE',
						     :l_pk_value,
						     :l_translated_value,
							 :p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
		
	}
}

get_local_date()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);

		 :nd_loc_date := to_char(t_date,'DD/MM/YYYY HH24:MI');


	END;

	END-EXEC;

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

get_local_date1()
{
	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'DD/MM/YYYY'),:p_language_id,t_date);

		 :nd_loc_date := to_char(t_date,'DD/MM/YYYY');


	END;

	END-EXEC;

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");


}

init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
}

fun_change_loc_date()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);
nd_temp_date.arr[nd_temp_date.len]='\0';

get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 
}

fun_change_loc_date1()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);
nd_temp_date.arr[nd_temp_date.len]='\0';

get_local_date1();

strcpy(date_convert.arr,nd_loc_date.arr); 
}

fun_centre(v_text,v_size)
{
int l_length,i;
l_length=strlen(v_text);
for (i=0;i<(v_size-l_length)/2;i++)
{
 if(nd_print_option.arr[0]=='R')
 strcat(nd_line_text.arr," ");
 else
 fprintf(f1," ");
}
}

#undef DEBUG
#undef NODATAFOUND
#undef MAX_LINES
#undef VER

