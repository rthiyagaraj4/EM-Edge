/************************************************************************/
/* PROGRAM NAME          : BLRDFSLT.PC                                  */
/* AUTHOR                : YESHODA ERAPPA                               */
/* DATE WRITTEN          : 10-11-2003                                   */
/* CALLED FROM           : BLRDFSLT.FMX                                 */
/************************************************************************/

#include <stdio.h>
#include <string.h>     
#include <bl.h>

#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
//#define NO_DATA_FOUND (sqlca.sqlerrd[2]==0) 
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define INIT_MESG "Report Generation In Progress"


EXEC SQL BEGIN DECLARE SECTION;

 VARCHAR hosp_name                                      [120],
	     date_time                                  [20],
	     user_id                                    [40],
	     nd_pwd					[100],
	     nd_session_id                              [16],
	     nd_pgm_date                                [25],
	     d_curr_pgm_name                            [15],
	     d_facility_id				[10];
		 
  VARCHAR    nd_fr_serv_date				[20],
  			nd_to_serv_date			[20],
			nd_fr_empl_code			[9],
			nd_to_empl_code			[9],
			nd_fr_phy_id			[16],
			nd_to_phy_id			[16],
			nd_fr_cust_code			[9],
			nd_to_cust_code			[9],
			nd_selection_option		[2],
			nd_report_option		[2];

  VARCHAR	bl_org_customer			[9],
			bl_physician_id			[16],
			bl_customer				[9],
			bl_patient_id			[21],
			bl_blng_serv_code		[11],
			bl_blng_serv_date		[20],
			bl_bill_doc_type_code	[7],
			bl_bill_doc_type_num	[9],
			bl_bill_doc_date		[20],
			bl_prt_grp_hdr_code		[3],
			bl_prt_grp_line_code	[3],
			bl_charge_type_code		[2],
			bl_df_physician_id		[16];

 VARCHAR	nd_phys_name			[31],
			nd_customer_name		[16],
			physician_id			[16],
			customer_code			[9];
			


	double bl_doctor_amt,
	       bl_cust_total,
	       bl_doctor_total, 
	       bl_grand_total ;			
      
  int    prt_select_flag;

  int l_counter = 0,
	  l_flag = 0,
	  nCnt1   = 0,
	  nCnt2   = 0;

  double   bl_bill_tot_amt, 
		bl_bill_amt,
	    bl_bill_tot_outst_amt, 
	    bl_ar_inv_doc_number,
	    bl_dcp_outst_amt,
		bl_bill_level_disc_amt,
		bl_line_level_disc_amt,
		bl_net_amt,
	    outst_amt,
		outst_amt_pdcp,
		d_rec_amt,
		d_rec_amt1,
		d_rec_amt2;

  char  filename[150];
  char  string_var [150];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int      lctr = 0,pctr = 0,rec_ctr=0 ;
double   bl_tot_net_amt		=0.0,
         bl_tot_ip_net_amt	= 0.0,
		 bl_tot_op_net_amt	= 0.0,
		 bl_tot_rf_net_amt	= 0.0,
         bl_grn_tot_net_amt = 0.0,
		 bl_phys_net_amt	= 0.0,
		 iptot				= 0.0,
		 optot				= 0.0,
		 rftot				= 0.0,
		 giptot				= 0.0,
		 goptot				= 0.0,
		 grftot				= 0.0,
		 ip_temp_tot		= 0.0,
		 ip_temp_gnd_tot	= 0.0,
		 op_temp_tot		= 0.0,
		 op_temp_gnd_tot	= 0.0;
	

char     blng_serv_code     [11], 
	     t_bill_stat_desc[3],
		 bill_settled_type[1],
	     dcp_outst_amt_desc[1];
	  
	 
FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program\n");
       proc_exit();
    }
 
    strcpy(g_pgm_id,"BLRDFSLT");

	 strcpy(nd_pwd.arr,argv[1]);
	 nd_pwd.len = strlen(nd_pwd.arr);

	 EXEC sql connect :nd_pwd;
	  
	  if (sqlca.sqlcode < 0 )
	   {
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
        }
	set_meduser_role(); 

    strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    strcpy(nd_session_id.arr,argv[2]);
    nd_session_id.len = strlen(nd_session_id.arr);
    strcpy(g_session_id,nd_session_id.arr);

    strcpy(nd_pgm_date.arr,argv[3]);
    nd_pgm_date.len = strlen(nd_pgm_date.arr);
    strcpy(g_pgm_date,nd_pgm_date.arr);

    //start_prog_msg();

    fetch_prog_param();


	fetch_hosp_name();



	declare_cur();

	 

	open_file();
	
	open_cur();
   
    l_flag = 1;  
	bl_cust_total = 0.0;
	bl_doctor_total = 0.0;

   
    
	while(fetch_cur())
    {
			if (l_flag == 1)
			{
			    if (strcmp(nd_report_option.arr , "D") == 0)
				{
					print_doctor_code();
					print_customer_code();	
				}
				 else
				{
					
					select_phys_name();
	                 fprintf(fp,"%-15s %-30s\n",bl_physician_id.arr,nd_phys_name.arr);

					//fprintf(fp,"CUSTOMER CODE :  ");
					get_customer_name();
	
					if (bl_customer.arr[0] == '\0') 
					{
						fprintf(fp,"                                     PRIVATE -- CASH PATIENT ");
						
					}
					else
					{
						fprintf(fp,"                                     %-8s %15s", bl_customer.arr, nd_customer_name.arr);
					}

				 } 


				lctr+=3;
				l_flag = 0;

			}

     		   if (strcmp(physician_id.arr,bl_physician_id.arr) == 0)
			   {
                  	if (strcmp(customer_code.arr,bl_customer.arr) == 0)
					{		
						if (strcmp(nd_report_option.arr , "D") == 0)
						  print_details();


						  bl_cust_total = bl_cust_total + bl_doctor_amt;
						  bl_doctor_total =  bl_doctor_total + bl_doctor_amt;
						  bl_grand_total = bl_grand_total + bl_doctor_amt;
					}
					else /* customer */
					{
						if (strcmp(nd_report_option.arr , "D") == 0)
						{
							print_customer_total();
							print_customer_code();
							print_details();
						 }
						 else
						 {
						    print_customer_total();
							get_customer_name();
							
                            if (bl_customer.arr[0] == '\0') 
							{
								fprintf(fp,"                                     PRIVATE -- CASH PATIENT ");
								
							}
							else
							{
								fprintf(fp,"                                     %-8s %15s", bl_customer.arr, nd_customer_name.arr);
							}
						 }
                             
             

					   
					      bl_cust_total = bl_cust_total + bl_doctor_amt;
						  bl_doctor_total =  bl_doctor_total + bl_doctor_amt;
						  bl_grand_total = bl_grand_total + bl_doctor_amt;
                       


					} /* end of customer */
				}
				else /* physician*/
				{
					
					//print_customer_total();
					
					//print_doctor_total();
					//bl_cust_total = 0.0;
					//bl_doctor_total = 0.0;

					
					lctr+=3;
                     
					if (strcmp(nd_report_option.arr , "D") == 0)
					{
					    print_customer_total();
					    print_doctor_total();
						//print_details();
						print_doctor_code();
						print_customer_code();
						print_details();

					}
					else
					{
						print_customer_total();
					    print_doctor_total();
						 select_phys_name();
	                     fprintf(fp,"%-15s %-30s\n",bl_physician_id.arr,nd_phys_name.arr);
						
		                
						get_customer_name();
						if (bl_customer.arr[0] == '\0') 
						{
							fprintf(fp,"                                     PRIVATE -- CASH PATIENT ");
							
						}
						else
						{
							fprintf(fp,"                                     %-8s %15s", bl_customer.arr, nd_customer_name.arr);
						} 
                     } 

					bl_cust_total = bl_cust_total + bl_doctor_amt;
					bl_doctor_total =  bl_doctor_total + bl_doctor_amt;
					bl_grand_total = bl_grand_total + bl_doctor_amt;
					

				}

        strcpy(physician_id.arr,bl_physician_id.arr);
		strcpy(customer_code.arr,bl_customer.arr);
   
   }/* end of while  fetch cur*/
 
  
   if (l_counter != 0)
   {
      
	
   
      if (strcmp(nd_report_option.arr , "D") == 0)
	  {
	      print_customer_total();
	      print_doctor_total();
		  fprintf(fp,"                                                       GRAND TOTAL     =       ");
		  print_formated1(bl_grand_total);
		  fprintf(fp,"\n");
		  fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
	 }
	 else
	 {
		print_customer_total();
	    print_doctor_total();
		fprintf(fp,"                                                     GRAND TOTAL             ");
		print_formated1(bl_grand_total);
		fprintf(fp,"\n");
		fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
		  

	 }


   }
  

   end_of_rep();

   fclose(fp);
   //end_prog_msg();

   EXEC SQL COMMIT WORK RELEASE;
   if (OERROR)
	 err_mesg("COMMIT WORK RELEASE failed",0,"");

   return;
}

fetch_prog_param()
{

	nd_fr_serv_date.arr[0]		= '\0';
  	nd_to_serv_date.arr[0]		= '\0';
	nd_fr_empl_code.arr[0]		= '\0';
	nd_to_empl_code.arr[0]		= '\0';
	nd_fr_phy_id.arr[0]			= '\0';
	nd_to_phy_id.arr[0]			= '\0';
	nd_fr_cust_code.arr[0]		= '\0';
	nd_to_cust_code.arr[0]		= '\0';
	nd_selection_option.arr[0]	= '\0';
	nd_report_option.arr[0]		= '\0';
	d_facility_id.arr[0]		= '\0';


	nd_fr_serv_date.len			= 0;
  	nd_to_serv_date.len			= 0;
	nd_fr_empl_code.len			= 0;
	nd_to_empl_code.len			= 0;
	nd_fr_phy_id.len			= 0;
	nd_to_phy_id.len			= 0;
	nd_fr_cust_code.len			= 0;
	nd_to_cust_code.len			= 0;
	nd_selection_option.len		= 0;
	nd_report_option.len		= 0;
	d_facility_id.len			= 0;


	

   EXEC SQL SELECT     	PARAM1,PARAM2,
                       	PARAM3,PARAM4,
                       	PARAM5,PARAM6,
                       	PARAM7,PARAM8,
                       	PARAM9,PARAM10,
						operating_facility_id
	       INTO      	:nd_fr_serv_date,
			     		:nd_to_serv_date,
						:nd_fr_empl_code,
						:nd_to_empl_code,
						:nd_fr_phy_id,
						:nd_to_phy_id,
						:nd_fr_cust_code,
						:nd_to_cust_code,
						:nd_selection_option,
						:nd_report_option,
						:d_facility_id
	     FROM SY_PROG_PARAM
	     WHERE PGM_ID     = :d_curr_pgm_name
	       AND SESSION_ID = :nd_session_id
	       AND PGM_DATE   = :nd_pgm_date;

   


   if (OERROR)
		err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
		err_mesg("No Record found in SY_PROG_PARAM",0,"");

    
	nd_fr_serv_date.arr[nd_fr_serv_date.len]		= '\0';
  	nd_to_serv_date.arr[nd_to_serv_date.len]		= '\0';
	nd_fr_empl_code.arr[nd_fr_empl_code.len]		= '\0';
	nd_to_empl_code.arr[nd_to_empl_code.len]		= '\0';
	nd_fr_phy_id.arr[nd_fr_phy_id.len]				= '\0';
	nd_to_phy_id.arr[nd_to_phy_id.len]				= '\0';
	nd_fr_cust_code.arr[nd_fr_cust_code.len]		= '\0';
	nd_to_cust_code.arr[nd_to_cust_code.len]		= '\0';
	nd_selection_option.arr[nd_selection_option.len]	= '\0';
	nd_report_option.arr[nd_report_option.len]		= '\0';
	d_facility_id.arr[d_facility_id.len]			= '\0';
	strcpy(g_facility_id,d_facility_id.arr);

   EXEC SQL DELETE SY_PROG_PARAM
	     WHERE PGM_ID     = :d_curr_pgm_name
	       AND SESSION_ID = :nd_session_id
	       AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
	 err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
}

declare_cur()
{

  EXEC SQL DECLARE BL_CUR CURSOR FOR	   
		  SELECT	A.CUST_CODE ORGANIZATION, 
				B.PHYSICIAN_ID, 
				B.CUST_CODE CUSTOMER,
				B.PATIENT_ID, 
				B.PRT_GRP_HDR_CODE,
				B.PRT_GRP_LINE_CODE,
				B.CHARGE_TYPE_CODE,
				B.DF_PHYSICIAN_ID,
				B.BLNG_SERV_CODE, 
				to_char(B.SERVICE_DATE, 'dd/mm/yyyy'),
				B.BILL_DOC_TYPE_CODE, 
				B.BILL_DOC_NUM, 
				to_char(B.BILL_DOC_DATE, 'dd/mm/yyyy'),
				NVL(B.UPD_NET_CHARGE_AMT,0) DOCTOR_AMT,
				NVL(B.BILL_LEVEL_DISC_DSTRBTN_AMT,0),
				NVL(B.LINE_LEVEL_DISC_DSTRBTN_AMT,0)
		FROM		BL_PHYSICIANS_FOR_EMPLOYER A, BL_PATIENT_CHARGES_FOLIO B
		WHERE		B.operating_facility_id = :d_facility_id
		AND		B.PHYSICIAN_ID = A.PHYSICIAN_ID(+)
		AND		TRUNC(B.SERVICE_DATE) between to_date(NVL(:nd_fr_serv_date,'01/01/1000'),'DD/MM/YYYY')  and 
				                           to_date(NVL(:nd_to_serv_date,'01/01/3000'),'DD/MM/YYYY') 
		AND		NVL(A.CUST_CODE,'!!!!!!!!')    BETWEEN NVL(:nd_fr_empl_code,'!!!!!!!!')         and 
										   NVL(:nd_to_empl_code,'~~~~~~~~')
		AND		NVL(B.CUST_CODE,'!!!!!!!!')    BETWEEN NVL(:nd_fr_cust_code,'!!!!!!!!')         and 
										   NVL(:nd_to_cust_code,'~~~~~~~~')
		AND		B.PHYSICIAN_ID BETWEEN NVL(:nd_fr_phy_id,'!!!!!!!!!!!!!!!')         and 
										   NVL(:nd_to_phy_id,'~~~~~~~~~~~~~~~')
		AND		B.BLNG_GRP_ID IN (SELECT C.BLNG_GRP_ID 
				FROM BL_BLNG_GRP C
				WHERE	(C.SETTLEMENT_IND = 'C' AND :nd_selection_option = 'C')
				OR		(C.SETTLEMENT_IND = 'R' AND :nd_selection_option = 'R')
						OR		(C.SETTLEMENT_IND = 'X' AND C.ADM_REC_FLAG = '1' AND :nd_selection_option = 'R')
						OR		(C.SETTLEMENT_IND = 'X' AND C.ADM_REC_FLAG = '2' AND :nd_selection_option = 'I')
						OR		(:nd_selection_option      = 'A')
								)
		AND			B.DF_SERVICE_IND IN ('Y'  ,'D')
		order by 2 ,3;

     
}

open_cur()
{
	  EXEC SQL OPEN BL_CUR;
	  if (OERROR)
			err_mesg("OPEN failed on cursor BL_CUR",0,"");
}

fetch_cur()
{
	bl_org_customer.arr[0]			= '\0';
	bl_physician_id.arr[0]			= '\0';
	bl_customer.arr[0]			= '\0';
	bl_patient_id.arr[0]			= '\0';
	bl_prt_grp_hdr_code.arr[0]		= '\0';
	bl_prt_grp_line_code.arr[0]		= '\0';
	bl_charge_type_code.arr[0]		= '\0';
	bl_df_physician_id.arr[0]		= '\0';
	bl_blng_serv_code.arr[0]		= '\0';
	bl_blng_serv_date.arr[0]		= '\0';
	bl_bill_doc_type_code.arr[0]		= '\0';
	bl_bill_doc_type_num.arr[0]		= '\0';
	bl_bill_doc_date.arr[0]			= '\0';
	
	bl_org_customer.len			= 0;
	bl_physician_id.len			= 0;
	bl_customer.len				= 0;
	bl_patient_id.len			= 0;
	bl_prt_grp_hdr_code.len			= 0;
	bl_prt_grp_line_code.len		= 0;
	bl_charge_type_code.len			= 0;
	bl_df_physician_id.len			= 0;
	bl_blng_serv_code.len			= 0;
	bl_blng_serv_date.len			= 0;
	bl_bill_doc_type_code.len		= 0;
	bl_bill_doc_type_num.len		= 0;
	bl_bill_doc_date.len			= 0;

	bl_doctor_amt = 0.0;
	bl_bill_level_disc_amt = 0.0;
	bl_line_level_disc_amt = 0.0;

     EXEC SQL FETCH BL_CUR
	       INTO :bl_org_customer,
		:bl_physician_id,
		:bl_customer,
		:bl_patient_id,
		:bl_prt_grp_hdr_code,
		:bl_prt_grp_line_code,
		:bl_charge_type_code,
		:bl_df_physician_id,
		:bl_blng_serv_code,
		:bl_blng_serv_date,
		:bl_bill_doc_type_code,
		:bl_bill_doc_type_num,
		:bl_bill_doc_date,
		:bl_doctor_amt,
		:bl_bill_level_disc_amt,
		:bl_line_level_disc_amt;

      if (OERROR)
			err_mesg("FETCH failed on cursor BL_CUR",0,"");
     
      if(LAST_ROW)
	  {
		 
		return 0;
	  }



	bl_org_customer.arr[bl_org_customer.len]				= '\0';
	bl_physician_id.arr[bl_physician_id.len]				= '\0';
	bl_customer.arr[bl_customer.len]						= '\0';
	bl_patient_id.arr[bl_patient_id.len]					= '\0';
	bl_prt_grp_hdr_code.arr[bl_prt_grp_hdr_code.len]		= '\0';
	bl_prt_grp_line_code.arr[bl_prt_grp_line_code.len]		= '\0';
	bl_charge_type_code.arr[bl_charge_type_code.len]		= '\0';
	bl_df_physician_id.arr[bl_df_physician_id.len]			= '\0';
	bl_blng_serv_code.arr[bl_blng_serv_code.len]			= '\0';
	bl_blng_serv_date.arr[bl_blng_serv_date.len]			= '\0';
	bl_bill_doc_type_code.arr[bl_bill_doc_type_code.len]	= '\0';
	bl_bill_doc_type_num.arr[bl_bill_doc_type_num.len]		= '\0';
	bl_bill_doc_date.arr[bl_bill_doc_date.len]				= '\0';
	

	if ((bl_bill_level_disc_amt + bl_line_level_disc_amt) > bl_doctor_amt  && bl_doctor_amt > 0)
	   bl_doctor_amt = 0;
	else
	   bl_doctor_amt = bl_doctor_amt - bl_bill_level_disc_amt - bl_line_level_disc_amt;

	

	

    l_counter = l_counter + 1;

    if (l_counter == 1 )
	{
	    strcpy(physician_id.arr,bl_physician_id.arr);
		strcpy(customer_code.arr,bl_customer.arr);
	}


      
   return 1;

 	
}


open_file()
{

  strcpy(g_facility_id, d_facility_id.arr);

   strcpy(filename,WORKING_DIR);
   strcat(filename,"blrdfslt.lis");

       if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file blrdfslt.lis");
       proc_exit();
    }
    if (strcmp(nd_report_option.arr , "D") == 0)
	{
		print_title_dtl();  
		print_head_dtl();
	}
	else
	{
		print_title_summary();  
		print_head_summary();
	}

}


print_customer_total()
{

   if (strcmp(nd_report_option.arr , "D") == 0)
   {
		fprintf(fp , "                                                       CUSTOMER TOTAL  =       ");
		print_formated1(bl_cust_total);
		fprintf(fp,"\n\n");
   }
   else
   {
    	fprintf(fp , "                ");
		print_formated1(bl_cust_total);
		fprintf(fp,"\n");

   }
		
		bl_cust_total = 0.0;
}



print_customer_code()
{

	get_customer_name();

	fprintf(fp,"CUSTOMER CODE :  ");
	
	if (bl_customer.arr[0] == '\0') 
	{
		fprintf(fp,"PRIVATE -- CASH PATIENT");
		fprintf(fp , "\n");
	}
	else
	{
		fprintf(fp,"%-8s %-15s\n", bl_customer.arr ,nd_customer_name.arr);
	}

}

print_doctor_total()
{

    if (strcmp(nd_report_option.arr , "D") == 0)
	{
		fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
		fprintf(fp , "                                                       DOCTOR TOTAL    =       ");
		print_formated1(bl_doctor_total);
		fprintf(fp,"\n\n");
		fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
	}
	else
	{
		fprintf(fp,"                                                    -------------------------------------------\n");
		fprintf(fp , "                                                     DOCTOR TOTAL            ");
		print_formated1(bl_doctor_total);
		fprintf(fp,"\n");
		fprintf(fp,"                                                    -------------------------------------------\n");			
	}



	bl_doctor_total = 0.0;

}


print_doctor_code()
{

	fprintf(fp,"DOCTOR CODE   :  ");
	select_phys_name();
	fprintf(fp,"%-15s %-30s\n",bl_physician_id.arr,nd_phys_name.arr);

}

print_details()

{
  

     if (lctr > 60)
	    print_head_dtl();


		fprintf(fp, "%-20s  ",bl_patient_id.arr);
		fprintf(fp, "%-10s    ",bl_blng_serv_code.arr);
		fprintf(fp, "%-10s    ",bl_blng_serv_date.arr);
		
		if ((bl_bill_doc_type_code.arr[0] != '\0') && (bl_bill_doc_type_num.arr[0] != '\0'))
		  fprintf(fp, "%-6s/%-8s  ",bl_bill_doc_type_code.arr , bl_bill_doc_type_num.arr);
		else
		 fprintf(fp, "                 ");


  
		fprintf(fp, "%-10s  ", bl_bill_doc_date.arr);
		print_formated1(bl_doctor_amt);
		fprintf(fp , "\n");

	
	  

	  
	  
    lctr++;



	
   fflush(fp);
}





select_phys_name()
{
	nd_phys_name.arr[0] = '\0';
	nd_phys_name.len    = 0;
	

	EXEC SQL SELECT	 FULL_NAME into :nd_phys_name
			 FROM     SY_PHYSICIAN_MAST
			 WHERE   PHYSICIAN_ID    = :bl_physician_id
			   AND   facility_id     = :d_facility_id;

    if(OERROR)
	    err_mesg("SELECT failed on table   SY_PHYSICIAN_MAST",0,"");

nd_phys_name.arr[nd_phys_name.len]           = '\0';

}

get_customer_name()
{

	nd_customer_name.arr[0] = '\0';
	nd_customer_name.len    = 0;
	

	EXEC SQL SELECT	 SHORT_NAME into :nd_customer_name
			 FROM     AR_CUSTOMER
			 WHERE   CUST_CODE    = :bl_customer;
			   

    if(OERROR)
	    err_mesg("SELECT failed on table   AR_CUSTOMER",0,"");

nd_customer_name.arr[nd_customer_name.len]           = '\0';


}


end_of_rep()
{
fprintf(fp,"\n\n                                      ***  END OF REPORT ***\n");
fflush(fp);
}


/***** Printing of the Title    **********/

print_title_dtl()
{
fprintf(fp,
"\fMDL : BL                       %-30s                  %-16s\n",
hosp_name.arr,date_time.arr);
fprintf(fp,"OPR : %-10s \n", user_id.arr);
fprintf(fp,
"REP : %-8s       %s               PAGE : %4d\n",
"BLRDFSLT"," DOCTOR CHARGE  BY SETTLEMENT/CUSTOMER -- DETAIL",++pctr);



fprintf(fp,
"-----------------------------------------------------------------------------------------------\n");
fprintf(fp,"VER : 4.1\n");
fflush(fp);


fprintf(fp,"\n\n\n\n        INPUT PARAMETERS :\n        ----------------\n\n");



fprintf(fp,"                 SERVICE DATE      FROM : %s\n",strcmp(nd_fr_serv_date.arr , "01/01/1000")?nd_fr_serv_date.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_serv_date.arr , "01/01/3000")?nd_to_serv_date.arr:"HIGHEST");


fprintf(fp,"              DOCTOR EMPLOYER      FROM : %s\n",strcmp(nd_fr_empl_code.arr,"!!!!!!!!")?nd_fr_empl_code.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_empl_code.arr,"~~~~~~~~")?nd_to_empl_code.arr:"HIGHEST");



fprintf(fp,"                 DOCTOR ID         FROM : %s\n",strcmp(nd_fr_phy_id.arr,"!!!!!!!!!!!!!!!")?nd_fr_phy_id.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_phy_id.arr,"~~~~~~~~~~~~~~~")?nd_to_phy_id.arr:"HIGHEST");


fprintf(fp,"                 CUSTOMER CODE     FROM : %s\n",strcmp(nd_fr_cust_code.arr,"!!!!!!!!")?nd_fr_cust_code.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_cust_code.arr,"~~~~~~~~")?nd_to_cust_code.arr:"HIGHEST");


if  (strcmp(nd_selection_option.arr, "C") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :CASH PATIENT\n");
else if (strcmp(nd_selection_option.arr, "R") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :CREDIT PATIENT\n");
else if (strcmp(nd_selection_option.arr, "I") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :INSURANCE PATIENT\n");
else
	fprintf(fp,"                 SETTLEMENT OPTION      :ALL PATIENT\n");


}


print_title_summary()
{
fprintf(fp,
"\fMDL : BL                       %-30s                  %-16s\n",
hosp_name.arr,date_time.arr);
fprintf(fp,"OPR : %-10s \n", user_id.arr);
fprintf(fp,
"REP : %-8s       %s              PAGE : %4d\n",
"BLRDFSLT"," DOCTOR CHARGE  BY SETTLEMENT/CUSTOMER -- SUMMARY",++pctr);



fprintf(fp,
"-----------------------------------------------------------------------------------------------\n");
fprintf(fp,"VER : 4.1\n");
fflush(fp);


fprintf(fp,"\n\n\n\n        INPUT PARAMETERS :\n        ----------------\n\n");



fprintf(fp,"                 SERVICE DATE      FROM : %s\n",strcmp(nd_fr_serv_date.arr , "01/01/1000")?nd_fr_serv_date.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_serv_date.arr , "01/01/3000")?nd_to_serv_date.arr:"HIGHEST");


fprintf(fp,"              DOCTOR EMPLOYER      FROM : %s\n",strcmp(nd_fr_empl_code.arr,"!!!!!!!!")?nd_fr_empl_code.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_empl_code.arr,"~~~~~~~~")?nd_to_empl_code.arr:"HIGHEST");



fprintf(fp,"                 DOCTOR ID         FROM : %s\n",strcmp(nd_fr_phy_id.arr,"!!!!!!!!!!!!!!!")?nd_fr_phy_id.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_phy_id.arr,"~~~~~~~~~~~~~~~")?nd_to_phy_id.arr:"HIGHEST");


fprintf(fp,"                 CUSTOMER CODE     FROM : %s\n",strcmp(nd_fr_cust_code.arr,"!!!!!!!!")?nd_fr_cust_code.arr:"LOWEST");
fprintf(fp,"                                   TO   : %s\n\n",strcmp(nd_to_cust_code.arr,"~~~~~~~~")?nd_to_cust_code.arr:"HIGHEST");


if  (strcmp(nd_selection_option.arr, "C") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :CASH PATIENT\n");
else if (strcmp(nd_selection_option.arr, "R") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :CREDIT PATIENT\n");
else if (strcmp(nd_selection_option.arr, "I") == 0)
	fprintf(fp,"                 SETTLEMENT OPTION      :INSURANCE PATIENT\n");
else
	fprintf(fp,"                 SETTLEMENT OPTION      :ALL PATIENT\n");


}

  

/***** Printing of the Header    **********/

print_head_dtl()
{
fprintf(fp,
"\fMDL : BL                       %-30s                  %-16s\n",
hosp_name.arr,date_time.arr);

fprintf(fp,"OPR : %-10s \n", user_id.arr);
fprintf(fp,
"REP : %-8s       %s               PAGE : %4d\n",
"BLRDFSLT"," DOCTOR CHARGE  BY SETTLEMENT/CUSTOMER -- DETAIL",++pctr);


fprintf(fp,"-----------------------------------------------------------------------------------------------\n");

fprintf(fp, "PATIENT ID            SERVICE CODE  SERVICE DATE  BILL NO          BILL DATE      DOCTOR AMOUNT\n");

fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
fflush(fp);
lctr = 13;
}

print_head_summary()
{
fprintf(fp,
"\fMDL : BL                       %-30s                 %-16s\n",
hosp_name.arr,date_time.arr);

fprintf(fp,"OPR : %-10s \n", user_id.arr);
fprintf(fp,
"REP : %-8s       %s             PAGE : %4d\n",
"BLRDFSLT"," DOCTOR CHARGE  BY SETTLEMENT/CUSTOMER -- SUMMARY",++pctr);
fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
fprintf(fp,"DOCTOR                               CUSTOMER                                        AMOUNT\n");
fprintf(fp,"-----------------------------------------------------------------------------------------------\n");
fflush(fp);
lctr = 13;
}


fetch_hosp_name()
{
    hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
    user_id.arr[0]   = '\0';
    hosp_name.len    = 0;
    date_time.len    = 0;
    user_id.len      = 0;

    EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
		    USER
	     INTO :hosp_name, :date_time, :user_id
	     FROM SY_ACC_ENTITY
		WHERE acc_entity_id = :d_facility_id;

       if (OERROR) err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

hosp_name.arr[hosp_name.len]           = '\0';
date_time.arr[date_time.len]           = '\0';
user_id.arr[user_id.len]               = '\0';
}


print_formated(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];

   if (loc_amount >= 0)
   {
      /*sprintf(out_str,"%15.2f",loc_amount);  
      //ltrim(out_str);
	  str_comma(out_str);
      sprintf(out_str1,"%25s",out_str);*/

      put_val(out_str1,loc_amount);
      format_amt(out_str1);

      fprintf(fp,"%25s ",out_str1);
   }
   else
   {
      /*sprintf(out_str,"%15.2f",-loc_amount);
      //ltrim(out_str);
	  str_comma(out_str);
      sprintf(out_str1,"%25s",out_str);*/

      put_val(out_str1,-loc_amount);
      format_amt(out_str1);

      fprintf(fp,"%25s-",out_str1);
   }
}

print_formated1(loc_amount)
double loc_amount;
{
   char out_str[30],out_str1[30];

   if (loc_amount >= 0)
   {
      /*sprintf(out_str,"%15.2f",loc_amount);
      //ltrim(out_str);
	  str_comma(out_str);
      sprintf(out_str1,"%15s",out_str);*/

      put_val(out_str1,loc_amount);
      format_amt(out_str1);

      fprintf(fp,"%15s ",out_str1);
   }
   else
   {
      /*sprintf(out_str,"%15.2f",-loc_amount);
      //ltrim(out_str);
	  str_comma(out_str);
      sprintf(out_str1,"%15s",out_str);*/

      put_val(out_str1,-loc_amount);
      format_amt(out_str1);

      //fprintf(fp,"%15s-",out_str1);
	  fprintf(fp,"%15sCR",out_str1);
   }
}
