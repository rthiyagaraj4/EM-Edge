/************************************************************************/
/* CSS MEDICOM VER 2.0                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLRSRIND.PC                                  */
/* AUTHOR                : V.SRIKANTH                                   */
/* DATE WRITTEN          : 09/02/1999        Modified : 31/05/1999      */
/*                                                                      */
/* FUNCTION              : BUSINESS ANALYSIS BY CUSTOMER (DETAIL)       */
/*                                                                      */
/* TABLE DETAILS         : BL_BILL_HDR                                  */
/*                         BL_PATIENT_CHARGES_FOLIO                     */
/*                         BL_BLNG_GRP                                  */ 
/*                         AR_CUSTOMER                                  */
/*                         MP_PATIENT_MAST                              */
/*                         SY_ACC_ENTITY                                */ 
/*                         SY_PROG_PARAM                                */
/*                                                                      */
/*                                                                      */
/* FUNCTIONS             : print_detail()                               */
/*						   fetch_bl_bill_hdr()							*/
/*						   fetch_folio()								*/
/*						   fetch_blng_grp_desc()						*/
/*						   fetch_customer_name()						*/
/*						   fetch_patient_name()							*/
/*						   print_title()								*/
/*						   print_page_head()							*/
/*						   print_end()									*/
/*						   print_folio_record()							*/	
/*						   print_break_blng_grp()						*/
/*						   print_break_cust_code()						*/
/*						   check_folio_record()                         */
/*                                                                      */
/*                                                                      */
/************************************************************************/
#include <stdio.h>
#include <string.h>
#include <bl.h>      

#define OERROR (sqlca.sqlcode < 0)
#define NO_DATA_FOUND (sqlca.sqlcode == 1403)
#define RESOURCE_BUSY (sqlca.sqlcode == -54)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define INIT_MESG "Report Generation In Progress..."

#define DEST_NAME "blrsrind.lis"

#define HSKIP_10 2
#define HSKIP_11 20
#define HSKIP_12 15

#define MAX_LINES 53

#define DEBUG 1
#define ESC 0x1B 

EXEC SQL BEGIN DECLARE SECTION;


   VARCHAR uid_pwd						[132],
		   hosp_name					[41], //changed from 31 to 41
		   date_time					[20],
		   user_id						[20],
		   cur_str						[8],
		   sub_cur_str					[8],
		   nd_pgm_date					[35],
		   nd_session_id				[16],
		   nd_facility_id				[3],
		   d_facility_id				[10];

   VARCHAR nd_episode_type				[2],
		   p_language_id				[3],
		   nd_temp_date					[21],
		   date_convert					[21],
			nd_loc_date					[21],
		   nd_fr_pat_id					[21],
		   nd_to_pat_id					[21],
		   nd_fr_blng_grp				[5],
		   nd_to_blng_grp				[5],
		   nd_fr_cust_code				[9],
		   nd_to_cust_code				[9],
		   nd_fr_doc_type_code			[7],
		   nd_to_doc_type_code			[7],
		   nd_fr_doc_number				[9],
		   nd_to_doc_number				[9],
		   nd_fr_bill_date				[11],
		   nd_to_bill_date				[11],
		   nd_fr_blng_serv				[11],
		   nd_to_blng_serv				[11],
		   nd_report_type				[2],
		   nd_report_opt				[2],
   		   nd_bill_nat					[2],
		   d_curs						[3000];


   VARCHAR d_blng_grp_id				[5],  
		   d_cust_code					[9],
		   d_trx_doc_ref				[21],
		   d_trx_date					[11],
		   d_patient_no					[23],
		   d_patient_name				[61],
		   d_patient_name_loc_lang       [60],
		   d_patient_name1              [61],
		   d_short_name_full            [61],
		   d_episode_type				[2],
		   d_episode_id					[9],
		   d_visit_id					[5],
		   d_bill_doc_type				[7],
		   d_bill_doc_number			[9],
		   d_bill_doc_date				[11],
		   d_blng_serv_code				[11],
		   d_pkg_serv_code				[11],
		   g_blng_serv_code				[11],
		   g_blng_grp_id				[5],
		   g_cust_code					[9],
		   g_cust_code_1				[9],
		   g_blng_grp_desc				[41],
		   g_cust_name					[41],
		   l_pk_value					[100],
		   l_translated_value			[201];

	double d_gross_amt,
		   d_disc_amt,
		   d_net_amt,
		   b_gross_amt,
		   b_disc_amt,
		   b_net_amt,
		   g_gross_amt,
		   g_disc_amt,
		   g_net_amt,
		   c_gross_amt,
		   c_disc_amt,
		   c_net_amt;
		    
	int	   cnt;

	char   filename[150],
		   string_var[100];
	
	char loc_legend[999][201];
	int i;
	int v_no_of_decimal=0;
	int s_amt_len = 0;
int nd_length_of_string=0,nd_length_of_string1=0,nd_length_of_string2=0;
VARCHAR nd_batch_filename		    [20],
		   nd_report_option		        [3],
		   orig_desc_string             [2000],
		   orig_desc_string1		    [2000],
		   nd_desc_with_spl_chr	        [2000],
		   nd_pad_req_yn			    [3],nd_print_option              [12],
		   nd_temp_str                  [1000];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int  g_serv_init;
int  g_first_bgrp;
int  lno = 0, pno = 0;

double g_cum_amt = 0,g_sub_tot = 0;
double tot_disc_amt = 0;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
   if (argc < 4)
   {
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"BLRSRIND");

   if(sql_connect() == -1)
   {
      disp_message(ORA_MESG,"Error in connecting to Oracle");
      if (uid_pwd.len == 0)
			disp_message(ERR_MESG,"Null oracle uid/pwd");
      proc_exit();
   }  

   set_meduser_role();

   strcpy(p_language_id.arr,l_language_id.arr);
   p_language_id.len = l_language_id.len;

   strcpy(g_pgm_date,argv[3]);
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);
fun_Pad_desc_with_spl_char_yn();
   nd_episode_type.arr[0]		= '\0';
   nd_fr_pat_id.arr[0]			= '\0';	
   nd_to_pat_id.arr[0]			= '\0';	
   nd_fr_blng_grp.arr[0]		= '\0';
   nd_to_blng_grp.arr[0]		= '\0';
   nd_fr_cust_code.arr[0]		= '\0';
   nd_to_cust_code.arr[0]		= '\0';
   nd_fr_doc_type_code.arr[0]	= '\0';
   nd_to_doc_type_code.arr[0]	= '\0';
   nd_fr_doc_number.arr[0]		= '\0';
   nd_to_doc_number.arr[0]		= '\0';
   nd_fr_bill_date.arr[0]		= '\0';
   nd_to_bill_date.arr[0]		= '\0';
   nd_fr_blng_serv.arr[0]		= '\0';
   nd_to_blng_serv.arr[0]		= '\0';
   nd_report_type.arr[0]		= '\0';
   nd_report_opt.arr[0]			= '\0';
   nd_bill_nat.arr[0]			= '\0';

   nd_episode_type.len			=	0;
   nd_fr_pat_id.len				=	0;	
   nd_to_pat_id.len				=	0;	
   nd_fr_blng_grp.len			=	0;
   nd_to_blng_grp.len			=	0;
   nd_fr_cust_code.len			=	0;
   nd_to_cust_code.len			=	0;
   nd_fr_doc_type_code.len		=	0;
   nd_to_doc_type_code.len		=	0;
   nd_fr_doc_number.len			=	0;
   nd_to_doc_number.len			=	0;
   nd_fr_bill_date.len			=	0;
   nd_to_bill_date.len			=	0;
   nd_fr_blng_serv.len			=	0;
   nd_to_blng_serv.len			=	0;
   nd_report_type.len			=	0;
   nd_report_opt.len			=	0;
   nd_bill_nat.len				=	0;
   
   EXEC SQL SELECT PARAM1,PARAM2,PARAM3,PARAM4,PARAM5,PARAM6,PARAM7,
				   PARAM8,PARAM9,PARAM10,PARAM11,NVL(PARAM12,'01/01/1800'),
				   NVL(PARAM13,'31/12/4712'),
				   PARAM14,PARAM15,PARAM16,PARAM17, operating_facility_id
  	        INTO   :nd_episode_type,
				   :nd_fr_pat_id,
				   :nd_to_pat_id,
				   :nd_fr_blng_grp,
				   :nd_to_blng_grp,
				   :nd_fr_cust_code,
				   :nd_to_cust_code,
				   :nd_fr_doc_type_code,
				   :nd_to_doc_type_code,
				   :nd_fr_doc_number,
				   :nd_to_doc_number,
				   :nd_fr_bill_date,
				   :nd_to_bill_date,
				   :nd_fr_blng_serv,
				   :nd_to_blng_serv,
				   :nd_report_opt,
				   :nd_bill_nat,
				   :d_facility_id
	      FROM SY_PROG_PARAM
	      WHERE PGM_ID     = 'BLRSRINC'  AND 
		        SESSION_ID = :nd_session_id AND 
				PGM_DATE   = :nd_pgm_date;

   if (OERROR)
		err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
		err_mesg("No Record found in SY_PROG_PARAM",0,"");


   nd_episode_type.arr[nd_episode_type.len]			=	'\0';
   nd_fr_pat_id.arr[nd_fr_pat_id.len]				=	'\0';	
   nd_to_pat_id.arr[nd_to_pat_id.len]				=	'\0';	
   nd_fr_blng_grp.arr[nd_fr_blng_grp.len]			=	'\0';
   nd_to_blng_grp.arr[nd_to_blng_grp.len]			=	'\0';
   nd_fr_cust_code.arr[nd_fr_cust_code.len]			=	'\0';
   nd_to_cust_code.arr[nd_to_cust_code.len]			=	'\0';
   nd_fr_doc_type_code.arr[nd_fr_doc_type_code.len]	=	'\0';
   nd_to_doc_type_code.arr[nd_to_doc_type_code.len]	=	'\0';
   nd_fr_doc_number.arr[nd_fr_doc_number.len]		=	'\0';
   nd_to_doc_number.arr[nd_to_doc_number.len]		=	'\0';
   nd_fr_bill_date.arr[nd_fr_bill_date.len]			=	'\0';
   nd_to_bill_date.arr[nd_to_bill_date.len]			=	'\0';
   nd_fr_blng_serv.arr[nd_fr_blng_serv.len]			=	'\0';
   nd_to_blng_serv.arr[nd_to_blng_serv.len]			=	'\0';
   nd_report_type.arr[nd_report_type.len]			=	'\0';
   nd_report_opt.arr[nd_report_opt.len]				=	'\0';
   nd_bill_nat.arr[nd_bill_nat.len]					=	'\0';
   
   d_facility_id.arr[d_facility_id.len]				=	'\0';
   strcpy(g_facility_id, d_facility_id.arr);
	
   start_prog_msg();
   fetch_desc();
//	fetch_legend_value();
   print_detail();

   EXEC SQL DELETE FROM SY_PROG_PARAM
		  WHERE PGM_ID     = 'BLRSRINC'
		    AND SESSION_ID = :nd_session_id
		    AND PGM_DATE   = :nd_pgm_date;
   
   if (OERROR)   
	err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");


   end_prog_msg();
   EXEC SQL COMMIT WORK RELEASE;
   return ;
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

declare_cursors()
{

d_curs.arr[0] = '\0';
d_curs.len = 0;

 
/*--- Bill Header Cursor (Dynamic SQL) ---------------------------------*/

 strcpy(d_curs.arr,"SELECT DISTINCT BLNG_GRP_ID, CUST_CODE, NVL(CUST_CODE,'f') FROM BL_BILL_HDR WHERE ");

 strcat(d_curs.arr," DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and \
									  :nd_to_doc_type_code AND \
			   DOC_NUM    BETWEEN     :nd_fr_doc_number and \
									  :nd_to_doc_number AND \
		 TRUNC(DOC_DATE) BETWEEN	  to_date(:nd_fr_bill_date,'DD/MM/YYYY') and \
									  to_date(:nd_to_bill_date,'DD/MM/YYYY') AND \
				BLNG_GRP_ID BETWEEN    :nd_fr_blng_grp and \
									  :nd_to_blng_grp AND \
			   NVL(operating_facility_id,'X') = NVL(:d_facility_id,'X') AND\
			   (CUST_CODE IS NULL OR (CUST_CODE IS NOT NULL AND \
			    CUST_CODE BETWEEN      :nd_fr_cust_code and \
									   :nd_to_cust_code)) AND \
				PATIENT_ID BETWEEN     :nd_fr_pat_id and \
								       :nd_to_pat_id AND \
			   NVL(BILL_STATUS,'X')        != 'C' AND \
			   NVL(BILL_TRX_TYPE_CODE,'X') != 'I' ");
			    

 if (nd_episode_type.arr[0] != 'A')
	strcat(d_curs.arr," AND EPISODE_TYPE = :nd_episode_type "); 
 
 if (nd_bill_nat.arr[0] != 'B')
 {
	 strcat(d_curs.arr," AND NVL(BILL_NATURE_CODE,'X') = :nd_bill_nat \
						ORDER BY BLNG_GRP_ID, CUST_CODE ");
 }
 else
 {
	 strcat(d_curs.arr," ORDER BY BLNG_GRP_ID, CUST_CODE ");
 }

 d_curs.len = strlen(d_curs.arr);

 EXEC SQL PREPARE BILL_HEADER_LIST FROM :d_curs;

 if(OERROR)
	err_mesg("PREPARE failed on BILL_HEADER_LIST",0,"");

 EXEC SQL DECLARE BILL_HDR_CUR CURSOR FOR BILL_HEADER_LIST;

 if(OERROR)
	err_mesg("DECLARE failed on BILL_HDR_CUR",0,"");

/*---------------------------------------------------------------------*/

if (nd_episode_type.arr[0] == 'A')
{			
    if (g_cust_code.arr[0] != 'f')
	{
	  
    EXEC SQL DECLARE FOLIO_CHG_CUR_1A CURSOR FOR    
	     SELECT  A.CUST_CODE,A.BLNG_GRP_ID,
				 B.TRX_DOC_REF,
				 TO_CHAR(B.TRX_DATE,'DD/MM/YYYY'),
				 B.PATIENT_ID,
				 B.EPISODE_TYPE,
				 B.EPISODE_ID,
				 B.VISIT_ID,
				 B.BILL_DOC_TYPE_CODE,
				 B.BILL_DOC_NUM,
				 TO_CHAR(B.BILL_DOC_DATE,'DD/MM/YYYY'),
				 B.BLNG_SERV_CODE,
				 DECODE(B.PACKAGE_IND,'P',B.PACKAGE_SERVICE_CODE,'S','      '),
				 B.ORG_GROSS_CHARGE_AMT,
				 B.ORG_DISC_AMT,
				 B.ORG_NET_CHARGE_AMT
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.CUST_CODE = :g_cust_code AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									      to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND   
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
				 ORDER BY A.BLNG_GRP_ID,A.CUST_CODE,B.BLNG_SERV_CODE,TRUNC(TRX_DATE),B.TRX_DOC_REF;

	}
	else
	{

		EXEC SQL   DECLARE FOLIO_CHG_CUR_2A CURSOR FOR    
	     SELECT  A.CUST_CODE,A.BLNG_GRP_ID,
				 B.TRX_DOC_REF,
				 TO_CHAR(B.TRX_DATE,'DD/MM/YYYY'),
				 B.PATIENT_ID,
				 B.EPISODE_TYPE,
				 B.EPISODE_ID,
				 B.VISIT_ID,
				 B.BILL_DOC_TYPE_CODE,
				 B.BILL_DOC_NUM,
				 TO_CHAR(B.BILL_DOC_DATE,'DD/MM/YYYY'),
				 B.BLNG_SERV_CODE,
				 DECODE(B.PACKAGE_IND,'P',B.PACKAGE_SERVICE_CODE,'S','      '),
				 B.ORG_GROSS_CHARGE_AMT,
				 B.ORG_DISC_AMT,
				 B.ORG_NET_CHARGE_AMT
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									      to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
				 ORDER BY A.BLNG_GRP_ID,A.CUST_CODE,B.BLNG_SERV_CODE,TRUNC(TRX_DATE),B.TRX_DOC_REF;

	}
}
else
{
    if (g_cust_code.arr[0] != 'f')
	{

      EXEC SQL   DECLARE FOLIO_CHG_CUR_1 CURSOR FOR    
	     SELECT  A.CUST_CODE,A.BLNG_GRP_ID,
				 B.TRX_DOC_REF,
				 TO_CHAR(B.TRX_DATE,'DD/MM/YYYY'),
				 B.PATIENT_ID,
				 B.EPISODE_TYPE,
				 B.EPISODE_ID,
				 B.VISIT_ID,
				 B.BILL_DOC_TYPE_CODE,
				 B.BILL_DOC_NUM,
				 TO_CHAR(B.BILL_DOC_DATE,'DD/MM/YYYY'),
				 B.BLNG_SERV_CODE,
				 DECODE(B.PACKAGE_IND,'P',B.PACKAGE_SERVICE_CODE,'S','      '),
				 B.ORG_GROSS_CHARGE_AMT,
				 B.ORG_DISC_AMT,
				 B.ORG_NET_CHARGE_AMT
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.CUST_CODE = :g_cust_code AND
				 A.EPISODE_TYPE = :nd_episode_type AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									       to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
			     ORDER BY A.BLNG_GRP_ID,A.CUST_CODE,B.BLNG_SERV_CODE,TRUNC(TRX_DATE),B.TRX_DOC_REF;

	}
	else
	{

	     EXEC SQL   DECLARE FOLIO_CHG_CUR_2 CURSOR FOR    
	     SELECT  A.CUST_CODE,A.BLNG_GRP_ID,
				 B.TRX_DOC_REF,
				 TO_CHAR(B.TRX_DATE,'DD/MM/YYYY'),
				 B.PATIENT_ID,
				 B.EPISODE_TYPE,
				 B.EPISODE_ID,
				 B.VISIT_ID,
				 B.BILL_DOC_TYPE_CODE,
				 B.BILL_DOC_NUM,
				 TO_CHAR(B.BILL_DOC_DATE,'DD/MM/YYYY'),
				 B.BLNG_SERV_CODE,
				 DECODE(B.PACKAGE_IND,'P',B.PACKAGE_SERVICE_CODE,'S','      '),
				 B.ORG_GROSS_CHARGE_AMT,
				 B.ORG_DISC_AMT,
				 B.ORG_NET_CHARGE_AMT
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.EPISODE_TYPE = :nd_episode_type AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN	to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									        to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
				 ORDER BY A.BLNG_GRP_ID,A.CUST_CODE,B.BLNG_SERV_CODE,TRUNC(TRX_DATE),B.TRX_DOC_REF;

	}

}

/*---------------------------------------------------------------------*/

    EXEC SQL DECLARE BL_BLNG_GRP_CUR CURSOR FOR
	     SELECT  LONG_DESC
	     FROM    BL_BLNG_GRP_LANG_VW
	     WHERE   BLNG_GRP_ID = :g_blng_grp_id
		 AND LANGUAGE_ID =:p_language_id;

    EXEC SQL DECLARE CUSTOMER_CUR CURSOR FOR
	     SELECT  LONG_NAME
	     FROM    AR_CUSTOMER_LANG_VW
	     WHERE   CUST_CODE = :g_cust_code
		 and language_id=:p_language_id;
   
    EXEC SQL DECLARE PATIENT_CUR CURSOR FOR
	     SELECT  decode(:p_language_id,'en',SHORT_NAME,SHORT_NAME_LOC_LANG)
	     FROM    MP_PATIENT_MAST
	     WHERE   PATIENT_ID = :d_patient_no ;

/*------------ Open the Prepared cursor Bill hdr and Folio ----------*/

if (nd_episode_type.arr[0] == 'A')
{

 if (nd_bill_nat.arr[0] != 'B')
 { 
		EXEC SQL OPEN BILL_HDR_CUR USING
	             :nd_fr_doc_type_code,
				 :nd_to_doc_type_code,
				 :nd_fr_doc_number,
				 :nd_to_doc_number,
				 :nd_fr_bill_date,
				 :nd_to_bill_date,
				 :nd_fr_blng_grp,
                 :nd_to_blng_grp,
				 :d_facility_id,
                 :nd_fr_cust_code,
                 :nd_to_cust_code,
                 :nd_fr_pat_id,
				 :nd_to_pat_id,
				 :nd_bill_nat; 
 }
 else
 {
 
		EXEC SQL OPEN BILL_HDR_CUR USING
				 :nd_fr_doc_type_code,
				 :nd_to_doc_type_code,
				 :nd_fr_doc_number,
				 :nd_to_doc_number,
				 :nd_fr_bill_date,
				 :nd_to_bill_date,
				 :nd_fr_blng_grp,
                 :nd_to_blng_grp,
				 :d_facility_id,
                 :nd_fr_cust_code,
                 :nd_to_cust_code,
                 :nd_fr_pat_id,
				 :nd_to_pat_id;

 }
}
else
{ 
 if (nd_bill_nat.arr[0] != 'B')
 { 
		EXEC SQL OPEN BILL_HDR_CUR USING
                 :nd_fr_doc_type_code,
				 :nd_to_doc_type_code,
				 :nd_fr_doc_number,
				 :nd_to_doc_number,
				 :nd_fr_bill_date,
				 :nd_to_bill_date,
				 :nd_fr_blng_grp,
                 :nd_to_blng_grp,
				 :d_facility_id,
                 :nd_fr_cust_code,
                 :nd_to_cust_code,
				 :nd_fr_pat_id,
				 :nd_to_pat_id,
	             :nd_episode_type,
				 :nd_bill_nat;
				  
 }
 else
 {
		EXEC SQL OPEN BILL_HDR_CUR USING
				 :nd_fr_doc_type_code,
				 :nd_to_doc_type_code,
				 :nd_fr_doc_number,
				 :nd_to_doc_number,
				 :nd_fr_bill_date,
				 :nd_to_bill_date,
				 :nd_fr_blng_grp,
                 :nd_to_blng_grp,
				 :d_facility_id,
                 :nd_fr_cust_code,
                 :nd_to_cust_code,
				 :nd_fr_pat_id,
				 :nd_to_pat_id,
	             :nd_episode_type;
  }
} 

if(OERROR)
	err_mesg("OPEN failed on cursor TRANS_LIST_CUR",0,"");

/*-------------------------------------------------------------------*/

}

print_detail()
{

pno = 1;

open_files();
fetch_legend_value();

/** for printing in A4 size landsacpe  given by vani**/
fprintf(fp,"%c&l1O",ESC);   /* To Print Landscape           */
fprintf(fp,"%c&a7L",ESC); 	/* To Set the Left margin  		*/
fprintf(fp,"%c(s14H",ESC); 	/* To set the font size			*/


print_title();
declare_cursors();
g_first_bgrp = 1;

/*-- Fetch distinct Blng grp id/Customer from bl_bill_hdr table */

while(fetch_bl_bill_hdr()) 
{

		/*-- Check any folio record available for blng grp / Customer */		
		check_folio_record();
		if (cnt == 0)
			continue;

		/*-- Billing Group Total */

		if (g_first_bgrp == 0)
		{
			strcpy(d_blng_grp_id.arr,g_blng_grp_id.arr);
			g_first_bgrp = 0;
		}
		
		if(strcmp(g_blng_grp_id.arr,d_blng_grp_id.arr)) 
		{
				if (c_gross_amt != 0 || c_disc_amt != 0 || c_net_amt != 0)
				{
					/*-- Print the Billing Group total */
					print_break_blng_grp();
					c_gross_amt = 0;
					c_disc_amt  = 0;
					c_net_amt   = 0;
				}
 		}

		fetch_blng_grp_desc();
		if (g_cust_code.arr[0] != 'f')
				fetch_customer_name();
		print_page_head();	

		/*-- Open Folio Cursor --------------------*/

		if (nd_episode_type.arr[0] == 'A')
		{			
			if (g_cust_code.arr[0] != 'f')
				EXEC SQL OPEN FOLIO_CHG_CUR_1A;
			else
				EXEC SQL OPEN FOLIO_CHG_CUR_2A;
		}
		else
		{
			if (g_cust_code.arr[0] != 'f')
				EXEC SQL OPEN FOLIO_CHG_CUR_1;
			else
				EXEC SQL OPEN FOLIO_CHG_CUR_2;
		}

		if(OERROR)
				err_mesg("OPEN failed on cursor FOLIO_CHG_CUR",0,"");
		
		/*-- Fetch Folio Records ----------------------------*/
		
		g_serv_init = 1;

		/*-- Fetch folio records for blng grp id / Customer -----*/

		while(fetch_folio()) 
		{
			if (g_serv_init == 1)
			{
				strcpy(g_blng_serv_code.arr,d_blng_serv_code.arr);
				g_serv_init = 0;
			}

			/*-- Print Billing Service break Total	*/		
			if (strcmp(g_blng_serv_code.arr,d_blng_serv_code.arr))
			{
				print_blng_serv_break();
				strcpy(g_blng_serv_code.arr,d_blng_serv_code.arr);
				g_gross_amt += b_gross_amt;
				g_disc_amt  += b_disc_amt;
				g_net_amt   += b_net_amt;
				b_gross_amt = 0;
				b_disc_amt  = 0;
				b_net_amt   = 0;
			}
			
			/*-- Print the folio record */
			print_folio_record();	

			b_gross_amt += d_gross_amt;
	        b_disc_amt  += d_disc_amt;
	        b_net_amt   += d_net_amt;
	    } 
		

		print_blng_serv_break();
		g_gross_amt += b_gross_amt;
	    g_disc_amt  += b_disc_amt;
	    g_net_amt   += b_net_amt;
		b_gross_amt = 0;
		b_disc_amt  = 0;
		b_net_amt   = 0;

 		/*-- Print Blng grp total */
		if (g_gross_amt != 0 || g_disc_amt != 0 || g_net_amt != 0)
		{

			/*-- Print the Present Customer total */
			if (g_cust_code.arr[0] != 'f')
				print_break_cust_code();
			else
				print_break_cash_pat();
		}

		c_gross_amt += g_gross_amt;
		c_disc_amt  += g_disc_amt;
		c_net_amt   += g_net_amt;
		g_gross_amt = 0;
		g_disc_amt  = 0;
		g_net_amt   = 0;

		strcpy(d_blng_grp_id.arr,g_blng_grp_id.arr);

		/*-- Close folio cursor */
		if (nd_episode_type.arr[0] == 'A')
		{			
			if (g_cust_code.arr[0] != 'f')
				EXEC SQL CLOSE FOLIO_CHG_CUR_1A;
			else
				EXEC SQL CLOSE FOLIO_CHG_CUR_2A;
		}
		else
		{
			if (g_cust_code.arr[0] != 'f')
				EXEC SQL CLOSE FOLIO_CHG_CUR_1;
			else
				EXEC SQL CLOSE FOLIO_CHG_CUR_2;
		}


} 
print_end();
fflush(fp);
fclose(fp);
return 1;
}


open_files()
{
  strcpy(filename,WORKING_DIR);
  strcat(filename,"blrsrind.lis");
   
   if ((fp = fopen(filename,"w")) == NULL)
   {
	err_mesg("\nError while opening File blrsrind.lis\n",0,"");
	proc_exit();
   }

}


fetch_bl_bill_hdr()
{
	g_cust_code.arr[0]       = '\0';
	g_cust_code_1.arr[0]     = '\0';
	g_blng_grp_id.arr[0]     = '\0';

	g_cust_code.len          = 0;
	g_cust_code_1.len        = 0;
	g_blng_grp_id.len        = 0;

	EXEC SQL FETCH BILL_HDR_CUR INTO 
		       :g_blng_grp_id,
			   :g_cust_code_1,
			   :g_cust_code;
		           
	if(OERROR)
			err_mesg("FETCH failed on cursor BILL_HDR_CUR",0,"");
	
    
	if(NO_DATA_FOUND)
	    return 0;
    
	g_cust_code.arr[g_cust_code.len]            = '\0';
	g_blng_grp_id.arr[g_blng_grp_id.len]        = '\0';
	g_cust_code_1.arr[g_cust_code_1.len]        = '\0';
	return 1;
}



fetch_folio()
{

    d_cust_code.arr[0]				  = '\0';
	d_blng_grp_id.arr[0]			  = '\0';
	d_trx_doc_ref.arr[0]			  = '\0';
	d_trx_date.arr[0]				  = '\0';
	d_patient_no.arr[0]				  = '\0';
	d_episode_type.arr[0]			  = '\0';
	d_episode_id.arr[0]			      = '\0';
	d_visit_id.arr[0]				  = '\0';
	d_bill_doc_type.arr[0]			  = '\0';
	d_bill_doc_number.arr[0]		  = '\0';
	d_bill_doc_date.arr[0]			  = '\0';
	d_blng_serv_code.arr[0]			  = '\0';
	d_pkg_serv_code.arr[0]			  = '\0';

	d_cust_code.len					  =   0;
	d_blng_grp_id.len				  =   0;
	d_trx_doc_ref.len				  =   0;
	d_trx_date.len					  =   0;
	d_patient_no.len				  =   0;
	d_episode_type.len				  =   0;
	d_episode_id.len				  =   0;
	d_visit_id.len					  =   0;
	d_bill_doc_type.len				  =   0;
	d_bill_doc_number.len			  =   0;
	d_bill_doc_date.len				  =   0;
	d_blng_serv_code.len			  =   0;
	d_pkg_serv_code.len				  =   0;
    
    d_gross_amt     = 0;
    d_disc_amt      = 0;
    d_net_amt       = 0;

/*------------------------------------------------------------------*/

	if (nd_episode_type.arr[0] == 'A')
	{			
			if (g_cust_code.arr[0] != 'f')
			{
				EXEC SQL FETCH FOLIO_CHG_CUR_1A
			    INTO  :d_cust_code,
				:d_blng_grp_id,
				:d_trx_doc_ref,
				:d_trx_date	,
				:d_patient_no,	
				:d_episode_type,
				:d_episode_id,	
				:d_visit_id	,
				:d_bill_doc_type,
				:d_bill_doc_number,
				:d_bill_doc_date	,
				:d_blng_serv_code,	
				:d_pkg_serv_code	,
				:d_gross_amt,
				:d_disc_amt,
				:d_net_amt;
			}
			else
			{
				EXEC SQL FETCH FOLIO_CHG_CUR_2A
				INTO  :d_cust_code,
				:d_blng_grp_id,
				:d_trx_doc_ref,
				:d_trx_date	,
				:d_patient_no,	
				:d_episode_type,
				:d_episode_id,	
				:d_visit_id	,
				:d_bill_doc_type,
				:d_bill_doc_number,
				:d_bill_doc_date	,
				:d_blng_serv_code,	
				:d_pkg_serv_code	,
				:d_gross_amt,
				:d_disc_amt,
				:d_net_amt;
			}
	}
	else
	{
			if (g_cust_code.arr[0] != 'f')
			{
				EXEC SQL FETCH FOLIO_CHG_CUR_1
			    INTO  :d_cust_code,
				:d_blng_grp_id,
				:d_trx_doc_ref,
				:d_trx_date	,
				:d_patient_no,	
				:d_episode_type,
				:d_episode_id,	
				:d_visit_id	,
				:d_bill_doc_type,
				:d_bill_doc_number,
				:d_bill_doc_date	,
				:d_blng_serv_code,	
				:d_pkg_serv_code	,
				:d_gross_amt,
				:d_disc_amt,
				:d_net_amt;
			}    
			else  
			{
				EXEC SQL FETCH FOLIO_CHG_CUR_2
				INTO  :d_cust_code,
				:d_blng_grp_id,
				:d_trx_doc_ref,
				:d_trx_date	,
				:d_patient_no,	
				:d_episode_type,
				:d_episode_id,	
				:d_visit_id	,
				:d_bill_doc_type,
				:d_bill_doc_number,
				:d_bill_doc_date	,
				:d_blng_serv_code,	
				:d_pkg_serv_code	,
				:d_gross_amt,
				:d_disc_amt,
				:d_net_amt;
			}
	}

/*------------------------------------------------------------------*/

	if(OERROR)
		  err_mesg("FETCH failed on cursor FOLIO_CHG_CUR",0,"");

    if(NO_DATA_FOUND)
	  	  return 0;

    d_cust_code.arr       [d_cust_code.len]				  = '\0';
	d_blng_grp_id.arr     [d_blng_grp_id.len]			  = '\0';
	d_trx_doc_ref.arr     [d_trx_doc_ref.len]			  = '\0';
	d_trx_date.arr        [d_trx_date.len]				  = '\0';
	d_patient_no.arr      [d_patient_no.len]			  = '\0';
	d_episode_type.arr    [d_episode_type.len]			  = '\0';
	d_episode_id.arr      [d_episode_id.len]			  = '\0';
	d_visit_id.arr        [d_visit_id.len]				  = '\0';
	d_bill_doc_type.arr   [d_bill_doc_type.len]			  = '\0';
	d_bill_doc_number.arr [d_bill_doc_number.len]		  = '\0';
	d_bill_doc_date.arr   [d_bill_doc_date.len]			  = '\0';
	d_blng_serv_code.arr  [d_blng_serv_code.len]		  = '\0';
	d_pkg_serv_code.arr   [d_pkg_serv_code.len]			  = '\0';

    return 1;

}


fetch_blng_grp_desc()
{

    EXEC SQL OPEN BL_BLNG_GRP_CUR;

    if(OERROR)
		err_mesg("OPEN failed on cursor BL_BLNG_GRP_CUR",0,"");

    g_blng_grp_desc.arr[0] = '\0';

    EXEC SQL FETCH BL_BLNG_GRP_CUR INTO
		   :g_blng_grp_desc;

    if(OERROR)
		err_mesg("FETCH failed on cursor BL_BLNG_GRP_CUR",0,"");

    g_blng_grp_desc.arr[g_blng_grp_desc.len] = '\0';

}



fetch_customer_name()
{

    EXEC SQL OPEN CUSTOMER_CUR;

    if(OERROR)
		err_mesg("OPEN failed on cursor CUSTOMER_CUR",0,"");

    g_cust_name.arr[0] = '\0';

    EXEC SQL FETCH CUSTOMER_CUR INTO
		   :g_cust_name;

    if(OERROR)
		err_mesg("FETCH failed on cursor CUSTOMER_CUR",0,"");

    g_cust_name.arr[g_cust_name.len] = '\0';

}


fetch_patient_name()
{

    EXEC SQL OPEN PATIENT_CUR;

    if(OERROR)
		err_mesg("OPEN failed on cursor PATIENT_CUR",0,"");

    d_patient_name.arr[0] = '\0';

    EXEC SQL FETCH PATIENT_CUR INTO
		   :d_patient_name;
		   


    if(OERROR)
		err_mesg("FETCH failed on cursor PATIENT_CUR",0,"");
    
	d_patient_name.arr[d_patient_name.len] = '\0';
	

}

print_title()
{
       init_date_temp_var();                             
	  strcpy(date_convert.arr,date_time.arr);           
	  fun_change_loc_date();
  /*fprintf(fp, "\n%-3.3s : BL %39s %-30s %34s  %-16s\n",loc_legend[10],
      " ", hosp_name.arr," ", date_convert.arr);

	  commented by saikiran */
	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[10]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"\n%-4.4s : BL %39s ",nd_desc_with_spl_chr.arr," ");				
																																																					
	}
	else
	   {
         fprintf(fp,"\n%-3.3s : BL %39s ",loc_legend[10]," ");
        }
	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-31.31s",hosp_name.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-31.31s ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-30.30s",hosp_name.arr);
        }

       fprintf(fp,"%-16s\n",date_convert.arr); 


  /*fprintf(fp, "%-3.3s : %-10s                      %s\n",loc_legend[20],
     user_id.arr,loc_legend[40]); commented by saikiran */

	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[20]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-4.4s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-3.3s : ",loc_legend[20]);
        }
		fprintf(fp,"%-10s                      ",user_id.arr);

	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%s",loc_legend[40]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%s\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n",loc_legend[40]);
        }


  /*fprintf(fp, "%-3.3s : %-8s %26s  %-28s %39s     %-5.5s : %4d\n",loc_legend[30],
    g_pgm_id, " ", loc_legend[50], " ",loc_legend[60], pno); 
	commented by saikiran*/

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[30]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-4.4s : %-8s %26s  ",nd_desc_with_spl_chr.arr,g_pgm_id, " ");				
																																																					
	}
	else
	   {
         fprintf(fp,"%-3.3s : %-8s %26s  ",loc_legend[30],g_pgm_id, " ");
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-28.28s",loc_legend[50]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-28.28s %39s     ",nd_desc_with_spl_chr.arr," ");				
																																																					
	}
	else
	   {
         fprintf(fp,"%-28.28s %39s     ",loc_legend[50]," ");
        }
 

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[60]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-5.5s : %4d\n",nd_desc_with_spl_chr.arr,pno);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-5.5s : %4d\n",loc_legend[60],pno);
        }

  pno++;

  fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  fprintf(fp,"VER : 4.1\n");
  fflush(fp);

  //fprintf(fp,"\n\n        %15s \n        ----------------\n\n",loc_legend[70]);commented by saikiran

 
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-17.17s",loc_legend[70]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"\n\n        %17.17s \n        ----------------\n\n",nd_desc_with_spl_chr.arr,pno);				
																																																					
	}
	else
	   {
         fprintf(fp,"\n\n        %17.17s \n        ----------------\n\n",loc_legend[70]);
        }
  
  if (nd_episode_type.arr[0] == 'I')
  {
    // fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[90]); commented by saikiran
    fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[90]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[90]);
        }

	}
  else if (nd_episode_type.arr[0] == 'D')
    {
	  //fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[100]);
	      fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[100]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[100]);
        }
 
	  }
  else if (nd_episode_type.arr[0] == 'O')
  {
   // fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[110]);
	      fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-12.12s",loc_legend[110]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-12.12s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[110]);
        }
   }
  else if (nd_episode_type.arr[0] == 'E')
  {
   // fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[120]);
   	      fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-15.15s",loc_legend[120]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-15.15s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[120]);
        }
   }
  else if (nd_episode_type.arr[0] == 'R')
  {
   // fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[130]);
   	      fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16.16s",loc_legend[130]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16.16s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[130]);
        }
   }
  else 
  {
   // fprintf(fp," %14s %-20.20s            : %s\n\n"," ",loc_legend[80],loc_legend[140]);
   	      fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s            : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-15.15s",loc_legend[140]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-15.15s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%s\n\n",loc_legend[140]);
        }
   }
  

  if ((strcmp(nd_fr_pat_id.arr,"!!!!!!!!!!!!!!!!!!!!") == 0) && (strcmp(nd_to_pat_id.arr,"~~~~~~~~~~~~~~~~~~~~") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-16s\n"," ",loc_legend[170],loc_legend[180],loc_legend[150]);              
     fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[170]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s     ",loc_legend[170]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-5.5s  : ",loc_legend[180]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16s",loc_legend[150]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16s\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-16s\n",loc_legend[150]);
        }
		
	 //fprintf(fp," %14s                          %-4.4s   : %-16s\n\n"," ",loc_legend[470],loc_legend[160]);            
  fprintf(fp," %14s                          "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
        fprintf(fp,"%-4.4s   : ",loc_legend[470]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16s",loc_legend[160]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-16s\n\n",loc_legend[160]);
        }

  }
  else
  {     

	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-16s\n"," ",loc_legend[170],nd_fr_pat_id.arr); 
	 fprintf(fp," %14s "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[170]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s     ",loc_legend[170]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-5.5s  : ",loc_legend[180]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16s\n",nd_fr_pat_id.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16s\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-16s\n",nd_fr_pat_id.arr);
        }
				
	//fprintf(fp," %14s                          %-4.4s   : %-16s\n\n"," ",loc_legend[470],nd_to_pat_id.arr); 
	fprintf(fp," %14s                          "," ");
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-4.4s   : ",loc_legend[470]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16s",nd_to_pat_id.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16s\n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-16s\n\n",nd_to_pat_id.arr);
        }	 
  } 


  if ((strcmp(nd_fr_blng_grp.arr,"!!") == 0) && (strcmp(nd_to_blng_grp.arr,"~~") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[190],loc_legend[180],loc_legend[150]);              
	 fprintf(fp," %14s "," ");
	 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[190]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[190]);
			}
	 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
	 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s\n",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}

	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
	  fprintf(fp," %14s                          "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10.10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10.10s\n\n",loc_legend[160]);
			}
  }
  else
  {     
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-3s\n"," ",loc_legend[190],loc_legend[180],nd_fr_blng_grp.arr); 
	fprintf(fp," %14s "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[190]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[190]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-3s\n",nd_fr_blng_grp.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-3s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-3s\n",nd_fr_blng_grp.arr);
			}

		 
	//fprintf(fp," %14s                          %-4.4s   : %-3s\n\n"," ",loc_legend[470],nd_to_blng_grp.arr); 
	fprintf(fp," %14s                          "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",nd_to_blng_grp.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-3s\n\n",nd_to_blng_grp.arr);
			}
				 
  }


  if ((strcmp(nd_fr_cust_code.arr,"!!!!!!!!") == 0) && (strcmp(nd_to_cust_code.arr,"~~~~~~~~") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[200],loc_legend[180],loc_legend[150]);              
	fprintf(fp," %14s "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[200]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[200]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}

	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
	fprintf(fp," %14s                          "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n\n",loc_legend[160]);
			}

  }
  else
  {     
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-8s\n"," ",loc_legend[200],loc_legend[180],nd_fr_cust_code.arr); 
	fprintf(fp," %14s "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[200]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[200]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-8s\n",nd_fr_cust_code.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-8s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-8s\n",nd_fr_cust_code.arr);
			}

	//fprintf(fp," %14s                          %-4.4s   : %-8s\n\n"," ",loc_legend[470],nd_to_cust_code.arr); 
	fprintf(fp," %14s                          "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-8s",nd_to_cust_code.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-8s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-8s\n\n",nd_to_cust_code.arr);
			}
  }

  if ((strcmp(nd_fr_doc_type_code.arr,"!!!!!!") == 0) && (strcmp(nd_to_doc_type_code.arr,"~~~~~~") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[210],loc_legend[180],loc_legend[150]);              
	fprintf(fp," %14s "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[210]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[210]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s  : ",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}
 
	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
	fprintf(fp," %14s                          "," ");
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n\n",loc_legend[160]);
			}
 
  }

  else
  {     
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-6s\n"," ",loc_legend[210],loc_legend[180],nd_fr_doc_type_code.arr); 
	fprintf(fp," %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-20.20s",loc_legend[210]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[210]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-6s",nd_fr_doc_type_code.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-6s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-6s\n",nd_fr_doc_type_code.arr);
			}


	//fprintf(fp," %14s                          %-4.4s   : %-6s\n\n"," ",loc_legend[470],nd_to_doc_type_code.arr); 
	fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s   : ",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-6s\n\n",nd_to_doc_type_code.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-6s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-6s\n\n",nd_to_doc_type_code.arr);
			}

  }
									   
  if ((strcmp(nd_fr_doc_number.arr,"0") == 0) && (strcmp(nd_to_doc_number.arr,"99999999") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[220],loc_legend[180],loc_legend[150]);              
	fprintf(fp," %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[220]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[220]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}

       //fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
		fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n\n",loc_legend[160]);
			}

  }
  else
  {     
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-8s\n"," ",loc_legend[220],loc_legend[180],nd_fr_doc_number.arr); 
	fprintf(fp," %14s ", " ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[220]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[220]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-8s",nd_fr_doc_number.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-8s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-8s\n",nd_fr_doc_number.arr);
			}

//	fprintf(fp," %14s                          %-4.4s  : %-8s\n\n"," ",loc_legend[470],nd_to_doc_number.arr); 
    fprintf(fp," %14s                          ", " ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			fprintf(fp,"%-4.4s  : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-8s\n\n",nd_to_doc_number.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-8s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-8s\n\n",nd_to_doc_number.arr);
			}
  }                                                            

  if ((strcmp(nd_fr_bill_date.arr,"01/01/1800") == 0) && (strcmp(nd_to_bill_date.arr,"31/12/4712") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[230],loc_legend[180],loc_legend[150]);              
	fprintf(fp," %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[230]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[230]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}


	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
	  fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n\n",loc_legend[160]);
			}
  }
  else
  {    
  init_date_temp_var();
		strcpy(date_convert.arr,nd_fr_bill_date.arr);
		fun_change_loc_date(); 
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[230],loc_legend[180],date_convert.arr); 
	 fprintf(fp," %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[230]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[230]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 
			 fprintf(fp,"%-10s\n",date_convert.arr);
		 


	init_date_temp_var();
		strcpy(date_convert.arr,nd_to_bill_date.arr);
		fun_change_loc_date();
	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],date_convert.arr); 
	  fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : %-10s\n\n",nd_desc_with_spl_chr.arr,date_convert.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : %-10s\n\n",loc_legend[470],date_convert.arr);
			}
  }     
  
  if ((strcmp(nd_fr_blng_serv.arr,"!!!!!!") == 0) && (strcmp(nd_to_blng_serv.arr,"~~~~~~") == 0))
  {
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-10s\n"," ",loc_legend[240],loc_legend[180],loc_legend[150]);              
	 fprintf(fp," %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-20.20s",loc_legend[240]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[240]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[150]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n",loc_legend[150]);
			}

	//fprintf(fp," %14s                          %-4.4s   : %-10s\n\n"," ",loc_legend[470],loc_legend[160]);            
	  fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10s",loc_legend[160]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10s\n\n",loc_legend[160]);
			}

  }
  else
  {     
	//fprintf(fp," %14s %-20.20s     %-5.5s  : %-6s\n"," ",loc_legend[240],loc_legend[180],nd_fr_blng_serv.arr); 
	fprintf(fp," %14s "," ");

 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[240]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s     ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s     ",loc_legend[240]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[180]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-5.5s  : ",loc_legend[180]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-11.11s",nd_fr_blng_serv.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-11.11s\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-6s\n",nd_fr_blng_serv.arr);
			}


	//fprintf(fp," %14s                          %-4.4s   : %-6s\n\n"," ",loc_legend[470],nd_to_blng_serv.arr); 
	fprintf(fp," %14s                          "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[470]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp," %-5.5s  : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-4.4s   : ",loc_legend[470]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-11.11s",nd_to_blng_serv.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-11.11s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-6s\n\n",nd_to_blng_serv.arr);
			}

  }     
  
  //fprintf(fp,  " %14s %-20.20s            : %s\n\n"," ",loc_legend[250],loc_legend[480]);
  fprintf(fp,  " %14s "," ");
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-21.21s",loc_legend[250]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-21.21s            : ",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20.20s            : ",loc_legend[250]);
			}
 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[480]);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-10.10s\n\n",nd_desc_with_spl_chr.arr);				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-10.10s\n\n",loc_legend[480]);
			}

  
    
  fflush(fp);
}

print_page_head()
{
	  init_date_temp_var();                             
	  strcpy(date_convert.arr,date_time.arr);            
	  fun_change_loc_date();
  /*fprintf(fp, "\f\n%-3.3s : BL %39s %-30s %34s  %-16s\n",loc_legend[10],
      " ", hosp_name.arr," ", date_convert.arr);
	  commented by saikiran */
    
	fprintf(fp, "\f\n");

 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[10]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"\n%-4.4s : BL %39s ",nd_desc_with_spl_chr.arr," ");				
																																																					
	}
	else
	   {
         fprintf(fp,"\n%-3.3s : BL %39s ",loc_legend[10]," ");
        }
	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-31.31s",hosp_name.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-31.31s ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-30.30s",hosp_name.arr);
        }

       fprintf(fp,"%-16s\n",date_convert.arr); 




  /*fprintf(fp, "%-3.3s : %-10s                      %s",loc_legend[20],
     user_id.arr,loc_legend[40]);
	 commented by saikiran */

	 	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[20]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-4.4s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-3.3s : ",loc_legend[20]);
        }
		fprintf(fp,"%-10s                      ",user_id.arr);

	  	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-38.38s",loc_legend[40]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-38.38s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-38.38s",loc_legend[40]);
        }


if (nd_episode_type.arr[0] == 'I')
{
    //fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[90]);
 
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[90]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s",loc_legend[90]);
        }
	}
  else if (nd_episode_type.arr[0] == 'D')
  {
   // fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[100]);
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[100]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s",loc_legend[100]);
        }
   }
  else if (nd_episode_type.arr[0] == 'O')
  {
   // fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[110]);
if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-11.11s",loc_legend[110]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-11.11s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s",loc_legend[110]);
        }
   }
  else if (nd_episode_type.arr[0] == 'E')
  {
   // fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[120]);
if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-12.12s",loc_legend[120]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-12.12s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-12.12s",loc_legend[120]);
        }

   }
  else if (nd_episode_type.arr[0] == 'R')
  {
   // fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[130]);
   if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[130]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s",loc_legend[130]);
        }

   }
  else 
  {
   // fprintf(fp," -- %-14.14s : %s",loc_legend[80],loc_legend[140]);
     if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[80]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp," -- %-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp," -- %-14.14s : ",loc_legend[80]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[140]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s",loc_legend[140]);
        }
   }
  
   /* if (nd_episode_type.arr[0] == 'I')
	fprintf(fp, " -- Episode Type : %s","Inpatients");
  else if (nd_episode_type.arr[0] == 'D')
	fprintf(fp, " -- Episode Type : %s","Day Care");
  else if (nd_episode_type.arr[0] == 'O')
	fprintf(fp, " -- Episode Type : %s","Outpatients");
  else if (nd_episode_type.arr[0] == 'E')
	fprintf(fp, " -- Episode Type : %s","Emergency");
  else if (nd_episode_type.arr[0] == 'R')
	fprintf(fp, " -- Episode Type : %s","Referral Patients");
  else if (nd_episode_type.arr[0] == 'A')
	fprintf(fp, " -- Episode Type : %s","All Patients");*/

  fprintf(fp,"\n");
  
 /* fprintf(fp, "%-3.3s : %-8s %26s  %-28s %39s     %-5.5s : %4d\n",loc_legend[30],
    g_pgm_id, " ", loc_legend[50], " ",loc_legend[60], pno);
	commented by saikiran */

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-4.4s",loc_legend[30]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-4.4s : %-8s %26s  ",nd_desc_with_spl_chr.arr,g_pgm_id, " ");				
																																																					
	}
	else
	   {
         fprintf(fp,"%-3.3s : %-8s %26s  ",loc_legend[30],g_pgm_id, " ");
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-28.28s",loc_legend[50]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-28.28s %39s     ",nd_desc_with_spl_chr.arr," ");				
																																																					
	}
	else
	   {
         fprintf(fp,"%-28.28s %39s     ",loc_legend[50]," ");
        }
 

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-5.5s",loc_legend[60]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-5.5s : %4d\n",nd_desc_with_spl_chr.arr,pno);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-5.5s : %4d\n",loc_legend[60],pno);
        }


  pno++;

  fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");


  /*fprintf(fp,"%-10.10s     : %-10s  %-6.6s : %-40s  \n",loc_legend[260],
								g_cust_code.arr, loc_legend[270],g_cust_name.arr);
   commented by saikiran */

      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[260]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s     : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s     : ",loc_legend[260]);
        }
      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",g_cust_code.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s  ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s  ",g_cust_code.arr);
        }

      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-6.6s",loc_legend[270]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-6.6s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-6.6s : ",loc_legend[270]);
        }


      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-40.40s",g_cust_name.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-40.40s  \n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-40.40s  \n",g_cust_name.arr);
        }


  /*fprintf(fp,"%-14.14s : %-10s  %-6.6s : %-40s  \n",loc_legend[280],
								g_blng_grp_id.arr,loc_legend[270], g_blng_grp_desc.arr);
   commented by saikiran */

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-14.14s",loc_legend[280]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-14.14s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-14.14s : ",loc_legend[280]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10s",g_blng_grp_id.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s  ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s  ",g_blng_grp_id.arr);
        }


      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-6.6s",loc_legend[270]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-6.6s : ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-6.6s : ",loc_legend[270]);
        }

      if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-40.40s",g_blng_grp_desc.arr);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-40.40s  \n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-40.40s  \n",g_blng_grp_desc.arr);
        }


  fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  //Commented for removing Pkg Cd. -- HMC Customization
  //fprintf(fp,"Pkg.cd.   Serv.Cd.    Trx.Date              Patient Number    Epsd.Ty/No/Visit        Gross.Amt.        Disc.Amt.        Net Amt.\n");
 
 /* fprintf(fp,"          Serv.Cd.    Trx.Date              Patient Number        Epsd.Ty/No/Visit        Gross.Amt.        Disc.Amt.        Net Amt.\n");
  fprintf(fp,"                      Trx.Doc.Ref.          Name                                  \n");
  fprintf(fp,"                      Bill Number           Bill Date\n");*/

  /*fprintf(fp,"              %-7.7s   %8.8s            %-15.15s       %-20.20s    %-10.10s        %-10.10s  %12.12s\n",
  loc_legend[290],loc_legend[300],loc_legend[310],loc_legend[320],loc_legend[330],loc_legend[340],loc_legend[350]);
  commented by saikiran
  */

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-8.8s",loc_legend[290]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"              %-8.8s",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"              %-8.8s",loc_legend[290]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-9.9s",loc_legend[300]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-9.9s             ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%9.9s             ",loc_legend[300]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-15.15s",loc_legend[310]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-15.15s       ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-15.15s       ",loc_legend[310]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-20.20s",loc_legend[320]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-20.20s    ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-20.20s    ",loc_legend[320]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[330]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-10.10s       ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-10.10s       ",loc_legend[330]);
        }
 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-9.9s",loc_legend[340]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-9.9s         ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
        fprintf(fp,"%-9.9s         ",loc_legend[340]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-8.8s",loc_legend[350]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-8.8s\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-8.8s\n",loc_legend[350]);
        }

  /*fprintf(fp,"                      %-18.18s    %-10.10s                            \n",
  loc_legend[360],loc_legend[370]); commented by saikiran */

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-18.18s",loc_legend[360]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"                      %-18.18s    ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"                      %-18.18s    ",loc_legend[360]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-10.10s",loc_legend[370]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"    %-10.10s                            \n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"    %-10.10s                            \n",loc_legend[370]);
        }


  //fprintf(fp,"                      %-18.18s    %-12.12s\n",loc_legend[380],loc_legend[390]);

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-18.18s",loc_legend[380]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"                      %-18.18s    ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"                      %-18.18s    ",loc_legend[380]);
        }

 if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-12.12s",loc_legend[390]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-12.12s\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-12.12s\n",loc_legend[390]);
        }

  fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
 
  
  fflush(fp);
  lno = 15;
}


print_end()
{
  if (lno > MAX_LINES) print_page_head();

  if (c_gross_amt != 0 || c_disc_amt != 0 || c_net_amt != 0)
  {
	print_break_blng_grp();
  }
  c_gross_amt = 0;
  c_disc_amt  = 0;
  c_net_amt   = 0;

  //fprintf(fp, "\n\n\n %52s **   %-15.15s   ** \n\n", " ",loc_legend[400]);
  fprintf(fp, "\n\n\n %52s **   "," ");
if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-16.16s",loc_legend[400]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-16.16s   ** \n\n",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-15.15s   ** \n\n",loc_legend[400]);
        }

  fflush(fp);
  fclose(fp);
}



print_folio_record()
{
	fetch_patient_name() ;
	
    if (lno+2 > MAX_LINES) print_page_head();
	  if(d_trx_date.arr[0]!='\0')
	  {
	  init_date_temp_var();                             
	  strcpy(date_convert.arr,d_trx_date.arr);            
	  fun_change_loc_date();
    fprintf(fp,"%10s %10s %10s            %-20s%1s%2s/%9s/%4s%2s",
	d_pkg_serv_code.arr,d_blng_serv_code.arr,date_convert.arr, d_patient_no.arr,
	" ",d_episode_type.arr,d_episode_id.arr,d_visit_id.arr," ");
	}
	print_formated(d_gross_amt); fprintf(fp,"%1s"," ");
	print_formated(d_disc_amt); fprintf(fp,"%2s"," ");
	print_formated(d_net_amt); fprintf(fp,"\n");
	//fprintf(fp,"%21s %-20s%2s%-60.60s\n"," ",d_trx_doc_ref.arr," ",d_patient_name.arr);commentd by saikiran
	  fprintf(fp,"%21s "," ");
	if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-20s",d_trx_doc_ref.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-20s%2s",nd_desc_with_spl_chr.arr," ");				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-20s%2s",d_trx_doc_ref.arr," ");
			}
	if(strcmp(nd_pad_req_yn.arr,"Y")==0)
		{
			nd_temp_str.arr[0]='\0';
			nd_temp_str.len=0;
			sprintf(nd_temp_str.arr,"%-60.60s",d_patient_name.arr);
			fun_Pad_desc_with_spl_char(nd_temp_str.arr);
			fprintf(fp,"%-60.60s\n",nd_desc_with_spl_chr.arr," ");				
																																																						
		}
		else
		   {
			 fprintf(fp,"%-60.60s\n",d_patient_name.arr," ");
			}

	  if(d_bill_doc_date.arr[0]!='\0')
	  {
	  init_date_temp_var();                             
	  strcpy(date_convert.arr,d_bill_doc_date.arr);            
	  fun_change_loc_date();
	  fprintf(fp,"%22s%-6s/%8s%7s%10s\n"," ",d_bill_doc_type.arr,d_bill_doc_number.arr," ",date_convert.arr);
	  }     
    lno+=4;
}
  
print_break_blng_grp()
{
    fetch_blng_grp_desc();

	if (lno > MAX_LINES) print_page_head();

    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
    fflush(fp);

	fprintf(fp,"  %-2s"," "); fprintf(fp,"%14s"," ");
	//fprintf(fp,"%-61s     ",loc_legend[410]);
	  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-61s",loc_legend[410]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-61s     ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-61s     ",loc_legend[410]);
        }


	print_formated(c_gross_amt); fprintf(fp,"%1s"," ");
	print_formated(c_disc_amt); fprintf(fp,"%2s"," ");
	print_formated(c_net_amt); fprintf(fp,"\n");

    
    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
	lno += 3;

    fflush(fp);

}
   
print_break_cash_pat()
{
   fprintf(fp, "%s%s%s\n",
	    "--------------------------------------------------------",
	    "--------------------------------------------------------",
	    "--------------------");
  
    fflush(fp);
    
	fprintf(fp,"  %-2s"," "); fprintf(fp,"%14s"," ");
	//fprintf(fp,"%-62s    ",loc_legend[420]);commented by saikiran
		  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-62s",loc_legend[420]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-62s    ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-62s    ",loc_legend[420]);
        }

	print_formated(g_gross_amt); fprintf(fp,"%1s"," ");
	print_formated(g_disc_amt); fprintf(fp,"%2s"," ");
	print_formated(g_net_amt); fprintf(fp,"\n");


    fprintf(fp, "%s%s%s\n",
	    "--------------------------------------------------------",
	    "--------------------------------------------------------",
	    "--------------------");
  
    fflush(fp);
	       
    lno+=3;

    if (lno > MAX_LINES) print_page_head();
}


print_break_cust_code()
{

    fetch_customer_name();


    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
    fflush(fp);
    
	fprintf(fp,"  %-2s"," "); fprintf(fp,"%14s"," ");
	//fprintf(fp,"%-58.58s     ",loc_legend[430]);
		  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-61.61s",loc_legend[430]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-61.61s     ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-61.61s     ",loc_legend[430]);
        }

	print_formated(g_gross_amt); fprintf(fp,"%1s"," ");
	print_formated(g_disc_amt); fprintf(fp,"%2s"," ");
	print_formated(g_net_amt); fprintf(fp,"\n");  


    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
    fflush(fp);

	lno+=3;

	if (lno > MAX_LINES) print_page_head();
	       
}

print_blng_serv_break()
{

    if (lno > MAX_LINES) print_page_head();

    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
    fflush(fp);
    
	fprintf(fp,"  %-2s"," "); fprintf(fp,"%14s"," ");
	//fprintf(fp,"%-61.61s     ",loc_legend[440]);COMMENTED BY SAIKIRAN
		  if(strcmp(nd_pad_req_yn.arr,"Y")==0)
	{
		nd_temp_str.arr[0]='\0';
		nd_temp_str.len=0;
		sprintf(nd_temp_str.arr,"%-61.61s",loc_legend[440]);
		fun_Pad_desc_with_spl_char(nd_temp_str.arr);
		fprintf(fp,"%-61.61s     ",nd_desc_with_spl_chr.arr);				
																																																					
	}
	else
	   {
         fprintf(fp,"%-61.61s     ",loc_legend[440]);
        }
	print_formated(b_gross_amt); fprintf(fp,"%1s"," ");
	print_formated(b_disc_amt); fprintf(fp,"%2s"," ");
	print_formated(b_net_amt); fprintf(fp,"\n");


    fprintf(fp,"------------------------------------------------------------------------------------------------------------------------------------\n");
  
    fflush(fp);
	       
    lno+=3;  
}

print_formated(l_amt)
double l_amt;   
{
   char s_amt[20];

   EXEC SQL SELECT no_of_decimal
				   INTO :v_no_of_decimal
	  			   FROM sm_acc_entity_param
				  WHERE acc_entity_id = (SELECT acc_entity_code 
										   FROM sy_acc_entity
										  WHERE acc_entity_id = :d_facility_id);


   /*sprintf(s_amt,"%15.2f",l_amt);
   format_amt(s_amt);

   if (l_amt < 0)
      fprintf(fp,"%15s",s_amt);
   else
      fprintf(fp,"%15s ",s_amt);*/

    if(l_amt < 0)
	{
        put_val(s_amt,-l_amt);
        u_ltrim(s_amt);

		s_amt_len = strlen(s_amt);
	    	    		
		if (s_amt_len>=14)
		{
		strcat(s_amt,"-");
		fprintf(fp,"%15s",s_amt);
		}
		else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
		{  strcat(s_amt,"-");
		   fprintf(fp,"%15s",s_amt);
		}
		else 
		{   
		   format_amt(s_amt);
           	   strcat(s_amt,"-");
		   fprintf(fp,"%15s",s_amt);
		}
    }
    else 
	{
        put_val(s_amt,l_amt);
        u_ltrim(s_amt);

		s_amt_len = strlen(s_amt);
	    	    		
		if (s_amt_len>=14)
		{
		fprintf(fp,"%15s",s_amt);
		}
		else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
		   fprintf(fp,"%15s",s_amt);
		else 
		{   
		   format_amt(s_amt);
           	   //strcat(s_amt," ");
		   fprintf(fp,"%15s",s_amt); 
		}
    }
}

fetch_desc()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   user_id.arr[0]        = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   user_id.len        = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
		   USER
	      INTO :hosp_name, :date_time, :user_id
	      FROM SY_ACC_ENTITY_lang_vw
		 WHERE acc_entity_id = :d_facility_id
		 AND		language_id=:p_language_id;

   if (OERROR)
	 err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   user_id.arr[user_id.len]               = '\0';

}

check_folio_record()
{
  cnt = 0;

  if (nd_episode_type.arr[0] == 'A')
  {			
    if (g_cust_code.arr[0] != 'f')
	{
    EXEC SQL     SELECT  COUNT(*) INTO :cnt
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.CUST_CODE = :g_cust_code AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 B.BILL_DOC_TYPE_CODE IS NOT NULL AND
				 B.BILL_DOC_NUM IS NOT NULL AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN	  to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									          to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
				 ORDER BY A.CUST_CODE,A.BLNG_GRP_ID,B.BLNG_SERV_CODE;
		}
		else
		{
		EXEC SQL     SELECT  COUNT(*) INTO :cnt
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 B.BILL_DOC_TYPE_CODE IS NOT NULL AND
				 B.BILL_DOC_NUM IS NOT NULL AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE) BETWEEN	  to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									      to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
			 ORDER BY A.CUST_CODE,A.BLNG_GRP_ID,B.BLNG_SERV_CODE;
		}
  }
  else
  {
    if (g_cust_code.arr[0] != 'f')
	{
      EXEC SQL     SELECT  COUNT(*) INTO :cnt 
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.CUST_CODE = :g_cust_code AND
				 A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 B.BILL_DOC_TYPE_CODE IS NOT NULL AND
				 B.BILL_DOC_NUM IS NOT NULL AND
				 A.EPISODE_TYPE = :nd_episode_type AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE)   BETWEEN	  to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									      to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X') 
			 ORDER BY A.CUST_CODE,A.BLNG_GRP_ID,B.BLNG_SERV_CODE;
	}
	else
	{
	     EXEC SQL     SELECT  COUNT(*) INTO :cnt 
	     FROM    BL_BILL_HDR A,BL_PATIENT_CHARGES_FOLIO B
	     WHERE   A.BLNG_GRP_ID = :g_blng_grp_id AND
				 A.DOC_TYPE_CODE = B.BILL_DOC_TYPE_CODE AND
				 A.DOC_NUM = B.BILL_DOC_NUM AND
				 B.BILL_DOC_TYPE_CODE IS NOT NULL AND
				 B.BILL_DOC_NUM IS NOT NULL AND
				 A.EPISODE_TYPE = :nd_episode_type AND
			     A.PATIENT_ID BETWEEN     :nd_fr_pat_id and 
								          :nd_to_pat_id AND
			     A.DOC_TYPE_CODE BETWEEN  :nd_fr_doc_type_code and
									      :nd_to_doc_type_code AND
			     A.DOC_NUM    BETWEEN     :nd_fr_doc_number and
				  					      :nd_to_doc_number AND
			     TRUNC(A.DOC_DATE)   BETWEEN	  to_date(:nd_fr_bill_date,'DD/MM/YYYY') and
									      to_date(:nd_to_bill_date,'DD/MM/YYYY') AND
			     B.BLNG_SERV_CODE BETWEEN :nd_fr_blng_serv and
									      :nd_to_blng_serv AND
				 NVL(B.PACKAGE_TRX_IND,'X') = 'N' AND
  			     NVL(A.BILL_STATUS,'X')        != 'C' AND
				 NVL(B.trx_status,'~')<>'C' AND //ADDED 
			     NVL(A.BILL_TRX_TYPE_CODE,'X') != 'I' AND
				 NVL(a.operating_facility_id,'X') = NVL(:d_facility_id,'X') AND 
				 NVL(b.operating_facility_id,'X') = NVL(:d_facility_id,'X')
		 ORDER BY A.CUST_CODE,A.BLNG_GRP_ID,B.BLNG_SERV_CODE;
	}

  }

}

fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLRSRIND.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}


get_local_date()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	
	  
       //	get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);  
      
	  // :nd_loc_date := to_char(t_date,'DD/MM/YYYY');

	  :nd_loc_date :=sm_convert_date_2t(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id);
	

	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

                     
init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
}


fun_change_loc_date()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);


get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 

}


fun_Pad_desc_with_spl_char_yn()
{
nd_pad_req_yn.arr[0]		= '\0';
nd_pad_req_yn.len			=	0;
nd_print_option.arr[0]		= '\0';	
nd_print_option.len			=	0;		
    
	if (strcmp(p_language_id.arr,"ar")==0 || strcmp(p_language_id.arr,"th")==0)
    //if (strcmp(nd_lang_id.arr,"ar")==0 || strcmp(nd_lang_id.arr,"th")==0) commented by saikiran
	{
		fun_get_batch_filename();
 		if( strcmp(nd_batch_filename.arr,"LOCAL")==0) 
			{
				nd_pad_req_yn.arr[0]='Y';
				nd_print_option.arr[0]='N';	
			}
		
		else
			{
				nd_pad_req_yn.arr[0]='N';
				//nd_print_option.arr[0]='R';	
			}	 
		
		
		nd_pad_req_yn.len=strlen(nd_pad_req_yn.arr);
		nd_print_option.len=strlen(nd_print_option.arr);

		nd_pad_req_yn.arr[nd_pad_req_yn.len]	 = '\0';
		nd_print_option.arr[nd_print_option.len] = '\0';
		
	}
	else
    {
	  nd_pad_req_yn.arr[0]='N';
	  nd_print_option.arr[0]='N';	
	}


}



fun_get_batch_filename()
{
	nd_batch_filename.arr[0] = '\0';
	nd_batch_filename.len	= 0;
	nd_report_option.arr[0]	= '\0';
	nd_report_option.len	= 0;


	EXEC SQL select batch_file_name ,
					report_tool_ch
			 into :nd_batch_filename,
				  :nd_report_option
			 from sm_report
			 where report_id='BLRSRIND';

	nd_batch_filename.arr[nd_batch_filename.len] = '\0';
	nd_report_option.arr[nd_report_option.len] = '\0';
	  

}

fun_Pad_desc_with_spl_char(orig_string)
char orig_string[1000];
{
	orig_desc_string.arr[0]		= '\0';
	orig_desc_string.len		=	0;
	
	nd_desc_with_spl_chr.arr[0]	= '\0';
	nd_desc_with_spl_chr.len	= 0;

	nd_length_of_string=0;
	

	strcpy(orig_desc_string.arr,orig_string);
		
	orig_desc_string.len	= strlen(orig_desc_string.arr);
	orig_desc_string.arr[orig_desc_string.len] = '\0';
	

	EXEC SQL select length(:orig_desc_string) into :nd_length_of_string from dual;
		
	
	EXEC SQL select (:nd_length_of_string)-1 into :nd_length_of_string1 from dual;
		

		orig_desc_string1.arr[0]		= '\0';
		orig_desc_string1.len		=	0;
		orig_desc_string1.arr[orig_desc_string1.len] = '\0';
		
	
		strcpy(orig_desc_string1.arr,orig_desc_string.arr);

		orig_desc_string1.arr[nd_length_of_string1]		= '\0';
			
	 		
		orig_desc_string1.len	= strlen(orig_desc_string1.arr);
		orig_desc_string1.arr[orig_desc_string1.len] = '\0';
		
	
	EXEC SQL select length(:orig_desc_string1)+1 into :nd_length_of_string2 from dual;
	
					
	EXEC SQL select rpad(:orig_desc_string1,:nd_length_of_string2,chr(20))
				into :nd_desc_with_spl_chr from dual;
	
		
	nd_desc_with_spl_chr.arr[nd_desc_with_spl_chr.len] = '\0';
	 

	
}

