/*************************************************************

Author    :  Harish A   24/12/2002
Name      :  Billing Service Price List for Price Class
Project   :  HMC

*************************************************************/

#include <stdio.h>          
#include <string.h>      
#include <math.h> 
#include <bl.h> 
 
#define MAX_LINES 55
#define OERROR (sqlca.sqlcode < 0) 
#define NODATAFOUND sqlca.sqlcode==1403
#define VER  "VER : 4.1\n"     
                          
EXEC SQL BEGIN DECLARE SECTION;

	VARCHAR uid_pwd						[42],
			nd_session_id        		[16],
			nd_pgm_date	    			[20],

			//input parameters through from SY_PROG_PARAM 
			l_fm_blng_serv_id			[11],
			l_to_blng_serv_id			[11],
			l_price_class1				[10],
			l_price_class2				[10],
			l_price_class3				[10],
			l_price_class4				[10],
			l_price_class5				[10],
			l_price_class6				[10],
			l_as_on_date				[30],
			l_exclude_std_price			[5],
			d_facility_id				[10],

			//for header routine
			d_acc_entity_name			[41],
			d_user						[21],
			d_sysdate					[17],

			//Variable used inside the program
			l_pc_cust_pc_code			[11],	
			l_pc_blng_serv_code			[11],
			l_blng_serv_code			[11],
			l_current_blng_serv_code	[11],
			l_blng_class_code			[11],
			l_current_blng_class		[11],
			l_rate_factor_ind			[5],
			l_dist_pc_class				[10],
			l_blng_class				[11],
			l_pc_ip_rate				[10],
			l_pc_op_rate				[10],
			l_pc_ref_rate				[10],
			l_pc_emer_rate				[10],
                        l_pc_dc_rate				[10], //EPNH 31/10/2004
			l_blng_serv_ip_rate			[15],
			l_blng_serv_op_rate			[15],
			l_blng_serv_ref_rate		[15],
			l_blng_serv_emerg_rate		[15],
                        l_blng_serv_dc_rate             [15]; //EPNH 30/10/2004


	int		l_no_of_pc_cells = 0;
	int		l_pc_counter     = 0;
	int		i;

	double	l_print_position = 0;

	char	cl_blng_serv_ip_rate[15],
			cl_blng_serv_op_rate[15],
			cl_blng_serv_ref_rate[15],
			cl_blng_serv_emerg_rate[15],
			cl_blng_serv_dc_rate[15];

	char	filename[10];
	char	l_print_format_change;
	char    aMesg[300], l_mesg[300];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;

int  line_no=0, 
	 page_no=0;

void proc_main(argc, argv)
int argc;
char *argv[];
{
	void	get_params(),
  			get_header_dtls(),
  			do_report();
    
 
	if(argc < 5) 
	{
		disp_message(ERR_MESG,"Usage BLRBSVPC uid/passwd session_id pgm_date facility_id");
		proc_exit();
	}

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(nd_session_id.arr,argv[2]);
    nd_session_id.len = strlen(nd_session_id.arr);
    strcpy(g_session_id,argv[2]);
    
    strcpy(nd_pgm_date.arr,argv[3]);
    nd_pgm_date.len = strlen(nd_pgm_date.arr);


    strcpy(g_pgm_id,"BLRBSVPC");
    strcpy(g_pgm_date,argv[3]);

	strcpy(filename,WORKING_DIR);
	strcat(filename,"blrbsvpc.lis");

	if((f1 = fopen(filename, "w")) == NULL) 
	{
		disp_message(ERR_MESG,".... Error opening output file ....");
		proc_exit();
	} 

	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL CONNECT :uid_pwd;  

	set_meduser_role();

	get_params();
	get_header_dtls();
	declare_cursor();
	do_report();
	delete_prog_param();
	close_cursors();
	fclose(f1);
	
	EXEC SQL COMMIT WORK RELEASE;

	return;
   
	err_exit:
	   EXEC SQL WHENEVER SQLERROR CONTINUE;
	   EXEC SQL ROLLBACK WORK RELEASE;
	   disp_message(ERR_MESG,"Oracle error at main() occured....");
	   disp_message(ERR_MESG, sqlca.sqlerrm.sqlerrmc);
	   proc_exit();
}


// get the parameters from the SY_PROG_PARM table and
// delete the record after reading it.
void get_params()
{

   EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	l_fm_blng_serv_id.arr[0]     = '\0';
	l_to_blng_serv_id.arr[0]     = '\0';
	l_price_class1.arr[0]		= '\0';
	l_price_class2.arr[0]		= '\0';
	l_price_class3.arr[0]		= '\0';
	l_price_class4.arr[0]		= '\0';
	l_price_class5.arr[0]		= '\0';
	l_price_class6.arr[0]		= '\0';
	l_as_on_date.arr[0]			= '\0';
	l_exclude_std_price.arr[0]  = '\0';
	d_facility_id.arr[0]		= '\0';

	EXEC SQL SELECT PARAM1,
			 	    PARAM2,
				    NVL(PARAM3,'!@#'),
				    NVL(PARAM4,'!@#'),
				    NVL(PARAM5,'!@#'),
				    NVL(PARAM6,'!@#'),
				    NVL(PARAM7,'!@#'),
				    NVL(PARAM8,'!@#'),
				    PARAM9,
				    PARAM10,
					PARAM11,
				    operating_facility_id
            INTO    :l_fm_blng_serv_id,
				    :l_to_blng_serv_id,
				    :l_price_class1,
				    :l_price_class2,
				    :l_price_class3,
				    :l_price_class4,
				    :l_price_class5,
				    :l_price_class6,
				    :l_as_on_date,
          			    :l_no_of_pc_cells,
					:l_exclude_std_price,
				    :d_facility_id
			   FROM SY_PROG_PARAM
			  WHERE PGM_ID		= 'BLRBSVPC'
		        AND	SESSION_ID	=  TO_NUMBER(:nd_session_id)
		        AND PGM_DATE	=  :nd_pgm_date;

	l_fm_blng_serv_id.arr[l_fm_blng_serv_id.len]      = '\0';
	l_to_blng_serv_id.arr[l_to_blng_serv_id.len]      = '\0';
	l_price_class1.arr[l_price_class1.len]			= '\0';
	l_price_class2.arr[l_price_class2.len]			= '\0';
	l_price_class3.arr[l_price_class3.len]			= '\0';
	l_price_class4.arr[l_price_class4.len]			= '\0';
	l_price_class5.arr[l_price_class5.len]			= '\0';
	l_price_class6.arr[l_price_class6.len]			= '\0';
	l_as_on_date.arr[l_as_on_date.len]				= '\0';
	d_facility_id.arr[d_facility_id.len]			= '\0';
	l_exclude_std_price.arr[l_exclude_std_price.len]= '\0';

	strcpy(g_facility_id, d_facility_id.arr);

    //delete the parameter record
    EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    EXEC SQL DELETE SY_PROG_PARAM
	 		  WHERE PGM_ID		= 'BLRBSVPC'
	            AND SESSION_ID	= :nd_session_id
		        AND PGM_DATE	= :nd_pgm_date;

	return;

  err_exit:

	EXEC SQL WHENEVER SQLERROR CONTINUE;
	EXEC SQL ROLLBACK WORK RELEASE;
	disp_message(ERR_MESG,"Oracle error at get_params() occured....");
	disp_message(ERR_MESG, sqlca.sqlerrm.sqlerrmc);
	proc_exit();
}
 
delete_prog_param()
{
   EXEC SQL DELETE SY_PROG_PARAM
			 WHERE PGM_ID		= 'BLRBSVPC'
	           AND SESSION_ID	= :nd_session_id
		       AND PGM_DATE		= :nd_pgm_date;
   return;
}

//get the header details
void get_header_dtls()
{
    EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    EXEC SQL SELECT ACC_ENTITY_NAME,
				    USER,
				    TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI')
		      INTO :d_acc_entity_name,
			  	   :d_user,
				   :d_sysdate
              FROM SY_ACC_ENTITY
			 WHERE acc_entity_id = :d_facility_id;

	d_acc_entity_name.arr[d_acc_entity_name.len] = '\0';
	d_user.arr[d_user.len]                       = '\0';
	d_sysdate.arr[d_sysdate.len]                 = '\0';

	return;

	err_exit:
	   EXEC SQL WHENEVER SQLERROR CONTINUE;
	   EXEC SQL ROLLBACK WORK RELEASE;
	   disp_message(ERR_MESG,"Oracle error at get_header_dtls() occured....");
	   disp_message(ERR_MESG, sqlca.sqlerrm.sqlerrmc);
	   proc_exit();
}
 
declare_cursor()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	
	EXEC SQL DECLARE blng_serv_code_cur
	          CURSOR
			     FOR
			  SELECT b.blng_serv_code,
					 decode(b.blng_class_code,'**','All',b.blng_class_code),
				     to_char(b.ip_rate), 
				     to_char(b.op_rate),
				     to_char(b.ref_rate),
				     to_char(b.emer_rate),
                                     to_char(b.DAYCARE_RATE), //EPNH 31/10/2004
			             b.cust_pc_ind
                FROM BL_SERV_CUST_PC_PRICE b
               WHERE b.cust_pc_ind    = 'S'
				 AND ((b.cust_pc_code = :d_facility_id)
	                  OR 
					 (b.cust_pc_code='ALL' and 0 = (SELECT COUNT(*) 
					                                  FROM bl_serv_cust_pc_price
													 WHERE cust_pc_code   = :d_facility_id
													   AND cust_pc_ind    = b.cust_pc_ind
													   AND blng_serv_code = b.blng_serv_code
													   AND cust_pc_ind    = 'S'
													   AND rownum = 1)))
                AND  TO_DATE(:l_as_on_date,'DD/MM/YYYY')
		    BETWEEN  TRUNC(b.valid_from) 
			    AND  NVL(trunc(b.VALID_TO),trunc(sysdate))
                AND  b.blng_serv_code  
		    BETWEEN  NVL(:l_fm_blng_serv_id,'!!!!!!!!!!')
			    AND  NVL(:l_to_blng_serv_id,'~~~~~~~~~~')
			  ORDER 
			     BY  1, 2;

	EXEC SQL DECLARE price_class_cur
	          CURSOR
			     FOR
  			  SELECT     a.rate_factor_ind,
				     a.cust_pc_code,
			  	     a.blng_serv_code,
				     DECODE(a.blng_class_code,'**','All',a.blng_class_code),
				     to_char(a.ip_rate),
				     to_char(a.op_rate),
				     to_char(a.ref_rate),
				     to_char(a.emer_rate),
				     to_char(a.DAYCARE_RATE) //EPNH 30/10/2004
			    FROM bl_serv_cust_pc_price a
			   WHERE ((:l_exclude_std_price =  'N' 
			          AND 
					  a.blng_serv_code      = :l_blng_serv_code
					  AND 
					  a.blng_class_code     = :l_blng_class)
					  OR
					  ((:l_exclude_std_price =  'Y'
					    AND 
						a.blng_serv_code BETWEEN NVL(:l_fm_blng_serv_id,'!!!!!!!!!!')
			                                 AND NVL(:l_to_blng_serv_id,'~~~~~~~~~~'))))
			     AND a.cust_pc_code        IN (:l_price_class1,:l_price_class2,:l_price_class3,:l_price_class4,:l_price_class5,:l_price_class6)
			     AND TO_DATE(:l_as_on_date,'DD/MM/YYYY')
		     BETWEEN NVL(a.valid_from(+),to_date('01011000','DDMMYYYY'))
			     AND NVL(a.valid_to(+),to_date('01014000','DDMMYYYY'))
			     AND a.cust_pc_ind(+) = 'P'
			   ORDER
			  	  BY a.blng_serv_code,
					 a.cust_pc_code,
					 a.blng_class_code DESC;

	EXEC SQL DECLARE price_class_distinct_cur
	          CURSOR
			     FOR
			  SELECT distinct price_class_code
				FROM bl_price_class
			   WHERE price_class_code IN (:l_price_class1,:l_price_class2,:l_price_class3,:l_price_class4,:l_price_class5,:l_price_class6)
			   ORDER 
				  BY price_class_code;

	EXEC SQL OPEN blng_serv_code_cur;
	return;

	err_exit:
	
		   EXEC SQL WHENEVER SQLERROR CONTINUE;
		   EXEC SQL ROLLBACK WORK RELEASE;
		   disp_message(ERR_MESG, sqlca.sqlerrm.sqlerrmc);
		   disp_message(ERR_MESG,"Oracle error at ip_op_revenue_cur() occured....");
		   proc_exit();
}

int fetch_blng_serv_code_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	l_blng_serv_code.arr[0]='\0';
	l_blng_class.arr[0] = '\0';
    l_blng_serv_ip_rate.arr[0] = '\0';
    l_blng_serv_op_rate.arr[0] = '\0';
    l_blng_serv_ref_rate.arr[0] = '\0';
    l_blng_serv_emerg_rate.arr[0] = '\0';
    l_blng_serv_dc_rate.arr[0]='\0'; //EPNH 31/10/2004


	EXEC SQL FETCH  blng_serv_code_cur
			         INTO :l_blng_serv_code, 
				   :l_blng_class,
				   :l_blng_serv_ip_rate,
				   :l_blng_serv_op_rate,
				   :l_blng_serv_ref_rate,
				   :l_blng_serv_emerg_rate,
				   :l_blng_serv_dc_rate ; //EPNH 31/10/2004
	
	if (NODATAFOUND)
		return 0;

	l_blng_serv_code.arr[l_blng_serv_code.len]='\0';
	l_blng_class.arr[l_blng_class.len] = '\0';
        l_blng_serv_ip_rate.arr[l_blng_serv_ip_rate.len] = '\0';
        l_blng_serv_op_rate.arr[l_blng_serv_op_rate.len] = '\0';
        l_blng_serv_ref_rate.arr[l_blng_serv_ref_rate.len] = '\0';
        l_blng_serv_emerg_rate.arr[l_blng_serv_emerg_rate.len] = '\0';
        l_blng_serv_dc_rate.arr[l_blng_serv_dc_rate.len]='\0'; //EPNH 31/10/2004

    return 1;
	
	err_exit:
		EXEC SQL WHENEVER SQLERROR CONTINUE;
		EXEC SQL ROLLBACK WORK RELEASE;
		disp_message(ERR_MESG,"Oracle error at fetch_blng_serv_code_cur() occured....");
		sprintf(aMesg,"Error: %-100s",sqlca.sqlerrm.sqlerrmc);
		disp_message(ERR_MESG,aMesg);
		proc_exit();
}


int fetch_price_class_detail()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	l_rate_factor_ind.arr[0]	='\0';
	l_pc_cust_pc_code.arr[0]	='\0';
	l_pc_blng_serv_code.arr[0]	='\0';
	l_blng_class_code.arr[0]	='\0';	

	l_pc_ip_rate.arr[0]			='\0';
	l_pc_op_rate.arr[0]			='\0';
	l_pc_ref_rate.arr[0]		='\0';
	l_pc_emer_rate.arr[0]		='\0';
        l_pc_dc_rate.arr[0]		='\0'; //EPNH 31/10/2004

	EXEC SQL FETCH	                 price_class_cur
			        INTO	:l_rate_factor_ind,
					:l_pc_cust_pc_code,
					:l_pc_blng_serv_code,
					:l_blng_class_code,
					:l_pc_ip_rate,
					:l_pc_op_rate,
					:l_pc_ref_rate,
					:l_pc_emer_rate,
					:l_pc_dc_rate; //EPNH 31/10/2004
	
	if (NODATAFOUND)
	{
		return 0;
	}

	l_rate_factor_ind.arr[l_rate_factor_ind.len]	='\0';
	l_pc_cust_pc_code.arr[l_pc_cust_pc_code.len]	='\0';
	l_pc_blng_serv_code.arr[l_pc_blng_serv_code.len]='\0';
	l_pc_ip_rate.arr[l_pc_ip_rate.len]				='\0';
	l_pc_op_rate.arr[l_pc_op_rate.len]				='\0';
	l_pc_ref_rate.arr[l_pc_ref_rate.len]			='\0';
	l_pc_emer_rate.arr[l_pc_emer_rate.len]			='\0';
        l_pc_dc_rate.arr[l_pc_dc_rate.len]			='\0';
	l_blng_class_code.arr[l_blng_class_code.len]	='\0';	

	
	//sprintf(aMesg,"Price Class  %s  IP Rate  %s",l_pc_cust_pc_code.arr,l_pc_ip_rate.arr);
	//disp_message(ERR_MESG,aMesg);

    return 1;
	
	err_exit:
		EXEC SQL WHENEVER SQLERROR CONTINUE;
		EXEC SQL ROLLBACK WORK RELEASE;
		disp_message(ERR_MESG,"Oracle error at fetch_price_class_detail() occured....");
		sprintf(aMesg,"Error: %-100s",sqlca.sqlerrm.sqlerrmc);
		disp_message(ERR_MESG,aMesg);
		proc_exit();
}

int fetch_pc_distinct_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL FETCH	price_class_distinct_cur
			  INTO  :l_dist_pc_class;

	l_fm_blng_serv_id.arr[l_fm_blng_serv_id.len]='\0';
	l_dist_pc_class.arr[l_dist_pc_class.len]='\0';

	if(NODATAFOUND)
		return 0;

    return 1;
	
	err_exit:
		EXEC SQL WHENEVER SQLERROR CONTINUE;
		EXEC SQL ROLLBACK WORK RELEASE;
		disp_message(ERR_MESG,"Oracle error at fetch_pc_distinct_cur() occured....");
		sprintf(aMesg,"Error: %-100s",sqlca.sqlerrm.sqlerrmc);
		disp_message(ERR_MESG,aMesg);
		proc_exit();
}

close_cursors()
{
	EXEC SQL CLOSE blng_serv_code_cur;
	//EXEC SQL CLOSE price_class_distinct_cur;
}

void do_report()  
{

	char f_blng_serv_ip_rate[10],
		 f_blng_serv_op_rate[10],
		 f_blng_serv_ref_rate[10],
		 f_blng_serv_emerg_rate[10],
		 f_blng_serv_dc_rate[10];

	//EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	print_parameter_page();
	print_page_header();
	

	if(strcmp(l_exclude_std_price.arr,"N")==0)
	{
		while(fetch_blng_serv_code_cur())		
		{
			check_page_end();

			strcpy(cl_blng_serv_ip_rate,l_blng_serv_ip_rate.arr);
			strcpy(cl_blng_serv_op_rate,l_blng_serv_op_rate.arr);
			strcpy(cl_blng_serv_ref_rate,l_blng_serv_ref_rate.arr);
			strcpy(cl_blng_serv_emerg_rate,l_blng_serv_emerg_rate.arr);
                        strcpy(cl_blng_serv_dc_rate,l_blng_serv_dc_rate.arr);

			print_formated(f_blng_serv_ip_rate,cl_blng_serv_ip_rate);
                        print_formated(f_blng_serv_dc_rate,cl_blng_serv_dc_rate);  //EPNH 31/10/2004
			print_formated(f_blng_serv_op_rate,cl_blng_serv_op_rate);
			print_formated(f_blng_serv_ref_rate,cl_blng_serv_ref_rate);
			print_formated(f_blng_serv_emerg_rate,cl_blng_serv_emerg_rate);

		
			fprintf(f1,"%-10s %-3s %10s %10s %10s %10s %10s",l_blng_serv_code.arr,l_blng_class.arr,
			f_blng_serv_ip_rate,f_blng_serv_dc_rate,f_blng_serv_op_rate,f_blng_serv_ref_rate,
			f_blng_serv_emerg_rate);
			
			l_pc_counter=0;


			EXEC SQL OPEN price_class_cur;

			while(fetch_price_class_detail())
			{
				check_page_end();

				EXEC SQL SELECT c.rw
						   INTO :l_print_position
						   FROM (SELECT ROWNUM  rw,
										b.pc_code pc 
								   FROM (SELECT 
									   DISTINCT a.price_class_code pc_code
										   FROM bl_price_class a
										  WHERE a.price_class_code IN (:l_price_class1,:l_price_class2,:l_price_class3,:l_price_class4,:l_price_class5,:l_price_class6)
										  ORDER 
											 BY a.price_class_code) b
								) c
						  WHERE c.pc=:l_pc_cust_pc_code;

				print_rec();
				strcpy(l_current_blng_class.arr,l_blng_class_code.arr);
				l_current_blng_class.len = strlen(l_current_blng_class.arr);

				strcpy(l_current_blng_serv_code.arr,l_pc_blng_serv_code.arr);
				l_current_blng_serv_code.len = strlen(l_current_blng_serv_code.arr);
			}
			fprintf(f1,"\n");
			line_no=line_no+1;
			check_page_end();
			EXEC SQL CLOSE price_class_cur;
		}
	}
	else if(strcmp(l_exclude_std_price.arr,"Y")==0) 
	{
		l_pc_counter=0;
		l_print_format_change='B';

		EXEC SQL OPEN price_class_cur;
		while(fetch_price_class_detail())
		{
			if((strcmp(l_current_blng_serv_code.arr,l_pc_blng_serv_code.arr)!=0)&&(l_current_blng_serv_code.len>0))
			{
				fprintf(f1,"\n");
				l_print_format_change='B';
			}
			else
			{
				if((strcmp(l_current_blng_class.arr,l_blng_class_code.arr)!=0) && (l_current_blng_class.len>0))
				{
					fprintf(f1,"\n");
					l_print_format_change='C';
				}
			}
			if((l_print_format_change=='B')||(l_print_format_change=='C'))
				check_page_end();

				EXEC SQL SELECT c.rw
						   INTO :l_print_position
						   FROM (SELECT ROWNUM  rw,
										b.pc_code pc 
								   FROM (SELECT 
									   DISTINCT a.price_class_code pc_code
										   FROM bl_price_class a
										  WHERE a.price_class_code IN (:l_price_class1,:l_price_class2,:l_price_class3,:l_price_class4,:l_price_class5,:l_price_class6)
										  ORDER 
											 BY a.price_class_code) b
								) c
						  WHERE c.pc=:l_pc_cust_pc_code;

			print_rec();

			if((l_print_format_change=='B')||(l_print_format_change=='C'))
			{
				check_page_end();
			}
			strcpy(l_current_blng_class.arr,l_blng_class_code.arr);
			l_current_blng_class.len = strlen(l_current_blng_class.arr);

			strcpy(l_current_blng_serv_code.arr,l_pc_blng_serv_code.arr);
			l_current_blng_serv_code.len = strlen(l_current_blng_serv_code.arr);
		}
		fprintf(f1,"\n");
		EXEC SQL CLOSE price_class_cur;
	}
	end_report();

	/*err_exit:
	   EXEC SQL WHENEVER SQLERROR CONTINUE;
	   EXEC SQL ROLLBACK WORK RELEASE;
	   disp_message(ERR_MESG,"Oracle error at main() occured....");
	   disp_message(ERR_MESG, sqlca.sqlerrm.sqlerrmc);
	   proc_exit();*/

}

print_rec()
{
	char     f_pc_ip_rate[10],
		 f_pc_op_rate[10],
		 f_pc_ref_rate[10],
		 f_pc_emer_rate[10],
                 f_pc_dc_rate[10],  //EPNH 31/10/2004
		 l_f_pc_ip_rate[10],
		 l_f_pc_op_rate[10],
		 l_f_pc_ref_rate[10],
		 l_f_pc_emer_rate[10],
		 l_f_pc_dc_rate[10]; //EPNH 31/10/2004		  

	int	l_func_ret;

	strcpy(l_f_pc_ip_rate,l_pc_ip_rate.arr);
        strcpy(l_f_pc_op_rate,l_pc_op_rate.arr);
	strcpy(l_f_pc_ref_rate,l_pc_ref_rate.arr);
	strcpy(l_f_pc_emer_rate,l_pc_emer_rate.arr); 
	strcpy(l_f_pc_dc_rate,l_pc_dc_rate.arr); //EPNH 31/10/2004		  

	print_formated(f_pc_ip_rate,l_f_pc_ip_rate);
	print_formated(f_pc_op_rate,l_f_pc_op_rate);
	print_formated(f_pc_ref_rate,l_f_pc_ref_rate);
	print_formated(f_pc_emer_rate,l_f_pc_emer_rate);
        print_formated(f_pc_dc_rate,l_f_pc_dc_rate); //EPNH 31/10/2004		  

	if(strcmp(l_exclude_std_price.arr,"Y")==0)
	{
		if(l_print_format_change=='B')
		{
			fprintf(f1,"%-10s %-3s",l_pc_blng_serv_code.arr,l_blng_class_code.arr);

			if(l_print_position==1)
				l_print_position=1;
			else if(l_print_position>=2)
				l_print_position=(1+50*(l_print_position-1));
			
			print_spaces(l_print_position);
			l_print_position=0;

			//EPNH 31/10/2004
			fprintf(f1,"%-1s %10s  %10s  %10s  %10s  %10s",l_rate_factor_ind.arr, 
			f_pc_ip_rate,f_pc_dc_rate,f_pc_op_rate,f_pc_ref_rate,f_pc_emer_rate);
			l_print_format_change='X';
			line_no=line_no+1;
		}
		else if(l_print_format_change=='C')
		{
			fprintf(f1,"%-10s %-3s"," ",l_blng_class_code.arr);

			if(l_print_position==1)
				l_print_position=1;
			else if(l_print_position>=2)
				l_print_position=(1+50*(l_print_position-1));

			print_spaces(l_print_position);
			l_print_position=0;

                        //EPNH 31/10/2004
			fprintf(f1,"%-1s %10s  %10s  %10s  %10s  %10s",l_rate_factor_ind.arr, 
			f_pc_ip_rate,f_pc_dc_rate,f_pc_op_rate,f_pc_ref_rate,f_pc_emer_rate);
			l_print_format_change='X';
			line_no=line_no+1;
		}
		else if(l_print_format_change=='X') 
		{
			fprintf(f1,"  %-1s %10s  %10s  %10s  %10s  %10s",l_rate_factor_ind.arr, 
			f_pc_ip_rate,f_pc_dc_rate,f_pc_op_rate,f_pc_ref_rate,f_pc_emer_rate);
		}
	}
	else if(strcmp(l_exclude_std_price.arr,"N")==0)
	{
		fprintf(f1,"  %-1s %10s  %10s  %10s  %10s  %10s",l_rate_factor_ind.arr, 
		f_pc_ip_rate,f_pc_dc_rate,f_pc_op_rate,f_pc_ref_rate,f_pc_emer_rate);
	}
}

print_parameter_page()
{
	page_no=page_no+1;
	print_page_title();

	fprintf(f1,"\n\n\n\n\n\n\t\tINPUT PARAMETERS\n");
	fprintf(f1,"\t\t----------------\n\n");

	if(strcmp(l_fm_blng_serv_id.arr,"!!!!!!")==0)
		fprintf(f1,"\t\tBilling Service  FROM  :    LOWEST\n");
	else
		fprintf(f1,"\t\tBilling Service  FROM  :    %s\n,",l_fm_blng_serv_id.arr);


	if(strcmp(l_to_blng_serv_id.arr,"~~~~~~")==0)
		fprintf(f1,"\t\tBilling Service    TO  :    HIGHEST\n\n");
	else
		fprintf(f1,"\t\tBilling Service    TO  :    %s\n\n",l_to_blng_serv_id.arr);


	fprintf(f1,"\t\tPRICE CLASS    1       :    %s\n",l_price_class1.arr);
	

	if(strcmp(l_price_class2.arr,"!@#")==0)
		fprintf(f1,"\t\t               2       :    %s\n"," ");
	else
		fprintf(f1,"\t\t               2       :    %s\n",l_price_class2.arr);

	if(strcmp(l_price_class3.arr,"!@#")==0)
		fprintf(f1,"\t\t               3       :    %s\n"," ");
	else
		fprintf(f1,"\t\t               3       :    %s\n",l_price_class3.arr);

	if(strcmp(l_price_class4.arr,"!@#")==0)
		fprintf(f1,"\t\t               4       :    %s\n"," ");
	else
		fprintf(f1,"\t\t               4       :    %s\n",l_price_class4.arr);

	if(strcmp(l_price_class5.arr,"!@#")==0)
		fprintf(f1,"\t\t               5       :    %s\n"," ");
	else
		fprintf(f1,"\t\t               5       :    %s\n",l_price_class5.arr);

	if(strcmp(l_price_class6.arr,"!@#")==0)
		fprintf(f1,"\t\t               6       :    %s\n\n"," ");
	else
		fprintf(f1,"\t\t               6       :    %s\n\n",l_price_class6.arr);


	fprintf(f1,"\t\tAs On Date             :    %s\n\n",l_as_on_date.arr);

	fprintf(f1,"\t\tExclude Standard Price :    %s\n\n",l_exclude_std_price.arr);
	check_page_end(55);
}

print_page_title()
{
	double l_report_width;
	double l_acc_entity_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width;

	line_no= 0;
	if(strcmp(l_exclude_std_price.arr,"N")==0)
	{	
		l_report_width=(58 + (58*(l_no_of_pc_cells)));
	}
	else if(strcmp(l_exclude_std_price.arr,"Y")==0)
	{
		l_report_width=(63 + (60*(l_no_of_pc_cells-1)));
	}
	l_acc_entity_length = strlen(d_acc_entity_name.arr);

	//Code for Line 1
	l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2));
	fprintf(f1,"MDL : BL");
	l_start_point=l_start_point-8;
	print_spaces(l_start_point);
	fprintf(f1,"%s",d_acc_entity_name.arr);
	l_comp_name_end_point=l_start_point+8+l_acc_entity_length;
	l_start_point=((l_report_width-17)-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(f1,"%s\n",d_sysdate.arr);

	//Code for Line 2
	l_start_point=0;
	fprintf(f1,"OPR : %-15s",d_user.arr);
	l_start_point=ceill((l_report_width/2)-22);
	l_start_point=l_start_point-21;
	print_spaces(l_start_point);
	fprintf(f1,"BILLING SERVICE PRICE LIST FOR PRICE CLASSES\n");

	//Code for Line 3
	l_start_point=0;
	fprintf(f1,"REP : BLRBSVPC");
	l_start_point=ceill((l_report_width/2)-8);
	l_start_point=l_start_point-14;
	print_spaces(l_start_point);
	fprintf(f1,"AS ON %s",l_as_on_date.arr);
	l_comp_name_end_point=l_start_point+14+16;
	l_start_point=((l_report_width-17)-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(f1,"PAGE : %d\n",page_no);
	line_no=3;

	if(page_no==1)
	{
		l_page_width=l_report_width;
		print_line(l_page_width);
	}
}
  
print_page_header()
{
	int l_page_width=0;
	int l_return_val;

	fprintf(f1,"\f");
	page_no=page_no+1; 

    fprintf(f1,"\n");
	
	print_page_title();
	EXEC SQL OPEN price_class_distinct_cur;
	if(l_no_of_pc_cells==1)
	{
		if(strcmp(l_exclude_std_price.arr,"N")==0)
		{
			l_return_val=fetch_pc_distinct_cur();
			fprintf(f1,"----------------------------------------------------------------------------------------------------------------------------------------\n");
			fprintf(f1,"           Blg --------------------STANDARD-------------------------    -----------------------  %8s ------------------------------\n",l_dist_pc_class.arr);
			fprintf(f1,"Blng Serv  Cls.        IP         DC         OP        EXT       EMER     R/F    IP          DC        OP         EXT       EMER    \n");
			fprintf(f1,"----------------------------------------------------------------------------------------------------------------------------------------\n");
			line_no = line_no + 4;
		}
		else if(strcmp(l_exclude_std_price.arr,"Y")==0)
		{
			l_return_val=fetch_pc_distinct_cur();
			fprintf(f1,"----------------------------------------------------------------------------------\n");
			fprintf(f1,"          Blng ------------------------%8s ------------------------------------\n",l_dist_pc_class.arr);
			fprintf(f1,"Blng Serv  Cls R/F     IP       DC       OP          EXT        EMER   \n");
			fprintf(f1,"--------------------------------------------------------------------------------------\n");
			line_no = line_no + 4;
		}
	}
	else if(l_no_of_pc_cells>1)
	{
		l_return_val=fetch_pc_distinct_cur();
		if(strcmp(l_exclude_std_price.arr,"N")==0)
		{	
			l_page_width=(62 + (60*(l_no_of_pc_cells)));
		}
		else if(strcmp(l_exclude_std_price.arr,"Y")==0)
		{
			l_page_width=(72 + (60*(l_no_of_pc_cells-1)));
		} 
		print_line(l_page_width);
		fprintf(f1,"\n");
		
		if(strcmp(l_exclude_std_price.arr,"N")==0)
			fprintf(f1,"           Blg ---------------------STANDARD----------------------  -----------------------  %8s ----------------------",l_dist_pc_class.arr);
		else
			fprintf(f1,"          Blng -------------------------%8s ------------------------",l_dist_pc_class.arr);

		for(i=0;i<l_no_of_pc_cells-1;i++)
		{
			l_return_val=fetch_pc_distinct_cur();
			if(strcmp(l_exclude_std_price.arr,"N")==0)
			{
				fprintf(f1,"  -------------------------%8s -----------------------",l_dist_pc_class.arr);
			}
			else if(strcmp(l_exclude_std_price.arr,"Y")==0)
			{
				fprintf(f1,"  -------------------------%8s -----------------------",l_dist_pc_class.arr);				
			}
		}
		fprintf(f1,"\n");

		
		if(strcmp(l_exclude_std_price.arr,"N")==0)
		{
			for(i=0;i<=l_no_of_pc_cells;i++)
			{
				if(i==0)
				{
					fprintf(f1,"Blng Serv  Cls.     IP         DC        OP        EXT       EMER   ");
				}
				else
				{
					fprintf(f1,"  R/F    IP          DC        OP         EXT       EMER    ");
				}
			}

		}
		else if(strcmp(l_exclude_std_price.arr,"Y")==0)
		{
			for(i=0;i<l_no_of_pc_cells;i++)
			{
				if(i==0)
				{
					fprintf(f1,"Blng Serv  Cls R/F     IP          DC        OP          EXT        EMER   ");
				}
				else
				{
					fprintf(f1,"R/F     IP          DC         OP          EXT        EMER   ");	
				}
			}
		}
		fprintf(f1,"\n");
		print_line(l_page_width);
		fprintf(f1,"\n");
		line_no = line_no + 4;

		EXEC SQL OPEN price_class_distinct_cur;
	}
}

print_line(l_length)
int l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(f1,"-");
	}
}

print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(f1," ");
	}
}


check_page_end()
{
	if ((line_no + 5) >= MAX_LINES)
	{
		line_no=0;
		print_page_header();
	}	
	return;
}

//Print the finishing line of the report 
end_report()
{
  fprintf(f1,"\n\n");
  fprintf(f1,"                                                   ");
  fprintf(f1,"** End of Report **");
  fprintf(f1,"");
}

print_formated(l_char_digit,l_double_digit)
char	l_double_digit[10];
char	l_char_digit[10];
{
	strcpy(l_char_digit,l_double_digit);
	if(strlen(l_char_digit)>0)
		format_amt(l_char_digit);

	return l_char_digit;
}

set_format(l_char_digit)
char	l_char_digit[10];
{
	format_amt(l_char_digit);
	return l_char_digit;
}

#undef DEBUG
#undef NODATAFOUND
#undef MAX_LINES
#undef VER