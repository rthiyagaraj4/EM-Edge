/****************************CSS MEDICOM ver 2.0*****************************
*  File	:   BLRBGPRI.pc   
   Author : Radha
   Date Created : 16/08/2000
   Date Modified : 20/12/2000  VSK BLENH 
   Date Modified : 22/02/2001  VSK BLENH    
                                 
*  Ver 2.10.01
   
*  Purpose : To print Billing Group Specific Prices
            
*  Input Parameters :     
                      Command line inputs 
		      		  1. Usr_id/Password
                      2. Session id
		      		  3. Program Date

                      Parameters from SY_PROG_PARAM table 
                      4.  From User ID
                      5.  To User ID
    	              6.  From Role
    	              7.  To Role
					  8.  From Function
					  9.  To Function
					  10. From Menu Name
					  11. To Menu Name
  
*  Table Accessed : bl_serv_cust_pc_price

*  Output File : BLRBGPRI.lis
 ****************************************************************************/  

#include <stdio.h>
#include <string.h>
#include "bl.h"
//#include <math.h>              

#define NODATAFOUND sqlca.sqlcode==1403
#define MAX_LINES 60
#define VER  "VER : 4.1\n"

/* #define INIT_MESG "Report Generation in Progress" */

EXEC SQL BEGIN DECLARE SECTION;

/* increased the length all varchar variables by one to take care */
/* for null termination */

VARCHAR uid_pwd		         [42],
        d_blng_grp_id       [3],
		d_price_desc		[16], 
		d_valid_from		[11],
		d_valid_to			[11],
		d_blng_serv_code    [11],
		d_blng_serv_desc	[16],
		d_prt_grp_hdr_code  [3],
		d_prt_grp_desc      [16],    
        
		t_blng_grp_id		 [3],       
		t_price_desc		[16], 
		t_valid_from		[11],
		t_valid_to			[11],
		t_blng_serv_code    [11],
		t_blng_serv_desc	[16],
		t_prt_grp_hdr_code  [3],
		t_prt_grp_desc      [16],
		d_facility_id       [3],  
			
        nd_session_id        [16],
		nd_pgm_date	         [13],

		to_function_desc    [41],
        to_menu_option_desc [71],

		nd_fr_blng_grp_id           [3],
		nd_to_blng_grp_id           [3],
		nd_fr_blng_serv_code 	    [11],
		nd_to_blng_serv_code		[11],  
		nd_valid_from	      	    [11],
		nd_valid_to		      	    [11],
		nd_sort_order				[2],
		nd_breakup_by_prt_grp		[2],
		nd_patient_type				[2],

	    d_acc_entity_name    [41],
		d_user               [21],
		d_sysdate            [17];

float	nd_total_months, nd_days_old;
int		nd_trunc_total_months;
double   d_ip_rate,d_op_rate,d_ref_rate, d_emer_rate, d_daycare; 

char filename[150];
char l_mesg[200];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;


#include "winproc.h"

int   line_no=0, page_no=0;
int   totl_blng_serv = 0;
int   totl_price_class = 0;
int	  totl_blng_serv_fr_prt_grp = 0;
long  grand_totl_rec = 0, totl_detl_rec = 0;

FILE *f1;

void proc_main(argc, argv)
int argc;
char *argv[];
{
  void  get_params(),
     	get_header_dtls(),
		dclr_bl_pc_no_prtgrp_cur(),
		dclr_bl_pc_prtgrp_cur(),
		dclr_bl_bs_no_prtgrp_cur(),
		dclr_bl_bs_prtgrp_cur(),
  		do_report();

   //sprintf(l_mesg,"Arg  %d   Arg5  %s ",argc,argv[4]);
   //disp_message(ERR_MESG,l_mesg);
   if(argc < 5) 
   {
     disp_message (ERR_MESG,"Usage blrbgpri uid/passwd session_id pgm_date");
     proc_exit();
   }

   strcpy(filename,WORKING_DIR);
   strcat(filename,"blrbgpri.lis");

   if((f1 = fopen(filename, "w")) == NULL) 
   {
     disp_message (ERR_MESG, " Error opening output file ....");
     proc_exit();
   } 

   strcpy(uid_pwd.arr, argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr); 

   strcpy(nd_session_id.arr, argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr); 

   strcpy(nd_pgm_date.arr, argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr); 

   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL CONNECT :uid_pwd;  

   set_meduser_role();

   get_params();
   
   get_header_dtls();
   
   dclr_bl_pc_no_prtgrp_cur();
		
   dclr_bl_pc_prtgrp_cur();
   
   dclr_bl_bs_no_prtgrp_cur();
   
   dclr_bl_bs_prtgrp_cur();
   
   do_report();
   

   /*EXEC SQL CLOSE SY_MAST_CUR;*/
   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL COMMIT WORK RELEASE;

   fclose(f1);

   return;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at main() occured....");
   proc_exit();
}   


void get_params()
{
   
   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL SELECT PARAM1,
				   PARAM2,
				   PARAM3,
				   PARAM4,
				   PARAM5,
				   PARAM6,
				   PARAM7,
				   PARAM8,
				   PARAM9,
				   OPERATING_FACILITY_ID
	        	INTO   :nd_fr_blng_grp_id,
			       :nd_to_blng_grp_id,
			       :nd_fr_blng_serv_code,
			       :nd_to_blng_serv_code,
			       :nd_valid_from,
				   :nd_valid_to,
				   :nd_sort_order,
				   :nd_breakup_by_prt_grp,
				   :nd_patient_type,
				   :d_facility_id
            	FROM   SY_PROG_PARAM
	        WHERE  PGM_ID = 'BLRBGPRI'
		    AND    SESSION_ID =  TO_NUMBER(:nd_session_id)
		    AND    PGM_DATE = :nd_pgm_date;

  nd_fr_blng_grp_id.arr[nd_fr_blng_grp_id.len]		= '\0';
  nd_to_blng_grp_id.arr[nd_to_blng_grp_id.len]		= '\0';

  nd_fr_blng_serv_code.arr[nd_fr_blng_serv_code.len]			= '\0';
  nd_to_blng_serv_code.arr[nd_to_blng_serv_code.len]			= '\0';
  
  nd_valid_from.arr[nd_valid_from.len]			= '\0';
  nd_valid_to.arr[nd_valid_to.len]			= '\0';
  nd_sort_order.arr[nd_sort_order.len]	= '\0';
  nd_breakup_by_prt_grp.arr[nd_breakup_by_prt_grp.len]	= '\0';
  nd_patient_type.arr[nd_patient_type.len] = '\0';
     
  d_facility_id.arr[d_facility_id.len]			= '\0';
  strcpy(g_facility_id,d_facility_id.arr);	

  /* delete the parameter record */
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL DELETE SY_PROG_PARAM
	   WHERE PGM_ID = 'BLRBGPRI'
	         AND SESSION_ID = TO_NUMBER(:nd_session_id)
		 AND PGM_DATE = :nd_pgm_date;

  return;
 err_exit:  
   EXEC SQL WHENEVER SQLERROR CONTINUE;  
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at get_params() occured....");
   proc_exit();

}
 

/* get the header details */
void get_header_dtls()
{
   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL SELECT ACC_ENTITY_NAME, /* description of the institution */
				   USER,
				   TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI')
		    INTO   :d_acc_entity_name,
				   :d_user,
				   :d_sysdate
	        FROM   SY_ACC_ENTITY
		   WHERE   acc_entity_id = :d_facility_id;
		   
   d_acc_entity_name.arr[d_acc_entity_name.len] = '\0';
   d_user.arr[d_user.len]                       = '\0';
   d_sysdate.arr[d_sysdate.len]                 = '\0';

   if (NODATAFOUND)
   {
    disp_message (ORA_MESG, "Hospital not defined in SY_ACC_ENTITY. Error in get_params() occured....");
    proc_exit();    
   }
   return;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at get_header_dtls() occured....");
   proc_exit();
}
 

void dclr_bl_pc_no_prtgrp_cur()
{

  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL DECLARE BL_PC_NO_PRTGRP_CUR CURSOR FOR
     select a.cust_pc_code,
			c.short_desc,
			a.blng_serv_code,
			b.short_desc,
			to_char(a.valid_from,'dd/mm/yyyy'),
			to_char(a.valid_to,'dd/mm/yyyy'),
			nvl(a.ip_rate,0),
			nvl(a.op_rate,0),
			nvl(a.ref_rate,0),
			nvl(a.emer_rate,0),
			nvl(a.daycare_rate,0)		//30/10/2004
	   from bl_serv_cust_pc_price a,
			bl_blng_serv b,
			bl_blng_grp c
	   where a.cust_pc_code between nvl(:nd_fr_blng_grp_id,'  ') and nvl(:nd_to_blng_grp_id,'~~')
	     and a.blng_serv_code between nvl(:nd_fr_blng_serv_code,'          ') and nvl(:nd_to_blng_serv_code,'~~~~~~~~~~')
		 and nvl(trunc(a.valid_from), to_date(:nd_valid_from,'dd/mm/yyyy'))
			between to_date(:nd_valid_from,'dd/mm/yyyy') and
								  to_date(:nd_valid_to,'dd/mm/yyyy')
		 and NVL(trunc(a.valid_to),to_date(:nd_valid_to,'dd/mm/yyyy')) between   to_date(:nd_valid_from,'dd/mm/yyyy') and
							      to_date(:nd_valid_to,'dd/mm/yyyy')
		 and a.blng_serv_code = b.blng_serv_code
	     and a.cust_pc_code = c.blng_grp_id
		 and a.cust_pc_ind = 'B'
		 and NVL(b.status, 'A')	 != 'S'
		order by 1,5;   	  	
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
 
     return;
  err_exit:
     EXEC SQL WHENEVER SQLERROR CONTINUE;
     EXEC SQL ROLLBACK WORK RELEASE;
     disp_message (ORA_MESG, "Oracle error at dclr_bl_pc_no_prtgrp_cur() occured....");
     proc_exit();
}

void dclr_bl_pc_prtgrp_cur()
{
		 /*and (to_date(to_char(a.valid_from,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy'))
		 and (to_date(to_char(a.valid_to,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy'))*/

  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL DECLARE BL_PC_PRTGRP_CUR CURSOR FOR
     select a.cust_pc_code,
			c.short_desc,
			b.prt_grp_hdr_code,
			d.short_desc,
			a.blng_serv_code,
			b.short_desc,
			to_char(a.valid_from,'dd/mm/yyyy'),
			to_char(a.valid_to,'dd/mm/yyyy'),
			nvl(a.ip_rate,0),
			nvl(a.op_rate,0),
			nvl(a.ref_rate,0),
			nvl(a.emer_rate,0),
			nvl(a.daycare_rate,0)		//30/10/2004
	   from bl_serv_cust_pc_price a,
			bl_blng_serv b,
			bl_blng_grp c,
			bl_blng_prt_grp_hdr d
	   where a.cust_pc_code between nvl(:nd_fr_blng_grp_id,'  ') and nvl(:nd_to_blng_grp_id,'~~')
	     and a.blng_serv_code between nvl(:nd_fr_blng_serv_code,'          ') and nvl(:nd_to_blng_serv_code,'~~~~~~~~~~')
		 and nvl(trunc(a.valid_from), to_date(:nd_valid_from,'dd/mm/yyyy'))
			between to_date(:nd_valid_from,'dd/mm/yyyy') and
								  to_date(:nd_valid_to,'dd/mm/yyyy')
		 and NVL(trunc(a.valid_to),to_date(:nd_valid_to,'dd/mm/yyyy')) between   to_date(:nd_valid_from,'dd/mm/yyyy') and
							      to_date(:nd_valid_to,'dd/mm/yyyy')
		 and a.blng_serv_code = b.blng_serv_code
	     and a.cust_pc_code = c.blng_grp_id
		 and b.prt_grp_hdr_code = d.prt_grp_hdr_code
		 and a.cust_pc_ind = 'B'
		 and NVL(b.status,'A')	   != 'S'
		order by 1,3,7;   	
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    
 
     return;
  err_exit:
     EXEC SQL WHENEVER SQLERROR CONTINUE;
     EXEC SQL ROLLBACK WORK RELEASE;
     disp_message (ORA_MESG, "Oracle error at dclr_bl_pc_prtgrp_cur() occured....");
     proc_exit();
}

void dclr_bl_bs_no_prtgrp_cur()
{

		 /*and (to_date(to_char(a.valid_from,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy'))
		 and (to_date(to_char(a.valid_to,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy'))*/

  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL DECLARE BL_BS_NO_PRTGRP_CUR CURSOR FOR
     select a.blng_serv_code,
			b.short_desc,
			a.cust_pc_code,
			c.short_desc,
			to_char(a.valid_from,'dd/mm/yyyy'),
			to_char(a.valid_to,'dd/mm/yyyy'),
			nvl(a.ip_rate,0),
			nvl(a.op_rate,0),
			nvl(a.ref_rate,0),
			nvl(a.emer_rate,0),
			nvl(a.daycare_rate,0)		//30/10/2004
	   from bl_serv_cust_pc_price a,
			bl_blng_serv b,
			bl_blng_grp c
	   where a.cust_pc_code between nvl(:nd_fr_blng_grp_id,'  ') and nvl(:nd_to_blng_grp_id,'~~')
	     and a.blng_serv_code between nvl(:nd_fr_blng_serv_code,'          ') and nvl(:nd_to_blng_serv_code,'~~~~~~~~~~')
		 and nvl(trunc(a.valid_from), to_date(:nd_valid_from,'dd/mm/yyyy'))
			between to_date(:nd_valid_from,'dd/mm/yyyy') and
								  to_date(:nd_valid_to,'dd/mm/yyyy')
		 and NVL(trunc(a.valid_to),to_date(:nd_valid_to,'dd/mm/yyyy')) between   to_date(:nd_valid_from,'dd/mm/yyyy') and
							      to_date(:nd_valid_to,'dd/mm/yyyy')
		 and a.blng_serv_code = b.blng_serv_code
	     and a.cust_pc_code = c.blng_grp_id
		 and a.cust_pc_ind = 'B'
		 and NVL(b.status,'A')	   != 'S'
		order by 1,5;   	
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    
 
     return;
  err_exit:
     EXEC SQL WHENEVER SQLERROR CONTINUE;
     EXEC SQL ROLLBACK WORK RELEASE;
     disp_message (ORA_MESG, "Oracle error at dclr_bl_bs_no_prtgrp_cur() occured....");
     proc_exit();
}

void dclr_bl_bs_prtgrp_cur()
{

		 /*and to_date(to_char(a.valid_from,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy')
		 and to_date(to_char(a.valid_to,'dd/mm/yyyy'),'dd/mm/yyyy') between to_date(:nd_valid_from,'dd/mm/yyyy') and to_date(:nd_valid_to,'dd/mm/yyyy')*/

  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL DECLARE BL_BS_PRTGRP_CUR CURSOR FOR
     select a.blng_serv_code,
			b.short_desc,
			b.prt_grp_hdr_code,
			d.short_desc,
			a.cust_pc_code,
			c.short_desc,
			to_char(a.valid_from,'dd/mm/yyyy'),
			to_char(a.valid_to,'dd/mm/yyyy'),
			nvl(a.ip_rate,0),
			nvl(a.op_rate,0),
			nvl(a.ref_rate,0),
			nvl(a.emer_rate,0),
			nvl(a.daycare_rate,0)		//30/10/2004	
	   from bl_serv_cust_pc_price a,
			bl_blng_serv b,
			bl_blng_grp c,
			bl_blng_prt_grp_hdr d
	   where a.cust_pc_code between nvl(:nd_fr_blng_grp_id,'  ') and nvl(:nd_to_blng_grp_id,'~~')
	     and a.blng_serv_code between nvl(:nd_fr_blng_serv_code,'          ') and nvl(:nd_to_blng_serv_code,'~~~~~~~~~~')
		 and nvl(trunc(a.valid_from), to_date(:nd_valid_from,'dd/mm/yyyy'))
			between to_date(:nd_valid_from,'dd/mm/yyyy') and
		to_date(:nd_valid_to,'dd/mm/yyyy')
		 and NVL(trunc(a.valid_to),to_date(:nd_valid_to,'dd/mm/yyyy')) between   to_date(:nd_valid_from,'dd/mm/yyyy') and
		 to_date(:nd_valid_to,'dd/mm/yyyy')
		 and a.blng_serv_code = b.blng_serv_code
	     and a.cust_pc_code = c.blng_grp_id
		 and b.prt_grp_hdr_code = d.prt_grp_hdr_code
		 and a.cust_pc_ind = 'B'
		 and NVL(b.status,'A')	   != 'S'	
		order by 1,3,7;   	
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    
 
     return;
  err_exit:
     EXEC SQL WHENEVER SQLERROR CONTINUE;
     EXEC SQL ROLLBACK WORK RELEASE;
     disp_message (ORA_MESG, "Oracle error at dclr_bl_bs_prtgrp_cur() occured....");
     proc_exit();
}

/* fetches the record from the BL_PRICE_CLASS_CUR and calls the routine to   */
/* calculate the date of birth in days, months and years and then the */
/* routine to print the records.                                      */
void do_report()
{
  void prepare_new_price_page();
  void prepare_new_bs_page();
  void print_bs_detl_rec();
  void print_price_detl_rec();
  void print_rep_header();
  void print_page_header();
  void print_bs_col_heading();
  void print_price_col_heading();
  void print_master_rec();
  void print_totl_per_regn_date();
  void print_totl_per_report();
  void print_page_title();
  int fetch_bl_pc_no_prtgrp_cur();
  int fetch_bl_pc_prtgrp_cur();
  int fetch_bl_bs_no_prtgrp_cur();
  int fetch_bl_bs_prtgrp_cur();
  int still_rec_left1,still_rec_left2,still_rec_left3,still_rec_left4,
		 posted = 0;


  
  /* read the first cursor record */
  if (strcmp(nd_sort_order.arr,"P")==0)
   {
    if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)

    { EXEC SQL OPEN BL_PC_NO_PRTGRP_CUR;
      still_rec_left1 = fetch_bl_pc_no_prtgrp_cur();
      strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	  strcpy(t_valid_from.arr,d_valid_from.arr);

   //prepare_new_bs_page();
  {
   page_no += 1;
   print_page_header();
   prepare_new_price_page();
   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
   print_bs_col_heading(); 
   line_no = 12;
  }

  while(still_rec_left1)
  {
    
	if((strcmp(t_blng_grp_id.arr,d_blng_grp_id.arr)==0)&&
	   (strcmp(t_valid_from.arr,d_valid_from.arr)==0))
	{

	   if ((line_no + 2) >= MAX_LINES)
	 {  
	   prepare_new_bs_page();
	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
  	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left1 = fetch_bl_pc_no_prtgrp_cur();
       	  
		 }
		 else
		 { 
		  print_bs_detl_rec();
		  line_no += 1;
		  totl_blng_serv += 1;
		  strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
		  strcpy(t_valid_from.arr,d_valid_from.arr);
	   	  still_rec_left1 = fetch_bl_pc_no_prtgrp_cur();
         }
	   }	
	else
		{ 
		  fprintf(f1,"No. of Service Codes: %d\n",totl_blng_serv);
		  fprintf(f1,"--------------------------------------------------------------------------------\n\n");
		  totl_blng_serv = 0;
		  line_no = line_no + 3;
		  if ((line_no + 2)>= MAX_LINES)
		  {
		    prepare_new_bs_page();
	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
  	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left1 = fetch_bl_pc_no_prtgrp_cur(); 
			   }
		   else				 	 	
           {
		     fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
  	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left1 = fetch_bl_pc_no_prtgrp_cur(); 
		  
	   }  
	  }
       
     }	 	
    EXEC SQL CLOSE BL_PC_NO_PRTGRP_CUR;
	}
  else
    {EXEC SQL OPEN BL_PC_PRTGRP_CUR;    
	 still_rec_left2 = fetch_bl_pc_prtgrp_cur();
      strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	  strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
	  strcpy(t_valid_from.arr,d_valid_from.arr);


   //prepare_new_price_page();
  {
   page_no += 1;
   print_page_header();
   prepare_new_price_page();
   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
   print_bs_col_heading(); 
   line_no = 13;
  }

  while(still_rec_left2)
  {
    
	if(strcmp(t_blng_grp_id.arr,d_blng_grp_id.arr)==0)
	{
	  if ((strcmp(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr)==0)&&
	      (strcmp(t_valid_from.arr,d_valid_from.arr)==0))
	  {	
	   if ((line_no + 2) >= MAX_LINES)
	 {  
	   prepare_new_bs_page();
	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
	   line_no = line_no + 4;
  	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   totl_blng_serv_fr_prt_grp += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left2 = fetch_bl_pc_prtgrp_cur();
       	  
		 }
		 else
		 { 
		  print_bs_detl_rec();
		  line_no += 1;
		  totl_blng_serv += 1;
		  totl_blng_serv_fr_prt_grp += 1;
		  strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
		  strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
		  strcpy(t_valid_from.arr,d_valid_from.arr);
	   	  still_rec_left2 = fetch_bl_pc_prtgrp_cur();
         }
	   }	
	else
		{ 
		  fprintf(f1,"No. of Service Codes for the print group: %d\n",totl_blng_serv_fr_prt_grp);
		  fprintf(f1,"--------------------------------------------------------------------------------\n\n");
		  totl_blng_serv_fr_prt_grp = 0;
		  line_no = line_no + 3;
		  if ((line_no + 2)>= MAX_LINES)
		  {
		    prepare_new_bs_page();
	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
	   line_no = line_no + 4;
  	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   totl_blng_serv_fr_prt_grp += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left2 = fetch_bl_pc_prtgrp_cur();	 
			   }
		   else				 	 	
           {
		   	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
		     fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
  	   	   line_no = line_no + 4;
	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 5;
	   totl_blng_serv += 1;
	   totl_blng_serv_fr_prt_grp += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left2 = fetch_bl_pc_prtgrp_cur();	 
		  
	   }  
	  }
     }
	 else
	 {       fprintf(f1,"No. of Service Codes for the print group: %d\n",totl_blng_serv_fr_prt_grp);
		  totl_blng_serv_fr_prt_grp = 0;
	      fprintf(f1,"No. of Service Codes: %d\n",totl_blng_serv);
		  fprintf(f1,"--------------------------------------------------------------------------------\n\n");
		  totl_blng_serv = 0;
		  line_no = line_no + 4;
	   if ((line_no + 2) >= MAX_LINES)
	   {  
	   prepare_new_bs_page();
	   fprintf(f1,"Billing Group/Description: ");
	   fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
  	   line_no =line_no + 4;
	   print_bs_col_heading();
	   print_bs_detl_rec();
	   line_no += 4;
	   totl_blng_serv += 1;
	   totl_blng_serv_fr_prt_grp += 1;
	   strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
	   strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left2 = fetch_bl_pc_prtgrp_cur();
       	  
	   }
		 else
		 { 
		  fprintf(f1,"Billing Group/Description: ");
		  fprintf(f1,"%-9s/%-16s\n",d_blng_grp_id.arr,d_price_desc.arr);	
	      fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	      fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	      fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
  	      line_no = line_no + 4;
		  print_bs_col_heading();
		  print_bs_detl_rec();
		  line_no += 4;
		  totl_blng_serv += 1;
		  totl_blng_serv_fr_prt_grp += 1;
		  strcpy(t_blng_grp_id.arr,d_blng_grp_id.arr);
		  strcpy(t_prt_grp_hdr_code.arr,d_prt_grp_hdr_code.arr);
		  strcpy(t_valid_from.arr,d_valid_from.arr);
	   	  still_rec_left2 = fetch_bl_pc_prtgrp_cur();
         }
	   }	
	 }
    EXEC SQL CLOSE BL_PC_PRTGRP_CUR;		 
   }
  
   
  }
 
 else
 {  
   if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)

    { EXEC SQL OPEN BL_BS_NO_PRTGRP_CUR;
	  

      still_rec_left3 = fetch_bl_bs_no_prtgrp_cur();
      strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	  strcpy(t_valid_from.arr,d_valid_from.arr);
		  

   //prepare_new_bs_page();
  {
   page_no += 1;
   print_page_header();
   prepare_new_price_page();
   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
   print_price_col_heading(); 
   line_no = 12;
  }

  while(still_rec_left3)
  {
    
	if((strcmp(t_blng_serv_code.arr,d_blng_serv_code.arr)==0)&&
	   (strcmp(t_valid_from.arr,d_valid_from.arr)==0))
	{

	   if ((line_no + 2) >= MAX_LINES)
	 {  
	   prepare_new_price_page();
	   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
	   print_price_col_heading(); 
       print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left3 = fetch_bl_bs_no_prtgrp_cur();
       	  
		 }
		 else
		 { 
		  print_price_detl_rec();
		  line_no += 1;
		  totl_price_class += 1;
		  strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
		  strcpy(t_valid_from.arr,d_valid_from.arr);
	   	  still_rec_left3 = fetch_bl_bs_no_prtgrp_cur();
         }
	   }	
	else
		{ 
		  fprintf(f1,"No. of Billing Groups: %d\n",totl_price_class);
		  fprintf(f1,"--------------------------------------------------------------------------------\n\n");
		  totl_price_class = 0;
		  line_no = line_no + 3;
		  if ((line_no + 2)>= MAX_LINES)
		  {
		    prepare_new_price_page();
	   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
	   print_price_col_heading(); 
	   print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left3 = fetch_bl_bs_no_prtgrp_cur(); 
			   }
		   else				 	 	
           {
		     fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   line_no = line_no + 3;
	   print_price_col_heading(); 
	   print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left3 = fetch_bl_bs_no_prtgrp_cur(); 
		  
	   }  
	  }
       
     }	 	
    EXEC SQL CLOSE BL_BS_NO_PRTGRP_CUR;
	}
	else
	{ EXEC SQL OPEN BL_BS_PRTGRP_CUR;
      still_rec_left4 = fetch_bl_bs_prtgrp_cur();
      strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	  strcpy(t_valid_from.arr,d_valid_from.arr);
	  

   //prepare_new_bs_page();
  {
   page_no += 1;
   print_page_header();
   prepare_new_price_page();
   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr); 
   print_price_col_heading(); 
   line_no = 13;
  }

  while(still_rec_left4)
  {
    
	if((strcmp(t_blng_serv_code.arr,d_blng_serv_code.arr)==0)&&
	   (strcmp(t_valid_from.arr,d_valid_from.arr)==0))
	{

	   if ((line_no + 2) >= MAX_LINES)
	 {  
	   prepare_new_price_page();
	   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
	   line_no = line_no + 4;
	   print_price_col_heading(); 
       print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left4 = fetch_bl_bs_prtgrp_cur();
       	  
		 }
		 else
		 { 
		  print_price_detl_rec();
		  line_no += 1;
		  totl_price_class += 1;
		  strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
		  strcpy(t_valid_from.arr,d_valid_from.arr);
	   	  still_rec_left4 = fetch_bl_bs_prtgrp_cur();
         }
	   }	
	else
		{ 
		  fprintf(f1,"No. of Billing Groups: %d\n",totl_price_class);
		  fprintf(f1,"--------------------------------------------------------------------------------\n\n");
		  totl_price_class = 0;
		  line_no = line_no + 3;
		  if ((line_no + 2)>= MAX_LINES)
		  {
		    prepare_new_price_page();
	   fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
	   line_no = line_no + 4;
	   print_price_col_heading(); 
	   print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left4 = fetch_bl_bs_prtgrp_cur(); 
			   }
		   else				 	 	
           {
		     fprintf(f1,"Billing Service Code/Description: ");
	   fprintf(f1,"%-10s/%-16s\n",d_blng_serv_code.arr,d_blng_serv_desc.arr);	
	   fprintf(f1,"From Date: %11s\n",d_valid_from.arr);
	   fprintf(f1,"  To Date: %11s\n",d_valid_to.arr);
	   fprintf(f1,"Print Group Code: %-3s\n",d_prt_grp_hdr_code.arr);
	   line_no = line_no + 4;
	   print_price_col_heading(); 
	   print_price_detl_rec();
	   line_no += 4;
	   totl_price_class += 1;
	   strcpy(t_blng_serv_code.arr,d_blng_serv_code.arr);
	   strcpy(t_valid_from.arr,d_valid_from.arr);
	   still_rec_left4 = fetch_bl_bs_prtgrp_cur(); 
		  
	   }  
	  }
       
     }	 	
    EXEC SQL CLOSE BL_BS_PRTGRP_CUR;
	}

   }
    
      print_totl_per_report();

    
}


/* prepares for the new page */
void prepare_new_bs_page()
{
   page_no += 1;
   fprintf(f1,"\n");
   if (page_no == 1)
   {
   print_page_header();
   line_no = 9; 
   }
   else
   {
    if (strcmp(nd_sort_order.arr,"P")==0)
	{
	if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
   
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP",d_sysdate.arr,page_no);
   
	else
   
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP / PRINT GROUP",d_sysdate.arr,page_no);
	}
	else
	{
	if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
  
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES",d_sysdate.arr,page_no);
   
	else
   
		print_page_title(90,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES / PRINT GROUP",d_sysdate.arr,page_no);
  
	}
   fprintf(f1,"--------------------------------------------------------------------------------\n\n");
   line_no = 6; 
  }
   
}
void prepare_new_price_page()
{
   page_no += 1;
   fprintf(f1,"\n");
   if (page_no == 1)
   {
   print_page_header();
   line_no = 9; 
   }
   else
   {
    if (strcmp(nd_sort_order.arr,"P")==0)
	{
	if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
   
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP",d_sysdate.arr,page_no);
   
	else
   
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP / PRINT GROUP",d_sysdate.arr,page_no);
	}
	else
	{
	if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
  
		print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES",d_sysdate.arr,page_no);
   
	else
   
		print_page_title(90,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES / PRINT GROUP",d_sysdate.arr,page_no);
  
	}
 fprintf(f1,"--------------------------------------------------------------------------------\n\n");
	    line_no = 6; 
 }
   
}
 
int fetch_bl_pc_no_prtgrp_cur()
{
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;

  EXEC SQL FETCH BL_PC_NO_PRTGRP_CUR INTO
			     :d_blng_grp_id, 
				 :d_price_desc, 
				 :d_blng_serv_code,
				 :d_blng_serv_desc,
	   			 :d_valid_from,
				 :d_valid_to,
				 :d_ip_rate,
				 :d_op_rate,
				 :d_ref_rate,     
				 :d_emer_rate,
				 :d_daycare;	//30/10/2004
				 		
   if (NODATAFOUND)       
      return 0;

   
   d_price_desc.arr[d_price_desc.len] = '\0';
   d_blng_serv_code.arr[d_blng_serv_code.len]         = '\0';
   d_blng_serv_desc.arr[d_blng_serv_desc.len]           = '\0';
   d_valid_from.arr[d_valid_from.len]   = '\0';
   d_valid_to.arr[d_valid_to.len]         = '\0';
   d_blng_grp_id.arr[d_blng_grp_id.len]   = '\0';
   	     
   return 1;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at fetch_bl_pc_no_prtgrp_cur() occured....");
   proc_exit();
}
int fetch_bl_pc_prtgrp_cur()
{
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL FETCH BL_PC_PRTGRP_CUR INTO
			     :d_blng_grp_id, 
				 :d_price_desc, 
				 :d_prt_grp_hdr_code,
				 :d_prt_grp_desc,
				 :d_blng_serv_code,
				 :d_blng_serv_desc,
	   			 :d_valid_from,
				 :d_valid_to,
				 :d_ip_rate,
				 :d_op_rate,
				 :d_ref_rate,
				 :d_emer_rate,
				 :d_daycare;		//30/10/2004
		
   if (NODATAFOUND)
       return 0;

   d_blng_grp_id.arr[d_blng_grp_id.len]   = '\0';
   d_price_desc.arr[d_price_desc.len] = '\0';
   d_prt_grp_hdr_code.arr[d_prt_grp_hdr_code.len]   = '\0';
   d_prt_grp_desc.arr[d_prt_grp_desc.len] = '\0';
   d_blng_serv_code.arr[d_blng_serv_code.len]         = '\0';
   d_blng_serv_desc.arr[d_blng_serv_desc.len]           = '\0';
   d_valid_from.arr[d_valid_from.len]   = '\0';
   d_valid_to.arr[d_valid_to.len]         = '\0';
   	     
   return 1;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at fetch_bl_pc_prtgrp_cur() occured....");
   proc_exit();
}
int fetch_bl_bs_no_prtgrp_cur()
{
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL FETCH BL_BS_NO_PRTGRP_CUR INTO
			     :d_blng_serv_code,
				 :d_blng_serv_desc,
	   			 :d_blng_grp_id, 
				 :d_price_desc, 
				 :d_valid_from,
				 :d_valid_to,
				 :d_ip_rate,
				 :d_op_rate,
				 :d_ref_rate,
				 :d_emer_rate,
				 :d_daycare;	//30/10/2004
		
   if (NODATAFOUND)
       return 0;

   d_blng_grp_id.arr[d_blng_grp_id.len]   = '\0';
   d_price_desc.arr[d_price_desc.len] = '\0';
   d_blng_serv_code.arr[d_blng_serv_code.len]         = '\0';
   d_blng_serv_desc.arr[d_blng_serv_desc.len]           = '\0';
   d_valid_from.arr[d_valid_from.len]   = '\0';
   d_valid_to.arr[d_valid_to.len]         = '\0';
   	     
   return 1;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at fetch_bl_bs_no_prtgrp_cur() occured....");
   proc_exit();
}
int fetch_bl_bs_prtgrp_cur()
{
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  EXEC SQL FETCH BL_BS_PRTGRP_CUR INTO
			     :d_blng_serv_code,
				 :d_blng_serv_desc,
	   			 :d_prt_grp_hdr_code,
				 :d_prt_grp_desc,
				 :d_blng_grp_id, 
				 :d_price_desc, 
				 :d_valid_from,
				 :d_valid_to,
				 :d_ip_rate,
				 :d_op_rate,
				 :d_ref_rate,
				 :d_emer_rate,
				 :d_daycare;	//30/10/2004
		
   if (NODATAFOUND)
       return 0;

   d_blng_grp_id.arr[d_blng_grp_id.len]   = '\0';
   d_price_desc.arr[d_price_desc.len] = '\0';
   d_prt_grp_hdr_code.arr[d_prt_grp_hdr_code.len]   = '\0';
   d_prt_grp_desc.arr[d_prt_grp_desc.len] = '\0';
   d_blng_serv_code.arr[d_blng_serv_code.len]         = '\0';
   d_blng_serv_desc.arr[d_blng_serv_desc.len]           = '\0';
   d_valid_from.arr[d_valid_from.len]   = '\0';
   d_valid_to.arr[d_valid_to.len]         = '\0';
   	     
   return 1;

 err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at fetch_bl_bs_prtgrp_cur() occured....");
   proc_exit();
}


/* print total number of detail records in the report */
void print_totl_per_report()
{
  fprintf(f1,"\n");
  if (strcmp(nd_sort_order.arr,"P")==0)
  {
  if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
   fprintf(f1,"No. of Service Codes: %d\n",totl_blng_serv);
  else
   fprintf(f1,"No. of Service Codes for the print group: %d\n",totl_blng_serv_fr_prt_grp);
  }
 else 
 
  fprintf(f1,"No. of Billing Groups: %d\n",totl_price_class);
  

  fprintf(f1,"==============================================================================\n\n");
  fprintf(f1,"                              ");
  fprintf(f1,"** End of Report **");
  fprintf(f1,"");
}


 /*to print the detailed record with to horizontal summeries*/ 
void print_bs_detl_rec()
{
  
       fprintf(f1,"%-10s     ",d_blng_serv_code.arr);
	   fprintf(f1,"%-18s",d_blng_serv_desc.arr);
	   if (strcmp(nd_patient_type.arr,"I")==0)
	   {print_formated1(d_ip_rate);
		fprintf(f1,"\n");}
	   else
	   {
	    if (strcmp(nd_patient_type.arr,"O")==0)
		   {print_formated1(d_op_rate);
		   fprintf(f1,"\n");}
	    else
		 {
		  if (strcmp(nd_patient_type.arr,"R")==0)   
			{print_formated1(d_ref_rate);
		    fprintf(f1,"\n");}
	      else
		  {
		   if (strcmp(nd_patient_type.arr, "E")==0)
		      {print_formated1(d_emer_rate);
			   fprintf(f1,"\n");}

		   else
		   {
		   if (strcmp(nd_patient_type.arr, "D")==0) //30/10/2004
		   {
		      print_formated1(d_daycare);
			   fprintf(f1,"\n");
		   }
		   else
		   {
			print_formated1(d_ip_rate);
			print_formated1(d_daycare);
			print_formated1(d_op_rate);
			print_formated1(d_emer_rate);
			print_formated1(d_ref_rate);
			
		    fprintf(f1,"\n");
			}

		   }
		  }
		 } 	
		}
    
return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at print_bs_detl_rec() occured....");
   proc_exit();
}
void print_price_detl_rec()
{
  
       fprintf(f1,"%-13s     ",d_blng_grp_id.arr);
	   fprintf(f1,"%-18s",d_price_desc.arr);
	   if (strcmp(nd_patient_type.arr,"I")==0)
		{print_formated1(d_ip_rate);
		fprintf(f1,"\n");}
	   else
	   {
	    if (strcmp(nd_patient_type.arr,"O")==0)
		   {print_formated1(d_op_rate);
		   fprintf(f1,"\n");}
	    else
		 {
		 if (strcmp(nd_patient_type.arr,"R")==0)   
			{print_formated1(d_ref_rate);
		    fprintf(f1,"\n");}
	    else
		 {
		  if (strcmp(nd_patient_type.arr, "E")==0)
		     {print_formated1(d_emer_rate);
			  fprintf(f1,"\n");}
		 else
		 {
			if (strcmp(nd_patient_type.arr, "D")==0)	//30/10/2004
			{
			  print_formated1(d_daycare);
			  fprintf(f1,"\n");
			}
			else
			{
			print_formated1(d_ip_rate);
			print_formated1(d_daycare);
			print_formated1(d_op_rate);
			print_formated1(d_emer_rate);
			print_formated1(d_ref_rate);
			
			
		    fprintf(f1,"\n");
			}
		  }	
		 }
		 } 	

		}
    
    
    
return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message (ORA_MESG, "Oracle error at print_price_detl_rec() occured....");
   proc_exit();
}


/* to print flexible page headers the header details */ 
void print_page_header()
{
  char fr_price_class_desc  [9], to_price_class_desc     [9],
       fr_blng_serv_desc    [7], to_blng_serv_desc      [7],
	   valid_from_desc      [11], valid_to_desc         [11];
  if(strcmp(nd_fr_blng_grp_id.arr, "!!") == 0)
    strcpy(fr_price_class_desc, "LOWEST");
    else strcpy(fr_price_class_desc, nd_fr_blng_grp_id.arr);

 if(strcmp(nd_to_blng_grp_id.arr, "~~") == 0)
    strcpy(to_price_class_desc, "HIGHEST");
    else strcpy(to_price_class_desc, nd_to_blng_grp_id.arr);
	
 if(strcmp(nd_fr_blng_serv_code.arr, "!!!!!!!!!!") == 0)
    strcpy(fr_blng_serv_desc, "LOWEST");
    else strcpy(fr_blng_serv_desc, nd_fr_blng_serv_code.arr);

  if(strcmp(nd_to_blng_serv_code.arr, "~~~~~~~~~~") == 0)
    strcpy(to_blng_serv_desc, "HIGHEST");
    else strcpy(to_blng_serv_desc, nd_to_blng_serv_code.arr);

 if(strcmp(nd_valid_from.arr, "01/01/1800") == 0)
    strcpy(valid_from_desc, "LOWEST");
    else strcpy(valid_from_desc, nd_valid_from.arr);

  if(strcmp(nd_valid_to.arr, "31/12/4712") == 0)
    strcpy(valid_to_desc, "HIGHEST");
    else strcpy(valid_to_desc, nd_valid_to.arr);

 if (strcmp(nd_sort_order.arr,"P")==0)
 {
  if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
   
   print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP",d_sysdate.arr,page_no);
   
  else
   
   print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING SERVICES BY BILLING GROUP / PRINT GROUP",d_sysdate.arr,page_no);
 }
else
 {
  if (strcmp(nd_breakup_by_prt_grp.arr,"N")==0)
  
   print_page_title(80,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES",d_sysdate.arr,page_no);
   
  else
   
   print_page_title(90,"BL",d_acc_entity_name.arr,d_sysdate.arr,d_user.arr,\
                   "BLRBGPRI","LIST OF BILLING GROUP BY BILLING SERVICES / PRINT GROUP",d_sysdate.arr,page_no);
  
 }

 fprintf(f1,"--------------------------------------------------------------------------------\n\n");
      
 
 fprintf(f1,"\n\n\n\n");
 fprintf(f1,"                     ");  
 fprintf(f1,"INPUT PARAMETERS\n");
 fprintf(f1,"                     ");  
 fprintf(f1,"----------------\n\n");


fprintf(f1,"                     ");  
 fprintf(f1,"PATIENT TYPE              :");	

	if (strcmp(nd_patient_type.arr,"I")==0)
	  {		
		fprintf(f1," INPATIENT\n\n");
	   }
	if (strcmp(nd_patient_type.arr,"D")==0)		//30/10/2004
	  {		
		fprintf(f1," DAYCARE\n\n");
	   }
	if (strcmp(nd_patient_type.arr,"O")==0)
	   {
		fprintf(f1," OUTPATIENT\n\n");
	   }	  
	if (strcmp(nd_patient_type.arr,"R")==0)
	   {
	    fprintf(f1," EXTERNAL PATIENT\n\n");  
	   }
	if (strcmp(nd_patient_type.arr,"E")==0)
	   {
	    fprintf(f1," EMERGENCY PATIENT\n\n");  
	   }

	if (strcmp(nd_patient_type.arr,"A")==0)
	   {
	    fprintf(f1," ALL\n\n");  
	   }



 
 fprintf(f1,"\n");
 fprintf(f1,"                     ");  
 fprintf(f1,"BILLING GROUP        FROM : %-11s\n ", fr_price_class_desc);
 fprintf(f1,"                                           TO : %-9s\n\n", to_price_class_desc);

 
 fprintf(f1,"                     ");  
 fprintf(f1,"BILLING SERVICE CODE FROM : %-11s\n ", fr_blng_serv_desc);
 fprintf(f1,"                                           TO : %-7s\n\n", to_blng_serv_desc);
 
fprintf(f1,"                     ");  
 fprintf(f1,"VALID  DATE          FROM : %-11s\n", valid_from_desc);
 fprintf(f1,"                     ");  
 fprintf(f1,"                       TO : %-11s\n\n", valid_to_desc);
 

fprintf(f1,"                     ");  
 fprintf(f1,"SORT ORDER                :");	


	if (strcmp(nd_sort_order.arr,"B")==0)
	  {		
		fprintf(f1," BILLING SERVICE\n\n");
	   }
	if (strcmp(nd_sort_order.arr,"P")==0)
	   {
		fprintf(f1," Billing Group\n\n");
	   }	  

fprintf(f1,"                     ");  
 fprintf(f1,"BREAK UP BY PRINT GROUP   : %s\n",nd_breakup_by_prt_grp.arr);	
 	    	
    
 fprintf(f1,"\n");
 
}


/* print the heading */
void print_bs_col_heading()
{
  if (strcmp(nd_patient_type.arr,"I")==0)
  { 
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  fprintf(f1,"Billing Service   Description        IP  \n");
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  }	
else
  {
   if (strcmp(nd_patient_type.arr,"O")==0)
   {
	  fprintf(f1,"--------------------------------------------------------------------------------\n");
	  fprintf(f1,"Billing Service   Description         OP  \n");
	  fprintf(f1,"--------------------------------------------------------------------------------\n");
   }
   else
   {
    if (strcmp(nd_patient_type.arr,"R")==0)
    {
     fprintf(f1,"--------------------------------------------------------------------------------\n");
     fprintf(f1,"Billing Service   Description       EXT  \n");
     fprintf(f1,"--------------------------------------------------------------------------------\n");
    }
    else
    {
     if (strcmp(nd_patient_type.arr,"E")==0)
     {
       fprintf(f1,"--------------------------------------------------------------------------------\n");
       fprintf(f1,"Billing Service   Description   Emergency \n");
       fprintf(f1,"--------------------------------------------------------------------------------\n");
     }
     else
	 {
	  if (strcmp(nd_patient_type.arr,"D")==0)	//30/10/2004
	  {
       fprintf(f1,"--------------------------------------------------------------------------------\n");
       fprintf(f1,"Billing Service   Description     Daycare \n");
       fprintf(f1,"--------------------------------------------------------------------------------\n");
	  }	
      else
	  {		
	    fprintf(f1,"--------------------------------------------------------------------------------\n");
	    fprintf(f1,"Billing Service    Description        IP       DC       OP    Emerg.     EXT     \n");
        fprintf(f1,"--------------------------------------------------------------------------------\n");
	  }
	 }
   }
   }
  }
}  	

void print_price_col_heading()
{
  if (strcmp(nd_patient_type.arr,"I")==0)
  { 
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  fprintf(f1,"Billing Group     Description           IP  \n");
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  }	
  else
  {
   if (strcmp(nd_patient_type.arr,"O")==0)
  {
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  fprintf(f1,"Billing Group     Description           OP  \n");
  fprintf(f1,"--------------------------------------------------------------------------------\n");
  }
  else
  {
    if (strcmp(nd_patient_type.arr,"R")==0)
    {
     fprintf(f1,"--------------------------------------------------------------------------------\n");
     fprintf(f1,"Billing Group      Description          EXT  \n");
     fprintf(f1,"--------------------------------------------------------------------------------\n");
    }
	else
	{
	  if (strcmp(nd_patient_type.arr,"E")==0)
      {
       fprintf(f1,"--------------------------------------------------------------------------------\n");
       fprintf(f1,"Billing Group      Description        Emerg.  \n");
       fprintf(f1,"--------------------------------------------------------------------------------\n");
      }
	  else
	  {
	    if (strcmp(nd_patient_type.arr,"D")==0)
		{
			fprintf(f1,"--------------------------------------------------------------------------------\n");
			fprintf(f1,"Billing Group      Description          DC  \n");
			fprintf(f1,"--------------------------------------------------------------------------------\n");
		}
		else
		{		
		  fprintf(f1,"--------------------------------------------------------------------------------\n");
		  fprintf(f1,"Billing Group     Description            IP       DC       OP   Emerg.      EXT  \n");
		  fprintf(f1,"--------------------------------------------------------------------------------\n");
		} 
			
	  }
	}
   }
  }
 }

void print_page_title(nd_rep_width,
						 nd_mod_id,
						 nd_hospital_name,
						 nd_date,
						 nd_user,
						 nd_rep_id,
						 nd_rep_name,
						 nd_date,
						 page_number)

char nd_mod_id[3],nd_hospital_name[31],nd_date[16], nd_rep_id[9],nd_rep_name[101],
     nd_user[21];
int  nd_rep_width, page_number;
{
	/******************* Line 1 : Hospital Name ******************/
	int i = 0 , pos = 0 , len = 0, len_date = 0 , pos_date = 0,
	    len_page_no = 0,  pos_page_no = 0;

    /*Find the length of Hospital Name*/
    for(len = 0; nd_hospital_name[len] != '\0'; len++);

    /*Find the length of Date*/
    for(len_date = 0; nd_date[len_date] != '\0'; len_date++);

    len = len / 2;

    pos = (nd_rep_width / 2	) - len;

	pos_date = nd_rep_width - len_date;

	fprintf(f1,"MDL : %2s",nd_mod_id);

	for(i = 9; i < pos ; fprintf(f1," "),i++);

	fprintf(f1,"%s",nd_hospital_name);

	for(i = i + (len * 2) ; i < pos_date ; fprintf(f1," "),i++);

    fprintf(f1,"%s\n",nd_date);

    /******************* Line 2 : User Name ******************/

	fprintf(f1,"IPR : %-20s\n",nd_user);
	
	/******************* Line 3 : Report Name ******************/
	i = 0 ; 
	pos = 0 ; 
	len = 0; 
	len_page_no = 0 ; 
	pos_page_no = 0;

    /*Find the length of Report Name*/
    for(len = 0; nd_rep_name[len] != '\0'; len++);

    len = len / 2;

    pos = (nd_rep_width / 2	) - len;

	pos_page_no = nd_rep_width - 10;

	fprintf(f1,"REP : %8s",nd_rep_id);

	for(i = 15; i < pos ; fprintf(f1," "),i++);

	fprintf(f1,"%-24s",nd_rep_name);		
     
	for(i = i + (len * 2) ; i < pos_page_no - 7; fprintf(f1," "),i++);

    fprintf(f1,"Page : %d\n",page_number);

	
}

print_formated1(loc_amount)
double loc_amount;
{
	char *s_amt;
	char out_str[30],out_str1[30];

   if (loc_amount >= 0)
   {
      /*sprintf(out_str,"%8.2f",loc_amount);
      ltrim(out_str);str_comma(out_str);
      sprintf(out_str1,"%8s",out_str);*/

       put_val(out_str,loc_amount);
       format_amt(out_str);
       strcat(out_str," ");
       fprintf(f1,"%8s ",out_str);
   }
   else
   {
      /*sprintf(out_str,"%8.2f",-loc_amount);
      ltrim(out_str);str_comma(out_str);
      sprintf(out_str1,"%8s",out_str);*/
 
      put_val(out_str,-loc_amount);
      format_amt(out_str);
      strcat(out_str,"-");
 
      fprintf(f1,"%8s-",out_str);      
   }
}    
        
#undef NODATAFOUND
#undef MAX_LINES
#undef VER
