/************************************************************************/
/* PROGRAM NAME          : BLR00018.PC                                  */
/* AUTHOR                : HARISH A                                     */
/* DATE WRITTEN          : 22/11/2003                                   */
/************************************************************************/
                                             
#include <string.h>
#include <math.h>
#include <stdio.h>
#include <bl.h>
  
#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define MAX_LINES 80
#define INIT_MESG       "Top Up Deposit Letter Printing in progress"
#define ESC     0x1B
/*
#define ONLINE_PRINTING 1
#define DEBUG 1
*/

EXEC SQL BEGIN DECLARE SECTION;

	VARCHAR	uid_pwd				[132],
			hosp_name			[120],
			l_pk_value          [100],
			l_len_value	        [3],
			date_time			[20],
			l_translated_value	    [201],
			user_id				[20],
			nd_pgm_date			[35],
			nd_facility_name	[31],
			nd_session_id		[16],
			nd_calling_pgm_id	[20],
			nd_facility_id		[3],
			nd_temp_date								[21],
		    date_convert								[21],
			nd_loc_date									[21];
		

	VARCHAR	nd_file_name [50],
			nd_lang_id	[4],
			loc_legend1	[201],
			loc_legend2	[201],
			loc_legend3	[201],
			loc_legend4	[201],
			loc_legend5	[201],
			loc_legend6	[201],
			loc_legend7	[201],
			loc_legend7_1	[201],
			loc_legend8	[201],
			loc_legend9	[201],
			loc_legend10[201],
			loc_legend11[201],
			loc_legend12[201],
			loc_legend13[201],
			loc_legend14[201],
			loc_legend15[201],
			loc_legend16[201],
			loc_legend17[201],
			loc_legend18[201],
			loc_legend19[201],
			loc_legend20[201],
			loc_legend21[201],
			loc_legend22[201],
			loc_legend23[201],
			loc_legend24[201],
			loc_legend25[201],
			loc_legend26[201],
			loc_legend27[201],
			loc_legend28[201],
			loc_legend29[201],
			loc_legend30[201],
			loc_legend31[201],
			loc_legend32[201],
			loc_legend33[201];

	VARCHAR l_fr_ward_code			[6],
			l_to_ward_code			[6],
			l_fr_episode_id			[15],
			l_to_episode_id			[15],
			l_episode_id			[12],
			l_patient_id			[22],
			l_short_name			[65],
			l_address_line1			[33],
			l_address_line2			[33],
			l_address_line3			[33],
			l_tel_number			[33],
			l_sysdate			[20],
			l_hospital_name			[50],
			l_doc_type_code			[16],
			l_doc_date			[15],
			l_short_desc			[17],
			l_prt_grp_hdr_code		[5],
			l_prt_grp_line_code		[5],
			l_encounter_id			[15],
			l_blng_grp_id			[15],
			l_cust_code			[15],
			l_non_ins_blng_grp_id		[15],
			l_non_ins_cust_code		[15],
			l_settlement_ind		[15],
			l_cur_ward_code			[15],
			l_cur_bed_num			[15],
			l_cur_physician_id		[15],
			l_admission_type_code		[15],
			l_cur_bed_class_code		[15],
			l_to_bed_type_code		[15],
			l_to_nursing_unit		[15],
			l_nursing_unit_type		[25],
			l_blng_class			[25],
			l_dummy					[25],
			l_bill_type			[25],
			l_SERVICE_PANEL_IND  [25],
			l_blng_serv			[25],
			l_deposit_reqd_yn		[25],
			l_addl_dep_reqd_yn		[25],
			l_dept_code			[25],
			l_sys_message_id		[25],
			l_reln_code			[25],
			l_dep_defined			[10],
			l_message_text			[500],
			l_row_num			[11],
			v_error_text			[500],
			l_fr_blng_grp           [5],
			l_to_blng_grp           [5],
			l_fr_bed_class      [5],
			l_to_bed_class      [5];


	char	l_sql_stmt[3000];
	char    nd_lang_ind;
	char    l_temp_line2[300],	loc_legend[999][201];
	char	l_mesg[300];

	double	d_doc_amt_num, 
			nd_dep_amt,
			l_doc_amt=0,
			l_total_deposit_amount=0,
			l_total_folio = 0,
			l_next_deposit = 0,
			l_total_amount_to_pay = 0,
		  	l_upd_net_charge_amt=0,
			l_outstanding_amount=0,
			l_dep_amt = 0,
			l_dly_charge = 0,
			l_tot_dep_amt = 0;
 		

	int     l_line_no = 0,v_no_of_decimal,e_exist_or_not,
			l_temp_line_no = 0;
	int		l_page_no = 0;
	int		nd_no_of_decimal;
	int		i,j;

	long    l_bill_doc_number;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *fp;
int		lctr = 0,
		pctr =0;

char filename[150];

void proc_main(argc,argv)
char *argv[];
int argc;
{
	char lv_msg[1024];

	if (argc != 6) 
	{
        disp_message (ERR_MESG,"Usage : BLR00018 username/pwd@connect_string session_id pgm_date facility_id calling_pgm_id [filename]\n");
        proc_exit();
	} 
   
	strcpy(uid_pwd.arr,argv[1]);
	uid_pwd.len = strlen(uid_pwd.arr);

	nd_session_id.len = 0;
	nd_session_id.arr[nd_session_id.len] = '\0';

	strcpy(nd_session_id.arr,argv[2]);
	nd_session_id.len = strlen(nd_session_id.arr);
	nd_session_id.arr[nd_session_id.len] = '\0'; 

	nd_pgm_date.len = 0;
	nd_pgm_date.arr[nd_pgm_date.len] = '\0';
   
	strcpy(nd_pgm_date.arr,argv[3]);
	nd_pgm_date.len = strlen(nd_pgm_date.arr);
	nd_pgm_date.arr[nd_pgm_date.len] = '\0';

	strcpy(nd_facility_id.arr,argv[4]);
	nd_facility_id.len = strlen(nd_facility_id.arr);
	nd_facility_id.arr[nd_facility_id.len] = '\0';

	strcpy(nd_calling_pgm_id.arr,argv[5]);		
	nd_calling_pgm_id.len = strlen(nd_calling_pgm_id.arr);	
	nd_calling_pgm_id.arr[nd_calling_pgm_id.len] = '\0';

	if(sql_connect() == -1)
	{
		disp_message(ERR_MESG,"Error in connecting to Oracle\n");
		if (uid_pwd.len == 0)
			disp_message(ERR_MESG,"Null oracle uid/pwd\n\n\n");
		proc_exit();
	}

	set_meduser_role();
  	
		strcpy(nd_lang_id.arr,l_language_id.arr);
		nd_lang_id.len = strlen(nd_lang_id.arr);
		nd_lang_id.arr[nd_lang_id.len]='\0';
	get_sy_prog_param();


	EXEC SQL SELECT acc_entity_name,
					no_of_decimal
			   INTO :nd_facility_name,
					:nd_no_of_decimal
 			   FROM sy_acc_entity_lang_vw
			  WHERE acc_entity_id = :nd_facility_id
			  and language_id= :nd_lang_id;


	if (OERROR)
         err_mesg("SELECT failed on cursor SY_ACC_ENTITY",0,"");

    nd_facility_name.arr[nd_facility_name.len] = '\0';

    open_files(); 

	declare_top_up_deposit();


/*
	nd_lang_id.arr[0] = '\0';
	nd_lang_id.len = 0;

	EXEC SQL EXECUTE
	BEGIN
		blcommon.get_language_ind_id(:nd_facility_id,
									:l_patient_id,
									:nd_lang_ind,
									:nd_lang_id);
	END;
	END-EXEC;
 
	nd_lang_id.arr[strlen(nd_lang_id.arr)] = '\0';
	
*/
	fetch_legend_value();	

	declare_top_up_deposit();
    
	j=0;
    
	print_page_title();
    fetch_legend_value1();
	fprintf(fp,"\n\n\n\n\n\n\n\n");
	fprintf(fp,"\t%17s\n",loc_legend[34]);
    fprintf(fp,"\t---------------------\n\n");
     
     if(l_fr_blng_grp.arr[0]== '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n",loc_legend[35],loc_legend[39],loc_legend[41]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n",loc_legend[35],loc_legend[39],l_fr_blng_grp.arr);  
 
    if(l_to_blng_grp.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n","",loc_legend[40],loc_legend[42]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n","",loc_legend[40],l_to_blng_grp.arr);  
   
    if(l_fr_ward_code.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n",loc_legend[36],loc_legend[39],loc_legend[41]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n",loc_legend[36],loc_legend[39],l_fr_ward_code.arr);  
 
    if(l_to_ward_code.arr[0] =='\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n","",loc_legend[40],loc_legend[42]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n","",loc_legend[40],l_to_ward_code.arr);  
	  
    if(l_fr_bed_class.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n",loc_legend[37],loc_legend[39],loc_legend[41]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n",loc_legend[37],loc_legend[39],l_fr_bed_class.arr);  
 
    if(l_to_bed_class.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n","",loc_legend[40],loc_legend[42]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n","",loc_legend[40],l_to_bed_class.arr);  

    if(l_fr_episode_id.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n",loc_legend[38],loc_legend[39],loc_legend[41]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n",loc_legend[38],loc_legend[39],l_fr_episode_id.arr);  
 
    if(l_to_episode_id.arr[0] == '\0')
	   	fprintf(fp,"\t\t %20s  %10s : %-10.10s \n","",loc_legend[40],loc_legend[42]);
	else
		fprintf(fp,"\t\t %20s  %10s : %s\n","",loc_legend[40],l_to_episode_id.arr);  
	  	
	 delete_sy_prog(); 	
  fprintf(fp,"");


	while(fetch_top_up_deposit())
	{
	   
	    
		print_page_title();
		print_hospital_address();
	   
		print_letter_body();
		print_letter_deposit_detail();
		print_letter_total();
		print_letter_footer();
	}

	close_top_up_deposit();


	fprintf(fp,"%cE",ESC); /* To Reset the Printer */
    fclose(fp);

	/*PrintDocument(	uid_pwd.arr,		//char	*PUidPwd;
					nd_session_id.arr,	//char	*PSessionID;
					nd_facility_id.arr,	//char	*PFacilityID;
					"BL",				//char	*PModuleID;
					"BLR00018",			//char	*PDocumentID;
					filename,			//char	*POnlinePrintFileNames;
					"O",				//char	*PLocationTypes;
					" ",				//char	*PLocationCodes;
					1,					//int		PNumOfCopies;
					1,					//int		PPageFrom;
					999					//int		PPageTo;
				);*/


	EXEC SQL COMMIT WORK RELEASE;
	return;
}

fetch_legend_value()
{
	loc_legend1.arr[0]		= '\0';
	loc_legend2.arr[0]		= '\0';
	loc_legend3.arr[0]		= '\0';
	loc_legend4.arr[0]		= '\0';
	loc_legend5.arr[0]		= '\0';
	loc_legend6.arr[0]		= '\0';
	loc_legend7.arr[0]		= '\0';
	loc_legend7_1.arr[0]		= '\0';
	loc_legend8.arr[0]		= '\0';
	loc_legend9.arr[0]		= '\0';
	loc_legend10.arr[0]		= '\0';
	loc_legend11.arr[0]		= '\0';
	loc_legend12.arr[0]		= '\0';
	loc_legend13.arr[0]		= '\0';
	loc_legend14.arr[0]		= '\0';
	loc_legend15.arr[0]		= '\0';
	loc_legend16.arr[0]		= '\0';
	loc_legend17.arr[0]		= '\0';
	loc_legend18.arr[0]		= '\0';
	loc_legend19.arr[0]		= '\0';
	loc_legend20.arr[0]		= '\0';
	loc_legend21.arr[0]		= '\0';
	loc_legend22.arr[0]		= '\0';
	loc_legend23.arr[0]		= '\0';
	loc_legend24.arr[0]		= '\0';
	loc_legend25.arr[0]		= '\0';
	loc_legend26.arr[0]		= '\0';
	loc_legend27.arr[0]		= '\0';
	loc_legend28.arr[0]		= '\0';
	loc_legend29.arr[0]		= '\0';
	loc_legend30.arr[0]		= '\0';
	loc_legend31.arr[0]		= '\0';
	loc_legend32.arr[0]		= '\0';
	loc_legend33.arr[0]		= '\0';

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend1
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_001' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend1
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_001';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 1",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend2
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_002' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend2
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_002';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 2",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend3
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_003' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend3
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_003';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 3",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend4
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_004' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend4
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_004';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 4",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend5
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_005' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend5
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_005';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 5",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend6
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_006' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend6
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_006';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 6",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend7
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_007' 
				AND language_id = :nd_lang_id;	

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend7
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_007';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 7",0,"");
	}


EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend7_1
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_007.1' 
				AND language_id = :nd_lang_id;

	

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend7_1
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_007.1';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 7.1",0,"");
	}



	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend8
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_008' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend8
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_008';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 8",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend9
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_009' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend9
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_009';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 9",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend10
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_010' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend10
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_010';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 10",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend11
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_011' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend11
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_011';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 11",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend12
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_012' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend12
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_012';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 12",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend13
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_013' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend13
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_013';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 13",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend14
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_014' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend14
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_14';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 14",0,"");
	}

	EXEC SQL select rtrim(substr(column_value,1,80))
				into :loc_legend15
				from SM_RECORD_TRANS_DATA a,sm_lang_legend b
				where MODULE_ID = 'SM' 
				and	TABLE_ID = 'SM_LANG_LEGEND'
				and COLUMN_ID = 'DFLT_LEGEND_VALUE'
				and PK_VALUE = LEGEND_ID
				and LEGEND_ID = 'RECEIPT.LEGEND_015' 
				and LANGUAGE_ID = :nd_lang_id;

	if (sqlca.sqlcode == 1403)
	{
		EXEC SQL select dflt_legend_value into :loc_legend15
					from sm_lang_legend
					where LEGEND_ID = 'RECEIPT.LEGEND_015';
	}

	if (sqlca.sqlcode < 0)
	{   
		err_mesg("SELECT failed on LEGEND 15",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend16
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_016' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend16
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_016';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 16",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend17
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_017' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend17
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_017';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 17",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend18
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_018' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend18
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_018';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 18",0,"");
	}	

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend19
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_019' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend19
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_019';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 19",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend20
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_020' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend20
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_020';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 020",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend21
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_021' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend21
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_021';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 21",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend22
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_022' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend22
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_022';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 22",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend23
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_023' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend23
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_023';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 23",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend24
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_024' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend24
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_024';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 24",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend25
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_025' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend25
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_025';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 25",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend26
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_026' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend26
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_026';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 26",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend27
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_027' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend26
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_027';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 27",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend28
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_028' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend28
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_028';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 28",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend29
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_029' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend29
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_029';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 29",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend30
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_030' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend30
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_030';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 30",0,"");
	}	
	
	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend31
		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_031' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend31
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_031';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 31",0,"");
	}

	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend32		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_032' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend32
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_032';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 32",0,"");
	}


	EXEC SQL SELECT rtrim(substr(column_value,1,80))
			   INTO :loc_legend33		       FROM sm_record_trans_data a,
                    sm_lang_legend b
		      WHERE module_id   = 'SM' 
				AND	table_id    = 'SM_LANG_LEGEND'
				AND column_id   = 'DFLT_LEGEND_VALUE'
				AND pk_value    = legend_id
				AND legend_id   = 'BLR00018.LEGEND_033' 
				AND language_id = :nd_lang_id;

	if(sqlca.sqlcode == 1403)
	{
		EXEC SQL SELECT dflt_legend_value 
                   INTO :loc_legend33
  			       FROM sm_lang_legend
			      WHERE legend_id = 'BLR00018.LEGEND_032';
	}

	if (sqlca.sqlcode < 0)
	{
		err_mesg("SELECT failed on LEGEND 33",0,"");
	}



	loc_legend1.arr[loc_legend1.len]		= '\0';
	loc_legend2.arr[loc_legend2.len]		= '\0';
	loc_legend3.arr[loc_legend3.len]		= '\0';
	loc_legend4.arr[loc_legend4.len]		= '\0';
	loc_legend5.arr[loc_legend5.len]		= '\0';
	loc_legend6.arr[loc_legend6.len]		= '\0';
	loc_legend7.arr[loc_legend7.len]		= '\0';
	loc_legend7_1.arr[loc_legend7_1.len]		= '\0';
	loc_legend8.arr[loc_legend8.len]		= '\0';
	loc_legend9.arr[loc_legend9.len]		= '\0';
	loc_legend10.arr[loc_legend10.len]		= '\0';
	loc_legend11.arr[loc_legend11.len]		= '\0';
	loc_legend12.arr[loc_legend12.len]		= '\0';
	loc_legend13.arr[loc_legend13.len]		= '\0';
	loc_legend14.arr[loc_legend14.len]		= '\0';
	loc_legend15.arr[loc_legend15.len]		= '\0';
	loc_legend16.arr[loc_legend16.len]		= '\0';
	loc_legend17.arr[loc_legend17.len]		= '\0';
	loc_legend18.arr[loc_legend28.len]		= '\0';
	loc_legend19.arr[loc_legend29.len]		= '\0';
	loc_legend20.arr[loc_legend20.len]		= '\0';
	loc_legend21.arr[loc_legend21.len]		= '\0';
	loc_legend22.arr[loc_legend22.len]		= '\0';
	loc_legend23.arr[loc_legend23.len]		= '\0';
	loc_legend24.arr[loc_legend24.len]		= '\0';
	loc_legend25.arr[loc_legend25.len]		= '\0';
	loc_legend26.arr[loc_legend26.len]		= '\0';
	loc_legend27.arr[loc_legend27.len]		= '\0';
	loc_legend28.arr[loc_legend28.len]		= '\0';
	loc_legend29.arr[loc_legend29.len]		= '\0';
	loc_legend30.arr[loc_legend30.len]		= '\0';
	loc_legend31.arr[loc_legend31.len]		= '\0';
	loc_legend32.arr[loc_legend32.len]		= '\0';
	loc_legend33.arr[loc_legend33.len]		= '\0';
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;
  
  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

get_sy_prog_param()
{
	l_fr_ward_code.arr[0]   = '\0';
	l_to_ward_code.arr[0]	= '\0';
	l_fr_episode_id.arr[0]	= '\0';
	l_to_episode_id.arr[0]	= '\0';
	l_fr_blng_grp.arr[0]    = '\0';
	l_to_blng_grp.arr[0]	= '\0';
	l_fr_bed_class.arr[0]	= '\0';
	l_to_bed_class.arr[0]	= '\0';

	EXEC SQL SELECT param1, 
					param2, 
					param3, 
					param4,
					param5,
					param6,
					param7,
					param8
			   INTO	:l_fr_ward_code,
					:l_to_ward_code,
					:l_fr_episode_id,
					:l_to_episode_id,
					:l_fr_blng_grp,
					:l_to_blng_grp,
					:l_fr_bed_class,
					:l_to_bed_class
			   FROM sy_prog_param
			  WHERE operating_facility_id = :nd_facility_id
			    AND pgm_id     = 'BLR00018'
	            AND PGM_DATE   = :nd_pgm_date
	            AND SESSION_ID = :nd_session_id;

	if(OERROR)
		err_mesg("SELECT failed on SY_PROG_PARAM",0,"");
 	l_fr_ward_code.arr[l_fr_ward_code.len]  = '\0';   
	l_to_ward_code.arr[l_to_ward_code.len]	= '\0';   
	l_fr_episode_id.arr[l_fr_episode_id.len]= '\0';   
	l_to_episode_id.arr[l_to_episode_id.len]= '\0';
	   
	l_fr_blng_grp.arr[l_fr_blng_grp.len]  = '\0';   
	l_to_blng_grp.arr[l_to_blng_grp.len]	= '\0';   
	l_fr_bed_class.arr[l_fr_bed_class.len]= '\0';   
	l_to_bed_class.arr[l_to_bed_class.len]= '\0';   
/*	EXEC SQL DELETE 
	           FROM sy_prog_param
			  WHERE pgm_id     = 'BLR00018'
	            AND PGM_DATE   = :nd_pgm_date
	            AND SESSION_ID = :nd_session_id;

	if(OERROR)
		err_mesg("DELETE failed on SY_PROG_PARAM",0,"");*/
}

delete_sy_prog()
{
	EXEC SQL DELETE 
	           FROM sy_prog_param
			  WHERE pgm_id     = 'BLR00018'
	            AND PGM_DATE   = :nd_pgm_date
	            AND SESSION_ID = :nd_session_id;

	if(OERROR)
		err_mesg("DELETE failed on SY_PROG_PARAM",0,"");
}

open_files()
{
   strcpy(filename,WORKING_DIR);

   strcat(filename,"blr00018.lis");

   //strcpy(OUTPUT_FILE_NAME,filename );
   if ((fp = fopen(filename,"w")) == NULL)
   {
        err_mesg("Error while opening output file",0,"");
        proc_exit();
   }
}

declare_top_up_deposit()
{
	EXEC SQL DECLARE top_up_deposit_cur CURSOR    //PP
	             FOR
				  SELECT a.episode_id,
						 a.patient_id,
						 decode(:nd_lang_id,'en', substr(b.short_name,1,60),substr(nvl(b.SHORT_NAME_LOC_LANG,b.short_name),1,60))
					FROM ip_open_episode e,
						 bl_episode_fin_dtls a,
      					 mp_patient_mast b,
   						 ip_episode c,
   						 bl_parameters d,
						 BL_BLNG_GRP f
				   WHERE e.facility_id  = :nd_facility_id
					 AND a.patient_id     = b.patient_id
					 AND a.operating_facility_id = e.facility_id     			     
					 AND a.episode_type   in ('I','D')   //EPNH 30/10/2004
					 AND a.episode_id = e.open_episode_id
					 AND a.episode_id     = c.episode_id			     
					 AND a.episode_status = '0'
					 AND f.blng_grp_id=a.blng_grp_id
					 AND a.operating_facility_id  = c.facility_id
					 AND a.operating_facility_id  = d.operating_facility_id
					 AND ((d.discharge_billing_stage='1' and NVL(discharge_bill_gen_ind,'N') = 'N') 
						   OR
						  (d.discharge_billing_stage='2' and NVL(discharged_yn,'N') = 'N'))
					 AND (nvl(tot_unadj_dep_amt,0)+nvl(tot_unadj_prep_amt,0)) < ((nvl(tot_unbld_amt,0) + nvl(tot_outst_amt,0)) * (nvl(d.ip_deposit_top_up_perc,0)/100)) 
					 AND a.episode_id
				 BETWEEN NVL(:l_fr_episode_id,0)	
					 AND NVL(:l_to_episode_id,99999999)
					 AND c.cur_Ward_code
				 BETWEEN NVL(:l_fr_ward_code,'!!!!')
					 AND NVL(:l_to_ward_code,'~~~~')
					 AND f.BLNG_GRP_ID
				 BETWEEN NVL(:l_fr_blng_grp,'!!!!')
					 AND NVL(:l_to_blng_grp,'~~~~')
					 AND c.cur_bed_class_code
				 BETWEEN NVL(:l_fr_bed_class,'!!!!')
					 AND NVL(:l_to_bed_class,'~~~~');


	if(OERROR)
		err_mesg("DECLARE failed while PREPARING cursor top_up_deposit_cur",0,"");


	EXEC SQL OPEN top_up_deposit_cur;

	if(OERROR)	   
		err_mesg("OPEN failed on cursor top_up_deposit_cur",0,"");
}

fetch_top_up_deposit()
{

	l_episode_id.arr[0] = '\0';
	l_patient_id.arr[0] = '\0';
	l_short_name.arr[0] = '\0';

	EXEC SQL FETCH top_up_deposit_cur
	          INTO :l_episode_id,
				   :l_patient_id,
				   :l_short_name;
	
	if(OERROR)	   
		err_mesg("FETCH failed on cursor deposit_cursor",0,"");

    if (sqlca.sqlcode == 1403 )	
	  	return 0;

	l_episode_id.arr[l_episode_id.len] = '\0';
	l_patient_id.arr[l_patient_id.len] = '\0';
	l_short_name.arr[l_short_name.len] = '\0';
    
	return 1;
}

print_formated(loc_amount)
double loc_amount;
{  
	char s_amt[40], str_amt[40];
    int s_amt_len=0;
	
   EXEC SQL SELECT no_of_decimal
               INTO :v_no_of_decimal
	  		   FROM sm_acc_entity_param
              WHERE acc_entity_id = (SELECT acc_entity_code 
									   FROM sy_acc_entity
									  WHERE acc_entity_id = :nd_facility_id);

 



if(loc_amount < 0)
		{

            put_val(s_amt,-loc_amount);        
	 		u_ltrim(s_amt);
			s_amt_len = strlen(s_amt);
			if (s_amt_len>=14)
				{
					strcat(s_amt,"-");
					sprintf(str_amt,"%14s",s_amt);  
					fprintf(fp,"%14s",s_amt);
				}
				else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
				{  
				   strcat(s_amt,"-");
				   sprintf(str_amt,"%14s",s_amt);  
				   fprintf(fp,"%14s",s_amt);
				}
				else 
				{   
				   format_amt(s_amt);
				   strcat(s_amt,"-");
			       sprintf(str_amt,"%14s",s_amt);  
				   fprintf(fp,"%14s",s_amt); 
				} 
					 
		}
		else 
		{ 
        put_val(s_amt,loc_amount); 
		u_ltrim(s_amt);

		s_amt_len = strlen(s_amt);
	    	    		
		if (s_amt_len>=14)
		{ 
		sprintf(str_amt,"%14s",s_amt);  
		fprintf(fp,"%14s",s_amt);
		}
		else if ((v_no_of_decimal==2 && s_amt_len>12) ||(v_no_of_decimal==3 && s_amt_len>13))
		{
 
		   sprintf(str_amt,"%14s",s_amt);  
		   fprintf(fp,"%14s",s_amt);
		   }
		else 
		{   
            sprintf(str_amt,"%14s",s_amt);  
		   format_amt(s_amt); 
		   fprintf(fp,"%14s",s_amt); 
		}
		

	}
 
 
}

print_page_title()
{
 
	double l_report_width;
	double l_letter_heading_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width; 	

	l_line_no=0;
	l_page_no++;

	fprintf(fp,"%c&k4S",ESC); 	/* To Set compressed mode */
	
	l_report_width=85;
	l_letter_heading_length = strlen(loc_legend1.arr);

	//Code for Line 1
	l_start_point=ceill((l_report_width/2)-(l_letter_heading_length/2));
	fprintf(fp,"\n");	
	print_spaces(l_start_point);
	fprintf(fp,"%s \n\n",loc_legend1.arr);
	l_line_no = l_line_no + 4;
 }


print_hospital_address()
{
 
	l_hospital_name.arr[0] = '\0';
	l_address_line1.arr[0] = '\0';
	l_address_line2.arr[0] = '\0';
	l_address_line3.arr[0] = '\0';
	l_tel_number.arr[0]    = '\0';
	l_sysdate.arr[0]	   = '\0';
	l_sysdate.len          = 0;

	EXEC SQL SELECT acc_entity_name,
					ln1_add,
					ln2_add, 
					ln3_add||' '||zip_code ln4_add,
					tel_num,
					TO_CHAR(SYSDATE,'DD/MM/YYYY') 
               INTO :l_hospital_name,
					:l_address_line1,
				    :l_address_line2,
					:l_address_line3,
					:l_tel_number,
					:l_sysdate
			   FROM sy_acc_entity_lang_vw 
			  WHERE acc_entity_id = :nd_facility_id
			  and language_id =:nd_lang_id;
	if(OERROR)
		err_mesg("SELECT failed on sy_acc_entity",0,"");

	l_hospital_name.arr[l_hospital_name.len] = '\0';
	l_address_line1.arr[l_address_line1.len] = '\0';
	l_address_line2.arr[l_address_line2.len] = '\0';
	l_address_line3.arr[l_address_line3.len] = '\0';
	l_tel_number.arr[l_tel_number.len]		  = '\0';
	l_sysdate.arr[l_sysdate.len]			  = '\0';

	fprintf(fp,"     %-s\n",l_hospital_name.arr);
	fprintf(fp,"     %-s\n",l_address_line1.arr);
	fprintf(fp,"     %-s\n",l_address_line2.arr);
	fprintf(fp,"     %-s\n",l_address_line3.arr);
	fprintf(fp,"     %-s %s\n",loc_legend2.arr, l_tel_number.arr);
 		init_date_temp_var();
		strcpy(date_convert.arr,l_sysdate.arr);
		fun_change_loc_date();
	fprintf(fp,"     %61s%s %-s\n"," ",loc_legend3.arr,date_convert.arr);
	
	l_line_no=l_line_no+6;
 
}

print_letter_body()
{
 
	fprintf(fp,"     %-s, \n\n",loc_legend4.arr);
	fprintf(fp,"     %-80.80s\n",loc_legend5.arr);
	fprintf(fp,"     %-80.80s\n",loc_legend6.arr);
	fprintf(fp,"     %-80.80s\n",loc_legend7.arr);
	fprintf(fp,"     %-80.80s\n",loc_legend7_1.arr);
	fprintf(fp,"\n");	
	fprintf(fp,"     %-s\n",loc_legend8.arr);
	fprintf(fp,"\n");	
	fprintf(fp,"     %-s %s\n",loc_legend9.arr,l_short_name.arr);
 		init_date_temp_var();
		strcpy(date_convert.arr,l_sysdate.arr);
		fun_change_loc_date();
	fprintf(fp,"     %-s %-s %-s %-s %-s %-s\n",
	                 loc_legend10.arr,l_patient_id.arr,loc_legend11.arr,l_episode_id.arr,loc_legend12.arr,date_convert.arr);
	l_line_no = l_line_no+11;
 
}

print_letter_deposit_detail()
{
 
	fprintf(fp,"\n");
	fprintf(fp,"     %-s\n",loc_legend13.arr);

	declare_receipt_refund_cursor();

	l_temp_line_no = l_line_no;
	
	while(fetch_receipt_Refund_cur())
	{
		if(l_line_no == l_temp_line_no)
		{
			fprintf(fp,"     %6s%-11.11s %-21.21s %-15.15s %14.14s\n"," ",loc_legend14.arr,loc_legend15.arr,loc_legend16.arr,loc_legend17.arr);
			fprintf(fp,"     %6s----------------------------------------------------------------\n"," ");
		if (l_doc_date.arr[0] != '\0') 
{
	init_date_temp_var();
	strcpy(date_convert.arr,l_doc_date.arr);
	fun_change_loc_date();
	fprintf(fp,"     %6s%-11.11s %-21.21s %-15.15s "," ",l_row_num.arr,l_doc_type_code.arr,date_convert.arr);
}
		}
		else
		{
				if (l_doc_date.arr[0] != '\0') 
{
	init_date_temp_var();
	strcpy(date_convert.arr,l_doc_date.arr);
	fun_change_loc_date();
			fprintf(fp,"     %6s%-11.11s %-21.21s %-15.15s "," ",l_row_num.arr,l_doc_type_code.arr,date_convert.arr);
}
		}
 		print_formated(l_doc_amt);
 		fprintf(fp,"\n");
		l_total_deposit_amount = l_total_deposit_amount + l_doc_amt;
		l_line_no++;
		check_page_break();
	}
	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();

	l_temp_line_no = 0;
    l_temp_line_no = l_line_no;

	declare_folio_cursor();
	while(fetch_folio_cursor())
	{
		if (l_temp_line_no==l_line_no)
		{
			fprintf(fp,"     %-17.17s %-2s / %-2s      %-24.24s ",loc_legend18.arr,l_prt_grp_hdr_code.arr,l_prt_grp_line_code.arr,l_short_desc.arr);
		}
		else
		{
			fprintf(fp,"     %-17.17s %-2s / %-2s      %-24.24s "," ",l_prt_grp_hdr_code.arr,l_prt_grp_line_code.arr,l_short_desc.arr);
		}
 		print_formated(l_upd_net_charge_amt);
 		fprintf(fp,"\n");
		l_total_folio = l_total_folio + l_upd_net_charge_amt;
		l_line_no++;
		check_page_break();
	}
	close_internal_body_cursor();

	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();
 
}

declare_receipt_refund_cursor()
{
	//sprintf(l_mesg,"Facility Id   %s    Episode Id   %s    Pat Id   %s",nd_facility_id.arr,l_episode_id.arr,l_patient_id.arr);
	//disp_message(ERR_MESG,l_mesg);
	EXEC SQL DECLARE receipt_refund_cur CURSOR 
	             FOR
		      SELECT TO_CHAR(ROWNUM),
			         doc_type_code||'/'||doc_number,
					 TO_CHAR(doc_date,'DD/MM/YYYY'),
					 doc_amt
				FROM bl_receipt_refund_dtl_VW
			   WHERE operating_facility_id = :nd_facility_id 
			     AND episode_id            = :l_episode_id    
				 AND patient_id            = :l_patient_id
				 AND recpt_nature_code     IN ('AD','PR')     
				 AND NVL(cancelled_ind,'N')  != 'Y';

	if(OERROR)	   
		err_mesg("SELECT failed on cursor receipt_refund_cur",0,"");

	EXEC SQL OPEN receipt_refund_cur;

	if(OERROR)	   
		err_mesg("SELECT failed on cursor receipt_refund_cur",0,"");
}

fetch_receipt_Refund_cur()
{
 
	l_doc_type_code.arr[0]	= '\0';
	l_row_num.arr[0] = '\0';
	l_doc_date.arr[0]		= '\0';
	l_doc_amt = 0;

	EXEC SQL FETCH receipt_refund_cur
	          INTO :l_row_num,
				   :l_doc_type_code,
				   :l_doc_date,
				   :l_doc_amt;

    if (sqlca.sqlcode == 1403 )	
		return 0;

	if(OERROR)	   
		err_mesg("SELECT failed on cursor receipt_refund_cur",0,"");

	l_row_num.arr[l_row_num.len] = '\0';
	l_doc_type_code.arr[l_doc_type_code.len]	= '\0';
	l_doc_date.arr[l_doc_date.len]				= '\0';

	return 1;
 
}


declare_folio_cursor()
{
 
	EXEC SQL DECLARE folio_cursor CURSOR
	             FOR
			  SELECT prt_grp_hdr_code,
       				 prt_grp_line_code,
       				 sum(upd_net_charge_amt)
                FROM bl_patient_charges_folio 
			   WHERE operating_facility_id = :nd_facility_id
				 AND episode_id            = :l_episode_id
				 AND patient_id            = :l_patient_id
				 AND trx_status         IS NULL
				 AND bill_doc_type_code IS NULL
			   GROUP 
				  BY prt_grp_hdr_code,
       				 prt_grp_line_code;

	if(OERROR)	   
		err_mesg("DECLARE failed on cursor folio_cursor",0,"");

	EXEC SQL OPEN folio_cursor;

	if(OERROR)	   
		err_mesg("OPEN failed on cursor folio_cursor",0,"");
 
}


fetch_folio_cursor()
{ 
	l_prt_grp_hdr_code.arr[0]  = '\0';
    l_prt_grp_line_code.arr[0] = '\0';
    l_upd_net_charge_amt=0;

	EXEC SQL FETCH folio_cursor 
	          INTO :l_prt_grp_hdr_code,
				   :l_prt_grp_line_code,
				   :l_upd_net_charge_amt;
 
   if (sqlca.sqlcode == 1403 )	
		return 0;

	if(OERROR)	   
		err_mesg("FETCH failed on cursor folio_cursor",0,"");

 	l_prt_grp_hdr_code.arr[l_prt_grp_hdr_code.len]  = '\0';
    l_prt_grp_line_code.arr[l_prt_grp_line_code.len] = '\0';

	l_short_desc.arr[0] = '\0';

	EXEC SQL SELECT decode(:nd_lang_id,'en', substr(short_desc,1,16),substr(nvl(LOC_LANG_SHORT_DESC,short_desc),1,16))
	           INTO :l_short_desc
			   FROM bl_blng_prt_grp_line
			  WHERE prt_grp_hdr_code = :l_prt_grp_hdr_code
                AND prt_grp_line_code= :l_prt_grp_line_code;

	if(OERROR)	   
		err_mesg("SELECT failed on bl_blng_prt_grp_line",0,"");

	l_short_desc.arr[l_short_desc.len] = '\0';

	return 1;
 
}

close_top_up_deposit()
{
	EXEC SQL CLOSE top_up_deposit_cur;

	if(OERROR)	   
		err_mesg("CLOSE failed on cursor top_up_deposit_cur",0,"");
}

close_internal_body_cursor()
{
	EXEC SQL CLOSE receipt_refund_cur;

	if(OERROR)	   
		err_mesg("CLOSE failed on cursor receipt_refund_cur",0,"");

	EXEC SQL CLOSE folio_cursor;

	if(OERROR)	   
		err_mesg("CLOSE failed on cursor folio_cursor",0,"");
}

print_letter_total()
{
 
	fprintf(fp,"     %55.55s ",loc_legend19.arr);
 	print_formated(l_total_folio);
 	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %55.55s ",loc_legend20.arr);
 	print_formated(l_total_deposit_amount);
 	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();

	//l_outstanding_amount = l_total_folio;

	l_outstanding_amount = l_total_folio - l_total_deposit_amount;

	fprintf(fp,"     %55.55s ",loc_legend21.arr);
 	print_formated(l_outstanding_amount);
 	fprintf(fp,"\n");
	l_line_no++;

	check_page_break();

	l_blng_grp_id.arr[0] = '\0';
	l_cust_code.arr[0] = '\0';
	l_non_ins_blng_grp_id.arr[0] = '\0';
	l_non_ins_cust_code.arr[0] = '\0';
	l_settlement_ind.arr[0] = '\0';

	EXEC SQL SELECT blng_grp_id,
					cust_code,
					non_ins_blng_grp_id,
					non_ins_cust_code,
					settlement_ind
			   INTO :l_blng_grp_id,
					:l_cust_code,
					:l_non_ins_blng_grp_id,
					:l_non_ins_cust_code,
					:l_settlement_ind
			   FROM bl_episode_fin_dtls
			  WHERE operating_facility_id	= :nd_facility_id
			    AND episode_type			in ('I'	,'D') //EPNH 30/10/2004
				AND episode_id				= :l_episode_id;
	if(OERROR)	   
		err_mesg("SELECT failed on table bl_episode_fin_dtls",0,"");

	l_blng_grp_id.arr[l_encounter_id.len]				= '\0';
	l_cust_code.arr[l_cust_code.len]					= '\0';
	l_non_ins_blng_grp_id.arr[l_non_ins_blng_grp_id.len]= '\0';
	l_non_ins_cust_code.arr[l_non_ins_cust_code.len]	= '\0';
	l_settlement_ind.arr[l_settlement_ind.len]			= '\0';

	l_encounter_id.arr[0]			= '\0';
	l_cur_ward_code.arr[0]			= '\0';
	l_cur_bed_num.arr[0]			= '\0';
	l_admission_type_code.arr[0]	= '\0';
	l_cur_bed_class_code.arr[0]		= '\0';
	l_to_nursing_unit.arr[0]		= '\0';

	EXEC SQL SELECT distinct a.encounter_id,
					cur_ward_code,
					cur_bed_num,
					cur_physician_id, 
					a.admission_type_code,
					e.bed_class_code,
					to_nursing_unit
			   INTO :l_encounter_id,
					:l_cur_ward_code,
					:l_cur_bed_num,
					:l_cur_physician_id, 
					:l_admission_type_code,
					:l_cur_bed_class_code,
					:l_to_nursing_unit
			   FROM ip_episode			a, 
					bl_episode_fin_dtls b, 
					ip_adt_trn_his_vw	d,
					ip_bed_type			e,
					ip_ward				g
			  WHERE b.operating_facility_id  = a.facility_id 
				AND	b.episode_id			 = a.episode_id 
				AND	d.episode_id			 = a.episode_id 
				AND e.bed_type_code			 = d.to_bed_type_code
				AND g.facility_id			 = a.facility_id
				AND g.ward_code				 = a.cur_ward_code
				AND a.facility_id			 = :nd_facility_id
				AND	a.episode_id			 = :l_episode_id
				AND d.srl_no				 = ( SELECT max(srl_no)
												   FROM ip_adt_trn_his_vw f 
												  WHERE f.episode_id = a.episode_id 
								   					AND f.trn_code in ('A','T') 
													AND nvl(f.adt_trn_status,'0') <> '9');

//	if (OERROR)
if(sqlca.sqlcode < 0)
	{
         err_mesg("SELECT failed on IP EPISODE",0,"");
	 }

	l_encounter_id.arr[l_encounter_id.len]				= '\0';
	l_cur_ward_code.arr[l_cur_ward_code.len]			= '\0';
	l_cur_bed_num.arr[l_cur_bed_num.len]				= '\0';
	l_admission_type_code.arr[l_admission_type_code.len]= '\0';
	l_cur_bed_class_code.arr[l_cur_bed_class_code.len]	= '\0';
	l_to_nursing_unit.arr[l_to_nursing_unit.len]		= '\0';
	v_error_text.arr[0]									= '\0';

	EXEC SQL EXECUTE
	BEGIN

		bl_ip_interface.proc_get_ip_billing_details(:nd_facility_id,
									:l_to_nursing_unit ,
									:l_cur_bed_class_code,
									:l_admission_type_code,
									:l_cur_bed_num,         //In 
									:l_to_bed_type_code,    //Out
									:l_nursing_unit_type,
									:l_blng_class ,
									:l_bill_type ,		
									:l_SERVICE_PANEL_IND,						
									:l_blng_serv ,
									:l_deposit_reqd_yn ,
									:l_addl_dep_reqd_yn,
									:l_dept_code,
									:l_sys_message_id ,
									:v_error_text);
	
	END;
	END-EXEC;

	l_to_bed_type_code.arr[strlen(l_to_bed_type_code.arr)]	= '\0';
	l_nursing_unit_type.arr[strlen(l_nursing_unit_type.arr)]= '\0';
	l_blng_class.arr[strlen(l_blng_class.arr)]				= '\0';
	l_bill_type.arr[strlen(l_bill_type.arr)]				= '\0';
	l_blng_serv.arr[strlen(l_blng_serv.arr)]				= '\0';
	l_deposit_reqd_yn.arr[strlen(l_deposit_reqd_yn.arr)]	= '\0';
	l_addl_dep_reqd_yn.arr[strlen(l_addl_dep_reqd_yn.arr)]	= '\0';
	l_dept_code.arr[strlen(l_dept_code.arr)]				= '\0';
	l_sys_message_id.arr[strlen(l_sys_message_id.arr)]		= '\0';
	v_error_text.arr[strlen(v_error_text.arr)]				= '\0';

	if(v_error_text.len > 0)
	{
		sprintf(l_mesg,"Error : proc_get_ip_billing_details : %s",v_error_text.arr);
		disp_message(ERR_MESG,l_mesg);
		proc_exit;
	}	

	//sprintf(l_mesg,"l_to_bed_type_code  %s   l_nursing_unit_type   %s   l_blng_class   %s   l_bill_type    %s   l_blng_serv   %s   l_deposit_reqd_yn   %s   l_addl_dep_reqd_yn   %s   l_dept_code   %s   ",l_to_bed_type_code.arr,l_nursing_unit_type.arr,l_blng_class.arr,l_bill_type.arr,l_blng_serv.arr,l_deposit_reqd_yn.arr,l_addl_dep_reqd_yn.arr,l_dept_code.arr);
	//disp_message(ERR_MESG,l_mesg);

	l_reln_code.arr[0]	= '\0';
	
	EXEC SQL EXECUTE
	BEGIN

	:l_reln_code := blcommon.get_reln_code(:l_patient_id);

	END;
	END-EXEC;
	
	//sprintf(l_mesg,"l_reln_code %s",l_reln_code.arr);
	//disp_message(ERR_MESG,l_mesg);


	l_reln_code.arr[strlen(l_reln_code.arr)]	= '\0';

	v_error_text.arr[0]				= '\0';

	EXEC SQL EXECUTE
	BEGIN

		bl_ip_interface.bl_blng_grp_adm_prepayment( :nd_facility_id,
								    :l_blng_grp_id,
								    :l_nursing_unit_type,
								    :l_cur_bed_class_code,
								    :l_settlement_ind,
								    :l_reln_code,        //In
								    :l_dep_amt,           //Out
								    :l_dep_defined,
								    :v_error_text);
	END;
	END-EXEC;

	l_dep_defined.arr[strlen(l_dep_defined.arr)]	= '\0';
	v_error_text.arr[strlen(v_error_text.arr)]		= '\0';

	if(v_error_text.len > 0)
	{
		sprintf(l_mesg,"Error : bl_blng_grp_adm_prepayment : %s",v_error_text.arr);
		disp_message(ERR_MESG,l_mesg);
		proc_exit;
	}	

	//sprintf(l_mesg,"Dep_Amt %f   l_dep_defined   %s",l_dep_amt,l_dep_defined.arr);
	//disp_message(ERR_MESG,l_mesg);


	l_next_deposit = l_dep_amt;

	if(strcmp(l_dep_defined.arr,"N")==0)
	{
		v_error_text.arr[0]		= '\0';  

		EXEC SQL EXECUTE
		BEGIN
			bl_ip_interface.bl_calculate_tot_dep_amt(:l_to_nursing_unit,
									 :l_nursing_unit_type,
									 :l_cur_bed_class_code ,
									 :l_to_bed_type_code,
									 :l_cur_bed_num,
									 :l_settlement_ind,
									 :l_deposit_reqd_yn,
									 :l_addl_dep_reqd_yn,   
									 0,
									 0,
									 :l_dep_amt,			//Out	
									 :l_next_deposit,
									 :v_error_text);
		END;
		END-EXEC;

		v_error_text.arr[strlen(v_error_text.arr)]		= '\0';

		if(v_error_text.len > 0)
		{
			sprintf(l_mesg,"Error : bl_calculate_tot_dep_amt : %s",v_error_text.arr);
			disp_message(ERR_MESG,l_mesg);
			proc_exit;
		}	

	}

	fprintf(fp,"     %55.55s ",loc_legend22.arr);
 	print_formated(l_next_deposit);
 	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();

	l_total_amount_to_pay = l_next_deposit + l_outstanding_amount;

	fprintf(fp,"     %55.55s ",loc_legend23.arr);
 	print_formated(l_total_amount_to_pay);
 
	fprintf(fp,"\n");
	l_line_no++;
	check_page_break();

	l_total_folio			=0;
	l_total_deposit_amount	=0;
	l_outstanding_amount	=0;
	l_total_amount_to_pay	=0;
	l_next_deposit			=0;
	l_dep_amt				=0;	
	
	fprintf(fp,"\n");
}

print_letter_footer()
{
	fprintf(fp,"     %-s\n",loc_legend24.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend25.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend26.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend27.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend28.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend29.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend30.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"\n     %-s\n\n\n",loc_legend31.arr);
	l_line_no=l_line_no + 4;
	check_page_break();

	fprintf(fp,"     %-s\n",loc_legend32.arr);
	l_line_no++;
	check_page_break();

	fprintf(fp,"     %-s\n",nd_facility_name.arr);
	l_line_no++;


	fprintf(fp,"\n\n");	

	fprintf(fp,"     %-s\n",loc_legend33.arr);
	l_line_no++;
	

	fprintf(fp,"%\f");
}

print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}

check_page_break()
{
	if (l_line_no >= 60)	
	{
		print_page_title();
	}
}

get_local_date()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	  
      // 	get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date,'DD/MM/RRRR HH24:MI'),:nd_lang_id,t_date);  
	 :nd_loc_date :=  	sm_convert_date_2t(to_date(:nd_temp_date,'DD/MM/RRRR'),:nd_lang_id);  

      
 	

	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

                     
init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
}

  
fun_change_loc_date()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);
nd_temp_date.arr[nd_temp_date.len]='\0';

get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 

}
fetch_legend_value1()
{
	for(i=34;i<=100;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00018.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:nd_lang_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}