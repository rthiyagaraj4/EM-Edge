/************************************************************************/
/* OCS MEDICOM VER 4.1                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLR00005.PC                                  */
/* AUTHOR                : Jagwinder Kaur                             */  
/* DATE WRITTEN          : 27/04/2004                                   */      
/************************************************************************/
          
#include <stdio.h>         
#include <string.h> 
#include <bl.h>       
#include <math.h> 


#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define NODATAFOUND sqlca.sqlcode == 1403
#define ESC 0x1B 
/*
#define DEBUG 0
*/

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR     hosp_name                       [120],
			date							[20],
            date_time                       [20],
            user_id                         [91],
	        nd_pwd 							[91],
            nd_session_id                   [16],
            nd_pgm_date                     [25],
            d_curr_pgm_name                 [15],
			nd_facility				        [3],
			nd_cash_counter_facility		[3],
			nd_fm_cash_counter				[5],
			nd_to_cash_counter				[5],
			nd_fm_doc_date					[11],
			nd_to_doc_date					[11],
			bl_doc_date						[11],
			bl_cash_counter_code			[5],
			old_cash_counter_code			[5],
			bl_cash_counter_facility		[3],
			bl_user							[31],
			old_user						[31],
			bl_slmt_type_code				[3],
			bl_slmt_type_desc				[16],
			old_doc_date					[11],
			l_translated_value			   [201],
			l_cash_book_acc_desc		   [16],
			l_pk_value					   [100],
			tmp_date						[18],
			temp_slmt_type_code				[3],
			temp_slmt_type_desc				[51],
			p_language_id                   [3];

double      bl_collection_amt,
			bl_return_amt,
			tot_collection_date,
			tot_return_date,
			tot_collection_rep,
			tot_return_rep,
			date_total;

int i,sno = 0,n;
int tot_rec_in_slmt;
char excl_credit_card_trn;
char nd_rec_ref,bl_recpt_refund_ind;
char filename[150];
char x_msg[200];
char loc_legend[999][201];
char l_mesg[200];
char fm_cash_counter[5],
	 to_cash_counter[5],
	 fm_doc_date[12],
	 to_doc_date[12],
	 p_page[10];
char string_var[200];
char slmt_desc[50][16];
char slmt_code[50][3];
double slmt_tot[30];
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int    lctr = 0,pctr = 0,nvalid = 0,ncancel = 0;
int    first = 1;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }
 
    strcpy(g_pgm_id,"BLR00005");
    strcpy(nd_pwd.arr,argv[1]);
    nd_pwd.len = strlen(nd_pwd.arr);

    EXEC sql connect :nd_pwd;
  
	  
    if (sqlca.sqlcode < 0 )
	{
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
        }

		set_meduser_role(); 

    	strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    	d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

		strcpy(p_language_id.arr,l_language_id.arr);
		p_language_id.len = l_language_id.len; 

    	strcpy(nd_session_id.arr,argv[2]);
    	nd_session_id.len = strlen(nd_session_id.arr);
    	strcpy(g_session_id,nd_session_id.arr);

    	strcpy(nd_pgm_date.arr,argv[3]);
    	nd_pgm_date.len = strlen(nd_pgm_date.arr);
    	strcpy(g_pgm_date,nd_pgm_date.arr);

    	strcpy(nd_facility.arr,argv[4]);
    	nd_facility.len = strlen(nd_facility.arr);
    	strcpy(g_facility_id,nd_facility.arr);

	   nd_cash_counter_facility.arr[0]	= '\0';
       nd_fm_cash_counter.arr[0]		= '\0';
	   nd_to_cash_counter.arr[0]		= '\0';
	   nd_fm_doc_date.arr[0]			= '\0';
	   nd_to_doc_date.arr[0]			= '\0';

	   nd_cash_counter_facility.len	= 0;
	   nd_fm_cash_counter.len		= 0;
	   nd_to_cash_counter.len		= 0;
	   nd_fm_doc_date.len			= 0;
	   nd_to_doc_date.len			= 0;

        EXEC SQL SELECT	PARAM1,
						PARAM2,
						PARAM3,
						PARAM4,
						PARAM5,
						PARAM6,
						PARAM7
				INTO	:nd_cash_counter_facility,
						:nd_fm_cash_counter,
						:nd_to_cash_counter,
						:nd_fm_doc_date,
						:nd_to_doc_date,
						:nd_rec_ref,
						:excl_credit_card_trn
				FROM SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");


		nd_cash_counter_facility.arr[nd_cash_counter_facility.len]	= '\0';
		nd_fm_cash_counter.arr[nd_fm_cash_counter.len]					= '\0';
		nd_to_cash_counter.arr[nd_to_cash_counter.len]					= '\0';
		nd_fm_doc_date.arr[nd_fm_doc_date.len]							= '\0';
		nd_to_doc_date.arr[nd_to_doc_date.len]							= '\0';

      EXEC SQL DELETE SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

	  if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");


    	declare_cur();

    	fetch_hosp_name();

		fetch_legend_value();

    	open_file();
fprintf (fp,"%c&l1O",ESC);
fprintf (fp, "%c(s12H", ESC);
		print_page_header();

		//print_head();	ravikiran	
		
		open_hdr();

		fetch_slmt_cur();
    
	    print_detail();
	
	    end_of_rep();


    EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");
}

declare_cur()
{
	EXEC SQL DECLARE BL_RCPT_REF_CUR CURSOR FOR 
	select	doc_date,
		to_char(doc_date,'DD/MM/YYYY'),
		recpt_refund_ind,
		added_by_id,
		cash_counter_code,
		slmt_type_code,
		short_desc,
		sum(doc_amt) doc_amt
	from
			(select	cash_counter_facility_id,
				trunc(doc_date) doc_date,
				recpt_refund_ind,
				a.added_by_id,
				cash_counter_code,
				a.slmt_type_code,
				b.short_desc,
				b.cash_slmt_flag,
				doc_amt
			from 	BL_RECEIPT_REFUND_HDRDTL_VW a,bl_slmt_type b
			where   cash_counter_facility_id = :nd_cash_counter_facility
			and 	trunc(doc_date) 
			        between to_date(nvl(:nd_fm_doc_date,'01/01/1401'),'DD/MM/YYYY') 
			        and nvl(to_date(:nd_to_doc_date,'DD/MM/YYYY'),sysdate)			
		        and 	cash_counter_code between nvl(:nd_fm_cash_counter,'!!')
				and nvl(:nd_to_cash_counter,'~~')
			and     recpt_refund_ind = decode(:nd_rec_ref,'R','R','F','F',recpt_refund_ind)		
		        and	((:excl_credit_card_trn = 'Y' and a.cash_slmt_flag <> 'A') 
			          or :excl_credit_card_trn = 'N')
		        and a.slmt_type_code=b.slmt_type_code
			union all
			select  a.cash_counter_facility_id,
				trunc(b.cancelled_date) doc_date,
				a.recpt_refund_ind,
				a.added_by_id,
				a.cash_counter_code,
				a.slmt_type_code,
				c.short_desc,
				c.cash_slmt_flag,
				-doc_amt
			from 	BL_RECEIPT_REFUND_HDRDTL_VW a,bl_cancelled_bounced_trx b, bl_slmt_type c
			where 	a.doc_type_code=b.doc_type_code
			and	a.doc_number = b.doc_number
			and 	a.slmt_type_code=c.slmt_type_code
			and     a.cash_counter_facility_id = :nd_cash_counter_facility
			and 	trunc(b.cancelled_date) 
			        between to_date(nvl(:nd_fm_doc_date,'01/01/1401'),'DD/MM/YYYY') 
				and nvl(to_date(:nd_to_doc_date,'DD/MM/YYYY'),sysdate)			
		        and 	a.cash_counter_code between nvl(:nd_fm_cash_counter,'!!')
				and nvl(:nd_to_cash_counter,'~~')
			and     a.recpt_refund_ind = decode(:nd_rec_ref,'R','R','F','F',a.recpt_refund_ind)		
		        and	((:excl_credit_card_trn = 'Y' and a.cash_slmt_flag <> 'A') or :excl_credit_card_trn = 'N')) 
		where	recpt_refund_ind = decode(:nd_rec_ref,'R','R','F','F',recpt_refund_ind)		
		and     cash_counter_facility_id = :nd_cash_counter_facility
		and 	trunc(doc_date) 
		        between to_date(nvl(:nd_fm_doc_date,'01/01/1401'),'DD/MM/YYYY') 
			and nvl(to_date(:nd_to_doc_date,'DD/MM/YYYY'),sysdate)
		and 	cash_counter_code between nvl(:nd_fm_cash_counter,'!!')
			and nvl(:nd_to_cash_counter,'~~')
		and	((:excl_credit_card_trn = 'Y' and cash_slmt_flag <> 'A') or :excl_credit_card_trn = 'N')		
		group by recpt_refund_ind,doc_date,to_char(doc_date,'DD/MM/YYYY'),added_by_id,cash_counter_code,slmt_type_code,short_desc
		order by recpt_refund_ind desc,doc_date;
		
	EXEC SQL DECLARE BL_SLMT_CUR CURSOR FOR 
		Select slmt_type_code,short_desc
		from bl_slmt_type
		order by 1;
}

open_hdr() 
{

    EXEC SQL OPEN BL_RCPT_REF_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor BL_RCPT_REF_CUR",0,"");

	EXEC SQL OPEN BL_SLMT_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor BL_SLMT_CUR",0,"");
}

fetch_hdr()
{
bl_doc_date.arr[0]				= '\0';
bl_cash_counter_code.arr[0]		= '\0';
bl_user.arr[0]					= '\0';
bl_slmt_type_code.arr[0]		= '\0';
bl_slmt_type_desc.arr[0]		= '\0';


bl_doc_date.len					= 0;
bl_cash_counter_code.len		= 0;
bl_user.len						= 0;
bl_slmt_type_code.len			= 0;
bl_slmt_type_desc.len			= 0;


bl_return_amt	= 0;
  
      EXEC SQL FETCH BL_RCPT_REF_CUR
               INTO :tmp_date,
					:bl_doc_date,
					:bl_recpt_refund_ind,
					:bl_user,
					:bl_cash_counter_code,
					:bl_slmt_type_code,
					:bl_slmt_type_desc,
					:bl_return_amt;
					
       if (OERROR)
            err_mesg("FETCH failed on cursor BL_RCPT_REF_CUR",0,"");


bl_doc_date.arr[bl_doc_date.len]							= '\0';
bl_cash_counter_code.arr[bl_cash_counter_code.len]			= '\0';
bl_user.arr[bl_user.len]									= '\0';
bl_slmt_type_code.arr[bl_slmt_type_code.len]				= '\0';
bl_slmt_type_desc.arr[bl_slmt_type_desc.len]				= '\0';

    return(LAST_ROW?0:1);
}



print_detail()
{

  while(fetch_hdr())
  {
  
    sno++;
    if(first)
	 {
     strcpy(old_doc_date.arr,bl_doc_date.arr);
	 old_doc_date.len=strlen(old_doc_date.arr);
	 first = 0;
	 print_head();
	 }
    if(strcmp(old_doc_date.arr,bl_doc_date.arr) != 0 )
	  print_date_total();
   
	check_page_end(1,0);   
  
	calc_collection();

	if(strcmp(old_doc_date.arr,bl_doc_date.arr) != 0 || 
	   strcmp(old_user.arr,bl_user.arr) != 0 ||
	   strcmp(old_cash_counter_code.arr,bl_cash_counter_code.arr) != 0)
        {
	     fprintf(fp," %-12s %-30s %-3s %-6s",
					bl_doc_date.arr,
					bl_user.arr,
                    bl_cash_counter_code.arr," ");
    
    	print_formated(bl_collection_amt);
        }
    else
    	fprintf(fp,"%-73s"," ");

	fprintf(fp," %-15.15s ",bl_slmt_type_desc.arr);
    print_formated(bl_return_amt);
					
	fprintf(fp,"\n");
    lctr++;
	
	calc_date_total();

    strcpy(old_doc_date.arr,bl_doc_date.arr);
	old_doc_date.len=strlen(old_doc_date.arr);
    strcpy(old_user.arr,bl_user.arr);
	old_user.len=strlen(old_user.arr);
    strcpy(old_cash_counter_code.arr,bl_cash_counter_code.arr);
	old_cash_counter_code.len=strlen(old_cash_counter_code.arr);
   }
  print_date_total();
	
}   


print_date_total()
{
 int n;
 int nCtr = 0;
 date_total=0;
 //print_head();
        for(n=1;n<=tot_rec_in_slmt;n++)
		{
		//disp_message(ERR_MESG,"in this");
			if( slmt_tot[n] != 0)
			{//disp_message(ERR_MESG,"in if");
			check_page_end(1,0);
				if (nCtr == 0)
				  {
				   fprintf(fp,"\n%-20s %51s  "," ",loc_legend[19]);
				   nCtr = 1;
				  }
				else
				  fprintf(fp,"\n%74s"," ");
				  
			fprintf(fp,"%-15.15s ",slmt_desc[n]);
			print_formated(slmt_tot[n]);
			date_total = date_total + slmt_tot[n];
		      }
		}

	 if (date_total!=0) 
  {	
		lctr+=1;
		check_page_end(3,0);
		fprintf(fp,"\n%90s---------------"," ");
		fprintf(fp,"\n%90s"," ");
		print_formated(date_total);
		fprintf(fp,"\n%90s---------------\n"," ");
		lctr+=3;
		initialize_slmt_tot();
		if (bl_doc_date.arr[0] !='\0')
		{
		fprintf(fp,"\f");
		print_head();
		}
  }
}

initialize_slmt_tot()
{
       for(n=1;n<=tot_rec_in_slmt;n++)
		slmt_tot[n] = 0;
		date_total = 0;

}


end_of_rep()
{

	//check_page_end(3,0);
	sprintf(l_mesg,"%d",pctr);


   if (pctr == 1) 
   {
      print_head();
	 }
	fprintf(fp,"\n\n %45s   ***  END OF REPORT ***\n"," ");
	fflush(fp);
}

open_file()
{
    strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00005.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file BLR00005.lis");
       proc_exit();
    }
}

print_head()
{ 
	print_page_title();
	fprintf(fp,"--------------------------------------------------------------------------------------------------------------------------\n");

	if (bl_recpt_refund_ind =='R')
	   {
		fprintf(fp," %-12s %-30s %-8s %17s   %-16s %-18s %-15s \n"," "," "," "," ",loc_legend[11]," ",loc_legend[8]);
		fprintf(fp," %-12s %-30s %-8s %17s   %-16s %-18s %-15s \n",loc_legend[15],loc_legend[10],loc_legend[16],loc_legend[6],loc_legend[14],loc_legend[7],loc_legend[9]);
		}
    else
       {
		fprintf(fp," %-12s %-30s %-8s %17s   %-16s %-18s %-15s \n"," "," "," "," ",loc_legend[21]," ",loc_legend[8]);
		fprintf(fp," %-12s %-30s %-8s %17s   %-16s %-18s %-15s \n",loc_legend[15],loc_legend[10],loc_legend[16],loc_legend[20],loc_legend[14],loc_legend[7],loc_legend[9]);
		}
    
	fprintf(fp,"--------------------------------------------------------------------------------------------------------------------------\n");
	fflush(fp);  
	lctr = 8;
}

print_page_header()
{

	if (nd_fm_cash_counter.arr[0] == '\0') 
		strcpy(fm_cash_counter,"Lowest");
	else
		strcpy(fm_cash_counter,nd_fm_cash_counter.arr);

	if (nd_to_cash_counter.arr[0] == '\0') 
		strcpy(to_cash_counter,"Highest");
	else
		strcpy(to_cash_counter,nd_to_cash_counter.arr);

    if (nd_fm_doc_date.arr[0] == '\0')
	  strcpy(fm_doc_date,"Lowest");
    else
	  strcpy(fm_doc_date,nd_fm_doc_date.arr);

	if (nd_to_doc_date.arr[0] == '\0')
	  strcpy(to_doc_date,"Highest");
    else
	  strcpy(to_doc_date,nd_to_doc_date.arr);

fprintf(fp,"\n\n");
print_page_title();

fprintf(fp,"--------------------------------------------------------------------------------------------------------------------------\n");
//fprintf(fp,"VER : 4.1 \n\n\n\n");
fprintf(fp,"\n\n\n\n");
fprintf(fp,"           INPUT PARAMETER \n");
fprintf(fp,"           --------------- \n\n\n\n");
fprintf(fp,"				CASH COUNTER FACILITY             : %s\n\n",nd_cash_counter_facility.arr);

fprintf(fp,"				CASH COUNTER     FROM             : %s\n",fm_cash_counter);
fprintf(fp,"				                 TO               : %s\n\n",to_cash_counter);
fprintf(fp,"				DOCUMENT DATE    FROM             : %s\n",fm_doc_date);
fprintf(fp,"				                 TO               : %s\n\n",to_doc_date);
fprintf(fp,"				TRANSACTION TYPE                  : ");

	if(nd_rec_ref == 'R')
      fprintf(fp,"Receipt");
	if(nd_rec_ref == 'F')
      fprintf(fp,"Refund");
	if(nd_rec_ref == 'B')
      fprintf(fp,"Both");

fprintf(fp,"\n\n");
fprintf(fp,"				EXCLUDING CREDIT CARD TRANSACTION : %c\n\n\n",excl_credit_card_trn);
fprintf(fp,"\f");
}

print_page_title()
{
	double l_report_width;
	double l_acc_entity_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width;

	l_report_width=122;
	l_acc_entity_length = strlen(hosp_name.arr);

	//Code for Line 1
	l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2));
	fprintf(fp,"\nMDL           : BL");
	l_start_point=l_start_point-18;
	print_spaces(l_start_point);
	fprintf(fp,"%s",hosp_name.arr);
	l_comp_name_end_point=l_start_point+18+l_acc_entity_length;
	l_start_point=(l_report_width-(18+strlen(date.arr))-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s : %s\n",loc_legend[2],date.arr);

	//Code for Line 2
	if (bl_doc_date.arr[0] == '\0')
	{
	l_start_point=0;
	l_start_point=ceill((l_report_width/2)-(strlen(loc_legend[5])/2));
	fprintf(fp,"OPR           : %s",user_id.arr);
	l_start_point=l_start_point-(strlen(user_id.arr)+16);
	print_spaces(l_start_point);
	fprintf(fp,"%s",loc_legend[5]);
	l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[5]);
	l_start_point=(l_report_width-(20+strlen(date_time.arr))-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s : %s\n",loc_legend[3],date_time.arr);
	    }
	else
	{
	l_start_point=0;
	l_start_point=ceill((l_report_width/2)-((strlen(loc_legend[5])+strlen(loc_legend[23])+12)/2));
	fprintf(fp,"OPR           : %s",user_id.arr);
	l_start_point=l_start_point-(strlen(user_id.arr)+15);
	print_spaces(l_start_point);
	fprintf(fp,"%s",loc_legend[5]);
	fprintf(fp," %s",loc_legend[23]);
	fprintf(fp," %-11s",bl_doc_date.arr);
	l_comp_name_end_point=l_start_point+strlen(user_id.arr)+16+strlen(loc_legend[5])+strlen(loc_legend[23])+14;
	l_start_point=l_report_width-(19+strlen(date_time.arr))-l_comp_name_end_point;
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s : %s\n",loc_legend[3],date_time.arr);
    }
	
	

	//Code for Line 3
	l_start_point=0;
	l_start_point=ceill(l_report_width/2);
	fprintf(fp,"%-14.14s: BLR00005",loc_legend[1]);
	l_start_point=l_start_point-24;
	print_spaces(l_start_point);
	l_comp_name_end_point=l_start_point+24;
	l_start_point=(l_report_width - l_comp_name_end_point- 29);
	print_spaces(l_start_point);
	fprintf(fp," %-15.15s : %d\n",loc_legend[4],++pctr);
	
}

fill_dash(flg)
{
  int i;
  for (i=1;i<=flg;i++)
	fprintf(fp,"%s","-");
}

fetch_hosp_name()
{
    hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
	date.arr[0]		 = '\0';
    user_id.arr[0]   = '\0';
    hosp_name.len    = 0;
    date_time.len    = 0;
	date.len		 = 0;
    user_id.len      = 0;

    EXEC SQL SELECT ACC_ENTITY_NAME, 
					TO_CHAR(SYSDATE,'DD/MM/RRRR'),
					TO_CHAR(SYSDATE,'HH24:MI:SS'),
                    USER
               INTO :hosp_name, 
					:date,
					:date_time, 
					:user_id
               FROM SY_ACC_ENTITY
	          WHERE ACC_ENTITY_ID = :nd_facility;

    if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	hosp_name.arr[hosp_name.len]           = '\0';
	date_time.arr[date_time.len]           = '\0';
	date.arr[date.len]					   = '\0';
	user_id.arr[user_id.len]               = '\0';

}




print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s  ",str_amt);
    }
}                        

check_page_end(l_lead_lines, l_print_flag)
int l_lead_lines;
int	l_print_flag;
{
	if(l_print_flag==1)
		l_lead_lines=l_lead_lines+10;

	if((lctr+l_lead_lines)> 55) 
	{
		fprintf(fp,"\f");
		print_head();
		lctr = 8;
	}
}

print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}




fetch_legend_value()
{
	for(i=1;i<=300;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00005.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}


calc_collection()
{

   EXEC SQL
   select	sum(doc_amt)
   into		:bl_collection_amt
   from
			(select	cash_counter_facility_id,
				trunc(doc_date) doc_date,
				recpt_refund_ind,
				a.added_by_id,
				cash_counter_code,
				a.slmt_type_code,
				b.short_desc,
				b.cash_slmt_flag,
				doc_amt
			from 	BL_RECEIPT_REFUND_HDRDTL_VW a,bl_slmt_type b
			where   a.slmt_type_code=b.slmt_type_code
			and     recpt_refund_ind = :bl_recpt_refund_ind
			and     cash_counter_facility_id = :nd_cash_counter_facility
			and 	trunc(doc_date) = to_date(:bl_doc_date,'DD/MM/YYYY') 
			and 	a.cash_counter_code = :bl_cash_counter_code
			union all
			select  a.cash_counter_facility_id,
				trunc(b.cancelled_date) doc_date,
				a.recpt_refund_ind,
				a.added_by_id,
				a.cash_counter_code,
				a.slmt_type_code,
				c.short_desc,
				c.cash_slmt_flag,
				-doc_amt
			from 	BL_RECEIPT_REFUND_HDRDTL_VW a,bl_cancelled_bounced_trx b, bl_slmt_type c
			where 	a.doc_type_code=b.doc_type_code
			and	a.doc_number = b.doc_number
			and a.slmt_type_code=c.slmt_type_code
			and a.recpt_refund_ind = :bl_recpt_refund_ind
			and a.cash_counter_facility_id = :nd_cash_counter_facility
			and trunc(b.cancelled_date) = to_date(:bl_doc_date,'DD/MM/YYYY') 
			and a.cash_counter_code = :bl_cash_counter_code);
} 
	
fetch_slmt_cur()
{
int i=1,j=0;
int k = 1;


	while(k)
	 {
	
	 temp_slmt_type_code.arr[0] = '\0';
	 temp_slmt_type_code.len = 0;
	 temp_slmt_type_desc.arr[0] = '\0';
	 temp_slmt_type_desc.len = 0;

      EXEC SQL FETCH BL_SLMT_CUR
               INTO :temp_slmt_type_code,:temp_slmt_type_desc;
					
      if (OERROR)
            err_mesg("FETCH failed on cursor BL_SLMT_CUR",0,"");
	  if (NODATAFOUND)
           k = 0;
    
	  temp_slmt_type_code.arr[temp_slmt_type_code.len] = '\0';
	  temp_slmt_type_desc.arr[temp_slmt_type_desc.len] = '\0';
       if (k>0)
	   {
	   strcpy(slmt_code[i],temp_slmt_type_code.arr);
	   strcpy(slmt_desc[i],temp_slmt_type_desc.arr);
	   i++;
	   }
	   
	 }
	tot_rec_in_slmt = i;
}

calc_date_total()
{
 int n;
    for (n=1; n <= tot_rec_in_slmt; n++)
	 {
	    if (strcmp(slmt_code[n],bl_slmt_type_code.arr) == 0)
	    slmt_tot[n] = slmt_tot[n] + bl_return_amt;
	  }
  }

