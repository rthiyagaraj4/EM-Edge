/************************************************************************/
/* OCS MEDICOM VER 1.6                                                  */
/************************************************************************/
/* PROGRAM NAME          : RLRRSENQ                                     */
/* DESCRIPTION             : Test Results report                             */
/* AUTHOR                : S. Sheelvant                                 */
/* DATE WRITTEN          : 11-SEP-1998                                  */
/* MODIFIED BY           : S.SHEELVANT                                     */
/* MODIFIED ON             : 12-DEC-1998                                    */
/************************************************************************/

#include <stdio.h>
#include <string.h>  
//#include "gl.h"
#include "rl.h"
#define NODATAFOUND                (sqlca.sqlcode == 1403)
#define OERROR                     (sqlca.sqlcode < 0)
#define LAST_ROW                 (sqlca.sqlcode == 1403)
#define NOT_FOUND                 (sqlca.sqlerrd[2] == 0)
#define TABLE_ALREADY_EXISTS    (sqlca.sqlcode == -955)
#define RESOURCE_BUSY            (sqlca.sqlcode == -54)

#define VIEW_LOG_FILE 1
#define ONLINE_PRINTING 1
#define RESTART_INTERVAL 2
#define RESTART_TIME 500
#define INIT_MESG ""

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR nd_operating_facility_id         [5],
           nd_facility_id                    [5],
              nd_priority                        [5],
           uid_pwd                            [1320],
           d_curr_pgm_name                  [15],
           nd_file_name                     [151],
           d_user_id_pwd                    [150],
           d_next_start_date                [30],
           today                            [20],
           d_sleep_secs                        [10],
           d_cmd_line                        [200],
           d_machine_name                    [40],
           d_started_by_id                    [51],
           prg_start_date                    [35],
           er_msg                           [171],
           er_msg_num                        [1500];

    VARCHAR sy_user_id        [601],
           sy_session_id        [300],
           sy_req_date            [30],
           sy_machine_name      [600],
           sy_ws_no             [450],
           sy_rowid                [301],
           sql_stmt                [4000];


    VARCHAR d_oracle_report_yn[5];
    
    //-- 29052014 Sandeep K Gujje 29-MAY-2014
    VARCHAR nd_result_printed_date[21],         
            rl_report_entire_spec_yn[2],
            rl_note_type_test[50];
    //-----------
    
    //-- 22072014 Sandeep K Gujje 24-JUL-2014
    VARCHAR l_customer_id    [10];    

    int v_count = 0;

        int l_count = 0;
   int     no_of_dtl_recs = 0,
           d_time_interval =0,
           d_starting_time =0,
           er_msg_type = 0;

    int l_restart_time = 0;

/***** ADDED ON 05/11/2002 BACKGROUND PROCESS MONITOR **********/
    int p_count = 0;
/***** UPTO HERE ADDED ON 05/11/2002 BACKGROUND PROCESS MONITOR **********/

    VARCHAR    language_id            [5];
    
/************* ADDED ON 04/01/2013 AGAINST CA NOTE HTML PRINTING *************/    
    VARCHAR d_report_tool    [5],
        d_patient_id        [50],
        d_specimen_no        [30],
        d_section_code        [5],
        d_vdb_user            [100],
        d_password            [200],
        d_connect_string    [2000],
        d_facility_id        [5],
        d_param7            [10],
        d_param8            [20],
        d_param30            [10],
	BVServicedRequestID	[32]; //Ravi Shankar, 07/10/2016, IN-62208

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include<winproc.h>

DWORD sleep_sec = 0;


int err_flag = 0;

int request_count = 0;
char err_num[10];
char string_var[2000];

/************* ADDED ON 04/01/2013 AGAINST CA NOTE HTML PRINTING *************/    
l_command_line[3000];


void proc_main(argc,argv)
char *argv[];
int argc;
{
   
   int rec_found = 0;

   if (argc < 6)
   {
      //ins_message(ERR_MESG,"Usage : rlrrsenq uid/password start_date");
      disp_message(ERR_MESG,"Usage : rlrrsenq uid/password start_date");
      proc_exit();
   }

   strcpy(d_user_id_pwd.arr,argv[1]);

   strcpy(g_pgm_id,"RLRRSENQ");

   strcpy(d_curr_pgm_name.arr,g_pgm_id); 
   d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

/*********** 21.06.2003   
   strcpy(prg_start_date.arr,argv[2]);
   prg_start_date.len = strlen(argv[2]);  
***************/  

   strcpy(nd_facility_id.arr, argv[4]);
   nd_facility_id.len = strlen(nd_facility_id.arr);

   strcpy(nd_priority.arr, argv[5]);
   nd_priority.len = strlen(nd_priority.arr);

   //Ravi Shankar, 07/10/2016, IN-62208
   strcpy(BVServicedRequestID.arr,argv[6]);
   BVServicedRequestID.len = strlen(BVServicedRequestID.arr);
   /////////

   
   if(sql_connect(argv[1]) == -1)
   {
      //ins_message(ORA_MESG,"Error in connecting to Oracle");
      disp_message(ORA_MESG,"Error in connecting to Oracle rlrrsenq");
      proc_exit();
   }
   
   set_meduser_role();
   
   //--22072014 Sandeep K Gujje 24-JUL-2014
   get_site_customer_id();
   
   //--disp_message(ERR_MESG, l_customer_id.arr);

    if (OERROR)
         ins_message(ORA_MESG,"SET ROLE issue");


/********* This part added for globalisation on 29.11.2012 by Srinivasarao V***************************/
    strcpy(language_id.arr,l_language_id.arr);
    language_id.len =l_language_id.len;
    language_id.arr[l_language_id.len]='\0';
/********* This part added for globalisation ***************************/
         
         
   rec_found = get_sleep_secs();

   if(rec_found)
   {

      process_rec();
   }

   EXEC SQL COMMIT WORK RELEASE;

   if (OERROR)
     ins_message(ORA_MESG,"ROLLBACK WORK RELEASE failed");

   return;
}

get_restart_time()
{
    
     l_restart_time = 0;

/****************** 21.06.2003 since this field not available in rl_param

     EXEC SQL SELECT NVL(TO_NUMBER(TO_CHAR(restart_time, 'HH24MI')), 500)
     INTO :l_restart_time
     FROM RL_PARAM;
************************/  
     if (OERROR)
        ins_message(ORA_MESG,"Error Found in RL_PARAM 2");

      if(NOT_FOUND) 
         ins_message(ORA_MESG,"Select failed on RL_PARAM 2 --> No Data Found");


 }
/*------------------------------------------------------*/
get_sleep_secs_old()
{
    d_sleep_secs.arr[0] = '\0'; 
    d_machine_name.arr[0] = '\0';
    d_started_by_id.arr[0] = '\0';
    d_next_start_date.arr[0]='\0';

    d_sleep_secs.len        = 0;
    d_machine_name.len        = 0;
    d_started_by_id.len        = 0;
    d_next_start_date.len    = 0;

    _flushall();

    get_restart_time();

/********* added on 19.06.2003 *************/

    EXEC SQL
     SELECT processing_interval
       INTO :d_sleep_secs
       FROM SY_PROG_ID
      WHERE PGM_ID = 'RLRRSENQ';

/*************** upto here **************/


    EXEC SQL  SELECT    floor((sysdate-started_date)*24*60),
                        machine_name,
                        started_by_id,
                        to_char(sysdate,'ddmmyyhh24miss'),
                        to_number(to_char(sysdate,'hh24mi'))
                INTO    :d_time_interval,
                        :d_machine_name,
                        :d_started_by_id,
                        :d_next_start_date,
                        :d_starting_time
                FROM    SY_BG_PROCESS_CONTROL
                WHERE    OPERATING_FACILITY_ID = :nd_facility_id
                AND     PGM_ID = 'RLRRSENQ'
                AND        STARTED_DATE IS NOT NULL;

///////// 21.06.2003 AND        STARTED_DATE = TO_DATE(:prg_start_date,    'DDMMYYHH24MISS');

    d_sleep_secs.arr[d_sleep_secs.len] = '\0';
    d_machine_name.arr[d_machine_name.len] = '\0';
    d_started_by_id.arr[d_started_by_id.len] = '\0';
    d_next_start_date.arr[d_next_start_date.len]='\0';

    
//     if((d_time_interval > RESTART_INTERVAL) && (d_starting_time == RESTART_TIME))

//    if (((d_time_interval > RESTART_INTERVAL) && (d_starting_time == l_restart_time)) || request_count > 25)

    if ((d_time_interval > RESTART_INTERVAL) && (d_starting_time == l_restart_time))
    {
        
        request_count = 1;
        /***********************************
          Commented for batch compilation error

         EXEC SQL
            INSERT INTO SY_BG_PROCESS_CONTROL
            VALUES(    :nd_facility_id,
                    'RLRRSENQ',
                    :d_machine_name,
                    :d_started_by_id,
                    TO_DATE(:d_next_start_date, 'ddmmyyhh24miss'),
                    :nd_priority,
                    null);
          ***************************************/ 
    
          if (OERROR)
          {
                    disp_message(ORA_MESG,"insert failed");
          }
 

        EXEC SQL
            DELETE FROM SY_BG_PROCESS_CONTROL 
                WHERE PGM_ID='RLRRSENQ'
                AND STARTED_DATE IS NOT NULL;

/*************** 21.06.2003
                AND STARTED_DATE=TO_DATE(:prg_start_date,
                                   'DDMMYYHH24MISS');
*****************/

        EXEC SQL COMMIT WORK;


        d_cmd_line.arr[0] = '\0';
        d_cmd_line.len      = 0;

        strcpy(d_cmd_line.arr,"RLRRSENQ");
        strcat(d_cmd_line.arr," ");
        strcat(d_cmd_line.arr,d_user_id_pwd.arr);
        strcat(d_cmd_line.arr," ");
        strcat(d_cmd_line.arr,d_next_start_date.arr);


        d_cmd_line.arr[strlen(d_cmd_line.arr)] = '\0';        

/******* IN WINDOWS 2000 SYSTEM COMMAND WILL NOT GIVE BACK THE CONTROL *****/    
//        system(d_cmd_line.arr);


        WinExec(d_cmd_line.arr, SW_SHOWNORMAL);            
        exit(0);

        
    }

    if(NOT_FOUND) 
    {
          return FALSE;
    }
    else 
    {
        d_sleep_secs.arr[d_sleep_secs.len] = '\0';
        sleep_sec = (DWORD) atol(d_sleep_secs.arr);
        return TRUE;
    }    
}
/*----------------------------------------------------------*/
get_sleep_secs()
{
    d_sleep_secs.arr[0] = '\0'; 
    d_machine_name.arr[0] = '\0';
    d_started_by_id.arr[0] = '\0';
    d_next_start_date.arr[0]='\0';

    d_sleep_secs.len        = 0;
    d_machine_name.len        = 0;
    d_started_by_id.len        = 0;
    d_next_start_date.len    = 0;

    _flushall();


/********* added on 19.06.2003 *************/

    EXEC SQL
     SELECT processing_interval
       INTO :d_sleep_secs
       FROM SY_PROG_ID
      WHERE PGM_ID = 'RLRRSENQ';

/*************** upto here **************/


    EXEC SQL  SELECT    floor((sysdate-started_date)*24*60),
                        machine_name,
                        started_by_id,
                        to_char(sysdate,'ddmmyyhh24miss'),
                        to_number(to_char(sysdate,'hh24mi'))
                INTO    :d_time_interval,
                        :d_machine_name,
                        :d_started_by_id,
                        :d_next_start_date,
                        :d_starting_time
                FROM    SY_BG_PROCESS_CONTROL
                WHERE    OPERATING_FACILITY_ID = :nd_facility_id
                AND     PGM_ID = 'RLRRSENQ'
                AND        STARTED_DATE IS NOT NULL
		AND	SERVICED_REQUESTS = :BVServicedRequestID;	//Ravi Shankar, 07/10/2016, IN-62208

    d_sleep_secs.arr[d_sleep_secs.len] = '\0';
    d_machine_name.arr[d_machine_name.len] = '\0';
    d_started_by_id.arr[d_started_by_id.len] = '\0';
    d_next_start_date.arr[d_next_start_date.len]='\0';

    

    if(NOT_FOUND) 
    {
          return FALSE;
    }
    else 
    {
        d_sleep_secs.arr[d_sleep_secs.len] = '\0';
        sleep_sec = (DWORD) atol(d_sleep_secs.arr);
        return TRUE;
    }    

   if (OERROR)
         ins_message(ORA_MESG,"Get Sleep Secs failed");

}

/*----------------------------------------------------------*/
process_rec()
{  
   int i = 0;
   int j = 0,corr_stat = 0;
   int sy_prg_param_found =0;
   int record_exist = 0;
   char test[11],group_test[11];
   /* 12022014 Sandeep K Gujje 12-FEB-2014 */
   FILE *ofp;
   char filename[500];
    /* ----------- */   
   _flushall();

   request_count = 31;

   while (get_sleep_secs())
   { 
  
  
// time being it is commented against SCF MF-SCF-239 on 18/06/09   
//        insert_process_monitor();

       _flushall(); 

  
       EXEC SQL SELECT COUNT(1)
       INTO :v_count
       FROM SY_REPORT_GENERATE_REQUEST
       WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,
                                                                  :nd_facility_id)
       AND pgm_id = 'RLRRSENQ'
       AND request_status IS NULL
       //Ravi Shankar, 07/10/2016, IN-62208
       AND     (:BVServicedRequestID = '*A'
	        OR (:BVServicedRequestID = 'O' 
		AND WS_NO IN (SELECT WS_NO FROM RL_RESULT_PRINT_OP_WSNO WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)) )
		OR (:BVServicedRequestID = 'N' 
		AND WS_NO NOT IN (SELECT WS_NO FROM RL_RESULT_PRINT_OP_WSNO WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)) )
		   );
	//////////////
/********** 23.06.2003 added the following to get the session id **************/

       if (v_count > 0)
       {

            check_oracle_report_yn();
            
            //--disp_message(ERR_MESG, d_oracle_report_yn.arr);
            
            //--disp_message(ERR_MESG, l_customer_id.arr);
            
            if (strcmp(d_oracle_report_yn.arr, "Y") == 0)
            {
                
                sm_db_info_dtls();
                declare_html_curs();
                while(fetch_html_curs()) 
                {
                    //-- 29052014 Sandeep K Gujje 29052014 -- Added to avoid generating .bat file everytime 
                    //-- generating only when html result available for the specimen
                    open_note_type();
                    
                    while(fetch_note_type())
                    {
                    //------------
                        
                        //disp_message(ERR_MESG, "fetch_note_type loop"); 
                        
                        strcpy(l_command_line, "");
                        
                        sprintf(l_command_line, "java PrintFile %s %s %s RLRSENQE %s %s %s %s %s %s %s %s %s %s %s",
                                            d_specimen_no.arr, d_facility_id.arr, d_patient_id.arr, 
                                            d_section_code.arr, language_id.arr, d_param7.arr, d_param8.arr, d_param30.arr,
                                            sy_user_id.arr, d_vdb_user.arr, d_password.arr, d_connect_string.arr, 
                                            sy_ws_no.arr, sy_session_id.arr);
                                            
                        /* -- 12022014 Sandeep K Gujje 12-FEB-2014 */
                        /* -- writing l_command_line to bat file and executing the bat file to run java file since when we run directly the cmd is not taking the class path set in print server  */
                        
                        sprintf(filename, "%s%s%s%s%s%s", "C:\\eHIS\\Reports\\", d_facility_id.arr, d_specimen_no.arr, "_", sy_session_id.arr, ".bat");
                                            
                        ofp = fopen(filename,"w");  
                            
                        if (ofp==NULL)
                        {
                            sprintf(string_var,"File Opening-w Error");
                            ins_message(ORA_MESG, string_var);
                            return 0;
                        }    
                        
                        fprintf(ofp,"SET CLASSPATH=O:\\PROC;O:\\PROC\\ojdbc6.jar;"); 
                        fprintf(ofp,"\n");
                        fprintf(ofp, "%s", l_command_line);
                        fprintf(ofp,"\n");
                        
                        fclose(ofp);
                        
                        sprintf(l_command_line, "cmd /c %s", filename);

                        /* ------------ */                                            

                        //disp_message(ERR_MESG, l_command_line);

                        // Frame the string for Java arguments
                        
                        // call the java program
                        WinExec(l_command_line, SW_HIDE);

						//commented belwo stmt and moved to after rl_submit_report for 70076
						
                       /*EXEC SQL UPDATE SY_PROG_PARAM
                                   SET PARAM25 = 'P'
                                 WHERE ROWID = :sy_rowid;*/

                       if(OERROR) 
                          ins_message(ERR_MESG,"Failed in Update Sy_prog_param for param25 with P");       

                        EXEC SQL COMMIT;
                    
                    }
                    
                    //-- 29052014 Sandeep K Gujje 29-MAY-2014
                    close_note_type();
                    //-------------
                }
                
                close_html_curs();
                
                // -- 22072014 Sandeep K Gujje 22-JUL-2014 Commented 
                // -- }
                        
                
                d_oracle_report_yn.arr[0] = '\0';
                d_oracle_report_yn.len    = 0;

                EXEC SQL EXECUTE
                DECLARE
                        p_error_text VARCHAR2(4000);
                BEGIN
                        RL_SUBMIT_REPORT('P', NULL, NULL, 'O', NULL, NULL, NULL, 
                                        'RLRRSENQ', 'RL',
                                        :nd_facility_id, :sy_ws_no, :language_id, :d_oracle_report_yn,
                                                //Ravi Shankar, 09/08/2018, IN-68351
						//p_error_text);
						p_error_text, :BVServicedRequestID);
						///////////
						

                END;
                END-EXEC;
				
				//added for 70076
						EXEC SQL UPDATE SY_PROG_PARAM
                                   SET PARAM25 = 'P'
                                 WHERE ROWID = :sy_rowid;

                d_oracle_report_yn.arr[d_oracle_report_yn.len] = '\0';
                
               // -- 22072014 Sandeep K Gujje 22-JUL-2014 Commented and added },else if
               // -- if (strcmp(d_oracle_report_yn.arr, "Y") != 0)
           }
           else if ((strcmp(d_oracle_report_yn.arr, "Y") != 0) && (strcmp(l_customer_id.arr, "ALMO") != 0))
           {


            sy_session_id.arr[0]        = '\0';
            sy_session_id.len        = 0;

            //EXEC SQL SELECT TO_CHAR(USERENV('SESSIONID'))
            EXEC SQL SELECT USERENV('SESSIONID')
                INTO   :sy_session_id
                FROM   DUAL;

            sy_session_id.arr[sy_session_id.len]        = '\0';

            strcpy(d_cmd_line.arr,"RLRSENQ1");
            strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr,d_user_id_pwd.arr);
            strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr, sy_session_id.arr);
            strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr, sy_session_id.arr);
            strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr, nd_facility_id.arr); 
            strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr, nd_priority.arr); 
	    //Ravi Shankar, 07/10/2016, IN-62208
	    strcat(d_cmd_line.arr," ");
            strcat(d_cmd_line.arr, BVServicedRequestID.arr); 
	    //////////////
            

            ////SS disp_message(ERR_MESG, d_cmd_line.arr);

            /******** commented on 06.04.2005 
                    WinExec(d_cmd_line.arr, SW_SHOWNORMAL); 
            **************/

            _spawnlp(_P_WAIT, "RLRSENQ1", d_cmd_line.arr, NULL);                         
        }    
     }

/*******************************************
// time being it is commented against SCF MF-SCF-239 on 18/06/09   
        else     
        {
           sy_session_id.arr[0]        = '\0';
           sy_session_id.len        = 0;

           EXEC SQL SELECT COUNT(1)
           INTO :v_count
           FROM SY_REPORT_GENERATE_REQUEST
           WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,
                                        :nd_facility_id)

           AND pgm_id IN ('RLRRSENQ')
           AND NVL(request_status, 'O') = 'E';

           sy_session_id.arr[sy_session_id.len]        = '\0'; 

           if (v_count > 0 )
           {

                strcpy(d_cmd_line.arr,"RLRSENQ1"); 
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr,d_user_id_pwd.arr);
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, sy_session_id.arr);
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, sy_session_id.arr);
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, nd_facility_id.arr);
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, nd_priority.arr); 
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, "RLRRSENQ");
                strcat(d_cmd_line.arr," ");
                strcat(d_cmd_line.arr, "F");   

                _spawnlp(_P_WAIT, "RLRSENQ1", d_cmd_line.arr, NULL);

           }


        }
*****time being it is commented against SCF MF-SCF-239 on 18/06/09  ****************/



/************** NOT REQUIRED INCLUDED IN RLRSENQ1.PC *************
        else
        {
           EXEC SQL SELECT COUNT(*)
           INTO :v_count
           FROM SY_REPORT_GENERATE_REQUEST
           WHERE OPERATING_FACILITY_ID = :nd_operating_facility_id
           AND pgm_id IN ('RLRRSENQ', 'RLRSENQ1')
           AND request_status = 'E';
        
           if (v_count > 0)
           {
                declare_sy_curs();
                while(fetch_sy_curs())
                {
                    update_sy_curs();
                }    
                close_sy_curs();

                declare_sy_curs_e();
                while(fetch_sy_curs_e())
                {
                    delete_sy_curs();
                    delete_sy_prog_param();
                }    
                close_sy_curs_e();

                EXEC SQL COMMIT WORK;
           }
        }

************** upto here NOT REQUIRED INCLUDED IN RLRSENQ1.PC *************/

         _flushall();
            fflush(NULL);     
          fflush(stdin);
        
          free_variables();

         if (sleep_sec)
             Sleep(sleep_sec);

    //     request_count++;
    
        if (OERROR)
             ins_message(ORA_MESG,"Process_rec failed");
         
    }

}
/*------------------------------------------------------------*/

sql_connect(l_nd_ap_uid_pwd)
char l_nd_ap_uid_pwd[];
{
  strcpy(uid_pwd.arr,l_nd_ap_uid_pwd);
  uid_pwd.len = strlen(uid_pwd.arr);

  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}
/*-----------------------------------------------------*/
ins_message(int msg_type,char msg[])
{
   er_msg.arr[0] = '\0';
   er_msg.len = 0;
   
   er_msg_type = 0;

   EXEC SQL ROLLBACK ;

   strcpy(er_msg.arr,msg);
   er_msg.len = strlen(msg);
 
   er_msg_type = msg_type;

   sprintf(err_num,"%d",sqlca.sqlcode);

   strcpy(er_msg_num.arr, err_num);
   er_msg_num.len = strlen(er_msg_num.arr);


   EXEC SQL INSERT INTO SY_PROG_MSG
          (OPERATING_FACILITY_ID,PGM_ID,MSG_TYPE,MSG_NUM,MSG_DESC,MSG_DATE_TIME,SESSION_ID,PGM_DATE)
   VALUES 
          //(DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)
          (:nd_facility_id
            ,'RLRRSENQ',:er_msg_type,SUBSTR(:er_msg_num,1,6), :er_msg, SYSDATE, :sy_session_id,
           :sy_req_date);

   err_flag = 1;

   EXEC SQL COMMIT;



}
/*-----------------------------------------------------*/
/*------------------------------------------------------------*/
insert_process_monitor()
{
    
    p_count = 0;


    EXEC SQL SELECT COUNT(1)
             INTO :p_count
             FROM RL_ANALYZER_PROGRAMS_LOG
             WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,
                                        :nd_facility_id)
             AND analyzer_name = 'RLRRSENQ';

    if (p_count == 0)
    {
        EXEC SQL INSERT INTO RL_ANALYZER_PROGRAMS_LOG
                    (operating_facility_id,analyzer_name, machine_name, last_run_at,
                    ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID)
                 VALUES
                    //(DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)
                    (:nd_facility_id
                            ,'RLRRSENQ',:d_machine_name, SYSDATE,
                     sys_context('USERENV','IP_ADDRESS'),:nd_operating_facility_id,
                     sys_context('USERENV','IP_ADDRESS'),:nd_operating_facility_id);
    }
    else
    {
        EXEC SQL UPDATE RL_ANALYZER_PROGRAMS_LOG
                 SET last_run_at = SYSDATE,
                     machine_name = :d_machine_name
                 WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,
                                                                        :nd_facility_id)
                 AND analyzer_name = 'RLRRSENQ';    

    }

    EXEC SQL COMMIT WORK;   

}
/*------------------------------------------------------------*/
free_variables()
{
          free(sy_user_id.arr);
          free(sy_session_id.arr);
          free(sy_req_date.arr);
          free(sy_machine_name.arr);
          free(sy_ws_no.arr);
          free(sy_rowid.arr);

          free(uid_pwd.arr);
          free(d_curr_pgm_name.arr);
          free(nd_file_name.arr);
          free(d_user_id_pwd.arr);
          free(d_next_start_date.arr);
          free(today.arr);
          free(d_cmd_line.arr);
             free(d_machine_name.arr);
          free(d_started_by_id.arr);
          free(prg_start_date.arr);
          free(er_msg.arr);


}
/*-----------------------------------------------------*/
check_oracle_report_yn()
{

    d_report_tool.arr[0]        = '\0';
    d_report_tool.len            = 0;
    
    EXEC SQL SELECT NVL(REPORT_TOOL_BM, 'C')
            INTO :d_report_tool
            FROM SM_REPORT
            WHERE MODULE_ID = 'RL'
           AND REPORT_ID = 'RLRRSENQ';
     
    d_report_tool.arr[d_report_tool.len]    =     '\0';
    
     if (NODATAFOUND);

            d_oracle_report_yn.arr[0] = '\0';
            d_oracle_report_yn.len    = 0;
     
     if (strcmp(d_report_tool.arr, "R") == 0 )
        strcpy(d_oracle_report_yn.arr, "Y");
     else
        strcpy(d_oracle_report_yn.arr, "N");
    
    d_oracle_report_yn.len = strlen(d_oracle_report_yn.arr);
    
}


/*-----------------------------------------------------*/
declare_html_curs()
{

    EXEC SQL DECLARE RL_PRINT_HTML_CURS CURSOR FOR
        SELECT SY_REPORT_GENERATE_REQUEST.session_id,
                SY_REPORT_GENERATE_REQUEST.ws_no,
                SY_REPORT_GENERATE_REQUEST.user_id, 
                NVL(SY_PROG_PARAM.param7, '~'), 
                NVL(SY_PROG_PARAM.param8, '~!'),
                NVL(SY_PROG_PARAM.param30, '1'),
                SY_PROG_PARAM.param1 AS patient_id, SY_PROG_PARAM.param2 AS specimen_no, 
                SY_PROG_PARAM.param5 AS section_code,
                SY_REPORT_GENERATE_REQUEST.operating_facility_id,
                SY_PROG_PARAM.ROWID 
        FROM SY_REPORT_GENERATE_REQUEST, SY_PROG_PARAM
        WHERE SY_REPORT_GENERATE_REQUEST.OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',
                            SY_REPORT_GENERATE_REQUEST.OPERATING_FACILITY_ID,
                                :nd_facility_id)
        AND SY_REPORT_GENERATE_REQUEST.pgm_id = 'RLRRSENQ'
        AND SY_REPORT_GENERATE_REQUEST.operating_facility_id = SY_PROG_PARAM.operating_facility_id
        AND SY_REPORT_GENERATE_REQUEST.pgm_id = SY_PROG_PARAM.pgm_id
        AND SY_REPORT_GENERATE_REQUEST.session_id = SY_PROG_PARAM.session_id
        AND TO_CHAR(SY_REPORT_GENERATE_REQUEST.request_date, 'DDMMYYHH24MISS') = SY_PROG_PARAM.pgm_date
        AND SY_REPORT_GENERATE_REQUEST.request_status IS NULL
        AND SY_PROG_PARAM.param25 IS NULL
	//Ravi Shankar, 09/08/2018, IN-68351
       AND     (NVL(:BVServicedRequestID,'*A') = '*A'
	        OR (:BVServicedRequestID = 'O' 
		AND SY_REPORT_GENERATE_REQUEST.WS_NO IN (SELECT WS_NO FROM RL_RESULT_PRINT_OP_WSNO WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)) )
		OR (:BVServicedRequestID = 'N' 
		AND SY_REPORT_GENERATE_REQUEST.WS_NO NOT IN (SELECT WS_NO FROM RL_RESULT_PRINT_OP_WSNO WHERE OPERATING_FACILITY_ID = DECODE(:nd_facility_id,'*A',OPERATING_FACILITY_ID,:nd_facility_id)) )
		   );
	//////////////

        
    EXEC SQL OPEN RL_PRINT_HTML_CURS;

    if (RESOURCE_BUSY)
    {
        ins_message(ORA_MESG,"OPEN failed resource busy RL_PRINT_HTML_CURS");
    }

    if (OERROR)
    {
         ins_message(ORA_MESG,"OPEN failed on cursor RL_PRINT_HTML_CURS");
    }        

}

/*-----------------------------------------------------*/
close_html_curs()
{
 
 
    EXEC SQL CLOSE RL_PRINT_HTML_CURS;


    if (RESOURCE_BUSY)
    {
        ins_message(ORA_MESG,"CLOSE failed resource busy RL_PRINT_HTML_CURS");
    }

    if (OERROR)
    {
         ins_message(ORA_MESG,"CLOSE failed on cursor RL_PRINT_HTML_CURS");
    }


}

/*-----------------------------------------------------*/
fetch_html_curs()
{
    d_patient_id.arr[0]              = '\0';
    d_specimen_no.arr[0]          = '\0';
    d_section_code.arr[0]          = '\0';
    d_param7.arr[0]                  = '\0';
    d_param8.arr[0]                  = '\0';
    d_param30.arr[0]              = '\0';
    d_facility_id.arr[0]          = '\0';
    
    
    sy_session_id.arr[0]          = '\0';
    sy_ws_no.arr[0]                  = '\0';
    sy_user_id.arr[0]              = '\0';
  
    sy_rowid.arr[0]                  = '\0';
        
    d_patient_id.len                    = 0;
    d_specimen_no.len                    = 0;
    d_section_code.len                    = 0;
    d_param7.len                        = 0;
    d_param8.len                        = 0;
    d_param30.len                        = 0;
    d_facility_id.len                    = 0;
  
    sy_session_id.len                    = 0;
    sy_ws_no.len                        = 0;
    sy_user_id.len                        = 0;

    sy_rowid.len                        = 0;

    EXEC SQL FETCH RL_PRINT_HTML_CURS
              INTO :sy_session_id, :sy_ws_no, :sy_user_id,
                :d_param7, :d_param8, :d_param30,
                :d_patient_id, :d_specimen_no, :d_section_code, :d_facility_id,:sy_rowid;



    if (OERROR)
        ins_message(ORA_MESG,"FETCH failed on cursor RL_PRINT_HTML_CURS");

    d_patient_id.arr[d_patient_id.len]                            = '\0';
    d_specimen_no.arr[d_specimen_no.len]                        = '\0';
    d_section_code.arr[d_section_code.len]                        = '\0';
    d_param7.arr[d_param7.len]                                    = '\0';
    d_param8.arr[d_param8.len]                                    = '\0';
    d_param30.arr[d_param30.len]                                = '\0';    
    d_facility_id.arr[d_facility_id.len]                        = '\0';
    
    sy_session_id.arr[sy_session_id.len]                        = '\0';
    sy_ws_no.arr[sy_ws_no.len]                                    = '\0';
    sy_user_id.arr[sy_user_id.len]                                = '\0';
    
    sy_rowid.arr[sy_rowid.len]                                    = '\0';

    return (LAST_ROW?0:1);
}
/*-----------------------------------------------------*/
sm_db_info_dtls()
{
    d_vdb_user.arr[0]            = '\0';
    d_password.arr[0]            = '\0';
    d_connect_string.arr[0]        = '\0';
    
    d_vdb_user.len                = 0;
    d_password.len                = 0;
    d_connect_string.len        = 0;
    

    EXEC SQL SELECT user_id, app_password.decrypt(password), connect_string 
        INTO :d_vdb_user, :d_password, :d_connect_string
        FROM SM_DB_INFO;
        
    if (NODATAFOUND);

    if (OERROR)
        ins_message(ORA_MESG,"SELECT failed on cursor SM_DB_INFO");

    
    d_vdb_user.arr[d_vdb_user.len]                = '\0';
    d_password.arr[d_password.len]                = '\0';
    d_connect_string.arr[d_connect_string.len]    = '\0';
    
}
//-- 29052014 Sandeep K Gujje 29-MAY-2014 -- Added open_note_type ,fetch_note_type ,close_note_type  , set_printed_date_time functions
/*-----------------------------------------------------*/
open_note_type()
{
    //disp_message(ERR_MESG,"open_note_type");
    
    rl_report_entire_spec_yn.arr[0] = '\0';
    rl_report_entire_spec_yn.len    = 0;
    
    //disp_message(ERR_MESG, d_section_code.arr);
    //disp_message(ERR_MESG, d_facility_id.arr);
    
    EXEC SQL SELECT NVL(report_entire_spec_yn,'N')
            INTO :rl_report_entire_spec_yn
            FROM RL_SECTION_CTL
            WHERE section_code = :d_section_code
            AND operating_facility_id = :d_facility_id;

    rl_report_entire_spec_yn.arr[rl_report_entire_spec_yn.len]    = '\0';
    
    //disp_message(ERR_MESG, rl_report_entire_spec_yn.arr); 
    set_printed_date_time();

    EXEC SQL DECLARE RL_NOTE_TYPE_CUR CURSOR FOR
        SELECT test_code 
        FROM  RL_OLE_RESULT_TEXT
        WHERE patient_id = :d_patient_id
        AND specimen_no = TO_NUMBER(:d_specimen_no)
        AND operating_facility_id = :d_facility_id
        AND group_test_code IN 
                (SELECT test_code 
                FROM RL_REQUEST_DETAIL
                WHERE patient_id = :d_patient_id
                AND specimen_no = TO_NUMBER(:d_specimen_no)
                AND operating_facility_id = :d_facility_id
                AND NVL(cancelled_yn, 'N') <> 'Y'                     
                AND (NVL(result_status, 'O') IN ('R', 'P')
                        OR (:rl_report_entire_spec_yn= 'N' AND 
                               RESULT_PRINTED_DATE = to_date(:nd_result_printed_date,'DD/MM/YYYY HH24:MI:SS') )
                        OR (test_code in (SELECT test_code 
                                        FROM RL_TEST_CODE
                                        WHERE  NVL(profile_yn, 'N') = 'Y'
                                        AND    NVL(group_test_yn, 'N') = 'Y'
                            )  
                AND ( NVL(result_status,'O') = 'O' 
                        OR (NVL(result_status,'O') IN ('A') AND released_date IS NOT NULL))
                    )
                        OR (NVL(preliminary_release_yn,'N') = 'Y' AND NVL(result_status,'O') IN ('A')) 
                    )
                )
        AND test_code in (SELECT test_code 
                          FROM RL_TEST_CODE
                          WHERE  NVL(inhibit_report_yn, 'N') <> 'Y'
                          )  
		AND ROWNUM=1 //added for MO-CRF-20102.5(70262)
        ORDER BY test_code;        
    
    //disp_message(ERR_MESG, "after declaring cursor"); 


    EXEC SQL OPEN RL_NOTE_TYPE_CUR;
    
    //disp_message(ERR_MESG, "cursor opened"); 

    if (RESOURCE_BUSY)
    {
        ins_message(ORA_MESG,"OPEN failed resource busy RL_NOTE_TYPE_CUR");
    }

    if (OERROR)
    {
         ins_message(ORA_MESG,"OPEN failed on cursor RL_NOTE_TYPE_CUR");
    }


}

close_note_type()
{
 
    //disp_message(ERR_MESG, "close_note_type"); 
    EXEC SQL CLOSE RL_NOTE_TYPE_CUR;
    //disp_message(ERR_MESG, "closed close_note_type"); 

    if (RESOURCE_BUSY)
    {
        ins_message(ORA_MESG,"CLOSE failed resource busy RL_NOTE_TYPE_CUR");
    }

    if (OERROR)
    {
         ins_message(ORA_MESG,"CLOSE failed on cursor RL_NOTE_TYPE_CUR");
    }


}


fetch_note_type()
{
    //disp_message(ERR_MESG, "fetch_note_type"); 
    rl_note_type_test.arr[0]              = '\0';
    rl_note_type_test.len                    = 0;
  

    EXEC SQL FETCH RL_NOTE_TYPE_CUR
              INTO :rl_note_type_test;
              
    //disp_message(ERR_MESG, "after fetched fetch_note_type"); 



    if (OERROR)
        ins_message(ORA_MESG,"FETCH failed on cursor RL_NOTE_TYPE_CUR");

    rl_note_type_test.arr[rl_note_type_test.len]                            = '\0';
    
    //disp_message(ERR_MESG, "end fetch_note_type"); 
    
    return (LAST_ROW?0:1);
}

set_printed_date_time()
{
 //disp_message(ERR_MESG, "set_printed_date_time"); 
 /* Trapping the result printed date/time into a variable */
 nd_result_printed_date.arr[0] = '\0';
 nd_result_printed_date.len = 0;
 EXEC SQL SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI:SS') 
            INTO :nd_result_printed_date
            FROM DUAL;  
 nd_result_printed_date.arr[nd_result_printed_date.len] = '\0';
 
 //disp_message(ERR_MESG, nd_result_printed_date.arr); 

 return;

}

// -- 22072014 Sandeep K Gujje 24-JUL-2014
get_site_customer_id()
{
    l_customer_id.arr[0]        = '\0';
    l_customer_id.len        = 0;

    EXEC SQL SELECT NVL(customer_id, '!!')
        INTO l_customer_id
        FROM SM_SITE_PARAM;

    l_customer_id.arr[l_customer_id.len]    = '\0';

    if (NODATAFOUND);

    if (OERROR);

}
