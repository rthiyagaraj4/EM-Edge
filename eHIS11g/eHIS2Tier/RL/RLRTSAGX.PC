/* process *****************************
*  File	: RLRTSAGX.PC   
   Date Created : 17/03/2005
    
*  Ver 1.10.01 

*  Purpose : Age and Gender by Workgroup For Lab Tests
            
*  Input Parameters : 
			Command line inputs
				1. Usr_id/Password
				2. Session id
				3. Program Date
				4. Cut-off Month
				5. Range of Nationality Groups
				6. Age Group

*  Output File : RLRTSAGX.lis  
 ****************************************************************************/  

#include <stdio.h>
#include <math.h>
#include <string.h>
#include <rl.h>

#define MAX_LINES 42
#define ESC     0x1B
#define OERROR (sqlca.sqlcode < 0)
#define NODATAFOUND sqlca.sqlcode==1403
#define VER  "VER : 1.10.01\n"

/***********************************************************************/
EXEC SQL BEGIN DECLARE SECTION;

       /* increased the length all varchar variables by one to take care */
       /* for null termination */

	VARCHAR		uid_pwd			[91],

				nd_operating_facility_id [3],
			    g_facility_id [3],  //added for globalisation
			/* For Diagnosis statistics */

			d_patient_id		[11],
			d_prev_patient_id	[11],
			d_episode_type		[2],
			d_test_code			[11],

			d_sex				[2],
			d_nationality_code  [5],
			d_date_of_birth		[20],
			d_spec_regd_date_time [30],

			d_country_grp_code	[100][5],
			nd_country_grp_code	[5],
			d_country_grp_nationality [21],

			d_section_code	[5],
			d_section_desc	[41],
            v_section_code	[5],

        	d_prev_country_grp_code		[5],
			d_prev_country_grp_nat		[21],

			d_prev_workgroup_code		[5],
			d_prev_workgroup_desc		[21],

			d_trn_date_time			[17],  /* a date field */

			/* input parameters to main() */
			nd_session_id			[16],
			nd_pgm_date			[16],
			
			/* For Cut-off Month period*/
			nd_fr_preferred_date		[20], 
			nd_to_preferred_date		[20], 

			/*For Nationality Group */
			nd_fr_nationality_grp_code	[5],
			nd_to_nationality_grp_code	[5],

			nd_age_range_code [5],

			/* To get parameter Month and Year*/
			nd_monthyear			[8],
			nd_title_month			[20],

            RANGE_1_FR_LEG        [4],
			RANGE_1_TO_LEG        [4], 
            RANGE_2_FR_LEG        [4],
			RANGE_2_TO_LEG        [4], 
            RANGE_3_FR_LEG        [4],
			RANGE_3_TO_LEG        [4], 
            RANGE_4_FR_LEG        [4],
			RANGE_4_TO_LEG        [4], 
            RANGE_5_FR_LEG        [4],
			RANGE_5_TO_LEG        [4], 
            RANGE_6_FR_LEG        [4],
			RANGE_6_TO_LEG        [4], 
            RANGE_7_FR_LEG        [4],
			RANGE_7_TO_LEG        [4], 
            RANGE_8_FR_LEG        [4],
			RANGE_8_TO_LEG        [4], 
            RANGE_9_FR_LEG        [4],
			RANGE_9_TO_LEG        [4], 

            RANGE_1_FR_LEG_VAL    [20],
			RANGE_1_TO_LEG_VAL    [20], 
            RANGE_2_FR_LEG_VAL    [20],
			RANGE_2_TO_LEG_VAL    [20], 
            RANGE_3_FR_LEG_VAL    [20],
			RANGE_3_TO_LEG_VAL    [20], 
            RANGE_4_FR_LEG_VAL    [20],
			RANGE_4_TO_LEG_VAL    [20], 
            RANGE_5_FR_LEG_VAL    [20],
			RANGE_5_TO_LEG_VAL    [20], 
            RANGE_6_FR_LEG_VAL    [20],
			RANGE_6_TO_LEG_VAL    [20], 
            RANGE_7_FR_LEG_VAL    [20],
			RANGE_7_TO_LEG_VAL    [20], 
            RANGE_8_FR_LEG_VAL    [20],
			RANGE_8_TO_LEG_VAL    [20], 
            RANGE_9_FR_LEG_VAL    [20],
			RANGE_9_TO_LEG_VAL    [20], 

			RANGES_LEGEND         [20], 


            RANGE_1_FR_UNIT        [1],
			RANGE_1_TO_UNIT        [1], 
            RANGE_2_FR_UNIT        [1],
			RANGE_2_TO_UNIT        [1], 
            RANGE_3_FR_UNIT        [1],
			RANGE_3_TO_UNIT        [1], 
            RANGE_4_FR_UNIT        [1],
			RANGE_4_TO_UNIT        [1], 
            RANGE_5_FR_UNIT        [1],
			RANGE_5_TO_UNIT        [1], 
            RANGE_6_FR_UNIT        [1],
			RANGE_6_TO_UNIT        [1], 
            RANGE_7_FR_UNIT        [1],
			RANGE_7_TO_UNIT        [1], 
            RANGE_8_FR_UNIT        [1],
			RANGE_8_TO_UNIT        [1], 
            RANGE_9_FR_UNIT        [1],
			RANGE_9_TO_UNIT        [1], 

		/* for header routine */
			//d_acc_entity_name		[41],
			d_acc_entity_name		[300],
			d_user				[21],
			d_sysdate			[17],
			d_sysdate1          [17];

	VARCHAR l_translated_value  [500], //added for globalisation
			language_id [5]; //added for globalisation
	int     i; //added for globalisation

int     d_los,nd_pgm_month; 

float	 RANGE_1_FR ,
		 RANGE_1_TO ,
         RANGE_2_FR ,
		 RANGE_2_TO ,
         RANGE_3_FR ,
		 RANGE_3_TO ,
         RANGE_4_FR ,
		 RANGE_4_TO ,
         RANGE_5_FR ,
		 RANGE_5_TO ,
         RANGE_6_FR ,
		 RANGE_6_TO ,
         RANGE_7_FR ,
		 RANGE_7_TO ,
         RANGE_8_FR ,
		 RANGE_8_TO ,
         RANGE_9_FR ,
		 RANGE_9_TO ,
		 NO_OF_RANGES,
         d_age_in_days,d_age_in_months,d_age_in_years;
int		d_country_grp_counter;
long	d_country_grp_count[100];

int     l_rec_count = 0;
char	v_temp[500];
char	filename[150];
char	string_var[100];

EXEC SQL END DECLARE SECTION;
/***********************************************************************/

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

/* To get the Test Count */
long	d_age_m_0_6_days	= 0,
		d_age_f_0_6_days	= 0,
		d_age_m_7_28_days	= 0,
		d_age_f_7_28_days	= 0,
		d_age_m_30_365_days	= 0,
		d_age_f_30_365_days	= 0,
		d_age_m_1_4_years	= 0,
		d_age_f_1_4_years	= 0,
		d_age_m_5_14_years	= 0,
		d_age_f_5_14_years	= 0,
		d_age_m_15_24_years	= 0,
		d_age_f_15_24_years	= 0,
		d_age_m_25_44_years	= 0,
		d_age_f_25_44_years	= 0,
		d_age_m_45_64_years	= 0,
		d_age_f_45_64_years	= 0,
		d_age_m_65_years	= 0,
		d_age_f_65_years	= 0,
		
		d_workgroup_m_total = 0,
	    d_total_m = 0,

	    d_workgroup_f_total = 0,
	    d_total_f = 0,

		d_workgroup_grand_total = 0,
		d_grand_total = 0,

		 d_total_m_0_6_days = 0,
		 d_total_f_0_6_days = 0,
		 d_total_m_7_28_days = 0,
		 d_total_f_7_28_days = 0,
	     d_total_m_30_365_days = 0,
	     d_total_f_30_365_days = 0,
	     d_total_m_1_4_years = 0,
	     d_total_f_1_4_years = 0,
	     d_total_m_5_14_years = 0,
	     d_total_f_5_14_years = 0,
	     d_total_m_15_24_years = 0,
	     d_total_f_15_24_years = 0,
	     d_total_m_25_44_years = 0,
	     d_total_f_25_44_years = 0,
		 d_total_m_45_64_years = 0,
		 d_total_f_45_64_years = 0,
	     d_total_m_65_years = 0,
	     d_total_f_65_years = 0;

FILE *f1;

char local_legend[40][600];  //added for globalisation

int lncnt = 0, first_page_flg = 0;
int	page_no=1;

/***********************************************************************/
void proc_main(argc, argv)
int argc;
char *argv[];
{

  void do_report();

	if(argc != 16) 
	{
    	disp_message(ERR_MESG,"Usage rlrtsagx uid/passwd session id pgm date");
    	proc_exit();
   	}

	strcpy(uid_pwd.arr, argv[1]);	
   	uid_pwd.len = strlen(uid_pwd.arr); 
   
	strcpy(nd_session_id.arr, argv[2]);
   	nd_session_id.len = strlen(nd_session_id.arr);
	
    strcpy(nd_pgm_date.arr, argv[3]);
    nd_pgm_date.len = strlen(nd_pgm_date.arr); 

	strcpy(nd_operating_facility_id.arr,argv[4]);
	nd_operating_facility_id.len = strlen(nd_operating_facility_id.arr);

    strcpy(g_facility_id.arr,nd_operating_facility_id.arr);

    strcpy(OUTPUT_FILE_NAME, argv[5]);

	strcpy(nd_fr_preferred_date.arr,argv[6]);
	nd_fr_preferred_date.len = strlen(nd_fr_preferred_date.arr);
    
//	disp_message(ERR_MESG,nd_fr_preferred_date.arr);

//	strcat(nd_fr_preferred_date.arr," ");
//	strcat(nd_fr_preferred_date.arr,argv[7]);
//	nd_fr_preferred_date.len = strlen(nd_fr_preferred_date.arr);

//	disp_message(ERR_MESG,argv[7]);

	strcpy(nd_to_preferred_date.arr,argv[8]);
	nd_to_preferred_date.len = strlen(nd_to_preferred_date.arr);

//	disp_message(ERR_MESG,nd_to_preferred_date.arr);

//	strcat(nd_to_preferred_date.arr," ");
//	strcat(nd_to_preferred_date.arr,argv[9]);
//	nd_to_preferred_date.len = strlen(nd_to_preferred_date.arr);

//	disp_message(ERR_MESG,argv[9]);

	strcpy(nd_fr_nationality_grp_code.arr,argv[10]);
	nd_fr_nationality_grp_code.len = strlen(nd_fr_nationality_grp_code.arr);

//	disp_message(ERR_MESG,nd_fr_nationality_grp_code.arr);

	strcpy(nd_to_nationality_grp_code.arr,argv[11]);
	nd_to_nationality_grp_code.len = strlen(nd_to_nationality_grp_code.arr);

//	disp_message(ERR_MESG,nd_to_nationality_grp_code.arr);

	strcpy(nd_age_range_code.arr,argv[12]);
	nd_age_range_code.len = strlen(nd_age_range_code.arr);

//	disp_message(ERR_MESG,nd_age_range_code.arr);

	strcpy(nd_monthyear.arr,argv[13]);
	nd_monthyear.len = strlen(nd_monthyear.arr);

//	disp_message(ERR_MESG,nd_monthyear.arr);
			
	strcpy(nd_title_month.arr,argv[14]);
	nd_title_month.len = strlen(nd_title_month.arr);
	strcat(nd_title_month.arr," ");
	strcat(nd_title_month.arr,argv[15]);
	nd_title_month.len = strlen(nd_title_month.arr);

//	disp_message(ERR_MESG,nd_title_month.arr);
	

	strcpy(filename,WORKING_DIR);
    strcat(filename,OUTPUT_FILE_NAME);

    if ((f1=fopen(filename,"w+")) == NULL) {
       disp_message(ERR_MESG,"Error in Opening outout file");
       fflush(stdout);
       proc_exit();
	 }

   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL CONNECT :uid_pwd;

   set_meduser_role();

   /******* from here added for globalisation ********/
    strcpy(language_id.arr,l_language_id.arr);
	language_id.len =l_language_id.len;
	language_id.arr[l_language_id.len]='\0';
	/******* upto here added for globalisation ********/
   
/* Added to print report in Landscape format in Laser Printer */
   fprintf(f1,"%c&l1O",ESC); // To Print in Landscape Mode 
   fprintf(f1,"%c&k2S",ESC); // To Condence 
   fprintf(f1,"%c&a5L",ESC); // To print Left Margin

   get_legend_value(20);  //added for globalisation

//  disp_message(ERR_MESG,"Latest");
   do_report();
   fprintf(f1,"%cE",ESC);    // To reset printer 
   fclose(f1);

   EXEC SQL COMMIT WORK;
   EXEC SQL COMMIT WORK RELEASE;
   return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at main() occured....");
   proc_exit();
}   
/***********************************************************************/

/******** added for globalisation start ******************/

get_legend_value(int cou)
 {
	EXEC SQL EXECUTE
	BEGIN
	  SM_POPULATE_REPORT_LEGEND.FETCH_LEGEND (:nd_operating_facility_id,:language_id,'RLRTSAGX.LEGEND_');
	END;
	END-EXEC;

	for (i=1; i<=cou; i++)
	{
		l_translated_value.arr[0]		= '\0';


		EXEC SQL EXECUTE
		BEGIN
               :l_translated_value :=    GET_LEGEND(LTRIM(RTRIM('RLRTSAGX.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009'))))));
		END;
		END-EXEC;
	
		l_translated_value.arr[l_translated_value.len] = '\0';

		//sp_message(ERR_MESG,l_translated_value.arr);

		strcpy(local_legend[i],l_translated_value.arr);

	}
 }
/******** added for globalisation end ******************/
 
/***********************************************************************/
void print_line(ch,n)
  char ch;
  int n;
{
 int i;
 for(i=0;i<n;i++)
 fprintf(f1,"%c",ch);
 fprintf(f1,"\n");
 }
/***********************************************************************/

/***********************************************************************/
void print_spaces(n) 
int n;
 {
  int i;
  for(i=0;i<n;i++)
  fprintf(f1,"%s"," ");
  }
/***********************************************************************/

/***********************************************************************/
void print_page_header()
{
void print_column_title();
  // register int i;
  fprintf(f1,"\nMDL : RL");
  print_spaces(67);
  fprintf(f1,"%s", d_acc_entity_name.arr);
  print_spaces(60);
  
  //fprintf(f1,"%s", d_sysdate.arr);
  /****** use pl/sql for displying current date depending on language_id********/
	EXEC SQL EXECUTE
	DECLARE
		t_date   date;
	BEGIN
		t_date := GET_LOCALE_DATE.GET_CURRENT_DATE(:language_id);
		:d_sysdate1 := to_char(t_date,'DD/MM/YYYY HH24:MI');
	END;
	END-EXEC;
  fprintf(f1,"%s", d_sysdate1.arr);

  fprintf(f1,"\n");
  fprintf(f1,"OPR : %s", d_user.arr);
  fprintf(f1,"\n");
  fprintf(f1,"REP : RLRTSAGX");
  print_spaces(51);
  
  //fprintf(f1,"Laboratory Tests Count by Age/Sex Nationality     ");
  fprintf(f1,"%45.45s     ",local_legend[1]);
	                
  print_spaces(47);  
  
  //fprintf(f1,"Page : %4d", page_no++);
  fprintf(f1,"%4.4s : %4d", local_legend[2],page_no++);

  fprintf(f1,"\n");

lncnt += 5;
  
 if(first_page_flg != 1){
	print_column_title();
 }
 print_line('-',175);

lncnt += 1;

return;
}
/***********************************************************************/
/***********************************************************************/
void init_age_range()
 {

	EXEC SQL SELECT TO_NUMBER(SUBSTR(:nd_to_preferred_date,1,2))
	         into nd_pgm_month
			 FROM dual ;

	EXEC SQL SELECT RANGE_1_FR,RANGE_1_FR_UNIT,RANGE_1_TO,RANGE_1_TO_UNIT,  
	                RANGE_1_FR,RANGE_1_TO,
					RANGE_2_FR,RANGE_2_FR_UNIT,RANGE_2_TO,RANGE_2_TO_UNIT,
					RANGE_2_FR,RANGE_2_TO,
					RANGE_3_FR,RANGE_3_FR_UNIT,RANGE_3_TO,RANGE_3_TO_UNIT,
					RANGE_3_FR,RANGE_3_TO,
					RANGE_4_FR,RANGE_4_FR_UNIT,RANGE_4_TO,RANGE_4_TO_UNIT,
					RANGE_4_FR,RANGE_4_TO,
					RANGE_5_FR,RANGE_5_FR_UNIT,RANGE_5_TO,RANGE_5_TO_UNIT,
					RANGE_5_FR,RANGE_5_TO,
					RANGE_6_FR,RANGE_6_FR_UNIT,RANGE_6_TO,RANGE_6_TO_UNIT,
					RANGE_6_FR,RANGE_6_TO,
					RANGE_7_FR,RANGE_7_FR_UNIT,RANGE_7_TO,RANGE_7_TO_UNIT,
					RANGE_7_FR,RANGE_7_TO,
					RANGE_8_FR,RANGE_8_FR_UNIT,RANGE_8_TO,RANGE_8_TO_UNIT,
					RANGE_8_FR,RANGE_8_TO,
					RANGE_9_FR,RANGE_9_FR_UNIT,RANGE_9_TO,RANGE_9_TO_UNIT,
					RANGE_9_FR,RANGE_9_TO,
					NO_OF_RANGES
	
	INTO			RANGE_1_FR,RANGE_1_FR_UNIT,RANGE_1_TO,RANGE_1_TO_UNIT,  
					RANGE_1_FR_LEG,RANGE_1_TO_LEG,
					RANGE_2_FR,RANGE_2_FR_UNIT,RANGE_2_TO,RANGE_2_TO_UNIT,
					RANGE_2_FR_LEG,RANGE_2_TO_LEG,
					RANGE_3_FR,RANGE_3_FR_UNIT,RANGE_3_TO,RANGE_3_TO_UNIT,
					RANGE_3_FR_LEG,RANGE_3_TO_LEG,
					RANGE_4_FR,RANGE_4_FR_UNIT,RANGE_4_TO,RANGE_4_TO_UNIT,
					RANGE_4_FR_LEG,RANGE_4_TO_LEG,
					RANGE_5_FR,RANGE_5_FR_UNIT,RANGE_5_TO,RANGE_5_TO_UNIT,
					RANGE_5_FR_LEG,RANGE_5_TO_LEG,
					RANGE_6_FR,RANGE_6_FR_UNIT,RANGE_6_TO,RANGE_6_TO_UNIT,
					RANGE_6_FR_LEG,RANGE_6_TO_LEG,
					RANGE_7_FR,RANGE_7_FR_UNIT,RANGE_7_TO,RANGE_7_TO_UNIT,
					RANGE_7_FR_LEG,RANGE_7_TO_LEG,
					RANGE_8_FR,RANGE_8_FR_UNIT,RANGE_8_TO,RANGE_8_TO_UNIT,
					RANGE_8_FR_LEG,RANGE_8_TO_LEG,
					RANGE_9_FR,RANGE_9_FR_UNIT,RANGE_9_TO,RANGE_9_TO_UNIT,
					RANGE_9_FR_LEG,RANGE_9_TO_LEG,
					NO_OF_RANGES
	FROM    AM_SUMM_RANGE  
	WHERE RANGE_ID =:nd_age_range_code;

   
/*******************************************/
 	if (NO_OF_RANGES >= 1) 
	 {
		if (strlen(RANGE_1_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_1_FR_UNIT.arr, "D") == 0)
			 RANGE_1_FR = RANGE_1_FR/nd_pgm_month;

		   if(strcmp(RANGE_1_FR_UNIT.arr, "W") == 0)
			 RANGE_1_FR = (RANGE_1_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_1_FR_UNIT.arr, "Y") == 0)
			 RANGE_1_FR = RANGE_1_FR*12;

		  }
		if (strlen(RANGE_1_TO_UNIT.arr) != 0) 
		  {
			RANGE_1_TO = RANGE_1_TO+1;//adding 1 bacuase if the to_value is 6 and next range from is 7 then  
		                              //we are considering the range as < 7
		   if(strcmp(RANGE_1_TO_UNIT.arr, "D") == 0)
			 RANGE_1_TO = RANGE_1_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_1_TO_UNIT.arr, "W") == 0)
			 RANGE_1_TO = (RANGE_1_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_1_TO_UNIT.arr, "Y") == 0)
			 RANGE_1_TO = RANGE_1_TO*12;
		  }
      }
/*******************************************/
   
	if (NO_OF_RANGES >= 2)
	  {
		if (strlen(RANGE_2_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_2_FR_UNIT.arr, "D") == 0)
			 RANGE_2_FR = RANGE_2_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_2_FR_UNIT.arr, "W") == 0)
			 RANGE_2_FR = (RANGE_2_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_2_FR_UNIT.arr, "Y") == 0)
			 RANGE_2_FR = RANGE_2_FR*12;

		  }
		if (strlen(RANGE_2_TO_UNIT.arr) != 0) 
		  {
		   RANGE_2_TO = RANGE_2_TO+1;
		   if(strcmp(RANGE_2_TO_UNIT.arr, "D") == 0)
			 RANGE_2_TO = RANGE_2_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_2_TO_UNIT.arr, "W") == 0)
			 RANGE_2_TO = (RANGE_2_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_2_TO_UNIT.arr, "Y") == 0)
			 RANGE_2_TO = RANGE_2_TO*12;
		  }
       }
/*******************************************/
    if (NO_OF_RANGES >= 3)
	  {
		if (strlen(RANGE_3_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_3_FR_UNIT.arr, "D") == 0)
			 RANGE_3_FR = RANGE_3_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_3_FR_UNIT.arr, "W") == 0)
			 RANGE_3_FR = (RANGE_3_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_3_FR_UNIT.arr, "Y") == 0)
			 RANGE_3_FR = RANGE_3_FR*12;

		  }
		if (strlen(RANGE_3_TO_UNIT.arr) != 0) 
		  {
		   RANGE_3_TO = RANGE_3_TO+1;
		   if(strcmp(RANGE_3_TO_UNIT.arr, "D") == 0)
			 RANGE_3_TO = RANGE_3_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_3_TO_UNIT.arr, "W") == 0)
			 RANGE_3_TO = (RANGE_3_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_3_TO_UNIT.arr, "Y") == 0)
			 RANGE_3_TO = RANGE_3_TO*12;
		  }
        }
/*******************************************/
	if (NO_OF_RANGES >= 4)
	{
		if (strlen(RANGE_4_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_4_FR_UNIT.arr, "D") == 0)
			 RANGE_4_FR = RANGE_4_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_4_FR_UNIT.arr, "W") == 0)
			 RANGE_4_FR = (RANGE_4_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_4_FR_UNIT.arr, "Y") == 0)
			 RANGE_4_FR = RANGE_4_FR*12;

		  }
		if (strlen(RANGE_4_TO_UNIT.arr) != 0) 
		  {
		   RANGE_4_TO = RANGE_4_TO+1;
		   if(strcmp(RANGE_4_TO_UNIT.arr, "D") == 0)
			 RANGE_4_TO = RANGE_4_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_4_TO_UNIT.arr, "W") == 0)
			 RANGE_4_TO = (RANGE_4_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_4_TO_UNIT.arr, "Y") == 0)
			 RANGE_4_TO = RANGE_4_TO*12;
		  }
     } 
/*******************************************/
	if (NO_OF_RANGES >= 5)
	  {
		if (strlen(RANGE_5_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_5_FR_UNIT.arr, "D") == 0)
			 RANGE_5_FR = RANGE_5_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_5_FR_UNIT.arr, "W") == 0)
			 RANGE_5_FR = (RANGE_5_FR*7)/nd_pgm_month;
		   
		   if (strcmp(RANGE_5_FR_UNIT.arr, "Y") == 0)
			 RANGE_5_FR = RANGE_5_FR*12;

		  }
		if (strlen(RANGE_5_TO_UNIT.arr) != 0) 
		  {
		   RANGE_5_TO = RANGE_5_TO+1;
		   if(strcmp(RANGE_5_TO_UNIT.arr, "D") == 0)
			 RANGE_5_TO = RANGE_5_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_5_TO_UNIT.arr, "W") == 0)
			 RANGE_5_TO = (RANGE_5_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_5_TO_UNIT.arr, "Y") == 0)
			 RANGE_5_TO = RANGE_5_TO*12;
		  }
      }
/*******************************************/
	if (NO_OF_RANGES >= 6)
	  {
		if (strlen(RANGE_6_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_6_FR_UNIT.arr, "D") == 0)
			 RANGE_6_FR = RANGE_6_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_6_FR_UNIT.arr, "W") == 0)
			 RANGE_6_FR = (RANGE_6_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_6_FR_UNIT.arr, "Y") == 0)
			 RANGE_6_FR = RANGE_6_FR*12;

		  }
		if (strlen(RANGE_6_TO_UNIT.arr) != 0) 
		  {
		   RANGE_6_TO = RANGE_6_TO+1;
		   if(strcmp(RANGE_6_TO_UNIT.arr, "D") == 0)
			 RANGE_6_TO = RANGE_6_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_6_TO_UNIT.arr, "W") == 0)
			 RANGE_6_TO = (RANGE_6_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_6_TO_UNIT.arr, "Y") == 0)
			 RANGE_6_TO = RANGE_6_TO*12;
		  }
       }
/*******************************************/
	if (NO_OF_RANGES >= 7)
	 {
		if (strlen(RANGE_7_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_7_FR_UNIT.arr, "D") == 0)
			 RANGE_7_FR = RANGE_7_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_7_FR_UNIT.arr, "W") == 0)
			 RANGE_7_FR = (RANGE_7_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_7_FR_UNIT.arr, "Y") == 0)
			 RANGE_7_FR = RANGE_7_FR*12;

		  }
		if (strlen(RANGE_7_TO_UNIT.arr) != 0) 
		  {
		   RANGE_7_TO = RANGE_7_TO+1;
		   if(strcmp(RANGE_7_TO_UNIT.arr, "D") == 0)
			 RANGE_7_TO = RANGE_7_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_7_TO_UNIT.arr, "W") == 0)
			 RANGE_7_TO = (RANGE_7_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_7_TO_UNIT.arr, "Y") == 0)
			 RANGE_7_TO = RANGE_7_TO*12;
		  }
       }
/*******************************************/
	if (NO_OF_RANGES >= 8)
	{
		if (strlen(RANGE_8_FR_UNIT.arr) != 0) 
		  {
		   if(strcmp(RANGE_8_FR_UNIT.arr, "D") == 0)
			 RANGE_8_FR = RANGE_8_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_8_FR_UNIT.arr, "W") == 0)
			 RANGE_8_FR = (RANGE_8_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_8_FR_UNIT.arr, "Y") == 0)
			 RANGE_8_FR = RANGE_8_FR*12;

		  }
		if (strlen(RANGE_8_TO_UNIT.arr) != 0) 
		  {
		   RANGE_8_TO = RANGE_8_TO+1;
		   if(strcmp(RANGE_8_TO_UNIT.arr, "D") == 0)
			 RANGE_8_TO = RANGE_8_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_8_TO_UNIT.arr, "W") == 0)
			 RANGE_8_TO = (RANGE_8_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_8_TO_UNIT.arr, "Y") == 0)
			 RANGE_8_TO = RANGE_8_TO*12;
		  }
      }
/*******************************************/
	if (NO_OF_RANGES >= 9)
	  {
		if ((strlen(RANGE_9_FR_UNIT.arr) != 0) && RANGE_9_FR > 0)
		  {
		   if(strcmp(RANGE_9_FR_UNIT.arr, "D") == 0)
			 RANGE_9_FR = RANGE_9_FR/nd_pgm_month;
		   
		   if(strcmp(RANGE_9_FR_UNIT.arr, "W") == 0)
			 RANGE_9_FR = (RANGE_9_FR*7)/nd_pgm_month;

		   if (strcmp(RANGE_9_FR_UNIT.arr, "Y") == 0)
			 RANGE_9_FR = RANGE_9_FR*12;

		  }
		if ((strlen(RANGE_9_TO_UNIT.arr) != 0) && RANGE_9_TO > 0)
		  {
		   if(strcmp(RANGE_9_TO_UNIT.arr, "D") == 0)
			 RANGE_9_TO = RANGE_9_TO/nd_pgm_month;
		   
 		   if(strcmp(RANGE_9_TO_UNIT.arr, "W") == 0)
			 RANGE_9_TO = (RANGE_9_TO*7)/nd_pgm_month;

		   if (strcmp(RANGE_9_TO_UNIT.arr, "Y") == 0)
			 RANGE_9_TO = RANGE_9_TO*12;
		  }
        }
    
 }				
/***********************************************************************/

/***********************************************************************/
void print_rep_header()
{
  char	nd_fr_preferred_date_desc	[20],
  nd_to_preferred_date_desc	[20],	
  nd_preferred_monthyr		[20];
  char	nd_fr_nat_grp_code_desc		[20],
  nd_to_nat_grp_code_desc		[20];

  void print_page_header();


  if(strcmp(nd_fr_nationality_grp_code.arr, "!!!!") == 0)
	//strcpy(nd_fr_nat_grp_code_desc, "LOWEST");
	strcpy(nd_fr_nat_grp_code_desc, local_legend[16]);
  else	strcpy(nd_fr_nat_grp_code_desc, nd_fr_nationality_grp_code.arr);

  if(strcmp(nd_to_nationality_grp_code.arr, "~~~~") == 0)
	//strcpy(nd_to_nat_grp_code_desc, "HIGHEST");
	strcpy(nd_to_nat_grp_code_desc, local_legend[17]);
  else	strcpy(nd_to_nat_grp_code_desc, nd_to_nationality_grp_code.arr);

  print_page_header();
  fprintf(f1,VER);
  fprintf(f1,"\n\n\n\n");
  fprintf(f1,"        ");
  
  //fprintf(f1,"INPUT PARAMETERS :\n");
  fprintf(f1,"%16.16s :\n",local_legend[3]);

  fprintf(f1,"        ");
  fprintf(f1,"------------------\n\n"); 
  fprintf(f1,"                "); 
  
  //fprintf(f1,"MONTH                         : %-8.8s\n\n", nd_monthyear.arr);
  fprintf(f1,"%5.5s                         : %-8.8s\n\n", local_legend[4],nd_monthyear.arr);

  fprintf(f1,"                ");
  
  //fprintf(f1,"NATIONALITY GROUP FROM        : %s\n\n", nd_fr_nat_grp_code_desc);
  fprintf(f1,"%22.22s        : %s\n\n", local_legend[5],nd_fr_nat_grp_code_desc);

  fprintf(f1,"                ");
  
  //fprintf(f1,"                  TO          : %s\n\n", nd_to_nat_grp_code_desc);
  fprintf(f1,"%22.22s        : %s\n\n", local_legend[6],nd_to_nat_grp_code_desc);

  fprintf(f1,"                ");
  fprintf(f1,"\n");
return;
}                             
/***********************************************************************/

/***********************************************************************/
void print_column_title()
{
 int j;
	print_spaces(73);  
	
	//fprintf(f1,"FOR THE MONTH OF %s", nd_title_month.arr);
	fprintf(f1,"%16.16s %s", local_legend[7],nd_title_month.arr);

	fprintf(f1,"\n");	
//	print_nat_group_desc();
	print_line('_',175);

	print_spaces(31);	
	
	//fprintf(f1,"Age Group:");	
	fprintf(f1,"%9.9s:",local_legend[8]);	

	//fprintf(f1,"|   0 +     |   7 Days  | 29 Days   | 1- 4 yrs. | 5-14 yrs. | 15-24 yrs.| 25-44 yrs.| 45-64 yrs.|  65+ yrs. |        TOTAL"); 
	//fprintf(f1,"|   0 +     |   7 %3.3s  | 29 %3.3s   | 1- 4 %3.3s. | 5-14 %3.3s. | 15-24 %3.3s.| 25-44 %3.3s.| 45-64 %3.3s.|  65+ %3.3s. |        %5.5s",
	//                               local_legend[9],local_legend[9],local_legend[10],local_legend[10],local_legend[10],local_legend[10],local_legend[10],local_legend[10],local_legend[11]); 

	 
	 if (NO_OF_RANGES >= 1) 
		{
   				RANGE_1_FR_LEG_VAL.arr[0]	= '\0';
                RANGE_1_FR_LEG_VAL.len		= 0;
				
				RANGES_LEGEND.arr[0]	= '\0';
                RANGES_LEGEND.len		= 0;
			 if(strcmp(RANGE_1_FR_UNIT.arr, "D") == 0)
				strcpy(RANGE_1_FR_LEG_VAL.arr,local_legend[9]);
			 if(strcmp(RANGE_1_FR_UNIT.arr, "W") == 0)
				 strcpy(RANGE_1_FR_LEG_VAL.arr,local_legend[22]);
			 if(strcmp(RANGE_1_FR_UNIT.arr, "M") == 0)
				 strcpy(RANGE_1_FR_LEG_VAL.arr,local_legend[21]);
			 if(strcmp(RANGE_1_FR_UNIT.arr, "Y") == 0)
				 strcpy(RANGE_1_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_1_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_1_FR_LEG_VAL.arr);
		  fprintf(f1,"|%10.10s -",RANGES_LEGEND.arr);
        }
     if (NO_OF_RANGES >= 2) 
		{
  				RANGE_2_FR_LEG_VAL.arr[0]	= '\0';
                RANGE_2_FR_LEG_VAL.len		= 0;
				RANGES_LEGEND.arr[0]	= '\0';
                RANGES_LEGEND.len		= 0;

			 if(strcmp(RANGE_2_FR_UNIT.arr, "D") == 0)
				 strcpy(RANGE_2_FR_LEG_VAL.arr,local_legend[9]);
			 if(strcmp(RANGE_2_FR_UNIT.arr, "W") == 0)
				 strcpy(RANGE_2_FR_LEG_VAL.arr,local_legend[22]);
			 if(strcmp(RANGE_2_FR_UNIT.arr, "M") == 0)
				 strcpy(RANGE_2_FR_LEG_VAL.arr,local_legend[21]);
			 if(strcmp(RANGE_2_FR_UNIT.arr, "Y") == 0)
				 strcpy(RANGE_2_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_2_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_2_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 3) 
	    {
			RANGE_3_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_3_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

		 if(strcmp(RANGE_3_FR_UNIT.arr, "D") == 0)
             strcpy(RANGE_3_FR_LEG_VAL.arr,local_legend[9]);			 
		 if(strcmp(RANGE_3_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_3_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_3_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_3_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_3_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_3_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_3_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_3_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 4) 
		{
			RANGE_4_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_4_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

		 if(strcmp(RANGE_4_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_4_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_4_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_4_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_4_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_4_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_4_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_4_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_4_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_4_FR_LEG_VAL.arr);
		fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 5) 
		{ 
			RANGE_5_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_5_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

		 if(strcmp(RANGE_5_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_5_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_5_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_5_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_5_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_5_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_5_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_5_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_5_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_5_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 6) 
		 {
			RANGE_6_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_6_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		 
		 if(strcmp(RANGE_6_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_6_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_6_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_6_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_6_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_6_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_6_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_6_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_6_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_6_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 7) 
		 {
			RANGE_7_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_7_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		
		 if(strcmp(RANGE_7_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_7_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_7_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_7_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_7_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_7_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_7_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_7_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_7_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_7_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 8) 
		 {
			RANGE_8_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_8_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		
		 if(strcmp(RANGE_8_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_8_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_8_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_8_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_8_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_8_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_8_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_8_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_8_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_8_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 9) 
		 {
			RANGE_9_FR_LEG_VAL.arr[0]	= '\0';
            RANGE_9_FR_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

		 if(strcmp(RANGE_9_FR_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_9_FR_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_9_FR_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_9_FR_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_9_FR_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_9_FR_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_9_FR_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_9_FR_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_9_FR_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_9_FR_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s -",RANGES_LEGEND.arr);
		}
		
        
        fprintf(f1,"|        %5.5s",local_legend[11]);
       

	fprintf(f1,"\n");
	

	print_spaces(41);
   
     if (NO_OF_RANGES >= 1) 
		
		{
			RANGE_1_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_1_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		
			 if(strcmp(RANGE_1_TO_UNIT.arr, "D") == 0)
				strcpy(RANGE_1_TO_LEG_VAL.arr,local_legend[9]);
			 if(strcmp(RANGE_1_TO_UNIT.arr, "W") == 0)
				 strcpy(RANGE_1_TO_LEG_VAL.arr,local_legend[22]);
			 if(strcmp(RANGE_1_TO_UNIT.arr, "M") == 0)
				 strcpy(RANGE_1_TO_LEG_VAL.arr,local_legend[21]);
			 if(strcmp(RANGE_1_TO_UNIT.arr, "Y") == 0)
				 strcpy(RANGE_1_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_1_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_1_TO_LEG_VAL.arr);
		  fprintf(f1,"|%10.10s  ",RANGES_LEGEND.arr);
        }
     if (NO_OF_RANGES >= 2) 
		{
			RANGE_2_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_2_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

			 if(strcmp(RANGE_2_TO_UNIT.arr, "D") == 0)
				 strcpy(RANGE_2_TO_LEG_VAL.arr,local_legend[9]);
			 if(strcmp(RANGE_2_TO_UNIT.arr, "W") == 0)
				 strcpy(RANGE_2_TO_LEG_VAL.arr,local_legend[22]);
			 if(strcmp(RANGE_2_TO_UNIT.arr, "M") == 0)
				 strcpy(RANGE_2_TO_LEG_VAL.arr,local_legend[21]);
			 if(strcmp(RANGE_2_TO_UNIT.arr, "Y") == 0)
				 strcpy(RANGE_2_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_2_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_2_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 3) 
	    {
			RANGE_3_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_3_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;


		 if(strcmp(RANGE_3_TO_UNIT.arr, "D") == 0)
             strcpy(RANGE_3_TO_LEG_VAL.arr,local_legend[9]);			 
		 if(strcmp(RANGE_3_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_3_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_3_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_3_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_3_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_3_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_3_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_3_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 4) 
		{
			RANGE_4_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_4_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		
		 if(strcmp(RANGE_4_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_4_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_4_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_4_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_4_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_4_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_4_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_4_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_4_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_4_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 5) 
		{ 
			RANGE_5_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_5_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

	
		 if(strcmp(RANGE_5_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_5_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_5_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_5_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_5_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_5_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_5_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_5_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_5_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_5_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 6) 
		 {
			RANGE_6_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_6_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;


		 if(strcmp(RANGE_6_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_6_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_6_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_6_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_6_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_6_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_6_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_6_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_6_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_6_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 7) 
		 {
			RANGE_7_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_7_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;

		
		 if(strcmp(RANGE_7_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_7_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_7_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_7_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_7_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_7_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_7_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_7_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_7_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_7_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 8) 
		 {
			RANGE_8_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_8_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;


		 if(strcmp(RANGE_8_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_8_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_8_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_8_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_8_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_8_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_8_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_8_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_8_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_8_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
     if (NO_OF_RANGES >= 9) 
		 {
			RANGE_9_TO_LEG_VAL.arr[0]	= '\0';
            RANGE_9_TO_LEG_VAL.len		= 0;
			RANGES_LEGEND.arr[0]	= '\0';
            RANGES_LEGEND.len		= 0;
		 
		 if(strcmp(RANGE_9_TO_UNIT.arr, "D") == 0)
   		    strcpy(RANGE_9_TO_LEG_VAL.arr,local_legend[9]);
		 if(strcmp(RANGE_9_TO_UNIT.arr, "W") == 0)
   		    strcpy(RANGE_9_TO_LEG_VAL.arr,local_legend[22]);
		 if(strcmp(RANGE_9_TO_UNIT.arr, "M") == 0)
   		    strcpy(RANGE_9_TO_LEG_VAL.arr,local_legend[21]);
		 if(strcmp(RANGE_9_TO_UNIT.arr, "Y") == 0)
   		    strcpy(RANGE_9_TO_LEG_VAL.arr,local_legend[10]);

		  strcat(RANGES_LEGEND.arr,RANGE_9_TO_LEG.arr);
          strcat(RANGES_LEGEND.arr," ");
          strcat(RANGES_LEGEND.arr,RANGE_9_TO_LEG_VAL.arr);
		  fprintf(f1,"|%9.9s  ",RANGES_LEGEND.arr);
		}
	
	fprintf(f1,"\n");

	
	//fprintf(f1,"Lab Section:");
	fprintf(f1,"%11.11s:",local_legend[12]);

	print_spaces(25);
	
	//fprintf(f1,"Sex:");		 
	fprintf(f1,"%3.3s:",local_legend[13]);		 

	//fprintf(f1,"|  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |  M  |  F  |    M   |    F   |  GT");
	//fprintf(f1,"|  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |  %1.1s  |    %1.1s   |    %1.1s   |  %2.2s",
	//                local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],
	//				local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[14],local_legend[15],local_legend[18]);
     if (NO_OF_RANGES >= 1) 
		fprintf(f1,"|   %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 2) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 3) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 4) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 5) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 6) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 7) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 8) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);
     if (NO_OF_RANGES >= 9) 
		fprintf(f1,"|  %1.1s  |  %1.1s  ",local_legend[14],local_legend[15]);

		fprintf(f1,"|    %1.1s  |    %1.1s  ",local_legend[14],local_legend[15]);
		fprintf(f1,"|    %2.2s",local_legend[18]);

	fprintf(f1,"\n");

lncnt += 3;

return;
}

/***********************************************************************/
void page_break()
 {
	lncnt = 0;
	// fprintf(f1,"");
	fprintf(f1,"\f");
	print_page_header();
 }
/***********************************************************************/

/***********************************************************************/
/* get the header details */
void get_header_dtls()
{
   EXEC SQL WHENEVER SQLERROR GOTO err_exit;
   EXEC SQL	SELECT	ACC_ENTITY_NAME, /* description of the institution */
			USER,
			TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI')
		INTO	:d_acc_entity_name,
			:d_user,
			:d_sysdate
		FROM	SY_ACC_ENTITY_lang_vw
		WHERE ACC_ENTITY_ID = :nd_operating_facility_id
		and language_id = :language_id;

  d_acc_entity_name.arr[d_acc_entity_name.len] = '\0';
  d_user.arr[d_user.len]                       = '\0';
  d_sysdate.arr[d_sysdate.len]                 = '\0';

  return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at get_header_dtls() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/ 
void dclr_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;	

	EXEC SQL DECLARE section_CUR CURSOR FOR 
	SELECT SECTION_CODE
	  FROM RL_SECTION_CTL
     WHERE OPERATING_FACILITY_ID = :nd_operating_facility_id
	 order by section_code;

	EXEC SQL DECLARE PATIENT_CUR CURSOR FOR 
	SELECT A.patient_id, A.episode_type, B.test_code,to_char(A.spec_regd_date_time,'dd/mm/yyyy') spec_regd_date_time,A.section_code
	  FROM RL_REQUEST_HEADER A, RL_TEST_RESULT B
	 WHERE A.spec_regd_date_time  BETWEEN  TO_DATE(:nd_fr_preferred_date, 'DD/MM/YYYY')
	                                   AND TO_DATE(:nd_to_preferred_date, 'DD/MM/YYYY') + 1
	   AND A.specimen_no = B.specimen_no
	   AND A.operating_facility_id = :nd_operating_facility_id
	   AND A.operating_facility_id = B.operating_facility_id
	   
	   AND NVL(A.cancelled_yn, 'N') <> 'Y' 
       AND NVL(B.cancelled_yn, 'N') <> 'Y'
	   and a.section_code =b.section_code
  	   AND A.PATIENT_ID IN (
	                        SELECT PATIENT_ID FROM  RL_PATIENT_MAST WHERE NATIONALITY_CODE  IN 
					          (SELECT MEMBER_ID FROM AM_STAT_GRP_DETAIL 
							   WHERE STAT_GRP_ID =:nd_fr_nationality_grp_code)
                            UNION ALL
                             SELECT PATIENT_ID FROM  MP_PATIENT_MAST WHERE NATIONALITY_CODE  IN 
							 (SELECT MEMBER_ID FROM AM_STAT_GRP_DETAIL 
                              WHERE STAT_GRP_ID =:nd_fr_nationality_grp_code)
							);
    
	EXEC SQL DECLARE PATIENT_CUR_2 CURSOR FOR 
	SELECT DISTINCT A.patient_id "patient_id",A.episode_type
	  FROM RL_REQUEST_HEADER A, RL_TEST_RESULT B
	 WHERE A.spec_regd_date_time  BETWEEN  TO_DATE(:nd_fr_preferred_date, 'DD/MM/YYYY')
	                                   AND TO_DATE(:nd_to_preferred_date, 'DD/MM/YYYY') + 1
	   AND A.specimen_no = B.specimen_no
	   AND A.operating_facility_id = :nd_operating_facility_id
	   AND A.operating_facility_id = B.operating_facility_id
	   AND NVL(A.cancelled_yn, 'N') <> 'Y' 
       AND NVL(B.cancelled_yn, 'N') <> 'Y'
	   and a.section_code =b.section_code
  	   AND A.PATIENT_ID IN (
	                        SELECT PATIENT_ID FROM  RL_PATIENT_MAST WHERE NATIONALITY_CODE  IN 
					          (SELECT MEMBER_ID FROM AM_STAT_GRP_DETAIL 
							   WHERE STAT_GRP_ID =:nd_fr_nationality_grp_code)
                            UNION ALL
                             SELECT PATIENT_ID FROM  MP_PATIENT_MAST WHERE NATIONALITY_CODE  IN 
							 (SELECT MEMBER_ID FROM AM_STAT_GRP_DETAIL 
                              WHERE STAT_GRP_ID =:nd_fr_nationality_grp_code)
							)	   
	   ORDER BY A.patient_id;

   	/*EXEC SQL DECLARE COUNTRY_GROUP_CUR CURSOR FOR 
			SELECT COUNTRY_GRP_CODE
	          FROM MP_COUNTRY_GROUP_MAST 
			  WHERE COUNTRY_GRP_CODE BETWEEN nvl(:nd_fr_nationality_grp_code,'!!!!') 
			  AND nvl(:nd_to_nationality_grp_code,'~~~~')
			  ORDER BY COUNTRY_GRP_CODE;
			  commennted and added code on 18/01/2008 because table does not exist int SRDV database
			  */
	EXEC SQL DECLARE COUNTRY_GROUP_CUR CURSOR FOR 
			SELECT MEMBER_ID
	          FROM AM_STAT_GRP_DETAIL 
			  WHERE STAT_GRP_ID =:nd_fr_nationality_grp_code
			  ORDER BY STAT_GRP_ID;

return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at dclr_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void open_section_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL OPEN section_CUR;

return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at open_section_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void open_patient_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL OPEN PATIENT_CUR;

return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at open_patient_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void open_patient_cur_2()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL OPEN PATIENT_CUR_2;

return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at open_patient_cur_2() occured....");
   proc_exit();
}
/***********************************************************************/


/***********************************************************************/
void open_country_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL OPEN COUNTRY_GROUP_CUR;

return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at open_country_cur() occured....");
   proc_exit();
}
/***********************************************************************/


/***********************************************************************/
void close_section_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL CLOSE section_CUR;
return;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at close_section_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void close_patient_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL CLOSE PATIENT_CUR;
return;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at close_patient_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void close_patient_cur_2()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL CLOSE PATIENT_CUR_2;
return;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at close_patient_cur_2() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
void close_country_cur()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;

	EXEC SQL CLOSE COUNTRY_GROUP_CUR;
return;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at close_country_cur() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
int fetch_section_cur()
{
 d_section_code.arr[0]		= '\0';
 d_section_code.len			= 0;

	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	 EXEC SQL FETCH section_CUR INTO	
						d_section_code;

  if (NODATAFOUND)
  {  
	return 0; 
  }
 
 d_section_code.arr[d_section_code.len]		= '\0';

 return 1;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at fetch_section_cur() occured....");
   proc_exit();
   return 0;
}
/***********************************************************************/

/***********************************************************************/
int fetch_patient_cur()
{

  d_patient_id.arr[0] = '\0';
  d_episode_type.arr[0] = '\0';	
  d_test_code.arr[0] = '\0';
  d_spec_regd_date_time.arr[0] = '\0';

  d_patient_id.len = 0;
  d_episode_type.len = 0;
  d_test_code.len = 0;
  d_spec_regd_date_time.len = 0;


	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	 EXEC SQL FETCH  PATIENT_CUR INTO	
						d_patient_id,
						d_episode_type,
						d_test_code,
						d_spec_regd_date_time,
						v_section_code;

  if (NODATAFOUND)
  {  
	return 0; 
  }
 
  d_patient_id.arr[d_patient_id.len] = '\0';
  d_episode_type.arr[d_episode_type.len] = '\0';	
  d_test_code.arr[d_test_code.len] = '\0';
  d_spec_regd_date_time.arr[d_spec_regd_date_time.len] = '\0';

 return 1;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at fetch_patient_cur() occured....");
   proc_exit();
   return 0;
}
/***********************************************************************/

/***********************************************************************/
int fetch_patient_cur_2()
{

  d_patient_id.arr[0] = '\0';
  d_patient_id.len = 0;

  d_episode_type.arr[0] = '\0';	
  d_episode_type.len = 0;

	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	 EXEC SQL FETCH  PATIENT_CUR_2 INTO	
						d_patient_id,
						d_episode_type;

  if (NODATAFOUND)
  {  
	return 0; 
  }
 
  d_patient_id.arr[d_patient_id.len] = '\0';
  d_episode_type.arr[d_episode_type.len] = '\0';	

 return 1;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at fetch_patient_cur_2() occured....");
   proc_exit();
   return 0;
}
/***********************************************************************/


/***********************************************************************/
int fetch_country_cur()
{
 nd_country_grp_code.arr[0]		= '\0';
 nd_country_grp_code.len			= 0;

	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	 EXEC SQL FETCH COUNTRY_GROUP_CUR INTO	
						nd_country_grp_code;

  if (NODATAFOUND)
  {  
	return 0; 
  }
 
 nd_country_grp_code.arr[nd_country_grp_code.len]		= '\0';

 return 1;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at fetch_country_cur() occured....");
   proc_exit();
   return 0;
}
/***********************************************************************/

/***********************************************************************/
void get_country_group()
{
  int i;

  EXEC SQL WHENEVER SQLERROR GOTO err_exit;
  open_country_cur();
  d_country_grp_counter = 0;
  
  while (fetch_country_cur())
  {
	d_country_grp_counter++;
	strcpy(d_country_grp_code[d_country_grp_counter].arr,nd_country_grp_code.arr);
	d_country_grp_code[d_country_grp_counter].len = strlen(d_country_grp_code[d_country_grp_counter].arr);
//	disp_message(ERR_MESG,d_country_grp_code[d_country_grp_counter].arr);	
  }

	if ((strcmp(nd_fr_nationality_grp_code.arr,"!!!!") == 0) && 
			  (strcmp(nd_to_nationality_grp_code.arr,"~~~~") == 0))
	{
	d_country_grp_counter++;
	strcpy(d_country_grp_code[d_country_grp_counter].arr,"NC");
	d_country_grp_code[d_country_grp_counter].len = strlen(d_country_grp_code[d_country_grp_counter].arr);
	}
/* checking 
for (i = 1;i<=d_country_grp_counter;i++)
{
fprintf(f1,"%s ",d_country_grp_code[i].arr);
}
*/

		/********initialize the national counter **********/ 
			for (i=1;i <= d_country_grp_counter;i++)
				{
					d_country_grp_count[i] = 0;
				}
return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at get_country_grp() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
int get_patient_details()
{

int i;

d_sex.arr[0] = '\0';
d_nationality_code.arr[0] = '\0';
d_date_of_birth.arr[0] = '\0';
nd_country_grp_code.arr[0] = '\0';

	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;

		if ((strcmp(d_episode_type.arr,"I") == 0) || 
			(strcmp(d_episode_type.arr,"O") == 0) ||
			(strcmp(d_episode_type.arr,"H") == 0))
			{
			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth, 
							//to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi') - A.date_of_birth age_in_days,
							months_between(to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi'),A.date_of_birth)  age_in_months
							//months_between(to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi'),A.date_of_birth)/12 age_in_yrs
					   INTO d_sex,d_nationality_code,d_date_of_birth,
							//d_age_in_days,
							d_age_in_months
							//d_age_in_years
					   FROM MP_PATIENT_MAST A	
					  WHERE A.patient_id = :d_patient_id;

			d_sex.arr[d_sex.len] = '\0';
			d_nationality_code.arr[d_nationality_code.len] = '\0';
			d_date_of_birth.arr[d_date_of_birth.len] = '\0';
			
			if (strcmp(d_nationality_code.arr,"NC") == 0) 
			{
				strcpy(nd_country_grp_code.arr,"NC");
				nd_country_grp_code.len = strlen(nd_country_grp_code.arr);
				}
			else
			{
	   			/*EXEC SQL SELECT COUNTRY_GRP_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
				  changed and added code on 18/01/2008 because country_grp_code does not exist in mp_country table in SRDV database*/

				  EXEC SQL SELECT COUNTRY_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
	
				nd_country_grp_code.arr[nd_country_grp_code.len] = '\0';					
			}

	
		for (i=1;i <= d_country_grp_counter;i++)
				{
					if (strcmp(d_country_grp_code[i].arr,nd_country_grp_code.arr) == 0)
					{
						return 1;
					} 
				}
			return 0;
			}
		else
			{
			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth,
							//to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi') - A.date_of_birth age_in_days,
							months_between(to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi'),A.date_of_birth) age_in_months
							//months_between(to_date(:d_spec_regd_date_time,'dd/mm/yyyy hh24:mi'),A.date_of_birth)/12 age_in_yrs
					   INTO d_sex,d_nationality_code,d_date_of_birth,
							//d_age_in_days,
							d_age_in_months
							//d_age_in_years
					   FROM RL_PATIENT_MAST A
					  WHERE A.patient_id = :d_patient_id;

			d_sex.arr[d_sex.len] = '\0';
			d_nationality_code.arr[d_nationality_code.len] = '\0';
			d_date_of_birth.arr[d_date_of_birth.len] = '\0';

			if (strcmp(d_nationality_code.arr,"NC") == 0) 
			{
				strcpy(nd_country_grp_code.arr,"NC");
				nd_country_grp_code.len = strlen(nd_country_grp_code.arr);
				}
			else
			{
	   			/*EXEC SQL SELECT COUNTRY_GRP_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
				  changed and added code on 18/01/2008 because country_grp_code does not exist in mp_country table in SRDV database*/

				  EXEC SQL SELECT COUNTRY_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
	
				nd_country_grp_code.arr[nd_country_grp_code.len] = '\0';					
			}

			for (i=1;i <= d_country_grp_counter;i++)
				{
					if (strcmp(d_country_grp_code[i].arr,nd_country_grp_code.arr) == 0)
					{
						return 1;
					} 
				}
			return 0;
			}
err_exit:
return 0;
}
/***********************************************************************/

/***********************************************************************/
void get_patient_details_2()
{

int i;

d_sex.arr[0] = '\0';
d_nationality_code.arr[0] = '\0';
d_date_of_birth.arr[0] = '\0';
nd_country_grp_code.arr[0] = '\0';

	 EXEC SQL WHENEVER SQLERROR GOTO err_exit;

		if ((strcmp(d_episode_type.arr,"I") == 0) || 
			(strcmp(d_episode_type.arr,"O") == 0) ||
			(strcmp(d_episode_type.arr,"H") == 0))
			{
		    /* 
			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth, 
							TRUNC(sysdate - A.date_of_birth) age_in_days,
							TRUNC(months_between(sysdate,A.date_of_birth)/12) age_in_yrs
					   INTO d_sex,d_nationality_code,d_date_of_birth,
							d_age_in_days,d_age_in_years
					   FROM MP_PATIENT_MAST A	
					  WHERE A.patient_id = :d_patient_id;*/
		
			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth 
					   INTO d_sex,d_nationality_code,d_date_of_birth
					   FROM MP_PATIENT_MAST A	
					  WHERE A.patient_id = :d_patient_id;


			d_sex.arr[d_sex.len] = '\0';
			d_nationality_code.arr[d_nationality_code.len] = '\0';
			d_date_of_birth.arr[d_date_of_birth.len] = '\0';

			if (strcmp(d_nationality_code.arr,"NC") == 0) 
			{
				strcpy(nd_country_grp_code.arr,"NC");
				nd_country_grp_code.len = strlen(nd_country_grp_code.arr);
				}
			else
			{
	   			/*EXEC SQL SELECT COUNTRY_GRP_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
				  changed and added code on 18/01/2008 because country_grp_code does not exist in mp_country table in SRDV database*/

				  EXEC SQL SELECT COUNTRY_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
	
				nd_country_grp_code.arr[nd_country_grp_code.len] = '\0';					
			}

	
		for (i=1;i <= d_country_grp_counter;i++)
				{
					if (strcmp(d_country_grp_code[i].arr,nd_country_grp_code.arr) == 0)
					{
						d_country_grp_count[i]++;
					} 
				}
			}
		else
			{
			/*
			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth,
							TRUNC(sysdate - A.date_of_birth) age_in_days,
							TRUNC(months_between(sysdate,A.date_of_birth)/12) age_in_yrs
					   INTO d_sex,d_nationality_code,d_date_of_birth,
							d_age_in_days,d_age_in_years
					   FROM RL_PATIENT_MAST A
					  WHERE A.patient_id = :d_patient_id;*/

			EXEC SQL SELECT A.sex, nvl(A.nationality_code,'NC'), A.date_of_birth
					   INTO d_sex,d_nationality_code,d_date_of_birth
					   FROM RL_PATIENT_MAST A
					  WHERE A.patient_id = :d_patient_id;

			d_sex.arr[d_sex.len] = '\0';
			d_nationality_code.arr[d_nationality_code.len] = '\0';
			d_date_of_birth.arr[d_date_of_birth.len] = '\0';

			if (strcmp(d_nationality_code.arr,"NC") == 0) 
			{
				strcpy(nd_country_grp_code.arr,"NC");
				nd_country_grp_code.len = strlen(nd_country_grp_code.arr);
				}
			else
			{
	   			/*EXEC SQL SELECT COUNTRY_GRP_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
				  changed and added code on 18/01/2008 because country_grp_code does not exist in mp_country table in SRDV database*/

				  EXEC SQL SELECT COUNTRY_CODE
				  INTO nd_country_grp_code
			      FROM MP_COUNTRY
				  WHERE COUNTRY_CODE = :d_nationality_code;
	
				nd_country_grp_code.arr[nd_country_grp_code.len] = '\0';					
			}

			for (i=1;i <= d_country_grp_counter;i++)
				{
					if (strcmp(d_country_grp_code[i].arr,nd_country_grp_code.arr) == 0)
					{
						d_country_grp_count[i]++;
					} 
				}
			}
err_exit:
return;
}
/***********************************************************************/


/***********************************************************************/
void print_section_desc()
{
	d_section_desc.arr[0]	= '\0';  
	d_section_desc.len	= 0;

	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
	EXEC SQL SELECT	SUBSTR(LONG_NAME,1,30) 
			INTO	:d_section_desc
			FROM	RL_SECTION_CODE_lang_vw
			WHERE   SECTION_CODE = :d_section_code
			AND language_id = :language_id;	
	
	d_section_desc.arr[d_section_desc.len] = '\0';

  if (lncnt + 8 > MAX_LINES ) 
	page_break(); 

  fprintf(f1,"%-40.40s", d_section_desc.arr);


  return;

err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at get_section_desc() occured....");
   proc_exit();
}
/***********************************************************************/

/***********************************************************************/
print_workgroup_line()
 {
  int i;
  char string_var[200];
  print_spaces(1);
  

  
  //fprintf(f1,"%5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %7ld %7ld %7ld", d_age_m_0_6_days, d_age_f_0_6_days, d_age_m_7_28_days, d_age_f_7_28_days, d_age_m_30_365_days, d_age_f_30_365_days, d_age_m_1_4_years, d_age_f_1_4_years, d_age_m_5_14_years, d_age_f_5_14_years, d_age_m_15_24_years, d_age_f_15_24_years, d_age_m_25_44_years, d_age_f_25_44_years, d_age_m_45_64_years, d_age_f_45_64_years, d_age_m_65_years, d_age_f_65_years,d_workgroup_m_total,d_workgroup_f_total,d_workgroup_grand_total);
  
  if (NO_OF_RANGES >= 1)
  	    fprintf(f1,"%5ld %5ld ", d_age_m_0_6_days, d_age_f_0_6_days);
  if (NO_OF_RANGES >= 2)
        fprintf(f1,"%5ld %5ld ", d_age_m_7_28_days, d_age_f_7_28_days);
  if (NO_OF_RANGES >= 3)
       fprintf(f1,"%5ld %5ld ", d_age_m_30_365_days, d_age_f_30_365_days);
  if (NO_OF_RANGES >= 4)
       fprintf(f1,"%5ld %5ld ", d_age_m_1_4_years, d_age_f_1_4_years); 
  if (NO_OF_RANGES >= 5)
       fprintf(f1,"%5ld %5ld ", d_age_m_5_14_years, d_age_f_5_14_years); 
  if (NO_OF_RANGES >= 6)
       fprintf(f1,"%5ld %5ld ", d_age_m_15_24_years, d_age_f_15_24_years);
  if (NO_OF_RANGES >= 7)
       fprintf(f1,"%5ld %5ld ", d_age_m_25_44_years, d_age_f_25_44_years);
  if (NO_OF_RANGES >= 8)
       fprintf(f1,"%5ld %5ld ", d_age_m_45_64_years, d_age_f_45_64_years);
  if (NO_OF_RANGES >= 9)
       fprintf(f1,"%5ld %5ld ",d_age_m_65_years, d_age_f_65_years);

      fprintf(f1,"%7ld %7ld %7ld", d_workgroup_m_total,d_workgroup_f_total,d_workgroup_grand_total);
        
  fprintf(f1,"\n");
  print_line('-',175);
  lncnt += 2;
 }
/***********************************************************************/

/***********************************************************************/
print_total_line()
 {

  if (lncnt + 8 > MAX_LINES ) 
	page_break(); 

  print_spaces(34);

  //fprintf(f1," TOTAL:");
  fprintf(f1," %5.5s:",local_legend[11]);

  //fprintf(f1,"%5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %5ld %7ld %7ld %7ld", d_total_m_0_6_days, d_total_f_0_6_days, d_total_m_7_28_days, d_total_f_7_28_days, d_total_m_30_365_days, d_total_f_30_365_days, d_total_m_1_4_years, d_total_f_1_4_years, d_total_m_5_14_years, d_total_f_5_14_years, d_total_m_15_24_years, d_total_f_15_24_years, d_total_m_25_44_years, d_total_f_25_44_years, d_total_m_45_64_years, d_total_f_45_64_years, d_total_m_65_years, d_total_f_65_years,d_total_m,d_total_f,d_grand_total);

	  if (NO_OF_RANGES >= 1)
  		  fprintf(f1,"%5ld %5ld ", d_total_m_0_6_days, d_total_f_0_6_days);
	  if (NO_OF_RANGES >= 2)
		  fprintf(f1,"%5ld %5ld ", d_total_m_7_28_days, d_total_f_7_28_days);
	  if (NO_OF_RANGES >= 3)
		  fprintf(f1,"%5ld %5ld ", d_total_m_30_365_days, d_total_f_30_365_days);
	  if (NO_OF_RANGES >= 4)
		  fprintf(f1,"%5ld %5ld ", d_total_m_1_4_years, d_total_f_1_4_years); 
	  if (NO_OF_RANGES >= 5)
		  fprintf(f1,"%5ld %5ld ", d_total_m_5_14_years, d_total_f_5_14_years); 
	  if (NO_OF_RANGES >= 6)
		  fprintf(f1,"%5ld %5ld ", d_total_m_15_24_years, d_total_f_15_24_years);
	  if (NO_OF_RANGES >= 7)
		  fprintf(f1,"%5ld %5ld ", d_total_m_25_44_years, d_total_f_25_44_years);
	  if (NO_OF_RANGES >= 8)
		  fprintf(f1,"%5ld %5ld ", d_total_m_45_64_years, d_total_f_45_64_years);
	  if (NO_OF_RANGES >= 9)
		  fprintf(f1,"%5ld %5ld ",d_total_m_65_years, d_total_f_65_years);

      fprintf(f1,"%7ld %7ld %7ld", d_total_m,d_total_f,d_grand_total);


  fprintf(f1,"\n");
  lncnt += 1;
 }
/***********************************************************************/

print_country_count()
{
int i;
int line_len = 0;
char str[100];

  if (lncnt + 8 > MAX_LINES ) 
	page_break(); 

	for (i = 1;i<=d_country_grp_counter;i++)
	{
		if (line_len >= 160) 
		{
			line_len = 0;
			fprintf(f1,"\n");
		}

		print_spaces(5);
		line_len = line_len + 5;

		fprintf(f1,"%ld - ",d_country_grp_count[i]);
		ltoa(d_country_grp_count[i],str,10);
		line_len = line_len + strlen(str) + 3;

		if (strcmp(d_country_grp_code[i].arr,"NC") == 0)
		{
		//fprintf(f1,"Nationality Not defined");	
		//line_len += strlen("Nationality Not defined");
		fprintf(f1,"%23.23s",local_legend[19]);	
		line_len += strlen(local_legend[19]);
		}
		else
		{
		fprintf(f1,"%s",d_country_grp_code[i].arr);
		line_len += strlen(d_country_grp_code[i].arr);
		}
	}
}

/***********************************************************************/
init_workgroup_count()
 {
	d_age_m_0_6_days	= 0;  
	d_age_f_0_6_days	= 0; 
	d_age_m_7_28_days	= 0; 
	d_age_f_7_28_days	= 0; 
	d_age_m_30_365_days	= 0; 
	d_age_f_30_365_days	= 0;
	d_age_m_1_4_years	= 0; 
	d_age_f_1_4_years	= 0; 
	d_age_m_5_14_years	= 0;
	d_age_f_5_14_years	= 0;
	d_age_m_15_24_years	= 0;
	d_age_f_15_24_years	= 0;
	d_age_m_25_44_years	= 0;
	d_age_f_25_44_years	= 0;
	d_age_m_45_64_years	= 0;
	d_age_f_45_64_years	= 0; 
	d_age_m_65_years	= 0;
	d_age_f_65_years	= 0;

	d_workgroup_m_total = 0;
	d_workgroup_f_total = 0;
	d_workgroup_grand_total = 0;
 }				
/***********************************************************************/

/***********************************************************************/
init_total_count()
 {
		 d_total_m_0_6_days = 0;
		 d_total_f_0_6_days = 0;
		 d_total_m_7_28_days = 0;
		 d_total_f_7_28_days = 0;
	     d_total_m_30_365_days = 0;
	     d_total_f_30_365_days = 0;
	     d_total_m_1_4_years = 0;
	     d_total_f_1_4_years = 0;
	     d_total_m_5_14_years = 0;
	     d_total_f_5_14_years = 0;
	     d_total_m_15_24_years = 0;
	     d_total_f_15_24_years = 0;
	     d_total_m_25_44_years = 0;
	     d_total_f_25_44_years = 0;
		 d_total_m_45_64_years = 0;
		 d_total_f_45_64_years = 0;
	     d_total_m_65_years = 0;
	     d_total_f_65_years = 0;

   	     d_total_m = 0;
	     d_total_f = 0;
		 d_grand_total = 0;
 }				
/***********************************************************************/


/***********************************************************************/ 		 
do_test_count()
{
	/* Age range >= 0 and < 6 days -------- 0 + */

//	if ((d_age_in_days >= 0) && (d_age_in_days <= 6))

   		/*sprintf(string_var,"MONTH %d",nd_pgm_month);
    	disp_message(ERR_MESG,string_var);

		sprintf(string_var,"PATIENT ID %s",d_patient_id.arr);
    	disp_message(ERR_MESG,string_var);
	    

		sprintf(string_var,"IN MONTHS %f",d_age_in_months);
    	disp_message(ERR_MESG,string_var);

	    sprintf(string_var,"RANGE_1_FR %f",RANGE_1_FR);
    	disp_message(ERR_MESG,string_var);

	    sprintf(string_var,"RANGE_1_TO %f",RANGE_1_TO);
    	disp_message(ERR_MESG,string_var);*/
  	   

	if (NO_OF_RANGES >= 1)
	{
		if ((d_age_in_months >= RANGE_1_FR ) && (d_age_in_months < RANGE_1_TO ))
		  {	   
		   if(strcmp(d_sex.arr,"M") == 0 )  
			{
			 d_age_m_0_6_days = d_age_m_0_6_days + 1;
			 d_total_m_0_6_days = d_total_m_0_6_days + 1;
			 d_workgroup_m_total = d_workgroup_m_total+1;
			 d_total_m = d_total_m+1;
			}
		   
		   if ( strcmp(d_sex.arr,"F") == 0 )  
			{
			 d_age_f_0_6_days = d_age_f_0_6_days + 1;
			 d_total_f_0_6_days = d_total_f_0_6_days + 1;
	 		 d_workgroup_f_total = d_workgroup_f_total+1;
    		 d_total_f = d_total_f+1;

			}
		  }
      }

	/* Age range >= 7 and < 29 days  -------- 7 Days */

//	if ((d_age_in_days >=7 ) && (d_age_in_days <= 28 ))
	if (NO_OF_RANGES >= 2)
	{
	
	if ((d_age_in_months >=RANGE_2_FR ) && (d_age_in_months < RANGE_2_TO ))
	  {	   
	   if(strcmp(d_sex.arr,"M") == 0 )  
	    {
	     d_age_m_7_28_days = d_age_m_7_28_days  + 1;
		 d_total_m_7_28_days = d_total_m_7_28_days + 1;
		 d_workgroup_m_total = d_workgroup_m_total+1;
	     d_total_m = d_total_m+1;

	    }
	   
	   if ( strcmp(d_sex.arr,"F") == 0 )  
	    {
	     d_age_f_7_28_days = d_age_f_7_28_days + 1;
		 d_total_f_7_28_days = d_total_f_7_28_days + 1;
	 	 d_workgroup_f_total = d_workgroup_f_total+1;
    	 d_total_f = d_total_f+1;

	    }
	  }
	 }

	/* Age range >= 29 and < 365 days  -------- 29 Days */

//	if ((d_age_in_days >=29 ) && (d_age_in_days <= 364 ))
	if (NO_OF_RANGES >= 3)
	{
	
	if ((d_age_in_months >=RANGE_3_FR ) && (d_age_in_months < RANGE_3_TO ))
	  {	   
	   if(strcmp(d_sex.arr,"M") == 0 )  
	    {
	     d_age_m_30_365_days = d_age_m_30_365_days  + 1;
	     d_total_m_30_365_days = d_total_m_30_365_days  + 1;
		 d_workgroup_m_total = d_workgroup_m_total+1;
	     d_total_m = d_total_m+1;

	    }
	   
	   if ( strcmp(d_sex.arr,"F") == 0 )  
	    {
	    d_age_f_30_365_days = d_age_f_30_365_days  + 1;
	    d_total_f_30_365_days = d_total_f_30_365_days + 1;
	 	 d_workgroup_f_total = d_workgroup_f_total+1;
    	 d_total_f = d_total_f+1;

	    }
	  }
	  }

	/* Age range >= 1 and <= 4 Years   --------  1 - 4 Years */

//	if ((d_age_in_years >=1 ) && (d_age_in_years <= 4 ))
	if (NO_OF_RANGES >= 4)
	{
    
	if ((d_age_in_months >=RANGE_4_FR ) && (d_age_in_months < RANGE_4_TO ))
	  {	   
	   if(strcmp(d_sex.arr,"M") == 0 )  
	    {
	     d_age_m_1_4_years = d_age_m_1_4_years + 1;
	     d_total_m_1_4_years = d_age_m_1_4_years + 1;
		 d_workgroup_m_total = d_workgroup_m_total+1;
	     d_total_m = d_total_m+1;

	    }
	   
	   if ( strcmp(d_sex.arr,"F") == 0 )  
	    {
	     d_age_f_1_4_years = d_age_f_1_4_years  + 1;
	     d_total_f_1_4_years = d_total_f_1_4_years + 1;
	 	 d_workgroup_f_total = d_workgroup_f_total+1;
    	 d_total_f = d_total_f+1;
	    }
	  }
     }
	/* Age range >= 5 and <= 14 Years   --------  5 - 14 Years  */

//	if ((d_age_in_years >=5 ) && (d_age_in_years <= 14 ))
	if (NO_OF_RANGES >= 5)
	{

	if ((d_age_in_months >=RANGE_5_FR ) && (d_age_in_months < RANGE_5_TO ))
	  {	   
	   if(strcmp(d_sex.arr,"M") == 0 )  
	    {
	     d_age_m_5_14_years = d_age_m_5_14_years + 1;
	     d_total_m_5_14_years = d_total_m_5_14_years + 1;
		 d_workgroup_m_total = d_workgroup_m_total+1;
	     d_total_m = d_total_m+1;

	    }
	   
	   if ( strcmp(d_sex.arr,"F") == 0 )  
	    {
	     d_age_f_5_14_years = d_age_f_5_14_years + 1;
	     d_total_f_5_14_years = d_total_f_5_14_years + 1;
	 	 d_workgroup_f_total = d_workgroup_f_total+1;
    	 d_total_f = d_total_f+1;

	    }
	  }
    } 

	/* Age range >= 15 and <= 24 Years     --------  15 - 24 Years */
//	if ((d_age_in_years >= 15 ) && (d_age_in_years <= 24 ))
	if (NO_OF_RANGES >= 6)
	{
			if ((d_age_in_months >= RANGE_6_FR ) && (d_age_in_months < RANGE_6_TO ))
			  {	   
			   if(strcmp(d_sex.arr,"M") == 0 )  
				{
				 d_age_m_15_24_years = d_age_m_15_24_years + 1;
				 d_total_m_15_24_years = d_total_m_15_24_years + 1;
				 d_workgroup_m_total = d_workgroup_m_total+1;
				 d_total_m = d_total_m+1;

				}
			   
			   if ( strcmp(d_sex.arr,"F") == 0 )  
				{
				 d_age_f_15_24_years = d_age_f_15_24_years + 1;
				 d_total_f_15_24_years = d_total_f_15_24_years + 1;
	 			 d_workgroup_f_total = d_workgroup_f_total+1;
    			 d_total_f = d_total_f+1;

				}
			  }
      }
	/* Age range >= 25 and <= 44 Years    --------  25 - 44 Years */

	//if ((d_age_in_years >= 25 ) && (d_age_in_years <= 44 ))
		if (NO_OF_RANGES >= 7)
		{
		 if ((d_age_in_months >= RANGE_7_FR ) && (d_age_in_months < RANGE_7_TO ))
		  {	   
		   if(strcmp(d_sex.arr,"M") == 0 )  
			{
			 d_age_m_25_44_years = d_age_m_25_44_years + 1;
			 d_total_m_25_44_years = d_total_m_25_44_years + 1;
			 d_workgroup_m_total = d_workgroup_m_total+1;
			 d_total_m = d_total_m+1;

			}
		   if ( strcmp(d_sex.arr,"F") == 0 )  
			{
			 d_age_f_25_44_years = d_age_f_25_44_years + 1;
			 d_total_f_25_44_years = d_total_f_25_44_years + 1;
	 		 d_workgroup_f_total = d_workgroup_f_total+1;
    		 d_total_f = d_total_f+1;

			}
		  }
        }   
	
	/* Age range >= 45 and <= 64 Years    --------  45 - 64 Years */

	//if ((d_age_in_years >= 45 ) && (d_age_in_years <= 64 ))
	  if (NO_OF_RANGES >= 8)
	  {
			if ((d_age_in_months >= RANGE_8_FR ) && (d_age_in_months < RANGE_8_TO ))
			  {	   
			   if(strcmp(d_sex.arr,"M") == 0 )  
				{
				 d_age_m_45_64_years = d_age_m_45_64_years + 1;
				 d_total_m_45_64_years = d_total_m_45_64_years + 1;
				 d_workgroup_m_total = d_workgroup_m_total+1;
				 d_total_m = d_total_m+1;

				}
			   if ( strcmp(d_sex.arr,"F") == 0 )  
				{
				 d_age_f_45_64_years = d_age_f_45_64_years + 1;
				 d_total_f_45_64_years = d_total_f_45_64_years + 1;
	 			 d_workgroup_f_total = d_workgroup_f_total+1;
    			 d_total_f = d_total_f+1;

				}
			  }
        }

	/* Age range > 64     --------  65 ++ Years  */

	//if ((d_age_in_years > 64 ))
	  
	  if (NO_OF_RANGES >= 9)
	  {
		  if ((d_age_in_months > RANGE_9_FR ))
		   {	   
		     if(strcmp(d_sex.arr,"M") == 0 )  
		    	{
				 d_age_m_65_years = d_age_m_65_years + 1;
				 d_total_m_65_years = d_total_m_65_years + 1;
				 d_workgroup_m_total = d_workgroup_m_total+1;
				 d_total_m = d_total_m+1;

				}
			  if ( strcmp(d_sex.arr,"F") == 0 )  
				{
				 d_age_f_65_years = d_age_f_65_years + 1;
				 d_total_f_65_years = d_total_f_65_years + 1;
	 			 d_workgroup_f_total = d_workgroup_f_total+1;
    			 d_total_f = d_total_f+1;
				}
		  }
	   }

//	d_workgroup_m_total = d_age_m_0_6_days + d_age_m_7_28_days + d_age_m_30_365_days + d_age_m_1_4_years + d_age_m_5_14_years + d_age_m_15_24_years + d_age_m_25_44_years + d_age_m_45_64_years + d_age_m_65_years;
//	d_total_m = d_total_m_0_6_days + d_total_m_7_28_days + d_total_m_30_365_days + d_total_m_1_4_years + d_total_m_5_14_years + d_total_m_15_24_years + d_total_m_25_44_years + d_total_m_45_64_years + d_total_m_65_years;

//	d_workgroup_f_total = d_age_f_0_6_days + d_age_f_7_28_days + d_age_f_30_365_days + d_age_f_1_4_years + d_age_f_5_14_years + d_age_f_15_24_years + d_age_f_25_44_years + d_age_f_45_64_years + d_age_f_65_years;
//	d_total_f = d_total_f_0_6_days + d_total_f_7_28_days + d_total_f_30_365_days + d_total_f_1_4_years + d_total_f_5_14_years + d_total_f_15_24_years + d_total_f_25_44_years + d_total_f_45_64_years + d_total_f_65_years;

	d_workgroup_grand_total = d_workgroup_m_total +  d_workgroup_f_total;
	d_grand_total = d_total_m + d_total_f;
}
/***********************************************************************/

/***********************************************************************/
/* prints the master-detail record until the cursor is empty */
void do_report()
{
  void init_age_range();
  void get_header_dtls();
  void print_rep_header();
  void print_page_header();    
  void dclr_cur();
  int still_rec_left;
  char string_var[500]; 
  EXEC SQL WHENEVER SQLERROR GOTO err_exit;

  get_header_dtls();
  first_page_flg = 1;
  print_rep_header();
  init_age_range();
  first_page_flg = 0;

  // fprintf(f1,"");
  fprintf(f1,"\f"); 
  dclr_cur();
  open_section_cur();
  init_workgroup_count();
  
  init_total_count();
  get_country_group();
  
print_page_header();
  while (fetch_section_cur())
    {

	print_section_desc();
	open_patient_cur();
		while (fetch_patient_cur())
		{
		  if (strcmp(d_section_code.arr,v_section_code.arr) == 0)
		   {
			if (get_patient_details())
			{
				do_test_count();
			}
           } 
		}
	close_patient_cur();
    print_workgroup_line();
	init_workgroup_count();
	}
 
   close_section_cur();
   print_total_line();

   print_line('_',175);
  
  fprintf(f1,"\n\n");
  
  open_patient_cur_2();

  while (fetch_patient_cur_2())
		{
			get_patient_details_2();
		}

  close_patient_cur_2();
  
  print_country_count();

  fprintf(f1,"\n");

  print_line('_',175);
      
  fprintf(f1,"\n\n");
  
  print_spaces(71);
  
  //fprintf(f1,"** End of Report **\n");
  fprintf(f1,"** %13.13s **\n",local_legend[20]);

  fprintf(f1,"\f");  
return;
err_exit:
   EXEC SQL WHENEVER SQLERROR CONTINUE;
   EXEC SQL ROLLBACK WORK RELEASE;
   disp_message(ORA_MESG,"Oracle error at do_report() occured....");
   proc_exit();
}
/***********************************************************************/
