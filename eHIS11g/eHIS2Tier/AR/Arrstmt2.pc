/* Date :- 21-MAR-93      */
  
#include <stdio.h>
#include <string.h>
#include "E:\eHIS11g\eHIS2Tier\INCLUDE\gl.h"
/*
#define ERROR (sqlca.sqlcode < 0)
*/                                                       
                      
#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define DEST_NAME "arrstmt2.lis"

#define MAX_LINES 55
#define ESC 0x1B  
#define LENGTH_WORDS 65  /* added on 02/12/1999 */
#define LEGEND 1
          
#define SKIP_1  7                  
#define SKIP_2  1
#define SKIP_3  5
#define SKIP_4  15
#define SKIP_5  18
#define SKIP_6  08
#define SKIP_7  104
//#define SKIP_8  83
#define SKIP_8  25
#define SKIP_9  02
//#define SKIP_10 93
#define SKIP_10 35
#define SKIP_11 05
#define SKIP_12 34

/*
#define DEBUG 0
*/

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd      [132],
           hosp_name    [120],
           date_time    [20],
           user_id      [20],
           nd_pgm_date  [35];

   VARCHAR nd_facility_id                [3],
		   nd_session_id                 [16],
           nd_fm_cust_code               [12],
           nd_to_cust_code               [12],
           nd_fm_alpha_code              [11],
           nd_to_alpha_code              [11],
           nd_stmt_freq_code             [3],
           nd_patient_det                [3],
           nd_zero_bal_flag              [3],
           nd_cutoff_date                [13],
           cut_off_dt_prn                [13],
           nd_rep_order_flg              [3],
		   page_skip_flag                [3],
		   nd_fm_cust_type				 [3],
	       nd_to_cust_type				 [3],
           nd_fm_cust_group				 [3],
           nd_to_cust_group				 [3],
           nd_fm_anal_cd1				 [9],
           nd_to_anal_cd1				 [9],
           nd_fm_anal_cd2				 [9],
           nd_to_anal_cd2				 [9],
           nd_fm_anal_cd3				 [9],
           nd_to_anal_cd3				 [9],
           d_cust_cust_code              [9],
           d_cust_long_name_chinese      [101],    /*  CRF-0120  */
           d_cust_short_name_chinese     [101],    /*  CRF-0120  */
           d_cust_add1_desc_chinese      [61],
           d_cust_add2_desc_chinese      [61],
           d_cust_add3_desc_chinese      [61],
           d_cust_zip_desc_chinese       [31],
           d_cust_contact_name           [101],    /*  CRF-0120  */
           d_cust_contact_name_title     [61],    /*  CRF-0120  */
           d_tel_num                     [31],
  	       currency						 [7],  /* added on 02/12/1999 */
		   subcur						 [7],
           d_ar_pend_doc_type_code       [7],
           d_ar_pend_doc_num             [9],
           d_ar_pend_doc_date            [12],
           d_ar_pend_bill_num            [9],
           d_ar_pend_bill_doc_type_code  [7],
           d_ar_pend_patient_id          [21],
           d_ar_pend_cust_ref            [16],
           d_ar_pend_due_date            [12],
           d_ar_pend_narration           [51],
		   d_ar_pend_tran_desc           [9],
           d_ar_mp_patient_name          [61],
		   d_misc_cust_long_name		 [101],    /*  CRF-0120  */
		   d_misc_cust_short_name		 [101],    /*  CRF-0120  */
		   d_misc_cust_add1_desc		 [61],
		   d_misc_cust_add2_desc		 [61],
		   d_misc_cust_add3_desc		 [61],
		   d_misc_cust_zip_desc			 [31],
		   d_misc_cust_long_name_chi	 [101],    /*  CRF-0120  */
		   d_misc_cust_short_name_chi	 [101],    /*  CRF-0120  */
		   d_misc_cust_add1_desc_chi	 [61],
		   d_misc_cust_add2_desc_chi	 [61],
		   d_misc_cust_add3_desc_chi	 [61],
		   d_misc_cust_zip_desc_chi		 [31],
		   d_misc_tel_num				 [31],
           d_misc_cust_contact_name      [101],    /*  CRF-0120  */
           d_misc_cust_contact_name_tit	 [61],    /*  CRF-0120  */
		   d_ar_pend_bill_type_code      [3],
		   d_ar_cust_doc_type_code       [7],
		   d_ar_cust_doc_num             [9],
		   d_ar_cust_doc_date            [12],
  		   cond_amount                   [500],
		   d_ar_cust_ref                 [16];


   VARCHAR p_language_id				 [4];

char		d_misc_customer_flag,
 			d_chinese_reporting_flag,
			temp_var[10],
   			amt_in_words	 [10][133], /* added on 02/12/1999 */
			corder_str    [81]; 
char		amt_in_word[81]; 
char *str_temp;
char   string_var [200];
int  header_allowed = 1, n1;
int split_text(char *str1,int number1,char *str2,int number);  

double     d_ar_pend_pending_amt,
           d_ar_pend_payable_amt,
           d_ar_pend_alloc_amt,
           d_ar_pend_negative_amt,
           tot_payable_amt,
           tot_alloc_amt,
           tot_pending_amt,
		   tot_pending_amt1,
           nd_open_credit,
           amt_slot1,
           amt_slot2,
           amt_slot3,
           amt_slot4,
           amt_slot5,
	       d_ar_cust_amount;

int d_ar_pend_sign_amt,
    age_days,
    nd_age_slot1, 
    nd_age_slot2, 
    nd_age_slot3,
    nd_age_slot4, 
    nd_age_slot5,
    no_of_decimal;

char  filename[150];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "E:\eHIS11g\eHIS2Tier\INCLUDE\winproc.h"

FILE *fp;
int lctr = 0,pctr =0;
int cust_lctr = 0, cust_pctr = 0;
int cust_trn_print;
int cust_chg;
int open_print_flag = 0;
double grand_tot = 0;
int g_print_stat = 0;
int g_skip_rec;
double g_alloc_amt;


void proc_main(argc,argv)
char *argv[];
int argc;
{

   strcpy(filename,WORKING_DIR);
   strcpy(OUTPUT_FILE_NAME,argv[5]);
   strcat(filename,OUTPUT_FILE_NAME);

   //strcat(filename,"arrstmt2.lis");

   
   if (argc != 6)
   {
      proc_exit();
   }

   
   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"ARRSTMT");

   
    
   if(sql_connect() == -1)
   {
      if (uid_pwd.len == 0)
      proc_exit();
   }

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);
   strcpy(g_facility_id,argv[4]);

   set_meduser_role();
   strcpy(p_language_id.arr,l_language_id.arr);
   p_language_id.len = l_language_id.len;
  
   
   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);


   nd_fm_cust_code.arr[0]        = '\0';
   nd_to_cust_code.arr[0]        = '\0';
   nd_fm_alpha_code.arr[0]       = '\0';
   nd_to_alpha_code.arr[0]       = '\0';
   nd_stmt_freq_code.arr[0]      = '\0';
   nd_patient_det.arr[0]         = '\0';
   nd_zero_bal_flag.arr[0]       = '\0';
   nd_cutoff_date.arr[0]         = '\0';
   nd_rep_order_flg.arr[0]       = '\0';
   page_skip_flag.arr[0]         = '\0';

   nd_fm_cust_type.arr[0]        = '\0';
   nd_to_cust_type.arr[0]        = '\0';
   nd_fm_cust_group.arr[0]       = '\0';
   nd_to_cust_group.arr[0]       = '\0';
   nd_fm_anal_cd1.arr[0]         = '\0';
   nd_to_anal_cd1.arr[0]         = '\0';
   nd_fm_anal_cd2.arr[0]         = '\0';
   nd_to_anal_cd2.arr[0]         = '\0';
   nd_fm_anal_cd3.arr[0]         = '\0';
   nd_to_anal_cd3.arr[0]         = '\0';

   nd_fm_cust_type.len           = 0;
   nd_to_cust_type.len           = 0;
   nd_fm_cust_group.len          = 0;
   nd_to_cust_group.len          = 0;
   nd_fm_anal_cd1.len            = 0;
   nd_to_anal_cd1.len            = 0;
   nd_fm_anal_cd2.len            = 0;
   nd_to_anal_cd2.len            = 0;
   nd_fm_anal_cd3.len            = 0;
   nd_to_anal_cd3.len            = 0;



   nd_fm_cust_code.len           = 0;
   nd_to_cust_code.len           = 0;
   nd_fm_alpha_code.len          = 0;
   nd_to_alpha_code.len          = 0;
   nd_stmt_freq_code.len         = 0;
   nd_patient_det.len            = 0;
   nd_zero_bal_flag.len          = 0;
   nd_cutoff_date.len            = 0;
   nd_rep_order_flg.len          = 0;
   page_skip_flag.len            = 0;


   EXEC SQL SELECT operating_facility_id,
				   PARAM1,PARAM2,PARAM3,PARAM4,
                   PARAM5,PARAM6,PARAM7,PARAM8,
                   PARAM9,PARAM10,
				   PARAM11,
                   PARAM12,
                   PARAM13,
                   PARAM14,
                   PARAM15,
                   PARAM16,
                   PARAM17,
                   PARAM18,
                   PARAM19,
				   PARAM20
              INTO :nd_facility_id,
				   :nd_fm_cust_code,
                   :nd_to_cust_code,
                   :nd_fm_alpha_code,
                   :nd_to_alpha_code,
                   :nd_stmt_freq_code,
                   :nd_zero_bal_flag,
                   :nd_patient_det,
                   :nd_cutoff_date,
                   :nd_rep_order_flg,
				   :page_skip_flag,
				   :nd_fm_cust_type,
				   :nd_to_cust_type,
                   :nd_fm_cust_group,
                   :nd_to_cust_group,
                   :nd_fm_anal_cd1,
                   :nd_to_anal_cd1,
                   :nd_fm_anal_cd2,
                   :nd_to_anal_cd2,
                   :nd_fm_anal_cd3,
                   :nd_to_anal_cd3
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARRSTMT'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;

   if (ERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_fm_cust_code.arr[nd_fm_cust_code.len]        = '\0';
   nd_to_cust_code.arr[nd_to_cust_code.len]        = '\0';
   nd_fm_alpha_code.arr[nd_fm_alpha_code.len]      = '\0';
   nd_to_alpha_code.arr[nd_to_alpha_code.len]      = '\0';
   nd_stmt_freq_code.arr[nd_stmt_freq_code.len]    = '\0';
   nd_patient_det.arr[nd_patient_det.len]          = '\0';
   nd_zero_bal_flag.arr[nd_zero_bal_flag.len]      = '\0';
   nd_cutoff_date.arr[nd_cutoff_date.len]          = '\0';
   nd_rep_order_flg.arr[nd_rep_order_flg.len]      = '\0';
   page_skip_flag.arr[page_skip_flag.len]          = '\0';
   nd_fm_cust_type.arr[nd_fm_cust_type.len]        = '\0';
   nd_to_cust_type.arr[nd_to_cust_type.len]        = '\0';
   nd_fm_cust_group.arr[nd_fm_cust_group.len]      = '\0';
   nd_to_cust_group.arr[nd_to_cust_group.len]      = '\0';
   nd_fm_anal_cd1.arr[nd_fm_anal_cd1.len]          = '\0';
   nd_to_anal_cd1.arr[nd_to_anal_cd1.len]          = '\0';
   nd_fm_anal_cd2.arr[nd_fm_anal_cd2.len]          = '\0';
   nd_to_anal_cd2.arr[nd_to_anal_cd2.len]          = '\0';
   nd_fm_anal_cd3.arr[nd_fm_anal_cd3.len]          = '\0';
   nd_to_anal_cd3.arr[nd_to_anal_cd3.len]          = '\0';

   

   start_prog_msg();

   

   fetch_detls();

   

   open_files();

   
   
   declare_cursors();

   

/*- By Venkat on 25/10/1998 To Cater to Customerwise Page skip-*/

   
   if(strcmp(page_skip_flag.arr,"N") == 0){
    print_header();
     }
/*-------------------------------------------------------------------*/

   while(fetch_customer())
   {
        cust_lctr = 0;cust_pctr = 0;
        open_pending_doc();

       if(d_misc_customer_flag == 'Y') {

            while(fetch_pending_doc())
            {
		if(g_skip_rec) 
		    continue;
			    print_head(0);
                fetch_patient_name();
                print_details();
                process_ageing();
                print_footer();
	        g_print_stat=1;
            }

       }
       else {
  
          while(fetch_pending_doc())
          {
	      if(g_skip_rec) 
		    continue;
              cust_pctr++;

              if (cust_pctr == 1 )
			  {
	/*-- Added By Venkat to cater to provide Page skip (Customer wise)---*/

	if(strcmp(page_skip_flag.arr,"N") != 0){

	 if (header_allowed == 1)
			{
			 pctr = 0;
			 print_header();
			 }
			 
		 }
	/*-------------------------------------------------------------------*/
			  print_head(0);
				}
              fetch_patient_name();
              print_details();
              process_ageing();
	      g_print_stat=1;
          }

          if (cust_pctr != 0)
              print_footer();
       }
   }
   print_end_of_rep();

   EXEC SQL DELETE FROM SY_PROG_PARAM
                  WHERE PGM_ID     = 'ARRSTMT'
                    AND SESSION_ID = :nd_session_id
                    AND PGM_DATE   = :nd_pgm_date;
   if (ERROR)   
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

   strcpy(filename,WORKING_DIR);
    strcat(filename,"arrstmt2.lis");

   fclose(fp);  
   end_prog_msg();
   EXEC SQL COMMIT WORK RELEASE;

   return;
}

fetch_detls()
{
   hosp_name.arr[0]      = '\0';
   date_time.arr[0]      = '\0';
   user_id.arr[0]        = '\0';
   cut_off_dt_prn.arr[0] = '\0';

   hosp_name.len      = 0;
   date_time.len      = 0;
   user_id.len        = 0;
   cut_off_dt_prn.len = 0;

   EXEC SQL SELECT ACC_ENTITY_NAME, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                   USER,
                   TO_CHAR(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY'),'DD/MM/YYYY'),
    	   	       BASE_CURRENCY,BASE_CURRENCY_DEC ,nvl(no_of_decimal,2)
              INTO :hosp_name, :date_time, :user_id,
                   :cut_off_dt_prn,currency,subcur,:no_of_decimal
              FROM SY_ACC_ENTITY
			 WHERE ACC_ENTITY_ID = :nd_facility_id ;

   if (ERROR)
         err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

   hosp_name.arr[hosp_name.len]           = '\0';
   date_time.arr[date_time.len]           = '\0';
   user_id.arr[user_id.len]               = '\0';
   cut_off_dt_prn.arr[cut_off_dt_prn.len] = '\0';

    currency.arr[currency.len]			  = '\0';  /* added on 02/12/1999 */
   subcur.arr[subcur.len]				  = '\0';


   EXEC SQL SELECT DAYS_AGE_SLOT_1, DAYS_AGE_SLOT_2,
                   DAYS_AGE_SLOT_3, DAYS_AGE_SLOT_4,
                   DAYS_AGE_SLOT_5
              INTO :nd_age_slot1, :nd_age_slot2,
                   :nd_age_slot3, :nd_age_slot4,
                   :nd_age_slot5
              FROM AR_PARAMETER
			  WHERE OPERATING_FACILITY_ID = :nd_facility_id ;/*ADDED FOR GDOH-CRF-0107*/

   if (ERROR)
         err_mesg("SELECT failed on table AR_PARAMETER",0,"");
 
   if (NOT_FOUND)
         err_mesg("Record not found in AR_PARAMETER",0,"");
}
 
open_files()
{
//	strcpy(OUTPUT_FILE_NAME,"ARRSTMT2.LIS");   

   char		text_msg[101];

   if ((fp = fopen(filename,"w")) == NULL)
   {
        sprintf(text_msg,"Error While Opening File %s",filename);
		err_mesg(text_msg,0,"");

		//err_mesg("\nError while opening File arrstmt.lis\n",0,"");
        exit(0);
   }
   
   print_title();
   

}

declare_cursors()
{
    EXEC SQL DECLARE AR_CUSTOMER_CUR1 CURSOR FOR
        SELECT CUST_CODE,
               DECODE(CHINESE_REPORTING_FLAG,'Y',LONG_NAME_CHINESE,LONG_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',SHORT_NAME_CHINESE,SHORT_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD1_DESC_CHINESE,ADD1_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD2_DESC_CHINESE,ADD2_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD3_DESC_CHINESE,ADD3_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ZIP_DESC_CHINESE,ZIP_DESC),
               CONTACT_NAME,
               CONTACT_NAME_TITLE,
	       MISC_CUSTOMER_FLAG,
	       CHINESE_REPORTING_FLAG,
	       TEL_NUM
          FROM AR_CUSTOMER
         WHERE STMT_FREQ_CODE = NVL(:nd_stmt_freq_code,'W')
           AND CUST_CODE BETWEEN 
                    NVL(:nd_fm_cust_code,'        ')
                AND NVL(:nd_to_cust_code,'~~~~~~~~')
            AND NVL(PAT_COM_FLAG,'X') = DECODE(:nd_patient_det,'Y','Y',
                                          NVL(PAT_COM_FLAG,'X'))
           AND CUST_TYPE_CODE BETWEEN NVL(:nd_fm_cust_type,'  ')
               AND NVL(:nd_to_cust_type,'~~')
           AND CUST_GROUP_CODE BETWEEN NVL(:nd_fm_cust_group,'  ')
                AND NVL(:nd_to_cust_group,'~~')
           AND NVL(ANALYSIS_1_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd1,'        ')
                 AND NVL(:nd_to_anal_cd1,'~~~~~~~~')
           AND NVL(ANALYSIS_2_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd2,'        ')
                 AND NVL(:nd_to_anal_cd2,'~~~~~~~~')
           AND NVL(ANALYSIS_3_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd3,'        ')
                 AND NVL(:nd_to_anal_cd3,'~~~~~~~~')
           
               ORDER BY CUST_CODE;

      EXEC SQL DECLARE AR_CUSTOMER_CUR2 CURSOR FOR
        SELECT CUST_CODE,
               DECODE(CHINESE_REPORTING_FLAG,'Y',LONG_NAME_CHINESE,LONG_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',SHORT_NAME_CHINESE,SHORT_NAME),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD1_DESC_CHINESE,ADD1_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD2_DESC_CHINESE,ADD2_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ADD3_DESC_CHINESE,ADD3_DESC),
               DECODE(CHINESE_REPORTING_FLAG,'Y',ZIP_DESC_CHINESE,ZIP_DESC),
               CONTACT_NAME,
               CONTACT_NAME_TITLE,
	       MISC_CUSTOMER_FLAG,
	       CHINESE_REPORTING_FLAG,
	       TEL_NUM
          FROM AR_CUSTOMER
         WHERE STMT_FREQ_CODE = NVL(:nd_stmt_freq_code,'W')
           AND CUST_ALPHA_CODE BETWEEN 
                    NVL(:nd_fm_alpha_code,'          ')
                AND NVL(:nd_to_alpha_code,'~~~~~~~~~~')
            AND NVL(PAT_COM_FLAG,'X') = DECODE(:nd_patient_det,'Y','Y',
                                         NVL(PAT_COM_FLAG,'X'))
			           AND CUST_TYPE_CODE BETWEEN NVL(:nd_fm_cust_type,'  ')
               AND NVL(:nd_to_cust_type,'~~')
           AND CUST_GROUP_CODE BETWEEN NVL(:nd_fm_cust_group,'  ')
                AND NVL(:nd_to_cust_group,'~~')
           AND NVL(ANALYSIS_1_CODE,'X') 
               BETWEEN NVL(:nd_fm_anal_cd1,'        ')
                 AND NVL(:nd_to_anal_cd1,'~~~~~~~~')
           AND NVL(ANALYSIS_2_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd2,'        ')
                 AND NVL(:nd_to_anal_cd2,'~~~~~~~~')
           AND NVL(ANALYSIS_3_CODE,'X')
               BETWEEN NVL(:nd_fm_anal_cd3,'        ')
                 AND NVL(:nd_to_anal_cd3,'~~~~~~~~')

          
          ORDER BY CUST_ALPHA_CODE,CUST_CODE;
      
    EXEC SQL DECLARE AR_PENDING_DOC_CUR CURSOR FOR
              SELECT DOC_TYPE_CODE,
                     DOC_NUM,
                     TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
                     BILL_NUM,
                     BILL_DOC_TYPE_CODE,
                     PATIENT_ID,
                     CUST_REF,
                     NVL(CEIL(TO_DATE(:nd_cutoff_date,'DD/MM/YYYY') - NVL(BASE_DATE,DOC_DATE)),0),
                     NVL(PENDING_AMT,0), NVL(PAYABLE_AMT,0),
                     NVL(PENDING_AMT,0) - NVL(PAYABLE_AMT,0),
                     SIGN(PENDING_AMT),
                     DECODE(SIGN(NVL(PENDING_AMT,0)),-1,-NVL(PENDING_AMT,0),
                              NVL(PENDING_AMT,0)),
		    MISC_CUST_LONG_NAME,
		    MISC_CUST_SHORT_NAME,
		    MISC_CUST_ADD1_DESC,
		    MISC_CUST_ADD2_DESC,
		    MISC_CUST_ADD3_DESC,
		    MISC_CUST_ZIP_DESC,
		    MISC_CUST_LONG_NAME_CHINESE,
		    MISC_CUST_SHORT_NAME_CHINESE,
		    MISC_CUST_ADD1_DESC_CHINESE,
		    MISC_CUST_ADD2_DESC_CHINESE,
		    MISC_CUST_ADD3_DESC_CHINESE,
		    MISC_CUST_ZIP_DESC_CHINESE,
		    CONTACT_NAME,
		    CONTACT_NAME_TITLE,
		    TEL_NUM,
		    BILL_TYPE_CODE,
		    TO_CHAR(DUE_DATE,'DD/MM/YYYY'), 
		    NARRATION,
			decode(trn_type_code,'1','INVOICE','2','DEBIT  ','3','CREDIT ','4','ADJUST ','5','RECEIPT','6','REFUND ',' ')
                FROM AR_PENDING_DOC
               WHERE  OPERATING_FACILITY_ID = :nd_facility_id /*ADDED FOR GDOH-CRF-0107*/
			     AND CUST_CODE = :d_cust_cust_code
                 AND NVL(DOC_DATE,BASE_DATE) <= TO_DATE(:nd_cutoff_date,'DD/MM/YYYY')
               ORDER BY DOC_DATE,DOC_TYPE_CODE,DOC_NUM;

    EXEC SQL DECLARE AR_PATIENT_CUR CURSOR FOR
              SELECT LTRIM(SUBSTR(RTRIM(TITLE_CODE)||' '||SHORT_NAME,1,26))
                FROM MP_PATIENT_MAST
               WHERE PATIENT_ID = :d_ar_pend_patient_id;

    EXEC SQL DECLARE AR_CUST_TRN_CUR CURSOR FOR
	     SELECT  DOC_TYPE_CODE,
		     DOC_NUM,
		     TO_CHAR(DOC_DATE,'DD/MM/YYYY'),
		     CUST_REF,
		     AMOUNT
	     FROM AR_CUST_TRN
	     WHERE  operating_facility_id=:nd_facility_id
         and	 CUST_CODE = :d_cust_cust_code
	     AND     ORG_DOC_TYPE_CODE = :d_ar_pend_doc_type_code
	     AND     ORG_DOC_NUM       = :d_ar_pend_doc_num
	     AND     RPAD(ORG_DOC_TYPE_CODE,6,' ')||TO_CHAR(ORG_DOC_NUM) <>
	             RPAD(DOC_TYPE_CODE,6,' ')||TO_CHAR(DOC_NUM)
	     AND    DOC_DATE <= TO_DATE(:nd_cutoff_date,'DD/MM/YYYY');

     
    if (nd_rep_order_flg.arr[0] == 'C')
    {
         EXEC SQL OPEN AR_CUSTOMER_CUR1;
         if (ERROR)
            err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR1",0,"");
    }
    else
    {
         EXEC SQL OPEN AR_CUSTOMER_CUR2;
         if (ERROR)
            err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR2",0,"");
     }

}

fetch_customer()
{

d_cust_cust_code.arr[0]                = '\0';
d_cust_long_name_chinese.arr[0]        = '\0';
d_cust_short_name_chinese.arr[0]       = '\0';
d_cust_add1_desc_chinese.arr[0]        = '\0';
d_cust_add2_desc_chinese.arr[0]        = '\0';
d_cust_add3_desc_chinese.arr[0]        = '\0';
d_cust_zip_desc_chinese.arr[0]         = '\0';
d_cust_contact_name.arr[0]             = '\0';
d_cust_contact_name_title.arr[0]       = '\0';
d_misc_customer_flag                   = '\0';
d_chinese_reporting_flag               = '\0';
d_tel_num.arr[0]                       = '\0';              

d_cust_cust_code.len                   = 0;
d_cust_long_name_chinese.len           = 0;
d_cust_short_name_chinese.len          = 0;
d_cust_add1_desc_chinese.len           = 0;
d_cust_add2_desc_chinese.len           = 0;
d_cust_add3_desc_chinese.len           = 0;
d_cust_zip_desc_chinese.len            = 0;
d_cust_contact_name.len                = 0;
d_cust_contact_name_title.len          = 0;
d_tel_num.len                          = 0;

    if (nd_rep_order_flg.arr[0] == 'C')
    {
        EXEC SQL FETCH AR_CUSTOMER_CUR1
                  INTO :d_cust_cust_code,
                       :d_cust_long_name_chinese,
                       :d_cust_short_name_chinese,
                       :d_cust_add1_desc_chinese,
                       :d_cust_add2_desc_chinese,
                       :d_cust_add3_desc_chinese,
                       :d_cust_zip_desc_chinese,
                       :d_cust_contact_name,
                       :d_cust_contact_name_title,
		       :d_misc_customer_flag,
		       :d_chinese_reporting_flag,
		       :d_tel_num;
        if (ERROR)
            err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR1",0,"");
     }
     else
     {
        EXEC SQL FETCH AR_CUSTOMER_CUR2
                  INTO :d_cust_cust_code,
                       :d_cust_long_name_chinese,
                       :d_cust_short_name_chinese,
                       :d_cust_add1_desc_chinese,
                       :d_cust_add2_desc_chinese,
                       :d_cust_add3_desc_chinese,
                       :d_cust_zip_desc_chinese,
                       :d_cust_contact_name,
                       :d_cust_contact_name_title,
		       :d_misc_customer_flag,
		       :d_chinese_reporting_flag,
		       :d_tel_num;
        if (ERROR)
            err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR2",0,"");
     }
d_cust_cust_code.arr[d_cust_cust_code.len] = '\0';
d_cust_long_name_chinese.arr[d_cust_long_name_chinese.len] = '\0';
d_cust_short_name_chinese.arr[d_cust_short_name_chinese.len] = '\0';
d_cust_add1_desc_chinese.arr[d_cust_add1_desc_chinese.len] = '\0';
d_cust_add2_desc_chinese.arr[d_cust_add2_desc_chinese.len] = '\0';
d_cust_add3_desc_chinese.arr[d_cust_add3_desc_chinese.len] = '\0';
d_cust_zip_desc_chinese.arr[d_cust_zip_desc_chinese.len] = '\0';
d_cust_contact_name.arr[d_cust_contact_name.len]               = '\0';
d_cust_contact_name_title.arr[d_cust_contact_name_title.len]    = '\0';
d_tel_num.arr[d_tel_num.len] = '\0';

   if (LAST_ROW)
       return(0);
   else
       return(1);
}

open_pending_doc()
{
    EXEC SQL OPEN AR_PENDING_DOC_CUR;
    if (ERROR)
         err_mesg("OPEN failed on cursor AR_PENDING_DOC_CUR",0,"");
}

fetch_pending_doc()
{

g_skip_rec = 0;
header_allowed = 1;

d_ar_pend_doc_type_code.arr[0]            = '\0';
d_ar_pend_doc_num.arr[0]                  = '\0';
d_ar_pend_doc_date.arr[0]                 = '\0';
d_ar_pend_bill_num.arr[0]                 = '\0';
d_ar_pend_bill_doc_type_code.arr[0]       = '\0';
d_ar_pend_patient_id.arr[0]               = '\0';
d_ar_pend_cust_ref.arr[0]                 = '\0';
d_misc_cust_long_name.arr[0]       = '\0';
d_misc_cust_short_name.arr[0]      = '\0';
d_misc_cust_add1_desc.arr[0]       = '\0';
d_misc_cust_add2_desc.arr[0]       = '\0';
d_misc_cust_add3_desc.arr[0]       = '\0';
d_misc_cust_zip_desc.arr[0]        = '\0';
d_misc_cust_long_name_chi.arr[0]   = '\0';
d_misc_cust_short_name_chi.arr[0]  = '\0';
d_misc_cust_add1_desc_chi.arr[0]   = '\0';
d_misc_cust_add2_desc_chi.arr[0]   = '\0';
d_misc_cust_add3_desc_chi.arr[0]   = '\0';
d_misc_cust_zip_desc_chi.arr[0]    = '\0';
d_misc_cust_contact_name.arr[0]    = '\0';
d_misc_cust_contact_name_tit.arr[0]  = '\0';
d_misc_tel_num.arr[0]              = '\0';
d_ar_pend_bill_type_code.arr[0]    = '\0';
d_ar_pend_due_date.arr[0]          = '\0';
d_ar_pend_narration.arr[0]          = '\0';
d_ar_pend_tran_desc.arr[0]          = '\0';

d_ar_pend_pending_amt                     = 0;
d_ar_pend_payable_amt                     = 0;
d_ar_pend_alloc_amt                       = 0;
age_days                        = 0;


d_ar_pend_doc_type_code.len               = 0;
d_ar_pend_doc_num.len                     = 0;
d_ar_pend_doc_date.len                    = 0;
d_ar_pend_bill_num.len                    = 0;
d_ar_pend_bill_doc_type_code.len          = 0;
d_ar_pend_patient_id.len                  = 0;
d_ar_pend_cust_ref.len                    = 0;
d_misc_cust_long_name.len          = 0;
d_misc_cust_short_name.len         = 0;
d_misc_cust_add1_desc.len          = 0;
d_misc_cust_add2_desc.len          = 0;
d_misc_cust_add3_desc.len          = 0;
d_misc_cust_zip_desc.len           = 0;
d_misc_cust_long_name_chi.len      = 0;
d_misc_cust_short_name_chi.len     = 0;
d_misc_cust_add1_desc_chi.len      = 0;
d_misc_cust_add2_desc_chi.len      = 0;
d_misc_cust_add3_desc_chi.len      = 0;
d_misc_cust_zip_desc_chi.len       = 0;
d_misc_cust_contact_name.len       = 0;
d_misc_cust_contact_name_tit.len = 0;
d_misc_tel_num.len                 = 0;
d_ar_pend_bill_type_code.len       = 0;
d_ar_pend_due_date.len             = 0;
d_ar_pend_narration.len            = 0;
d_ar_pend_tran_desc.len            = 0;

    EXEC SQL FETCH AR_PENDING_DOC_CUR
              INTO :d_ar_pend_doc_type_code,
                   :d_ar_pend_doc_num,
                   :d_ar_pend_doc_date,
                   :d_ar_pend_bill_num,
                   :d_ar_pend_bill_doc_type_code,
                   :d_ar_pend_patient_id,
                   :d_ar_pend_cust_ref,
                   :age_days,
                   :d_ar_pend_pending_amt,
                   :d_ar_pend_payable_amt,
                   :d_ar_pend_alloc_amt,
                   :d_ar_pend_sign_amt,
                   :d_ar_pend_negative_amt,
				   :d_misc_cust_long_name,
				   :d_misc_cust_short_name,
				   :d_misc_cust_add1_desc,
				   :d_misc_cust_add2_desc,
				   :d_misc_cust_add3_desc,
				   :d_misc_cust_zip_desc,
				   :d_misc_cust_long_name_chi,
				   :d_misc_cust_short_name_chi,
				   :d_misc_cust_add1_desc_chi,
				   :d_misc_cust_add2_desc_chi,
				   :d_misc_cust_add3_desc_chi,
				   :d_misc_cust_zip_desc_chi,
                   :d_misc_cust_contact_name,
                   :d_misc_cust_contact_name_tit,
                   :d_misc_tel_num,
                   :d_ar_pend_bill_type_code,
		   :d_ar_pend_due_date,
		   :d_ar_pend_narration,
		   :d_ar_pend_tran_desc;
    if (ERROR)
         err_mesg("FETCH failed on cursor AR_PENDING_DOC_CUR",0,"");

  if(NOT_FOUND)
  {
     header_allowed = 0;
	 return (0);
	 }
   else
   {
   
	header_allowed = 1;
	
	}
  
   	
  if (LAST_ROW){
      return(0);
	  }

d_ar_pend_doc_type_code.arr[d_ar_pend_doc_type_code.len] = '\0';
d_ar_pend_doc_num.arr[d_ar_pend_doc_num.len] = '\0';
d_ar_pend_doc_date.arr[d_ar_pend_doc_date.len] = '\0';
d_ar_pend_bill_num.arr[d_ar_pend_bill_num.len] = '\0';
d_ar_pend_bill_doc_type_code.arr[d_ar_pend_bill_doc_type_code.len] = '\0';
d_ar_pend_patient_id.arr[d_ar_pend_patient_id.len] = '\0';
d_ar_pend_cust_ref.arr[d_ar_pend_cust_ref.len] = '\0';
d_misc_cust_long_name.arr[d_misc_cust_long_name.len] = '\0';
d_misc_cust_short_name.arr[d_misc_cust_short_name.len] = '\0';
d_misc_cust_add1_desc.arr[d_misc_cust_add1_desc.len] = '\0';
d_misc_cust_add2_desc.arr[d_misc_cust_add2_desc.len] = '\0';
d_misc_cust_add3_desc.arr[d_misc_cust_add3_desc.len] = '\0';
d_misc_cust_zip_desc.arr[d_misc_cust_zip_desc.len] = '\0';
d_misc_cust_long_name_chi.arr[d_misc_cust_long_name_chi.len] = '\0';
d_misc_cust_short_name_chi.arr[d_misc_cust_short_name_chi.len] = '\0';
d_misc_cust_add1_desc_chi.arr[d_misc_cust_add1_desc_chi.len] = '\0';
d_misc_cust_add2_desc_chi.arr[d_misc_cust_add2_desc_chi.len] = '\0';
d_misc_cust_add3_desc_chi.arr[d_misc_cust_add3_desc_chi.len] = '\0';
d_misc_cust_zip_desc_chi.arr[d_misc_cust_zip_desc_chi.len] = '\0';
d_misc_cust_contact_name.arr[d_misc_cust_contact_name.len]  = '\0';
d_misc_cust_contact_name_tit.arr[d_misc_cust_contact_name_tit.len]  = '\0';
d_misc_tel_num.arr[d_misc_tel_num.len]    = '\0';
d_ar_pend_bill_type_code.arr[d_ar_pend_bill_type_code.len]   = '\0';
d_ar_pend_due_date.arr[d_ar_pend_due_date.len]       = '\0';
d_ar_pend_narration.arr[d_ar_pend_narration.len]     = '\0';
d_ar_pend_tran_desc.arr[d_ar_pend_tran_desc.len]     = '\0';

if(d_misc_customer_flag == 'Y') {
    if(d_chinese_reporting_flag == 'Y') {
	strcpy(d_cust_long_name_chinese.arr,d_misc_cust_long_name_chi.arr);
	strcpy(d_cust_short_name_chinese.arr,d_misc_cust_short_name_chi.arr);
	strcpy(d_cust_add1_desc_chinese.arr,d_misc_cust_add1_desc_chi.arr);
	strcpy(d_cust_add2_desc_chinese.arr,d_misc_cust_add2_desc_chi.arr);
	strcpy(d_cust_add3_desc_chinese.arr,d_misc_cust_add3_desc_chi.arr);
	strcpy(d_cust_zip_desc_chinese.arr,d_misc_cust_zip_desc_chi.arr);
    }
    else {
	strcpy(d_cust_long_name_chinese.arr,d_misc_cust_long_name.arr);
	strcpy(d_cust_short_name_chinese.arr,d_misc_cust_short_name.arr);
	strcpy(d_cust_add1_desc_chinese.arr,d_misc_cust_add1_desc.arr);
	strcpy(d_cust_add2_desc_chinese.arr,d_misc_cust_add2_desc.arr);
	strcpy(d_cust_add3_desc_chinese.arr,d_misc_cust_add3_desc.arr);
	strcpy(d_cust_zip_desc_chinese.arr,d_misc_cust_zip_desc.arr);
    }

    strcpy(d_tel_num.arr, d_misc_tel_num.arr);
    strcpy(d_cust_contact_name.arr,d_misc_cust_contact_name.arr);
    strcpy(d_cust_contact_name_title.arr,d_misc_cust_contact_name_tit.arr);

    d_cust_long_name_chinese.len = strlen(d_cust_long_name_chinese.arr);
    d_cust_short_name_chinese.len = strlen(d_cust_short_name_chinese.arr);
    d_cust_add1_desc_chinese.len = strlen(d_cust_add1_desc_chinese.arr);
    d_cust_add2_desc_chinese.len = strlen(d_cust_add2_desc_chinese.arr);
    d_cust_add3_desc_chinese.len = strlen(d_cust_add3_desc_chinese.arr);
    d_cust_zip_desc_chinese.len = strlen(d_cust_zip_desc_chinese.arr);
    d_cust_contact_name.len = strlen(d_cust_contact_name.arr);
    d_cust_contact_name_title.len = strlen(d_cust_contact_name_title.arr);
}


    EXEC SQL SELECT NVL(SUM(NVL(AMOUNT,0)),0) 
             INTO   :d_ar_pend_alloc_amt
	     FROM   AR_CUST_TRN
	     WHERE  CUST_CODE = :d_cust_cust_code
	     AND    ORG_DOC_TYPE_CODE = :d_ar_pend_doc_type_code
	     AND    ORG_DOC_NUM       = :d_ar_pend_doc_num
	     AND    RPAD(ORG_DOC_TYPE_CODE,6,' ')||TO_CHAR(ORG_DOC_NUM) <>
		    RPAD(DOC_TYPE_CODE,6,' ')||TO_CHAR(DOC_NUM)
	     AND    DOC_DATE <= TO_DATE(:nd_cutoff_date,'DD/MM/YYYY');


    if(ERROR)
	err_mesg("SELECT failed on table AR_CUST_TRN",0,"");

    if(equal((d_ar_pend_payable_amt + d_ar_pend_alloc_amt), (double) 0) &&
       nd_zero_bal_flag.arr[0] EQ 'N')
	   g_skip_rec = 1;

/*
    if(d_ar_pend_pending_amt < 0)
	d_ar_pend_sign_amt = -1;
    else if(d_ar_pend_pending_amt > 0)
	d_ar_pend_sign_amt = 1;
    else
        d_ar_pend_sign_amt = 0;

    d_ar_pend_negative_amt = (d_ar_pend_pending_amt > 0) ? 
			     d_ar_pend_pending_amt : 
			     d_ar_pend_pending_amt * -1;

*/

 return(1);
}

fetch_patient_name()
{

d_ar_mp_patient_name.arr[0] = '\0';
d_ar_mp_patient_name.len    = 0;

     EXEC SQL OPEN AR_PATIENT_CUR;

     if (ERROR)
         err_mesg("OPEN failed on cursor AR_PATIENT_CUR",0,"");

     EXEC SQL FETCH AR_PATIENT_CUR
               INTO :d_ar_mp_patient_name;

     if (ERROR)
         err_mesg("FETCH failed on cursor AR_PATIENT_CUR",0,"");

     d_ar_mp_patient_name.arr[d_ar_mp_patient_name.len] = '\0';
}

fetch_cust_trn()
{

    d_ar_cust_doc_type_code.arr[0]  = '\0';
    d_ar_cust_doc_num.arr[0]  = '\0';
    d_ar_cust_doc_date.arr[0]  = '\0';
    d_ar_cust_ref.arr[0]  = '\0';

    d_ar_cust_doc_type_code.len  = 0;
    d_ar_cust_doc_num.len  = 0;
    d_ar_cust_doc_date.len  = 0;
    d_ar_cust_ref.len  = 0;

    d_ar_cust_amount = 0;

    EXEC SQL FETCH AR_CUST_TRN_CUR INTO
                   :d_ar_cust_doc_type_code,
                   :d_ar_cust_doc_num,
                   :d_ar_cust_doc_date,
                   :d_ar_cust_ref,
                   :d_ar_cust_amount;
     
    if(ERROR)
	err_mesg("FETCH failed on cursor AR_CUST_TRN_CUR",0,"");

    if(LAST_ROW)
	return 0;

    d_ar_cust_doc_type_code.arr[d_ar_cust_doc_type_code.len]  = '\0';
    d_ar_cust_doc_num.arr[d_ar_cust_doc_num.len]  = '\0';
    d_ar_cust_doc_date.arr[d_ar_cust_doc_date.len]  = '\0';
    d_ar_cust_ref.arr[d_ar_cust_ref.len]  = '\0';

    return 1;

}
 

print_details()
{
  char out_str[35],out_str1[35],misc_flag;
  
 
  if (lctr > MAX_LINES) 
  {
  fprintf(fp,"%60s ","C/F");
  
  print_formated(tot_pending_amt,1);
  fprintf(fp,"\n");
  print_head(1);
  fprintf(fp,"%60s ","B/F");
  print_formated(tot_pending_amt,1);
  fprintf(fp,"\n");
  }
   fprintf(fp,"%-10s %-6s/%-8s %-7s",
   //%-15s %-10s %-26s",
                  d_ar_pend_doc_date.arr,
                  d_ar_pend_doc_type_code.arr,
                  d_ar_pend_doc_num.arr,
				  d_ar_pend_tran_desc.arr);
/*
				  d_ar_pend_due_date.arr,
                  d_ar_pend_cust_ref.arr,
				  d_ar_pend_patient_id.arr,
				  d_ar_mp_patient_name.arr);
d_ar_tran_desc
*/ 
   
   print_formated(d_ar_pend_payable_amt,1);
   fprintf(fp,"%-13s"," ");

   g_alloc_amt = 0;
   cust_trn_print = 0;
   process_cust_trn();

   d_ar_pend_alloc_amt = g_alloc_amt;

   d_ar_pend_pending_amt = d_ar_pend_payable_amt + d_ar_pend_alloc_amt;

   print_formated(d_ar_pend_pending_amt,1);
   fprintf(fp,"\n");
   if(!cust_trn_print) 
       fprintf(fp,"%-10s %-6s %-8s %s\n\n"," "," "," "," ");
                   //d_ar_pend_narration.arr);
   else 
       fprintf(fp,"\n\n");

   lctr += 3; 
   cust_lctr += 2;

   if(d_ar_pend_pending_amt < 0)
	d_ar_pend_sign_amt = -1;
   else if(d_ar_pend_pending_amt > 0)
	d_ar_pend_sign_amt = 1;
   else
        d_ar_pend_sign_amt = 0;

    d_ar_pend_negative_amt = (d_ar_pend_pending_amt > 0) ? 
			     d_ar_pend_pending_amt : 
			     d_ar_pend_pending_amt * -1;

   tot_payable_amt   += d_ar_pend_payable_amt;
   tot_alloc_amt     += d_ar_pend_alloc_amt;
   tot_pending_amt   += d_ar_pend_pending_amt;


/*
   print_formated(d_ar_pend_payable_amt);
   print_formated(d_ar_pend_alloc_amt);
   print_formated(d_ar_pend_pending_amt);
   fprintf(fp,"\n");
   cust_lctr ++;
   lctr ++;

   tot_payable_amt   += d_ar_pend_payable_amt;
   tot_alloc_amt     += d_ar_pend_alloc_amt;
   tot_pending_amt   += d_ar_pend_pending_amt;
*/

}

process_cust_trn()
{

  int first = 1;

    EXEC SQL OPEN AR_CUST_TRN_CUR;

    if(ERROR)
	err_mesg("OPEN failed on cursor AR_CUST_TRN_CUR",0,"");

    while(fetch_cust_trn()) {
	if(first) {
           fprintf(fp,"\n%-10s %-6s %-8s %s"," "," "," "," ");
		   //                       d_ar_pend_narration.arr);
	   first = 0;
	   lctr ++;
	}
	print_cust_trn();
	g_alloc_amt += d_ar_cust_amount;
	cust_trn_print = 1;
    }

}

print_cust_trn()
{

  char out_str[35],out_str1[35],misc_flag;

  if (lctr > MAX_LINES) print_head(1);
   fprintf(fp,"\n%-10s %-6s/%-8s ",
                  d_ar_cust_doc_date.arr,
                  d_ar_cust_doc_type_code.arr,
                  d_ar_cust_doc_num.arr,
		  " ");
		  /*
                  d_ar_cust_ref.arr,
		  " ");
*/

   fprintf(fp,"%-20s"," ");
   print_formated(d_ar_cust_amount,1);
   lctr ++;
   cust_lctr ++;

}
 

print_footer()
{
 int i = 0;
 int no_of_lines;  /* added on 02/12/1999 */
 int inc ;
 int nstart ;
    for(i=0; i<10; i++) amt_in_words[i][0] = '\0';
    if (lctr > MAX_LINES) print_head(1);

    fprintf(fp,"\n");
    if (LEGEND)
        for (i=0;i<80;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    for (i=0;i<SKIP_8;i++) fprintf(fp," ");
    if (LEGEND)
        fprintf(fp,"TOTAL : ");
    else
        fprintf(fp,"        ");
    print_formated(tot_payable_amt,1);
    print_formated(tot_alloc_amt,1);
    print_formated(tot_pending_amt,1);
    fprintf(fp,"\n");
    for (i=0;i<SKIP_9;i++) fprintf(fp,"\n");
    for (i=0;i<SKIP_10;i++) fprintf(fp," ");
    if (LEGEND)
        fprintf(fp,"TOTAL OUTSTANDING       : ");
    else
        fprintf(fp,"                          ");
	    print_formated(tot_pending_amt,1);

			/*  added on 02/12/1999*/

	if (tot_pending_amt < 0.00)
	  tot_pending_amt1 = (-1)*tot_pending_amt;
	else
       tot_pending_amt1 = tot_pending_amt;

   if(equal(tot_pending_amt,0.00)) 
	no_of_lines=0;
    else 
		   	no_of_lines = print_in_words(tot_pending_amt1,LENGTH_WORDS,subcur.arr,amt_in_words,no_of_decimal);
	strcpy(cond_amount.arr,"\nAMOUNT IN WORDS :");
	strcat(cond_amount.arr,currency.arr);
	strcat (cond_amount.arr," ");
/*
	for (i =0;i<no_of_lines;i++)
   	 { 
	    if (i==0) strcat(cond_amount.arr,amt_in_words[i]);
		else
		strcat(cond_amount.arr,amt_in_words[i]);
		strcpy(cond_amount.arr,amt_in_words[i]);
		disp_message(ERR_MESG,cond_amount.arr);
      }   
*/ 

	if (tot_pending_amt != 0) 
	{ 

       fprintf(fp,"\nAMOUNT IN WORDS : %-6s",currency.arr);
	for (i =0;i<no_of_lines;i++)
   	   {  
		 if (i == 0 ) 
	       strcpy(cond_amount.arr,amt_in_words[i]);
	     else
	       strcat(cond_amount.arr, amt_in_words[i]); 
	    fprintf(fp," %s\n",cond_amount.arr);
		   strcpy(cond_amount.arr,"                 ");
		}
		
/* 
 inc = 0;     
 nstart = 0;
    
 while (inc < strlen(cond_amount.arr))
  { 
   char tempstr[100];

   corder_str[0] = '\0'; 
   inc = nstart + inc;
   nstart = split_text(cond_amount.arr,80,corder_str,inc);  
   disp_message(ERR_MESG,corder_str);
   sprintf(tempstr,"%d",nstart);
   disp_message(ERR_MESG,tempstr);
   inc = inc + 1;
   fprintf(fp,"%s",corder_str);
   fprintf(fp,"\n");
}

*/
}

	/*  added */

    grand_tot += tot_pending_amt;
    fprintf(fp,"\n");
    lctr += 5;
    if(tot_pending_amt != 0)
        print_ageing();
    tot_payable_amt  = 0;
    tot_alloc_amt    = 0;
    tot_pending_amt  = 0;

} 

print_ageing() 
{
int i = 0;

    if (lctr+5 > MAX_LINES) {
	print_header();}

    fprintf(fp,"\n");
    for (i=0;i<80;i++) fprintf(fp,"-");
    fprintf(fp,"\n");
    if (LEGEND)
       fprintf(fp,"TOTAL OUTSTANDING    OPEN CREDITS   ");
    else
       fprintf(fp,"                                    ");

    fprintf(fp,"%3d-%-3d",0, nd_age_slot1);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp,"%3d-%-3d",nd_age_slot1+1,nd_age_slot2);
    if (LEGEND)
       fprintf(fp," DAYS  ");
    else
       fprintf(fp,"       ");

    fprintf(fp," > %-3d",nd_age_slot2+1);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");
    fprintf(fp,"\n");
/*
    fprintf(fp,"%3d-%-3d",nd_age_slot2+1,nd_age_slot3);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp,"%3d-%-3d",nd_age_slot3+1,nd_age_slot4);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");

    fprintf(fp," > %-3d",nd_age_slot4);
    if (LEGEND)
       fprintf(fp," DAYS     ");
    else
       fprintf(fp,"          ");
    fprintf(fp,"\n");
*/
	fprintf(fp,"    ");
    print_formated(tot_pending_amt,1);
    fprintf(fp,"  ");
    print_formated(nd_open_credit,0);
    fprintf(fp," ");
    print_formated(amt_slot1,0);
    fprintf(fp,"   ");
    print_formated(amt_slot2,0);
    fprintf(fp," ");
    print_formated(amt_slot3,0);
    /*
	fprintf(fp,"   ");
    print_formated(amt_slot4,0);
    fprintf(fp,"  ");
    print_formated(amt_slot5,0);
    */
	fprintf(fp,"\n");

    for (i=0;i<80;i++) fprintf(fp,"-");
    fprintf(fp,"\n");

    lctr += 5;
    tot_pending_amt  = 0;
    nd_open_credit   = 0;
    amt_slot1        = 0;
    amt_slot2        = 0;
    amt_slot3        = 0;
    amt_slot4        = 0;
    amt_slot5        = 0;
}

process_ageing()
{
   if (d_ar_pend_sign_amt != 1)
        nd_open_credit    += d_ar_pend_negative_amt;
   else if (d_ar_pend_sign_amt != 0)
   {
     if (age_days <= nd_age_slot1)
         amt_slot1    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot1 + 1 && age_days <= nd_age_slot2)
         amt_slot2    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot2 + 1)
         amt_slot3    += d_ar_pend_pending_amt;
/*
     else if (age_days >= nd_age_slot2 + 1 && age_days <= nd_age_slot3)
         amt_slot3    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot3 + 1 && age_days <= nd_age_slot4)
         amt_slot4    += d_ar_pend_pending_amt;
     else if (age_days >= nd_age_slot4 + 1)
         amt_slot5    += d_ar_pend_pending_amt;
*/
   }
}

ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

/*put_comma(str)
char *str;
{
  int i,l,m,a,b,c;
  float j,k;
  char arr[120],o_arr[120],l_str1[10];
  strcpy(arr,str);
  strncpy(l_str1,arr + (strlen(arr) - 2),2);
  l_str1[2] = '\0';
  arr[strlen(str)-3] = '\0';
  i = strlen(arr);
  j = i;
  k = j/3;
  l = k;
  m = i - (l*3);
  if (i > 3)
  {
      for (a=0;a<m;a++)
         o_arr[a] = arr[a];
   if (m)
   {
     o_arr[m] = ','; b=m+1;
   }
   else b = m;
  for (c=1,a=m;arr[a]!= '\0';a++,b++)
  {
     o_arr[b] = arr[a]; 
     c++;
     if (c > 3 && arr[a+1] != '\0')
     {
       o_arr[++b] = ','; c = 1;
     }
   }
   o_arr[b] = '\0';
  }
  else
      strcpy(o_arr,arr);
   sprintf(str,"%s.%s",o_arr,l_str1);
} */

rtrim(l_str)
char *l_str;
{
  while (*l_str != '\0') *l_str++;
  l_str--;
  while (*l_str == ' ') *l_str--;
  *(l_str+1) = '\0';
}

print_formated(loc_amount,flg)
double loc_amount;
int flg;
{ 
   char out_str[30],out_str1[30];  
   
   if (no_of_decimal==3)
     sprintf(out_str,"%10.3f",loc_amount);
   else
     sprintf(out_str,"%10.2f",loc_amount);

     format_amt(out_str,no_of_decimal);

   if (loc_amount == 0) 
    { 
      if(flg)
       {
	  if (no_of_decimal==3)
	     {	      
		 fprintf(fp,"%14s","        0.000 ");
             } 
          else
	     {	         
		 fprintf(fp,"%14s","         0.00 ");
             }
       }
      else
          fprintf(fp,"%14s","  ");
   }
   else if (loc_amount > 0)   
      fprintf(fp,"%13s ",out_str);   
   else   
     {
      fprintf(fp,"%13s-",out_str);
     }     

   
}

print_title()  
{  
  void print_hospital_name(); 
  /*
  fprintf(fp,
"\n\nMDL : AR                   %-30s      %-15s\n",
      hosp_name.arr,date_time.arr);
  */

  print_hospital_name(79,"AR",hosp_name.arr,date_time.arr);
 

     fprintf(fp,"OPR : %-10s \n", user_id.arr);  
  fprintf(fp,
"REP : ARRSTMT2             STATEMENT OF ACCOUNT                     PAGE : %4d\n",++pctr);
  fprintf(fp,
"                            AS OF %-15s\n",
        cut_off_dt_prn.arr);
fprintf(fp,
"-------------------------------------------------------------------------------\n");
//fprintf(fp,"VER : 1.10.01\n");
fflush(fp);  
                          
fprintf(fp,"\n\n\n\n        INPUT PARAMETERS :\n        ----------------\n\n");
fprintf(fp,"                REPORT ORDER         : %s\n\n",
(nd_rep_order_flg.arr[0]  =='C')?"CUSTOMER CODE":"ALPHA CODE");

fprintf(fp,"                %-10s     FROM  : %-10s\n",
(nd_rep_order_flg.arr[0]  =='C')?"CUST CODE":"ALPHA CODE",
(nd_rep_order_flg.arr[0]  =='C')?nd_fm_cust_code.arr:nd_fm_alpha_code.arr); 
fprintf(fp,"                %-10s     TO    : %-10s\n\n","",
(nd_rep_order_flg.arr[0]  =='C')?nd_to_cust_code.arr:nd_to_alpha_code.arr); 


fprintf(fp,"                CUST TYPE      FROM  : %s\n",nd_fm_cust_type.arr);
fprintf(fp,"                               TO    : %s\n\n",nd_to_cust_type.arr);
fprintf(fp,"                CUST GROUP     FROM  : %s\n",nd_fm_cust_group.arr);
fprintf(fp,"                               TO    : %s\n\n",nd_to_cust_group.arr);
fprintf(fp,"                ANALYSIS CODE1 FROM  : %s\n",nd_fm_anal_cd1.arr);
fprintf(fp,"                               TO    : %s\n\n",nd_to_anal_cd1.arr);
fprintf(fp,"                ANALYSIS CODE2 FROM  : %s\n",nd_fm_anal_cd2.arr);
fprintf(fp,"                               TO    : %s\n\n",nd_to_anal_cd2.arr);
fprintf(fp,"                ANALYSIS CODE3 FROM  : %s\n",nd_fm_anal_cd3.arr);
fprintf(fp,"                               TO    : %s\n\n",nd_to_anal_cd3.arr);



fprintf(fp,"                REPORT FREQUENCY     : %s\n\n",
                      nd_stmt_freq_code.arr);
fprintf(fp,"                ZERO BAL DOCS        : %s\n\n",
                      nd_zero_bal_flag.arr);
fprintf(fp,"                PATIENT DETAILS      : %s\n\n",
 (nd_patient_det.arr[0] == 'Y')?"DEFERRED PATIENTS":"ALL CUSTOMERS");

fprintf(fp,"                PAGE SKIP            : %s\n\n",page_skip_flag.arr);
fprintf(fp,"                CUT OFF DATE         : %s\n\n",cut_off_dt_prn.arr);

  fflush(fp);

}


print_head(cust_chg)
int cust_chg;
{
  int i = 0;

  if(lctr > 56){
    print_header();}
/*
  fprintf(fp,
"\fMDL : AR                                         %-30s                                      %-15s\n",
      hosp_name.arr,date_time.arr);

     fprintf(fp,"OPR : %-10s \n", user_id.arr);
  fprintf(fp,
"REP : ARRSTMT2                               STATEMENT OF ACCOUNT - NON PREPRINTED                                       PAGE : %4d\n",++pctr);
  fprintf(fp,
"                                                          AS OF %-15s\n",
        cut_off_dt_prn.arr);

lctr = 4;
*/

if (cust_chg == 0)
{
 
/*
   for (i=0;i<133;i++) fprintf(fp,"-");
*/
   if(lctr+10 > MAX_LINES){
    
    print_header();}

   for (i=0;i<SKIP_2;i++) fprintf(fp,"\n");
   
   for (i=0;i<SKIP_3;i++) fprintf(fp," ");
   fprintf(fp,"%-8s",d_cust_cust_code.arr);
   fprintf(fp,"  ");
   fprintf(fp,"%-40.40s\n",d_cust_long_name_chinese.arr);

   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_add1_desc_chinese.arr);

   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_add2_desc_chinese.arr);

   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_add3_desc_chinese.arr);

   for (i=0;i<SKIP_4;i++) fprintf(fp," ");
   fprintf(fp,"%-30.30s\n",d_cust_zip_desc_chinese.arr);

   fprintf(fp,"\n\n");
   fprintf(fp,"Tel : %s\n", d_tel_num.arr);
   fprintf(fp,"ATTN:%s, %-38.38s\n", 
              d_cust_contact_name.arr,
              d_cust_contact_name_title.arr);
  fprintf(fp,
"-------------------------------------------------------------------------------\n");
  lctr += 10;
 }   

if(lctr+4 > 56) {

print_header();} 
fprintf(fp,
"DOC DATE   DOC TYPE & NO   TRX TYPE      AMOUNT   ADJUSTMENTS       BALANCE\n");
/*
fprintf(fp,
"                           NARRATION                                                                                      (%s)\n",currency.arr);
*/
fprintf(fp,
"-------------------------------------------------------------------------------\n");
  fflush(fp);
  lctr += 4;
}

print_header()
{

  void print_hospital_name();
/*  fprintf(fp,
"\fMDL : AR                   %-30s      %-15s\n",
      hosp_name.arr,date_time.arr);
*/
fprintf(fp,"\f");
print_hospital_name(79,"AR",hosp_name.arr,date_time.arr);

     fprintf(fp,"OPR : %-10s \n", user_id.arr);
	 
  fprintf(fp,
  "REP : ARRSTMT2             STATEMENT OF ACCOUNT                     PAGE : %4d\n",++pctr);
  fprintf(fp,
"                            AS OF %-15s\n",
        cut_off_dt_prn.arr);

fprintf(fp,
"-------------------------------------------------------------------------------\n");
lctr = 5;

}

void print_hospital_name(nd_rep_width    ,
                         nd_mod_id       ,
                         nd_hospital_name,
                         nd_date          )
int  nd_rep_width;
char nd_mod_id[3];
char nd_hospital_name[31];
char nd_date[17];
{
	int i = 0 , pos = 0 , len = 0, len_date = 0 , pos_date = 0, len1=0;

    /*Find the length of Hospital Name*/
    for(len = 0; nd_hospital_name[len] != '\0'; len++);

    /*Find the length of Date*/
    for(len_date = 0; nd_date[len_date] != '\0'; len_date++);

    len1=(len % 2);

    if (len1==0) 
       len1=9; 
    else
       len1=10;    

    len = len / 2;

    pos = (nd_rep_width / 2	) - len;

	pos_date = nd_rep_width - len_date;

	fprintf(fp,"MDL : %2s",nd_mod_id);

	for(i = len1; i < pos ; fprintf(fp," "),i++);

	fprintf(fp,"%s",nd_hospital_name);

	for(i = i + (len * 2) ; i < pos_date + 1; fprintf(fp," "),i++);

    fprintf(fp,"%s\n",nd_date);

	
}






print_end_of_rep()
{
    int i;
	int space_count ;
	int inc;
	int nstart;

	int	       no_of_lines; /* added on 02/12/1999 */
    for(i=0; i<10; i++) amt_in_words[i][0] = '\0';

    fprintf(fp,"\n");
    if(g_print_stat) {
        for (i=0;i<SKIP_10;i++) fprintf(fp," ");
        if (LEGEND)
            fprintf(fp,"GRAND TOTAL ---->       : ");
        else
            fprintf(fp,"                          ");
        print_formated(grand_tot);

   /*  added on 02/12/1999 */
   if (grand_tot < 0.00) 
      grand_tot = (-1)*grand_tot;

   if(equal(grand_tot,0.00)) 
	no_of_lines=0;
    else
	   	no_of_lines = print_in_words(grand_tot,LENGTH_WORDS,subcur.arr,amt_in_words,no_of_decimal);
	strcpy(cond_amount.arr,"\nAMOUNT IN WORDS : ");
	strcat(cond_amount.arr,currency.arr);
	strcat (cond_amount.arr," ");
	for (i =0;i<no_of_lines;i++)
   	 { 
	    if (i==0) strcat(cond_amount.arr,amt_in_words[i]);
		else
		strcat(cond_amount.arr,amt_in_words[i]);
        fprintf(fp," %s\n",cond_amount.arr);
		strcpy(cond_amount.arr,"                 "); 
      }
/* 
    if (grand_tot != 0) 
     {

       fprintf(fp,"\nAMOUNT IN WORDS : %-6s",currency.arr);
	space_count = 0;
     for (i =0;i<no_of_lines;i++)
   	   {
	     if (i == 0 ) 
	       strcpy(cond_amount.arr,amt_in_words[i]);
	     else
	       strcat(cond_amount.arr, amt_in_words[i]); 
       }
*/   
/*
	for (i =0;i<no_of_lines;i++)
   	   {
	    if amt_in_words[i]==' '  space_count += space_count;
		if space_count == 8  fprintf(fp,"\n");
		fprintf(fp," %s",amt_in_words[i]);
	   } 
*/
/*
 inc = 0;
 nstart = 0; 
 while (inc < strlen(cond_amount.arr))
  {
   corder_str[0] = '\0'; 
   inc = nstart + inc;
   nstart = split_text(cond_amount.arr,80,corder_str,inc);  
   inc = inc + 1;
   fprintf(fp,"%s",corder_str);
   fprintf(fp,"\n");
  }  
 }
*/
fprintf(fp,
"-------------------------------------------------------------------------------\n");
    
    }
fprintf(fp,
"\n                          **   END  OF  REPORT   ** ");

}
