#include <stdio.h>         
#include <string.h> 
#include <bl.h>       
#include <math.h> 

#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define NODATAFOUND sqlca.sqlcode == 1403
/*
#define DEBUG 0
*/
#define ESC 0x1B

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR     hosp_name                       [120],
			l_acc_name						[120],
			date_con						[21],
            date_time                       [20],
            user_id                         [91],
	        nd_pwd 							[91],
            nd_session_id                   [16],
            nd_pgm_date                     [25],
            d_curr_pgm_name                 [15],
			nd_facility				        [3],
			bl_cash_counter_code            [5],
			bl_long_desc					[31],
			bl_doc_type_code                [7], 
			bl_BOUNCED_DATE					[11],
			bl_Cheque_no					[21],
			bl_cheque_date					[11],
			bl_receipt_no					[20],
			bl_slmt_doc_remarks				[102],	
			bl_payer_name					[41],  	
			bl_ext_acct_code				[11],
			nd_month_year					[11],
			
			nd_repl_mm_yyyy					[11],
			l_repl_mm_yyyy					[11],
			l_translated_value				[201],
			l_pk_value						[100],
			month_year						[11],
			repl_mm_yyyy					[11] ,
			repl_mon_yyyy					[40],
			l_month_year					[11],
		 	yearstr							[4],
			cash_counter_code				[5],
			nd_temp_date					[21],
			nd_temp_date1					[11],
			nd_loc_date						[21],
			p_language_id					[3];

			double bl_doc_amt,bl_doc_number,nd_cc_total_amt = 0,nd_cc_grand_total_amt = 0;
int i;
			
char filename[150];
char x_msg[200];
char loc_legend[999][201];
char l_mesg[2000];
char l_tit[2000];
char l_pctr1[10];


EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int  lctr = 0,pctr = 0,pctr1=0,slno = 0,frec = 0;


FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc ;
{

    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }
 
    strcpy(g_pgm_id,"BLR00017");
    strcpy(nd_pwd.arr,argv[1]);
    nd_pwd.len = strlen(nd_pwd.arr);

    EXEC sql connect :nd_pwd;  
	  
    if (sqlca.sqlcode < 0 )
	{
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
        }

	    set_meduser_role();		

    	strcpy(p_language_id.arr,l_language_id.arr);
		p_language_id.len = l_language_id.len;
		
		strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    	d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    	strcpy(nd_session_id.arr,argv[2]);
    	nd_session_id.len = strlen(nd_session_id.arr);
    	strcpy(g_session_id,nd_session_id.arr);

    	strcpy(nd_pgm_date.arr,argv[3]);
    	nd_pgm_date.len = strlen(nd_pgm_date.arr);
    	strcpy(g_pgm_date,nd_pgm_date.arr);

    	strcpy(nd_facility.arr,argv[4]);
    	nd_facility.len = strlen(nd_facility.arr);
    	strcpy(g_facility_id,nd_facility.arr);

		nd_month_year.arr[0]			= '\0';
		month_year.arr[0]				= '\0';
		repl_mm_yyyy.arr[0]				= '\0';
		nd_repl_mm_yyyy.arr[0]			= '\0';
		yearstr.arr[0]				    = '\0';
		l_month_year.arr[0]				= '\0';
		l_repl_mm_yyyy.arr[0]			= '\0';

		nd_month_year.len			= 0;
		nd_repl_mm_yyyy.len			= 0;
		yearstr.len			 		= 0;
		l_month_year.len			= 0;
		l_repl_mm_yyyy.len			= 0;

        EXEC SQL SELECT	PARAM1,PARAM2,SUBSTR(PARAM1,1,4),to_char(to_date(PARAM1,'yyyymm'),'mm/yyyy'),
			to_char(to_date(PARAM2,'yyyymm'),'mm/yyyy')
		 INTO :nd_month_year,:nd_repl_mm_yyyy,yearstr,:l_month_year,:l_repl_mm_yyyy
		 FROM SY_PROG_PARAM
                 WHERE PGM_ID   = :d_curr_pgm_name
                 AND SESSION_ID = :nd_session_id
                 AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

		nd_month_year.arr[nd_month_year.len]				= '\0';
		nd_repl_mm_yyyy.arr[nd_repl_mm_yyyy.len]			= '\0';
		yearstr.arr[yearstr.len]							= '\0'; 
		l_month_year.arr[l_month_year.len]					= '\0';
		l_repl_mm_yyyy.arr[l_repl_mm_yyyy.len]				= '\0';


	EXEC SQL DELETE SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
	declare_cursor();
	
	fetch_hosp_name();
	
	//get_language_id();

	fetch_legend_value();

    open_file();

	open_bill_cur();


  //fprintf(fp,"%c&l1O",ESC); 
  //fprintf(fp,"%c(s12H",ESC);
	fprintf(fp,"\n");
	print_page_header();
	
    while (fetch_bill_cur())
       {
		
		
		frec = frec + 1;

		if (strcmp(cash_counter_code.arr,bl_cash_counter_code.arr) != 0)
		{
			if (frec > 1) print_total();
		        nd_cc_total_amt = 0;

			check_page_end(1,0);
			print_rec(0);
			strcpy(cash_counter_code.arr,bl_cash_counter_code.arr);
		}
		else
		{
			check_page_end(1,0);				  
			print_rec(1);
			strcpy(cash_counter_code.arr,bl_cash_counter_code.arr);
		}
            nd_cc_total_amt = nd_cc_total_amt + bl_doc_amt;
	    nd_cc_grand_total_amt = nd_cc_grand_total_amt + bl_doc_amt;	
      }
		print_total();
		print_grand_total();	
   end_of_rep();

   close_bill_cur();



   
 EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");
}
declare_cursor()
{


EXEC SQL DECLARE BILL_CUR CURSOR FOR
        Select b.cash_counter_code,b.long_desc,a.doc_type_code,a.doc_number,to_char(a.bounced_date,'dd/mm/yyyy'), 
		a.slmt_doc_ref_desc Cheque_no,
		to_char(a.slmt_doc_ref_date,'dd/mm/yyyy') cheque_date,
		a.doc_type_code||'/'||to_char(doc_number)||'/'||to_char(doc_srno) Receipt_no,
		a.slmt_doc_remarks,
		a.payer_name , 
		a.doc_amt,
		a.ext_acct_code
		from Bl_receipt_refund_dtl_vw a,bl_cash_counter b
		where a.operating_facility_id=b.operating_facility_id and
		a.cash_counter_code=b.cash_counter_code 
		and NVL(a.bounced_yn,'N') = 'Y' 
		and to_char(a.doc_date,'YYYYMM') <= :nd_month_year and (nvl(a.REPL_CHQ_YN,'N') ='N'
	        or
		( nvl(a.REPL_CHQ_YN,'N') ='Y' and to_char(a.REPL_CHQ_DOC_DATE,'YYYYMM') > :nd_repl_mm_yyyy ) )
		order by b.cash_counter_code ;	 
		

 		   
}

open_bill_cur()
{
  EXEC SQL OPEN BILL_CUR;
   if (OERROR)
         err_mesg("OPEN failed on cursor BILL_CUR",0,"");
}

close_bill_cur()
{
  EXEC SQL CLOSE BILL_CUR;

}

/*get_language_id()
{
	language_id.arr[0] = '\0';
	language_id.len = 0;
	

	EXEC SQL SELECT LANGUAGE_ID INTO :language_id FROM SM_APPL_USER where APPL_USER_ID = :user_id;

	if (OERROR)
        err_mesg("SELECTING LANGUAGE_ID failed",0,"");
}*/
get_local_date1()
{

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'dd/mm/yyyy'),
															:p_language_id,
															t_date);

		:nd_loc_date := to_char(t_date,'DD/MM/YYYY');

	END;

	END-EXEC;
		nd_loc_date.arr[nd_loc_date.len]='\0';
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}
get_local_date2()
{

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date1,'MM/YYYY'),
															:p_language_id,
															t_date);
		:nd_loc_date := to_char(t_date,'MM/YYYY');
	
	END;

	END-EXEC;
	
	nd_loc_date.arr[nd_loc_date.len] = '\0';

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");
}
get_local_date3()
{

	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
		
		get_locale_date.convert_to_locale_date(to_date(:nd_temp_date,'FMMonth/YYYY'),
															:p_language_id,
															t_date);
		:nd_loc_date := to_char(t_date,'FMMonth/YYYY');
	
	END;

	END-EXEC;
	
	nd_loc_date.arr[nd_loc_date.len] = '\0';

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");
}



get_initialize()
{
nd_temp_date.arr[0] = '\0';
nd_temp_date1.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';

nd_temp_date.len = 0;
nd_temp_date1.len = 0;
nd_loc_date.len  = 0;
}
get_local_date_convn1()
{

nd_temp_date.len = strlen(nd_temp_date.arr);
nd_temp_date.arr[nd_temp_date.len]='\0';
get_local_date1();

}

get_local_date_convn2()
{

nd_temp_date1.len = strlen(nd_temp_date1.arr);
nd_temp_date1.arr[nd_temp_date1.len]='\0';

get_local_date2();

}
get_local_date_convn3()
{

nd_temp_date.len = strlen(nd_temp_date.arr);

get_local_date3();

}

fetch_bill_cur()
 {
   
	bl_cash_counter_code.arr[0]    ='\0';
	bl_long_desc.arr[0]			   ='\0';	
	bl_doc_type_code.arr[0]		   ='\0';	
	bl_BOUNCED_DATE.arr[0]	       ='\0';
	bl_Cheque_no.arr[0]		       ='\0';
	bl_cheque_date.arr[0]		   ='\0';
	bl_slmt_doc_remarks.arr[0]	   ='\0';
	bl_receipt_no.arr[0]           ='\0';
	bl_payer_name.arr[0]		   ='\0';
	bl_payer_name.arr[0]	       ='\0';		
	bl_ext_acct_code.arr[0]		   ='\0';
	
	
		bl_cash_counter_code.len			=0;
		bl_long_desc.len					=0;
		bl_doc_type_code.len				=0;
		bl_BOUNCED_DATE.len					=0;
		bl_Cheque_no.len					=0;
		bl_cheque_date.len					=0;
		bl_slmt_doc_remarks.len				=0;
		bl_receipt_no.len					=0;
		bl_payer_name.len					=0;
		bl_ext_acct_code.len				=0;

		bl_doc_number    =0;
		bl_doc_amt       =0;


  EXEC SQL FETCH BILL_CUR INTO
			:bl_cash_counter_code,
			:bl_long_desc,
			:bl_doc_type_code,
			:bl_doc_number,				
			:bl_BOUNCED_DATE,		
			:bl_Cheque_no	,		
			:bl_cheque_date,
			:bl_receipt_no,
			:bl_slmt_doc_remarks,
			:bl_payer_name,
			:bl_doc_amt  ,
			:bl_ext_acct_code;
			


		if (OERROR)
          err_mesg("FETCH failed on cursor BILL_CUR",0,"");

           
	bl_cash_counter_code.arr[bl_cash_counter_code.len]	='\0';
	bl_long_desc.arr[bl_long_desc.len]					='\0';            
	bl_doc_type_code.arr[bl_doc_type_code.len]			='\0';	
	bl_BOUNCED_DATE.arr[bl_BOUNCED_DATE.len]			='\0';
	bl_Cheque_no.arr[bl_Cheque_no.len]					='\0';					
	bl_cheque_date.arr[bl_cheque_date.len]				='\0';					
	bl_slmt_doc_remarks.arr[bl_slmt_doc_remarks.len]	='\0';				
	bl_receipt_no.arr[bl_receipt_no.len]				='\0';					
	bl_payer_name.arr[bl_payer_name.len]				='\0';					
	bl_ext_acct_code.arr[bl_ext_acct_code.len]			='\0';	

	return(LAST_ROW?0:1);
}

end_of_rep()
{
	check_page_end(3,0);
	fprintf(fp,"\n\n%80s\n\f",loc_legend[23]);//loc_legend[21]
	fflush(fp);
}

open_file()
{
        strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00017.lis");

        if ((fp = fopen(filename,"w")) == NULL)
        {
          disp_message(ERR_MESG,"Error in opening file BLR00017.lis");
          proc_exit();
        }
}
print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}

print_page_header()
{
   double l_report_width;
   double l_acc_entity_length;
   double l_start_point;
   double l_comp_name_end_point;
   int l_page_width;

   l_report_width=145;
   l_acc_entity_length = strlen(hosp_name.arr);

   if (nd_repl_mm_yyyy.arr[0] == '\0')
   {
	  strcpy(repl_mm_yyyy.arr,l_month_year.arr);
	  repl_mm_yyyy.len = strlen(repl_mm_yyyy.arr);
   }
    else
    {
	  strcpy(repl_mm_yyyy.arr,l_repl_mm_yyyy.arr);
	  repl_mm_yyyy.len = strlen(repl_mm_yyyy.arr);
    }
     
	if (nd_month_year.arr[0] == '\0')	
	 strcpy(month_year.arr,loc_legend[20]);
	else
	 strcpy(month_year.arr,l_month_year.arr);

      
	     
/*
fprintf(fp,"\fMDL : BL                                         %-30s                                    Date : %-16s\n",
hosp_name.arr,date.arr);
*/


repl_mon_yyyy.arr[0] = '\0';
repl_mon_yyyy.len = 0;

EXEC SQL SELECT TO_CHAR(TO_DATE(:repl_mm_yyyy,'mm/yyyy'),'FMMonth/YYYY') 
into :repl_mon_yyyy
FROM dual;


if(repl_mm_yyyy.arr[0]!= 0)
{
get_initialize();
strcpy(nd_temp_date.arr,repl_mon_yyyy.arr);
get_local_date_convn3();
strcpy(repl_mon_yyyy.arr,nd_loc_date.arr); 
repl_mon_yyyy.arr[repl_mon_yyyy.len] = '\0';
}


//Line 1
//fprintf(fp,"MDL : BL                                         %-30s                                    Date : %-10.10s\n",
//hosp_name.arr,date.arr);
//fprintf(fp,"OPR : %-10s                                                                                                   Time : %-14s\n", user_id.arr,date_time.arr);
//fprintf(fp,"REP : %-8s            %s%-4s              PAGE : %4d\n",
//"ssBLR00017","   List of Bounced Cheque that Has Not Been Replaced Ending 31 December",yearstr.arr,++pctr);

l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2));
fprintf(fp,"%-13s : BL",loc_legend[20]);        
l_start_point=l_start_point-18;
print_spaces(l_start_point);
fprintf(fp,"%s",hosp_name.arr);
l_comp_name_end_point=l_start_point+18+l_acc_entity_length;
l_start_point=(l_report_width-(15+strlen(date_con.arr))-l_comp_name_end_point);
print_spaces(l_start_point);

date_con.arr[date_con.len]='\0';

get_initialize();
strcpy(nd_temp_date.arr,date_con.arr);
get_local_date_convn1();
strcpy(date_con.arr,nd_loc_date.arr); 

fprintf(fp,"%-15.15s : %s\n",loc_legend[3],date_con.arr);

nd_temp_date.arr[nd_temp_date.len] = '\0';
nd_loc_date.arr[nd_loc_date.len]   = '\0';

//Line 2

l_start_point=0;
l_start_point=ceill((l_report_width/2));
fprintf(fp,"%-13s : %s",loc_legend[21],user_id.arr);
l_start_point=l_start_point-(strlen(user_id.arr)+16);
print_spaces(l_start_point);
//fprintf(fp,"%s",loc_legend[1]);
l_comp_name_end_point=l_start_point+strlen(user_id.arr)+16;
l_start_point=(l_report_width-(17+strlen(date_time.arr))-l_comp_name_end_point);
print_spaces(l_start_point);
fprintf(fp,"%-15.15s : %s\n",loc_legend[4],date_time.arr);

l_start_point=0;
l_start_point=ceill((l_report_width/2)-((strlen(loc_legend[16])+strlen(loc_legend[17])
			+strlen(repl_mon_yyyy.arr)+2)/2));
//Line 3

fprintf(fp,"%-14.14s: BLR00017",loc_legend[2]);
l_start_point=l_start_point-24;
print_spaces(l_start_point);
fprintf(fp,"%s %s %s",loc_legend[16],loc_legend[17],repl_mon_yyyy.arr);
l_comp_name_end_point=l_start_point+24+2+strlen(loc_legend[16])+strlen(loc_legend[17])
		+strlen(repl_mon_yyyy.arr);
pctr1 = pctr;
sprintf(l_pctr1,"%d",++pctr1);
l_start_point=(l_report_width-(18+6+strlen(l_pctr1))-l_comp_name_end_point);
print_spaces(l_start_point);
fprintf(fp,"%-15.15s : %d\n",loc_legend[5],++pctr);

fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(fp,"VER : 4.1 \n\n\n\n");
fprintf(fp,"           %s :\n",loc_legend[26]); 
fprintf(fp,"           ------------------- \n\n\n");
fprintf(fp,"\n\n");


if(nd_month_year.arr[0]!='\0')	
{
get_initialize();
strcpy(nd_temp_date1.arr,month_year.arr);
get_local_date_convn2();
strcpy(month_year.arr,nd_loc_date.arr); 
}
else
strcpy(month_year.arr,loc_legend[28]);


if(repl_mm_yyyy.arr[0]!='\0')
{
get_initialize();
strcpy(nd_temp_date1.arr,repl_mm_yyyy.arr);
get_local_date_convn2();
strcpy(repl_mm_yyyy.arr,nd_loc_date.arr); 
}
else
strcpy(repl_mm_yyyy.arr,loc_legend[19]);


fprintf(fp,"				%s            : %s\n",loc_legend[6],month_year.arr);
fprintf(fp,"				%s                : %s\n\n",loc_legend[7],repl_mm_yyyy.arr);

fprintf(fp,"\f");
print_head();

}



print_head()
{

double l_report_width;
double l_acc_entity_length;
double l_start_point;
double l_comp_name_end_point;
int l_page_width;

l_report_width=145;
l_acc_entity_length = strlen(hosp_name.arr);

sprintf(l_tit,"%s %s %s",loc_legend[16],loc_legend[17],repl_mon_yyyy.arr);

fprintf(fp,"\n");

//fprintf(fp,"MDL : BL                                          %-30s                                 Date : %-16s\n",
//hosp_name.arr,date.arr);
//fprintf(fp,"OPR : %-10s                                                                                                 Time : %-14s \n", user_id.arr,date_time.arr);
//fprintf(fp,"REP : %-8s             %-75.75s           PAGE : %4d\n",
//"BLR00017",l_tit,++pctr);

//Line 1

l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2));
fprintf(fp,"%-13s : BL",loc_legend[20]);
l_start_point=l_start_point-18;
print_spaces(l_start_point);
fprintf(fp,"%s",hosp_name.arr);
l_comp_name_end_point=l_start_point+18+l_acc_entity_length;
l_start_point=(l_report_width-(15+strlen(date_con.arr))-l_comp_name_end_point);
print_spaces(l_start_point);
fprintf(fp,"%-15.15s : %s\n",loc_legend[3],date_con.arr);


//Line 2

l_start_point=0;
l_start_point=ceill((l_report_width/2));
fprintf(fp,"%-13s : %s",loc_legend[21],user_id.arr);
l_start_point=l_start_point-(strlen(user_id.arr)+16);
print_spaces(l_start_point);
//fprintf(fp,"%s",loc_legend[1]);
l_comp_name_end_point=l_start_point+strlen(user_id.arr)+16;
l_start_point=(l_report_width-(17+strlen(date_time.arr))-l_comp_name_end_point);
print_spaces(l_start_point);


/*get_initialize();
strcpy(nd_temp_date.arr,date_con.arr);
get_local_date_convn1();
strcpy(date_con.arr,nd_loc_date.arr);*/

fprintf(fp,"%-15.15s : %s\n",loc_legend[4],date_time.arr);


//Line 3

l_start_point=0;
l_start_point=ceill((l_report_width/2)-((strlen(loc_legend[16])+strlen(loc_legend[17])
			+strlen(repl_mon_yyyy.arr)+2)/2));
fprintf(fp,"%-14.14s: BLR00017",loc_legend[2]);
//fprintf(fp,"%-14.14s: %8s",loc_legend[2],loc_legend[25]);
l_start_point=l_start_point-24;
print_spaces(l_start_point);
fprintf(fp,"%s %s %s",loc_legend[16],loc_legend[17],repl_mon_yyyy.arr);
l_comp_name_end_point=l_start_point+24+2+strlen(loc_legend[16])+strlen(loc_legend[17])
		+strlen(repl_mon_yyyy.arr);
pctr1 = pctr;
sprintf(l_pctr1,"%d",++pctr1);
l_start_point=(l_report_width-(18+6+strlen(l_pctr1))-l_comp_name_end_point);
print_spaces(l_start_point);
fprintf(fp,"%-15.15s : %d\n",loc_legend[5],++pctr);

fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------------------\n");
//lctr = 13;
fprintf(fp,"    %6s %-27s %-20s  %-15s %-20s %-32s %15s \n",loc_legend[8],loc_legend[9],loc_legend[10],loc_legend[11],loc_legend[18],loc_legend[12],loc_legend[13]);
fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------------------\n");

lctr = 15;
}

print_rec(ind)
int ind;
{
  if (ind == 0)
  { 	
    slno=1;
    check_page_end(5,0);    
        fprintf(fp,"\n");
        fprintf(fp," %-5.5s %-31.31s \n",bl_cash_counter_code.arr,bl_long_desc.arr);
	    fprintf(fp,"\n");
	/*	fprintf(fp,"-------------------------------------------------------------------"); 
		fprintf(fp,"---------------------------------------------------------------------------\n"); */

//Commented on 01/12/2004 as per ML requirement
      /*
	    fprintf(fp,"    %-3s%-31s %-21s %-11s %-41s          %-7s \n",loc_legend[8],loc_legend[9],loc_legend[10],loc_legend[11],loc_legend[12],loc_legend[13]);
		fprintf(fp,"------------------------------------------------------------------");
		fprintf(fp,"-----------------------------------------------------------------------------\n");
       */  


get_initialize();

strcpy(nd_temp_date.arr,bl_cheque_date.arr);

get_local_date_convn1();

strcpy(bl_cheque_date.arr,nd_loc_date.arr); 
  	   		
		fprintf(fp,"%-4s%6d %-27.27s %-20s  %-15s %-20s %-32.32s ",
		            " ", slno,
					bl_slmt_doc_remarks.arr,				
					bl_Cheque_no.arr,		
					bl_cheque_date.arr,
					bl_receipt_no.arr,
					bl_payer_name.arr);

		print_formated(bl_doc_amt);
        lctr+=1;
		
 }
  else
  {
     slno=slno+1;
 
      check_page_end(3,0);  
     	        


get_initialize();
strcpy(nd_temp_date.arr,bl_cheque_date.arr);
get_local_date_convn1();
strcpy(bl_cheque_date.arr,nd_loc_date.arr); 

	fprintf(fp,"%-4s%6d %-27.27s %-20s  %-15s %-20s %-32.32s ",
		            " ", slno,
					bl_slmt_doc_remarks.arr,				
					bl_Cheque_no.arr,		
					bl_cheque_date.arr,
					bl_receipt_no.arr,
					bl_payer_name.arr);
		print_formated(bl_doc_amt);
        lctr+=1;

   }

}

print_total()
{
	fprintf(fp,"\n");
	fprintf(fp,"%-131s%-15s\n"," ","---------------");
	fprintf(fp,"%-101s%-29s "," ",loc_legend[14]);
	print_formated(nd_cc_total_amt);
	fprintf(fp,"%-131s%-15s\n"," ","---------------");
    lctr+=4;
}

print_grand_total()
{
	fprintf(fp,"%-108s%-22s "," ",loc_legend[15]);
	print_formated(nd_cc_grand_total_amt);
	fprintf(fp,"%-131s%-15s\n"," ","---------------");
    lctr+=2;
}
print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15sCR \n",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s  \n",str_amt);
    }
}          



fetch_hosp_name()

{
    l_acc_name.arr[0] ='\0';
	hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
    date_con.arr[0]	 = '\0';
    user_id.arr[0]   = '\0';
    l_acc_name.len   = 0;
	hosp_name.len    = 0;
    date_time.len    = 0;
    date_con.len	 = 0;
    user_id.len      = 0;


    EXEC SQL SELECT ACCOUNTING_NAME,
					ACC_ENTITY_NAME, 
					TO_CHAR(SYSDATE,'DD/MM/YYYY'),
					TO_CHAR(SYSDATE,'HH24:MI:SS'),
					USER
              INTO :l_acc_name, 
				   :hosp_name,
				   :date_con,
				   :date_time,
				   :user_id
              FROM SY_ACC_ENTITY_LANG_VW
	          WHERE ACC_ENTITY_ID = :nd_facility
		      AND   LANGUAGE_ID   = :p_language_id;

		 if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	l_acc_name.arr[l_acc_name.len]		   = '\0';
	hosp_name.arr[hosp_name.len]           = '\0';
	date_time.arr[date_time.len]           = '\0';
	date_con.arr[date_con.len]			   = '\0';
	user_id.arr[user_id.len]               = '\0';

}


check_page_end(l_lead_lines, l_print_flag)
int l_lead_lines;
int	l_print_flag;
{
	if(l_print_flag==1)
		l_lead_lines=l_lead_lines+10;

	if((lctr+l_lead_lines)> 55) 
	{
		fprintf(fp,"\f");
		print_head();
		//lctr = 3;
		lctr = 5;
	}
}
		   
fetch_legend_value()
{
	for(i=1;i<=300;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00017.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(
						:nd_facility,
						'SM',
						'SM_LANG_LEGEND',
						'DFLT_LEGEND_VALUE',
						:l_pk_value,
						:l_translated_value,
						:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}





