/************************************************************************/
/* OCS MEDICOM VER 4.1                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLR00036.PC                                  */
/* AUTHOR                : D. Ganesh Murthi                             */  
/* DATE WRITTEN          : 16/12/2003                                   */      
/************************************************************************/
          
#include <stdio.h>         
#include <string.h> 
#include <math.h>
#include <bl.h>        

#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])

/*
#define DEBUG 0
*/

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR hosp_name                       [120],
        date_time                       [20],
        user_id                         [91],
		nd_pwd 			    			[91],
        nd_session_id                   [16],
        nd_pgm_date                     [25],
        d_curr_pgm_name                 [15],
		l_currency						[10],
		l_translated_value				[202],
		l_pk_value						[100],
		date							[20],
		p_language_id					[3],

		nd_forthe_date					[20],
		nd_facility						[3],

		bl_trx_date						[30],
		bl_acct_code					[11],
		bl_main_acc_desc				[61];


double  bl_day_amt,
		bl_mon_amt,
		bl_lst_amt,
		bl_yer_amt,
		
		bl_day_tot_amt,
		bl_mon_tot_amt,
		bl_lst_tot_amt,
		bl_yer_tot_amt;
			
char filename[150];
char x_msg[200];
char l_mesg[300];
char loc_legend[999][201];

int    j=0;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int    lctr = 0,pctr = 0,nvalid = 0,ncancel = 0;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 5)
    {
		int i = 0;
		disp_message(ERR_MESG,"Not enough Parameters for running this program");
		proc_exit();
    }
 
    strcpy(g_pgm_id,"BLR00036");
    strcpy(nd_pwd.arr,argv[1]);
    nd_pwd.len = strlen(nd_pwd.arr);

    EXEC sql connect :nd_pwd;
    set_meduser_role(); 
	strcpy(p_language_id.arr,l_language_id.arr);
	  
    if (sqlca.sqlcode < 0 )
	{
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
    }

    strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    strcpy(nd_session_id.arr,argv[2]);
    nd_session_id.len = strlen(nd_session_id.arr);
    strcpy(g_session_id,nd_session_id.arr);

    strcpy(nd_pgm_date.arr,argv[3]);
    nd_pgm_date.len = strlen(nd_pgm_date.arr);
    strcpy(g_pgm_date,nd_pgm_date.arr);

    strcpy(nd_facility.arr,argv[4]);
    nd_facility.len = strlen(nd_facility.arr);
    strcpy(g_facility_id,nd_facility.arr);

    strcpy(nd_forthe_date.arr,argv[5]);
    nd_forthe_date.len = strlen(nd_forthe_date.arr);

    declare_cur();

	fetch_legend_value();

    fetch_hosp_name();

    open_file();
 
    open_rec();
 
	print_rec();

	end_of_rep();

    EXEC SQL COMMIT WORK RELEASE;

    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");
}

declare_cur()
{
	EXEC SQL DECLARE BL_EXT_ACCT_CODE_CUR 
			  CURSOR 
			     FOR 
			  select ACCT_DESC      
				from BL_EXT_ACCT_CODE
			   where account_code = :bl_acct_code;

	EXEC SQL DECLARE RCPT_RFND_CANCEL_CUR 
	          CURSOR
			     FOR 
			  SELECT SUM(NVL(DAYAMT,0)), 
					 SUM(NVL(MONTHAMT,0)), 
					 SUM(NVL(YEARAMT,0)), 
					 EXT_ACCT_CODE 
				FROM (      
						    SELECT SUM(NVL(dd_rcpt_amt,0)+NVL(dd_canc_rcpt_amt,0)+NVL(mm_canc_rcpt_amt,0)+NVL(yy_canc_rcpt_amt,0)+NVL(prv_yy_canc_rcpt_amt,0)) dayamt,
								   0 monthamt, 
								   0 yearamt,
								   ext_acct_code
							  FROM bl_summary_tran_by_acct
							 WHERE operating_facility_id	= :nd_facility
							   AND trx_date					= TO_DATE(:nd_forthe_date,'DD/MM/RRRR')
							 GROUP 
								BY ext_acct_code
							 UNION
							SELECT 0 dayamt,
								   SUM(NVL(dd_rcpt_amt,0)+NVL(dd_canc_rcpt_amt,0)+NVL(mm_canc_rcpt_amt,0)+NVL(yy_canc_rcpt_amt,0)+NVL(prv_yy_canc_rcpt_amt,0)) monthamt, 
								   0 yearamt,
								   ext_acct_code
							  FROM bl_summary_tran_by_acct
							 WHERE operating_facility_id	= :nd_facility
							   AND trx_date					>= TO_DATE('01/'||TO_CHAR(TO_DATE(:nd_forthe_date,'DD/MM/RRRR'),'MM/RRRR'),'DD/MM/RRRR')
							   AND trx_date                 <= TO_DATE(:nd_forthe_date,'DD/MM/RRRR')
							 GROUP 
								BY ext_acct_code           
							 UNION
							SELECT 0 dayamt,
								   0 monthamt, 
								   SUM(NVL(dd_rcpt_amt,0)+NVL(dd_canc_rcpt_amt,0)+NVL(mm_canc_rcpt_amt,0)+NVL(yy_canc_rcpt_amt,0)+NVL(prv_yy_canc_rcpt_amt,0)) yearamt,
								   ext_acct_code
							  FROM bl_summary_tran_by_acct a
							 WHERE operating_facility_id = :nd_facility
							   AND trx_date					>= TO_DATE('01/01'||TO_CHAR(TO_DATE(:nd_forthe_date,'DD/MM/RRRR'),'RRRR'),'DD/MM/RRRR')
							   AND trx_date                 <= TO_DATE(:nd_forthe_date,'DD/MM/RRRR')

							 GROUP 
								BY ext_acct_code
					 )
			   GROUP 
			      BY EXT_ACCT_CODE
			   ORDER 
			      BY 4;    
}   

fetch_legend_value()
{
	for(j=1;j<=50;j++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00036.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:j,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[j],l_translated_value.arr);
	}
}


open_rec() 
{
    EXEC SQL OPEN BL_EXT_ACCT_CODE_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor BL_EXT_ACCT_CODE_CUR",0,"");

    EXEC SQL OPEN RCPT_RFND_CANCEL_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor RCPT_RFND_CANCEL_CUR",0,"");

	bl_day_tot_amt =0;
	bl_mon_tot_amt =0;
	bl_yer_tot_amt =0;
	bl_lst_amt     =0;
	bl_lst_tot_amt =0;
}

fetch_main_acc()
{
	bl_main_acc_desc.arr[0] = '\0';
	bl_main_acc_desc.len = 0;
   
    EXEC SQL FETCH bl_ext_acct_code_cur
              INTO :bl_main_acc_desc;

       if (OERROR)
            err_mesg("FETCH failed on cursor BL_EXT_ACCT_CODE_CUR",0,"");

   bl_main_acc_desc.arr[bl_main_acc_desc.len] = '\0';

   return(LAST_ROW?0:1);
}

fetch_rec()
{
   bl_day_amt =0; 
   bl_mon_amt =0;
   bl_yer_amt =0;
   bl_acct_code.arr[0] = '\0';
   bl_acct_code.len = 0;

      EXEC SQL FETCH rcpt_rfnd_cancel_cur
               	INTO :bl_day_amt,
					 :bl_mon_amt,
					 :bl_yer_amt,
	     			 :bl_acct_code;
       if (OERROR)
            err_mesg("FETCH failed on cursor RCPT_RFND_CANCEL_CUR",0,"");

   bl_acct_code.arr[bl_acct_code.len] = '\0';
   return(LAST_ROW?0:1);
}

print_rec()
{
	if (lctr > 60) 
    {
		print_head();
		lctr = 13;
    }
	print_day_details();
	print_column_total();
}  

print_day_details()
{
	while(fetch_rec())
	{
		bl_main_acc_desc.arr[0] = '\0';
		bl_main_acc_desc.len = 0;
   
		EXEC SQL SELECT acct_desc
				   INTO :bl_main_acc_desc 
				   FROM bl_ext_acct_code
				  WHERE account_code = :bl_acct_code;

		bl_main_acc_desc.arr[bl_main_acc_desc.len] = '\0';
           
		bl_lst_amt = bl_yer_amt - bl_mon_amt;
	
		fprintf(fp,"%-10.10s %-60.60s   ", bl_acct_code.arr, bl_main_acc_desc.arr);
		print_formated(bl_day_amt);
		fprintf(fp,"  ");
		print_formated(bl_mon_amt);
		fprintf(fp,"  ");
		print_formated(bl_lst_amt);
		fprintf(fp,"  ");
		print_formated(bl_yer_amt);
		fprintf(fp,"\n");

		bl_day_tot_amt += bl_day_amt;
		bl_mon_tot_amt += bl_mon_amt;
		bl_yer_tot_amt += bl_yer_amt;
 		lctr++;
	}   
}

print_column_total()
{
	fprintf(fp,"%70s"," ");
	fill_dash(78);

	bl_lst_tot_amt = bl_yer_tot_amt - bl_mon_tot_amt;
  
	fprintf(fp,"%-70.70s    "," ");
	print_formated(bl_day_tot_amt);
	fprintf(fp,"  ");
	print_formated(bl_mon_tot_amt);
	fprintf(fp,"  ");
	print_formated(bl_lst_tot_amt);
	fprintf(fp,"  ");
	print_formated(bl_yer_tot_amt);
	fprintf(fp,"\n");
  
	fprintf(fp,"%70s"," ");
	fill_dash(78);

	lctr+=3;
}

end_of_rep()
{
	fprintf(fp,"\n\n %46s   ***  END OF REPORT ***\n\f"," ");
	fflush(fp);
}

open_file()
{
    strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00036.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file BLR00036.lis");
       proc_exit();
    }
	print_head();
}

print_head()
{
	/*
	fprintf(fp,"\fMDL : BL %42s %-30s %34s %-16s\n"," ",hosp_name.arr," ",date_time.arr);
	fprintf(fp,"OPR : %-10s \n", user_id.arr);
	fprintf(fp,"REP : %-8s  %37s %s  %40s  PAGE : %4d\n", "BLR00036"," "," CASH BOOK ATTACHMENT "," ",++pctr);
	fprintf(fp,"%51s DATE OF COLLECTION %s          \n"," ",nd_forthe_date.arr);
																					 
	fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------------\n");
	fprintf(fp,"Acct.Code Description                                                            For the          For the      Upto Last            Year  \n");
	fprintf(fp,"                                                                                 Day              Month            Month            Total \n");
	fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------------\n");

	fflush(fp);  
	lctr = 13;
	*/

	//Added By Harish to dynamically place header on Jan, 31st 2004.
	double l_report_width;
	double l_acc_entity_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width;

	l_report_width=148;
	l_acc_entity_length = strlen(hosp_name.arr);

	//Code for Line 1
	l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2));
	fprintf(fp,"MDL           : BL");
	l_start_point=l_start_point-18;
	print_spaces(l_start_point);
	fprintf(fp,"%s",hosp_name.arr);
	l_comp_name_end_point=l_start_point+18+l_acc_entity_length;
	l_start_point=(l_report_width-(15+strlen(date.arr))-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s: %s\n",loc_legend[3],date.arr);

	//Code for Line 2
	l_start_point=0;
	l_start_point=ceill((l_report_width/2)-((strlen(loc_legend[2]))/2));
	fprintf(fp,"OPR           : %s",user_id.arr);
	l_start_point=l_start_point-(strlen(user_id.arr)+16);
	print_spaces(l_start_point);
	fprintf(fp,"%s",loc_legend[2]);
	l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[2]);
	l_start_point=(l_report_width-(17+strlen(date_time.arr))-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s: %s\n",loc_legend[4],date_time.arr);

	//Code for Line 3
	l_start_point=0;
	l_start_point=ceill((l_report_width/2)-(strlen(nd_forthe_date.arr)/2));
	fprintf(fp,"%-14.14s: BLR00035",loc_legend[1]);
	l_start_point=l_start_point-24;
	print_spaces(l_start_point);
	fprintf(fp,"%s",nd_forthe_date.arr);
	l_comp_name_end_point=l_start_point+24+strlen(nd_forthe_date.arr);
	l_start_point=(l_report_width-(17+9)-l_comp_name_end_point);
	print_spaces(l_start_point);
	fprintf(fp,"%-15.15s : %d\n",loc_legend[5],++pctr);
	
	fill_dash(148);	
	fprintf(fp,"%110s%17.17s  %17.17s\n"," ",loc_legend[7],loc_legend[7]);
	fprintf(fp,"%-10.10s%60s%19.19s  %17.17s  %17.17s  %17.17s\n",loc_legend[6]," ",loc_legend[7],loc_legend[7],loc_legend[8],loc_legend[8]);
	fprintf(fp,"%-10.10s%60s%15.15s(%2.2s)  %13.13s(%2.2s)  %13.13s(%2.2s)  %13.13s(%2.2s)\n",loc_legend[13]," ",loc_legend[9],l_currency.arr,loc_legend[10],l_currency.arr,loc_legend[11],l_currency.arr,loc_legend[12],l_currency.arr);
	fill_dash(148);

	fflush(fp);  
	lctr = 13;
}

print_spaces(l_length)
double l_length;
{
	for(j=0;j<l_length;j++)
	{
		fprintf(fp," ");
	}
}
     
fill_dash(flg)
{
	int i;
	for (i=1;i<=flg;i++)
    { 
		fprintf(fp,"%s","-");
	}
	fprintf(fp,"\n");
}

fetch_hosp_name()
{
    hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
    user_id.arr[0]   = '\0';
    l_currency.arr[0]= '\0';

	hosp_name.len    = 0;
    date_time.len    = 0;
    user_id.len      = 0;
	l_currency.len	 = 0;

    EXEC SQL SELECT acc_entity_name, 
					TO_CHAR(SYSDATE,'DD/MM/RRRR'),
					TO_CHAR(SYSDATE,'HH24:MI:SS'),
                    USER,
					base_currency
               INTO :hosp_name, 
					:date,
					:date_time, 
					:user_id,
					:l_currency
               FROM sy_acc_entity
	          WHERE acc_entity_id = :nd_facility;

    if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	hosp_name.arr[hosp_name.len]           = '\0';
	date_time.arr[date_time.len]           = '\0';
	user_id.arr[user_id.len]               = '\0';
	l_currency.arr[l_currency.len]		   = '\0';
} 


print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%15s",s_amt);
        fprintf(fp,"%15s  ",str_amt);
    }
}                        
