/************************************************************************/
/* OCS MEDICOM VER 4.1                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLR00099.PC                                  */
/* AUTHOR                : Jagwinder Kaur                               */  
/* DATE WRITTEN          : 28/07/2004                                   */      
/************************************************************************/
          

#include <stdio.h>         
#include <string.h> 
#include <bl.h>       
#include <math.h> 
//#include <winproc.h>

#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define NODATAFOUND sqlca.sqlcode == 1403
/*
#define DEBUG 0
*/
#define ESC 0x1B

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR     hosp_name                       [120],
			date							[20],
            date_time                       [20],
            user_id                         [91],
	        nd_pwd 							[91],
            nd_session_id                   [16],
            nd_pgm_date                     [25],
            d_curr_pgm_name                 [15],
			nd_facility				        [3],
			bl_reminder_no					[8],
			bl_reminder_dispatched_date		[11],
			bl_reminder_disp_doc_type		[7],
			bl_reminder_disp_doc_number		[9],
			bl_reminder_disp_doc_slno		[4],
			bl_reminder_not_delivered_yn	[2],
			bl_org_doc_type_code			[7],
			nd_appr_ref[35],
			bl_org_doc_num					[9],			
			bl_org_doc_no					[16],
			bl_org_doc_date					[11],
			bl_patient_id					[21],
			old_patient_id					[21],
			bl_episode_type					[2],
			bl_patient_name					[31],
			bl_reason_code					[5],
			bl_reason_desc					[116],
	    		nd_fm_date						[11],
			nd_to_date						[11],
			nd_fm_reason_code				[5],
			nd_to_reason_code				[5],
			nd_blng_grp_catg				[5],
			bl_blng_catg_desc				[30],
			nd_nationality					[2],
			nd_national_id_num				[21],
			nd_ln1_add						[31],
			nd_ln2_add						[31],
			nd_ln3_add						[31],
			nd_ln4_add						[31],
			nd_citizen						[2],
			nd_postal_code					[9],
		//	nd_fr_wo_amt					[15],
		//	nd_to_wo_amt					[15],
			old_reason_code					[5],
			l_translated_value				[201],
			l_cash_book_acc_desc			[16],
			l_pk_value						[100],
			nd_wo_status                    [2],
			bl_canc_reason_code             [5],
			bl_reln_code					[13],
			bl_currency						[3],	
      		bl_wo_foot_note_line01_text		[150],
	 		bl_wo_foot_note_line02_text		[150],
	 		bl_wo_foot_note_line03_text		[150],
	 		bl_wo_foot_note_line04_text		[150],
			bl_wo_foot_note_line05_text		[150],
	 		bl_wo_foot_note_line06_text		[150],
	 		bl_wo_foot_note_line07_text		[150],
	 		bl_wo_foot_note_line08_text		[150],
 	    	bl_wo_foot_note_line09_text		[150],
	 		bl_wo_foot_note_line10_text		[150],
			p_language_id					[3],
			nd_temp_date[21],
			
			date_convert[21],
		
			nd_loc_date[21];
			
double      bl_wo_request_amt,nd_fr_wo_amt=0,nd_to_wo_amt=0,get_amount;			
int i,sl_no=1;
char filename[150];
char x_msg[200];
char loc_legend[999][201];
char l_mesg[200];
char fm_date[11],to_date[11];
	char g_amt[15], gstr_amt[15];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int    lctr = 0,pctr = 0,nvalid = 0,ncancel = 0;
int    first = 1,r_fst = 1;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }
 
    strcpy(g_pgm_id,"BLRINSWO");
    strcpy(nd_pwd.arr,argv[1]);
    nd_pwd.len = strlen(nd_pwd.arr);

    EXEC sql connect :nd_pwd;
  
	  
    if (sqlca.sqlcode < 0 )
	{
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
        }

		set_meduser_role(); 
		strcpy(p_language_id.arr,l_language_id.arr);
		p_language_id.len = strlen(p_language_id.arr);
		p_language_id.arr[p_language_id.len]='\0';

    	strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    	d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    	strcpy(nd_session_id.arr,argv[2]);
    	nd_session_id.len = strlen(nd_session_id.arr);
    	strcpy(g_session_id,nd_session_id.arr);

    	strcpy(nd_pgm_date.arr,argv[3]);
    	nd_pgm_date.len = strlen(nd_pgm_date.arr);
    	strcpy(g_pgm_date,nd_pgm_date.arr);

    	strcpy(nd_facility.arr,argv[4]);
    	nd_facility.len = strlen(nd_facility.arr);
    	strcpy(g_facility_id,nd_facility.arr);

		nd_facility.arr[nd_facility.len]='\0';

		nd_fm_date.arr[0]			= '\0';
		nd_to_date.arr[0]			= '\0';
		nd_fm_reason_code.arr[0]	= '\0';
		nd_to_reason_code.arr[0]	= '\0';
		nd_blng_grp_catg.arr[0]		= '\0';
		nd_nationality.arr[0]		= '\0';
		nd_wo_status.arr[0]         = '\0';
	//	nd_fr_wo_amt.arr[0]			= '\0';	
	//	nd_to_wo_amt.arr[0]			= '\0';	
				
		nd_fm_date.len			= 0;
		nd_to_date.len			= 0;
		nd_fm_reason_code.len	= 0;
		nd_to_reason_code.len	= 0;
		nd_blng_grp_catg.len	= 0;
		nd_nationality.len		= 0;
		nd_wo_status.len		= 0;
        //nd_fr_wo_amt.len		= 0;	
		//nd_to_wo_amt.len		= 0;


	//	disp_message(ERR_MESG,"Called Here");
  


        EXEC SQL SELECT	PARAM1,PARAM2,PARAM3,PARAM4,PARAM5,PARAM6,to_number(PARAM7),to_number(PARAM8)
				INTO	:nd_fm_date,
						:nd_to_date,
						:nd_fm_reason_code,
						:nd_to_reason_code,
						:nd_nationality,
						:nd_wo_status,
						:nd_fr_wo_amt,
                        :nd_to_wo_amt 
				FROM SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

		nd_fm_reason_code.arr[nd_fm_reason_code.len]	= '\0';
		nd_to_reason_code.arr[nd_to_reason_code.len]	= '\0';
		nd_fm_date.arr[nd_fm_date.len]					= '\0';
		nd_to_date.arr[nd_to_date.len]					= '\0';
		nd_blng_grp_catg.arr[nd_blng_grp_catg.len]		= '\0';
		nd_nationality.arr[nd_nationality.len]			= '\0';
		nd_wo_status.arr[nd_wo_status.len]				= '\0';  
        //nd_fr_wo_amt.arr[nd_fr_wo_amt.len]		= '\0'; 
        //nd_to_wo_amt.arr[nd_to_wo_amt.len]		= '\0'; 

	EXEC SQL DELETE SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

   EXEC SQL Select BASE_CURRENCY into :bl_currency from sy_acc_entity where acc_entity_id = :nd_facility;

    	declare_cur();

		fetch_hosp_name();

        fetch_blng_catg_desc();

		fetch_print_foot_note();

		fetch_legend_value();

		open_file();		

		open_wo_dtl();

      fprintf(fp,"%c&l1O",ESC); /* Set Landscape*/ 
	  fprintf(fp, "%c(s14H", ESC);/* Reduce the font size*/


		print_hdr();
		
		end_of_rep();


    EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");
}

declare_cur()
{
	EXEC SQL DECLARE WO_DTL_CUR CURSOR FOR 
		select  a.aggr_doc_type_code,
					a.aggr_doc_num,
					a.aggr_doc_type_code||'/'||a.aggr_doc_num,
					to_char(a.aggr_doc_date,'DD/MM/YYYY'),
					a.patient_id,
					a.wo_request_amt,
					a.req_reason_code,
	  b.REASON_CODE  Canc_reason_code,
					a.reln_code,
			a.wo_appr_rejn_doc_ref||'/'||a.wo_appr_rejn_doc_ref_sl  appr_ref      
					from bl_inst_wo_request_dtl a,bl_inst_wo_request_canc_dtl b,bl_inst_pmnt_plan d, BL_CREDIT_AGREEMENT E
					where 
					a.operating_facility_id=:nd_facility
					and   a.operating_facility_id = d.operating_facility_id
					and   a.aggr_doc_type_code = d.aggr_doc_type_code
					and   a.aggr_doc_num = d.aggr_doc_num
					and   a.aggr_inst_no = d.aggr_inst_no
					AND D.operating_facility_id=E.operating_facility_id
					and	D.aggr_doc_type_code =E.aggr_doc_type_code
					and	D.aggr_doc_num =E.aggr_doc_num
					AND NVL(E.CANCELLED_YN,'N')='N'
					and   a.doc_type_code = b.doc_type_code(+)
					and   a.doc_num  = b.doc_num(+)
					and  nvl(a.wo_approved_amt,0) between :nd_fr_wo_amt and :nd_to_wo_amt
				   and   (:nd_nationality = 'A' OR 
	   (:nd_nationality = 'C' and RELN_CODE ='NATIONALS') or 
	   (:nd_nationality = 'O' and RELN_CODE ='OTHERS') ) 
	   and 
		( 
		(nvl(A.cancelled_yn,'N') = 'N'
		
		 and 
		((:nd_wo_status = 'P' and WO_APPROVED_YN is null ) or
		 (:nd_wo_status = 'A' and WO_APPROVED_YN = 'Y'   ) or
		 (:nd_wo_status = 'R' and WO_APPROVED_YN = 'N'   ) 
		))
	   or 
	   (:nd_wo_status = 'C' and nvl(A.cancelled_yn,'N') = 'Y' )
			)
		
					and  ( (:nd_wo_status = 'P' and 
	   nvl(req_reason_code,'!!!!') between nvl(:nd_fm_reason_code,'!!!!') and nvl(:nd_to_reason_code,'~~~~')
	   and TRUNC(a.WO_PROCESS_DATE) between to_date(:nd_fm_date,'dd/mm/yyyy') and to_date(:nd_to_date,'dd/mm/yyyy')
	   )
	   or
	   (:nd_wo_status in  ('A','R') and 
	   nvl(APPR_REJN_REASON_CODE,'!!!!') between nvl(:nd_fm_reason_code,'!!!!') and nvl(:nd_to_reason_code,'~~~~')
	   and TRUNC(a.WO_APPR_REJN_DATE) between to_date(:nd_fm_date,'dd/mm/yyyy') and to_date(:nd_to_date,'dd/mm/yyyy')
	   )
	   or
	   (:nd_wo_status in  ('C') and 
	   nvl(b.REASON_CODE,'!!!!') between nvl(:nd_fm_reason_code,'!!!!') and nvl(:nd_to_reason_code,'~~~~')
	   and TRUNC(b.CANCELLED_DATE)  between to_date(:nd_fm_date,'dd/mm/yyyy') and to_date(:nd_to_date,'dd/mm/yyyy')));


	EXEC SQL DECLARE REMINDER_DTL_CUR CURSOR FOR 
	select	A.reminder_no,
			to_char(A.reminder_dispatched_date,'DD/MM/YYYY'),
			A.reminder_disp_doc_type,
			A.reminder_disp_doc_number,
			A.reminder_disp_doc_slno,
			nvl(A.reminder_not_delivered_yn,'N')
			from bl_inst_pmnt_for_reminder A,BL_CREDIT_AGREEMENT B
			where A.operating_facility_id=:nd_facility
			AND A.operating_facility_id=B.operating_facility_id
			and	A.aggr_doc_type_code =B.aggr_doc_type_code
			and	A.aggr_doc_num =B.aggr_doc_num
			AND NVL(B.CANCELLED_YN,'N')='N'
			and	  A.aggr_doc_type_code = :bl_org_doc_type_code
			and   A.aggr_doc_num       = :bl_org_doc_num;

}

open_wo_dtl() 
{

	EXEC SQL OPEN WO_DTL_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor WO_DTL_CUR",0,"");
}

close_wo_dtl() 
{

	EXEC SQL CLOSE WO_DTL_CUR;
    
}

open_rem_cur() 
{

	EXEC SQL OPEN REMINDER_DTL_CUR;
    if (OERROR)
         err_mesg("OPEN failed on cursor REMINDER_DTL_CUR",0,"");
}

close_rem_cur() 
{

	EXEC SQL CLOSE REMINDER_DTL_CUR;
    
}

fetch_reminder_dtl()
{

bl_reminder_no.arr[0]				= '\0';
bl_reminder_dispatched_date.arr[0]	= '\0';
bl_reminder_disp_doc_type.arr[0]	= '\0';
bl_reminder_disp_doc_number.arr[0]	= '\0';
bl_reminder_disp_doc_slno.arr[0]	= '\0';
bl_reminder_not_delivered_yn.arr[0]	= '\0';
			
bl_reminder_no.len				= 0;
bl_reminder_dispatched_date.len	= 0;
bl_reminder_disp_doc_type.len	= 0;
bl_reminder_disp_doc_number.len	= 0;
bl_reminder_disp_doc_slno.len	= 0;
bl_reminder_not_delivered_yn.len= 0;

      EXEC SQL FETCH REMINDER_DTL_CUR
               INTO :bl_reminder_no,
					:bl_reminder_dispatched_date,
					:bl_reminder_disp_doc_type,
					:bl_reminder_disp_doc_number,
					:bl_reminder_disp_doc_slno,
					:bl_reminder_not_delivered_yn;
	
//	disp_message(ERR_MESG,SQLCA.SQLERRD[2].arr);
					
       if (OERROR)
            err_mesg("FETCH failed on cursor REMINDER_DTL_CUR",0,"");

bl_reminder_no.arr[bl_reminder_no.len]							= '\0';
bl_reminder_dispatched_date.arr[bl_reminder_dispatched_date.len]= '\0';
bl_reminder_disp_doc_type.arr[bl_reminder_disp_doc_type.len]	= '\0';
bl_reminder_disp_doc_number.arr[bl_reminder_disp_doc_number.len]= '\0';
bl_reminder_disp_doc_slno.arr[bl_reminder_disp_doc_slno.len]	= '\0';
bl_reminder_not_delivered_yn.arr[bl_reminder_not_delivered_yn.len]	= '\0';


    return(LAST_ROW?0:1);
}


fetch_wo_dtl()
{
bl_reason_code.arr[0]		= '\0';
bl_org_doc_type_code.arr[0]	= '\0';
bl_org_doc_num.arr[0]		= '\0';
bl_org_doc_no.arr[0]		= '\0';
bl_org_doc_date.arr[0]		= '\0';
bl_patient_id.arr[0]		= '\0';
bl_episode_type.arr[0]		= '\0';
nd_national_id_num.arr[0]	= '\0';
bl_canc_reason_code.arr[0]  = '\0';
bl_reln_code.arr[0]			= '\0';	
nd_appr_ref.arr[0] = '\0';

bl_reason_code.len			= 0;
bl_org_doc_type_code.len	= 0;
bl_org_doc_num.len			= 0;
bl_org_doc_no.len			= 0;
bl_org_doc_date.len			= 0;
bl_patient_id.len			= 0;
bl_episode_type.len			= 0;
nd_national_id_num.len		= 0;
bl_canc_reason_code.len	    = 0;
bl_reln_code.len			= 0;
nd_appr_ref.len= 0;

bl_wo_request_amt           = 0;


      EXEC SQL FETCH WO_DTL_CUR
               INTO :bl_org_doc_type_code,
					:bl_org_doc_num,
					:bl_org_doc_no,
					:bl_org_doc_date,
					:bl_patient_id,
					:bl_wo_request_amt,
					:bl_reason_code,
					:bl_canc_reason_code,
					:bl_reln_code,
					:nd_appr_ref;
					
       if (OERROR)
            err_mesg("FETCH failed on cursor WO_DTL_CUR",0,"");

bl_reason_code.arr[bl_reason_code.len]				= '\0';
bl_org_doc_type_code.arr[bl_org_doc_type_code.len]	= '\0';
bl_org_doc_num.arr[bl_org_doc_num.len]				= '\0';
bl_org_doc_no.arr[bl_org_doc_no.len]				= '\0';
bl_org_doc_date.arr[bl_org_doc_date.len]			= '\0';
bl_patient_id.arr[bl_patient_id.len]				= '\0';
bl_episode_type.arr[bl_episode_type.len]			= '\0';
bl_canc_reason_code.arr[bl_canc_reason_code.len]	= '\0';
bl_reln_code.arr[bl_reln_code.len]					= '\0';
nd_appr_ref.arr[nd_appr_ref.len] = '\0';

/*if(strcmp(nd_nationality.arr,'N' == 0)
   	strcpy(nd_citizen.arr,"N");
else
	strcpy(nd_citizen.arr,"Y");
	
*/

    return(LAST_ROW?0:1);
}



print_hdr()
{
  while(fetch_wo_dtl())
  {
    fetch_patient_name();
	
	fetch_reason_desc();

    if(first)
	 {
	 print_head();
	 
     strcpy(old_patient_id.arr,bl_patient_id.arr);
	 old_patient_id.len=strlen(old_patient_id.arr);
	 first = 0;
	 }
	
	check_page_end(2,0);
    fprintf(fp," %-3d %-62s %-3s %-4s ",
				sl_no,
				bl_patient_name.arr," ",
				bl_episode_type.arr);
    
	fprintf(fp,"%-10s",bl_reln_code.arr);
	print_formated(bl_wo_request_amt);

		if(bl_org_doc_date.arr[0]!='\0')
		{
		init_date_temp_var();
		strcpy(date_convert.arr,bl_org_doc_date.arr);
		fun_change_loc_date();	
		}
	fprintf(fp,"%-11s %10s %-35s %-4s",bl_org_doc_no.arr,date_convert.arr,nd_appr_ref.arr,bl_reason_code.arr);
	fprintf(fp,"\n");
	lctr = lctr + 1;
	sl_no++;

	if (nd_ln1_add.arr[0] != '\0')
	{
	check_page_end(1,0);
    fprintf(fp," %-3s %-30s \n"," ",nd_ln1_add.arr);			 
	lctr = lctr + 1;
	}

	if (nd_ln2_add.arr[0] != '\0')
	{
	check_page_end(1,0);
    fprintf(fp," %-3s %-30s \n"," ",nd_ln2_add.arr);			 
	lctr = lctr + 1;
	}

	if (nd_ln3_add.arr[0] != '\0')
	{
	check_page_end(1,0);
    fprintf(fp," %-3s %-30s \n"," ",nd_ln3_add.arr);			 
	lctr = lctr + 1;
	}

	if (nd_ln4_add.arr[0] != '\0')
	{
	check_page_end(1,0);
	fprintf(fp," %-3s %-30s "," ",nd_ln4_add.arr);			 
	}
	if (nd_postal_code.arr[0] != '\0')
	{
    fprintf(fp," %-8s\n",nd_postal_code.arr);			 
	lctr = lctr + 1;
	}
   fprintf(fp,"\n");
	r_fst = 1;
	open_rem_cur();
	
	while(fetch_reminder_dtl())
	  {
	  	if(bl_reminder_dispatched_date.arr[0]!='\0')
			  {
			init_date_temp_var();
			strcpy(date_convert.arr,bl_reminder_dispatched_date.arr);
			fun_change_loc_date();	
			  }
	    check_page_end(1,0);
		if(strcmp(bl_reminder_not_delivered_yn.arr,"Y") == 0)
		   {
          fprintf(fp,"%108s %-3s %-10s %12s \n"," ",bl_reminder_no.arr,date_convert.arr,"*Undelivered");
		  lctr = lctr + 1;
		   }
		else
		 {
		 fprintf(fp,"%108s %-3s %-10s \n"," ",bl_reminder_no.arr,date_convert.arr);
		 lctr = lctr + 1;
		}
	   }
     close_rem_cur();
	 strcpy(old_patient_id.arr,bl_patient_id.arr);
	 old_patient_id.len=strlen(old_patient_id.arr);
        
	 }
close_wo_dtl() ;

if(first)
print_head();

if (sl_no > 1) 
print_note();
}   



print_note()
{
  /*  check_page_end(2,0);
	fprintf(fp," %s : \n\n",loc_legend[29]);*/

if(strcmp(bl_wo_foot_note_line01_text.arr,"\0")!=0)
    {
	check_page_end(2,0);
    fprintf(fp,"%s \n",bl_wo_foot_note_line01_text.arr);
	lctr=lctr+2;
	}

if(strcmp(bl_wo_foot_note_line02_text.arr,"\0")!=0)
  {
    check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line02_text.arr);
    lctr=lctr+2; 
	}
if(strcmp(bl_wo_foot_note_line03_text.arr,"\0")!=0)
  {
    check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line03_text.arr);
    lctr=lctr+2; 
	}
if(strcmp(bl_wo_foot_note_line05_text.arr,"\0")!=0)
  {
    check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line04_text.arr);
    lctr=lctr+2;
   }
if(strcmp(bl_wo_foot_note_line05_text.arr,"\0")!=0)
  {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line05_text.arr);
    lctr=lctr+2;
   }
if(strcmp(bl_wo_foot_note_line06_text.arr,"\0")!=0)
   {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line06_text.arr);
    lctr=lctr+2;
	}
if(strcmp(bl_wo_foot_note_line07_text.arr,"\0")!=0)
  {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line07_text.arr);
    lctr=lctr+2;
   }

if(strcmp(bl_wo_foot_note_line08_text.arr,"\0")!=0)
  {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line08_text.arr);
    lctr=lctr+2;
  }
 if(strcmp(bl_wo_foot_note_line09_text.arr,"\0")!=0)
  {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line09_text.arr);
    lctr=lctr+2;
   }

  if(strcmp(bl_wo_foot_note_line10_text.arr,"\0")!=0)
     {
	check_page_end(2,0);
	fprintf(fp,"%s \n",bl_wo_foot_note_line10_text.arr);
    lctr=lctr+2;
     }
	/*fprintf(fp,"1._____________________________________   ");
	fprintf(fp,"5._____________________________________   ");
	fprintf(fp,"\n");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"\n");
	lctr=lctr+2; 

	check_page_end(2,0);
	fprintf(fp,"2._____________________________________   ");
	fprintf(fp,"6._____________________________________   ");
	fprintf(fp,"\n");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"\n");
	lctr=lctr+2; 

	check_page_end(2,0);
	fprintf(fp,"3._____________________________________   ");
	fprintf(fp,"7._____________________________________   ");
	fprintf(fp,"\n");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"\n");
	lctr=lctr+2; 

	check_page_end(2,0);
	fprintf(fp,"4._____________________________________   ");
	fprintf(fp,"8._____________________________________   ");
	fprintf(fp,"\n");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"  _____________________________________   ");
	fprintf(fp,"\n");
    */
	lctr=lctr+2; 
}   


end_of_rep()
{
	check_page_end(3,0);
	fprintf(fp,"\n\n %65s   ***  END OF REPORT ***\n\f"," ");
	fflush(fp);
}

open_file()
{
    strcpy(filename,WORKING_DIR);
	//strcat(filename,"BLR00099.lis");
	strcat(filename,"BLRINSWO.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       //disp_message(ERR_MESG,"Error in opening file BLR00099.lis");
	   disp_message(ERR_MESG,"Error in opening file BLRINSWO.lis");
       proc_exit();
    }
}

print_page_header()
{

    if (nd_fm_date.arr[0] == '\0')
	  strcpy(fm_date,"Lowest");
    else
	  strcpy(fm_date,nd_fm_date.arr);

	if (nd_to_date.arr[0] == '\0')
	  strcpy(to_date,"Highest");
    else
	  strcpy(to_date,nd_to_date.arr);




print_page_title();
fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(fp,"VER : 4.1 \n\n\n\n");
fprintf(fp,"           INPUT PARAMETER \n");
fprintf(fp,"           --------------- \n\n\n\n");
fprintf(fp,"				TRANSACTION TYPE                  : ");

fprintf(fp,"\n\n");

fprintf(fp,"				RECEIPT DATE     FROM             : %s\n",fm_date);
fprintf(fp,"				                 TO               : %s\n\n",to_date);
fprintf(fp,"\f");
}

print_head()
{
	print_page_title();
    fill_dash(195);
	fprintf(fp,"\n");
	//fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------\n");
//fprintf(fp," %-3s %-4s/%-7s/%-11s %34s%-7s%-5s %8s %3s %-5s%-7s %4s%-7s %4s%-5s  %-35s %-10s \n",loc_legend[12],loc_legend[13],loc_legend[14],loc_legend[15]," ",loc_legend[17],loc_legend[18],loc_legend[10]," ",loc_legend[19],loc_legend[20],loc_legend[21],loc_legend[22],loc_legend[21],loc_legend[23],loc_legend[32],loc_legend[24]);
fprintf(fp," %-3s %-4s/%-7s/%-11s %34s%-7s%-5s %8s %3s %-5s%-7s %4s%-7s %4s%-5s  %-25s %-10s \n",loc_legend[12],loc_legend[13],loc_legend[14],loc_legend[15]," ",loc_legend[17],loc_legend[18],loc_legend[10]," ",loc_legend[19],loc_legend[20],loc_legend[21],loc_legend[22],loc_legend[21],loc_legend[23],loc_legend[32],loc_legend[24]);
 
 
 /* fprintf(fp," %-3s %-16s \n"," "           ,loc_legend[16]);
	fprintf(fp," %-3s %-16s %1s %-4s  %41s %-7s %-6s      %10s  %-16s %-10s %-9s  \n"," "           ,loc_legend[016]," "           ," "           ," ",loc_legend[018]," "           ,loc_legend[020],loc_legend[022],loc_legend[023],loc_legend[025]);
 */

fprintf(fp," %-3s %-16s           %24s% -7s%-5s %-8s %-5s%-7s %5s%6s   %8s%2s/%4s\n"," ",loc_legend[16]," "," "," "," "," "," "," "," ",loc_legend[27],loc_legend[28],loc_legend[23]);
	fill_dash(195);
	fprintf(fp,"\n");
	//fprintf(fp,"----------------------------------------------------------------------------------------------------------------------------------------\n");
	fflush(fp); 
	lctr = 12;
}

print_page_title()
{
	double l_report_width;
	double l_acc_entity_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width;
	char   nd_reason1[7],nd_reason2[7];


	//l_report_width=195; SAIKIRAN FOR 18154 on 20/1/2010 
	l_report_width=160;
	l_acc_entity_length = strlen(hosp_name.arr);

	//Code for Line 1
	l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2)-8);
	//disp_message(ERR_MESG,"1");
	//disp_message(ERR_MESG,loc_legend[6]);
	fprintf(fp,"MDL           : BL");
	l_start_point=l_start_point-13;
	print_spaces(l_start_point);
	fprintf(fp,"%s",hosp_name.arr);
	l_comp_name_end_point=l_start_point+18+l_acc_entity_length;
	l_start_point=(l_report_width-(20+strlen(date.arr))-l_comp_name_end_point);
	print_spaces(l_start_point);
		init_date_temp_var();
		strcpy(date_convert.arr,date.arr);
		fun_change_loc_date();
   	fprintf(fp,"%-15.15s : %s\n",loc_legend[003],date_convert.arr);

	//Code for Line 2
	
	l_start_point=0;

	l_start_point=ceill((l_report_width/2)-(l_acc_entity_length/2)-6);

	fprintf(fp,"OPR           : %s",user_id.arr);
	//	l_start_point=l_start_point-(strlen(user_id.arr)+16); SAIKIRAN FOR 18154 on 20/1/2010
	l_start_point=l_start_point-(strlen(user_id.arr)+20);
	print_spaces(l_start_point);

	if(strcmp(nd_wo_status.arr,"R") == 0)
	 {
	     fprintf(fp,"     %s ",loc_legend[45]);
		  l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[45])+5;
			
		}
     if(strcmp(nd_wo_status.arr,"P") == 0)
      {
	  	     fprintf(fp,"%s ",loc_legend[43]);
			  l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[43]);
		
       }
     if(strcmp(nd_wo_status.arr,"A") == 0)
	   {
	   	     fprintf(fp,"    %s ",loc_legend[44]);
			  l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[44])+4;
		}       		           
	  if(strcmp(nd_wo_status.arr,"C") == 0)
	   {
        
   	     //fprintf(fp,"%s ",loc_legend[046]);SAIKIRAN FOR 18154 on 20/1/2010
		 fprintf(fp,"%s ",loc_legend[46]);
		  l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[46]);
		
		             
			 
		}

      

/*	fprintf(fp,"%s ",loc_legend[001]);
	
	l_comp_name_end_point=l_start_point+(strlen(user_id.arr)+16)+strlen(loc_legend[1]);*/
	
	l_start_point=(l_report_width-(23+strlen(date_time.arr))-l_comp_name_end_point);
 	print_spaces(l_start_point);

	 fprintf(fp,"%-15.15s : %s\n",loc_legend[004],date_time.arr); 
     
	//Code for Line 3
 l_start_point=0;
	 l_start_point=ceill(l_report_width/2)-((23+6)/2+10);
    
	 //fprintf(fp,"%-14.14s: BLR00099",loc_legend[002]);
	 fprintf(fp,"%-14.14s: BLRINSWO",loc_legend[002]);
	 //l_start_point=l_start_point-24;saikiran
	 l_start_point=l_start_point-19;
	print_spaces(l_start_point);


	if (nd_blng_grp_catg.arr[0] != '\0')
	  	  { 
		  
	      fprintf(fp,"%s : %-30s",loc_legend[006],bl_blng_catg_desc.arr);
		    l_comp_name_end_point=l_start_point+(24+23)+6;
        	l_start_point=(l_report_width-48-l_comp_name_end_point);
		 }
	else
	{
           fprintf(fp,"%s : %4s",loc_legend[006],loc_legend[30]);
			l_comp_name_end_point=l_start_point+(24+23)+3;
        	l_start_point=(l_report_width-(25)-l_comp_name_end_point);
      }
	print_spaces(l_start_point-7);
  	fprintf(fp,"   %-11.11s : %d\n",loc_legend[005],++pctr);

/*---------------------------------*/

	//Code for Line 4

  if(strcmp(nd_wo_status.arr,"P") == 0)
	   {

   	//fprintf(fp,"%40s :  %12s %3s %12s",loc_legend[47],nd_fm_date.arr,loc_legend[007],nd_to_date.arr);
	init_date_temp_var();
	strcpy(date_convert.arr,nd_fm_date.arr);
	fun_change_loc_date();
	 fprintf(fp,"%40s :  %-12s ",loc_legend[47],date_convert.arr);
	init_date_temp_var();
	strcpy(date_convert.arr,nd_to_date.arr);
	fun_change_loc_date();
	 //fprintf(fp,"%3s :%12s",loc_legend[007],date_convert.arr); SAIKIRAN FOR 18154 on 20/1/2010
	 fprintf(fp,"%3s %-12s",loc_legend[007],date_convert.arr); 
		}

  if(strcmp(nd_wo_status.arr,"A") == 0)
	   {
	init_date_temp_var();
	strcpy(date_convert.arr,nd_fm_date.arr);
	fun_change_loc_date();
	fprintf(fp,"%40s :  %-12s",loc_legend[48],date_convert.arr);
 	init_date_temp_var();
	strcpy(date_convert.arr,nd_to_date.arr);
	fun_change_loc_date();
	//fprintf(fp,"%3s: %12s",loc_legend[007],date_convert.arr); SAIKIRAN FOR 18154 on 20/1/2010
	fprintf(fp," %3s %-12s",loc_legend[007],date_convert.arr);
	//fprintf(fp,"%40s :  %12s %3s %12s",loc_legend[48],nd_fm_date.arr,loc_legend[007],nd_to_date.arr);
	
			
		}

	if(strcmp(nd_wo_status.arr,"R") == 0)
	   {

		init_date_temp_var();
		strcpy(date_convert.arr,nd_fm_date.arr);
		fun_change_loc_date();
		fprintf(fp,"%40s :  %-12s",loc_legend[49],date_convert.arr);
		init_date_temp_var();
		strcpy(date_convert.arr,nd_to_date.arr);
		fun_change_loc_date();
		//fprintf(fp,"%3s: %12s",loc_legend[007],date_convert.arr);SAIKIRAN FOR 18154 on 20/1/2010
		fprintf(fp," %3s %-12s",loc_legend[007],date_convert.arr);
	//fprintf(fp,"%40s :  %12s %3s %12s",loc_legend[49],nd_fm_date.arr,loc_legend[007],nd_to_date.arr);

		}
	if(strcmp(nd_wo_status.arr,"C") == 0)
	   {

	//fprintf(fp,"%40s :  %12s %3s %12s",loc_legend[50],nd_fm_date.arr,loc_legend[007],nd_to_date.arr);
		init_date_temp_var();
		strcpy(date_convert.arr,nd_fm_date.arr);
		fun_change_loc_date();
		fprintf(fp,"%40s :  %-12s ",loc_legend[50],date_convert.arr);
		init_date_temp_var();
		strcpy(date_convert.arr,nd_to_date.arr);
		fun_change_loc_date();
		fprintf(fp,"%3s %-12s",loc_legend[007],date_convert.arr);
	
	
		}

//Code for Line 5
 
	fprintf(fp,"%30s : %s ",loc_legend[57],bl_currency.arr); 
	put_val(g_amt,nd_fr_wo_amt); 
	    format_amt(g_amt);
        
		/*sprintf(gstr_amt,"%-11s",g_amt);
        fprintf(fp,"%-11s  ",gstr_amt);		
		commented by saikiran for 18154 on 20/1/2010 */
		
		sprintf(gstr_amt,"%-s",g_amt);
		fprintf(fp,"%-s ",gstr_amt);

	// print_formated(nd_fr_wo_amt);
    //fprintf(fp,"%3s ",loc_legend[007]);SAIKIRAN FOR 18154 on 20/1/2010
	fprintf(fp,"%-3s ",loc_legend[007]);
	put_val(g_amt,nd_to_wo_amt); 
      format_amt(g_amt);
       
	   /* sprintf(gstr_amt,"%-11s",g_amt);
        fprintf(fp,"%-11s  ",gstr_amt);
         commented by saikiran for 18154 on 20/1/2010 */
		
		sprintf(gstr_amt,"%-s",g_amt);
        fprintf(fp,"%-s ",gstr_amt);
         
fprintf(fp,"\n");


/*	l_start_point=ceill(l_report_width/2)-(strlen(loc_legend[008])+strlen(nd_fm_date.arr)+strlen(nd_to_date.arr)+4)/2;
	print_spaces(l_start_point);
	fprintf(fp,"%s :%s %s %s\n",loc_legend[008],nd_fm_date.arr,loc_legend[007],nd_to_date.arr);
	*/

	//Code for Line 6

  

    if (strcmp(nd_fm_reason_code.arr,"!!!!" ) == 0)
	  strcpy(nd_reason1,"Lowest");
    else
	   strcpy(nd_reason1,nd_fm_reason_code.arr);
    
	if (strcmp(nd_to_reason_code.arr,"~~~~") == 0)
	  strcpy(nd_reason2,"Highest");
    else
	   strcpy(nd_reason2,nd_to_reason_code.arr);
    

	l_start_point=0;
  
if(strcmp(nd_wo_status.arr,"P") == 0)
	   {
	fprintf(fp,"%40s :  %-12s %3s %-12s",loc_legend[51],nd_reason1,loc_legend[007],nd_reason2);
	
    }
if(strcmp(nd_wo_status.arr,"A") == 0)
	   {

	fprintf(fp,"%40s :  %-12s %3s %-12s",loc_legend[52],nd_reason1,loc_legend[007],nd_reason2);

     }
if(strcmp(nd_wo_status.arr,"R") == 0)
	   {

	fprintf(fp,"%40s :  %-12s %3s %-12s",loc_legend[53],nd_reason1,loc_legend[007],nd_reason2);
		
     }
if(strcmp(nd_wo_status.arr,"C") == 0)
	   {

	fprintf(fp,"%40s :  %-12s %3s %-12s",loc_legend[54],nd_reason1,loc_legend[007],nd_reason2);

  }


/*	l_start_point=ceill(l_report_width/2)-(strlen(loc_legend[009])+strlen(nd_reason1)+strlen(nd_reason2)+4)/2;
	print_spaces(l_start_point);
	fprintf(fp,"%s :%s %s %s\n",loc_legend[009],nd_reason1,loc_legend[007],nd_reason2);

*/
	//Code for Line 7
	l_start_point=0;

	fprintf(fp,"%30s : ",loc_legend[31]);

	if (strcmp(nd_nationality.arr,"A") == 0)
		//fprintf(fp," %s \n",loc_legend[30]); commented by saikiran for 18154 on 20/1/2010 
		fprintf(fp,"%s \n",loc_legend[30]); 
    if (strcmp(nd_nationality.arr,"C") == 0)
		//fprintf(fp," %s \n",loc_legend[10]);commented by saikiran for 18154 on 20/1/2010 
		fprintf(fp,"%s \n",loc_legend[10]);
    if (strcmp(nd_nationality.arr,"N") == 0)
		//fprintf(fp," %s \n",loc_legend[11]);commented by saikiran for 18154 on 20/1/2010 
		fprintf(fp,"%s \n",loc_legend[11]);
   
   
}


fill_dash(flg)
{
  int i;
  for (i=1;i<=flg;i++)
	fprintf(fp,"%s","-");
}

fetch_hosp_name()
{
    hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
	date.arr[0]		 = '\0';
    user_id.arr[0]   = '\0';
    hosp_name.len    = 0;
    date_time.len    = 0;
	date.len		 = 0;
    user_id.len      = 0;



    EXEC SQL SELECT ACC_ENTITY_NAME, 
					TO_CHAR(SYSDATE,'DD/MM/RRRR'),
					TO_CHAR(SYSDATE,'HH24:MI:SS'),
                    USER
               INTO :hosp_name, 
					:date,
					:date_time, 
					:user_id
               FROM SY_ACC_ENTITY_LANG_VW
	          WHERE ACC_ENTITY_ID = :nd_facility
			  AND LANGUAGE_ID =:p_language_id;

    if (OERROR) 
		err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

	hosp_name.arr[hosp_name.len]           = '\0';
	date_time.arr[date_time.len]           = '\0';
	date.arr[date.len]					   = '\0';
	user_id.arr[user_id.len]               = '\0';

}

fetch_print_foot_note()
{
bl_wo_foot_note_line01_text.arr[0]    ='\0';
bl_wo_foot_note_line02_text.arr[0]    ='\0';
bl_wo_foot_note_line03_text.arr[0]    ='\0';
bl_wo_foot_note_line04_text.arr[0]    ='\0';
bl_wo_foot_note_line05_text.arr[0]    ='\0';
bl_wo_foot_note_line06_text.arr[0]    ='\0';
bl_wo_foot_note_line07_text.arr[0]    ='\0';
bl_wo_foot_note_line08_text.arr[0]    ='\0';
bl_wo_foot_note_line09_text.arr[0]    ='\0';
bl_wo_foot_note_line10_text.arr[0]    ='\0';
 bl_wo_foot_note_line01_text.len      =0;
 bl_wo_foot_note_line02_text.len      =0;
 bl_wo_foot_note_line03_text.len      =0;
 bl_wo_foot_note_line04_text.len      =0;
 bl_wo_foot_note_line05_text.len      =0;
 bl_wo_foot_note_line06_text.len      =0;
 bl_wo_foot_note_line07_text.len      =0;
 bl_wo_foot_note_line08_text.len      =0;
 bl_wo_foot_note_line09_text.len      =0;
 bl_wo_foot_note_line10_text.len	  =0;
   
    EXEC SQL SELECT 
	             wo_foot_note_line01_text,
				 wo_foot_note_line02_text,
				 wo_foot_note_line03_text,
				 wo_foot_note_line04_text,
				 wo_foot_note_line05_text,
				 wo_foot_note_line06_text,
				 wo_foot_note_line07_text,
				 wo_foot_note_line08_text,
				 wo_foot_note_line09_text,
				 wo_foot_note_line10_text 
                 INTO  :bl_wo_foot_note_line01_text, 
					   :bl_wo_foot_note_line02_text,
					   :bl_wo_foot_note_line03_text,
					   :bl_wo_foot_note_line04_text,
					   :bl_wo_foot_note_line05_text,
					   :bl_wo_foot_note_line06_text,
					   :bl_wo_foot_note_line07_text,
					   :bl_wo_foot_note_line08_text,
					   :bl_wo_foot_note_line09_text,
					   :bl_wo_foot_note_line10_text
                 FROM BL_WO_REPORT_NOTES_PARAM
				 WHERE  operating_facility_id=:nd_facility AND
				        report_id=:d_curr_pgm_name;
        if (OERROR) 
		err_mesg("SELECT failed on table BL_WO_REPORT_NOTES_PARAM",0,"");

		bl_wo_foot_note_line01_text.arr[bl_wo_foot_note_line01_text.len] ='\0';
		bl_wo_foot_note_line02_text.arr[bl_wo_foot_note_line02_text.len] ='\0';
		bl_wo_foot_note_line03_text.arr[bl_wo_foot_note_line03_text.len] ='\0';
		bl_wo_foot_note_line04_text.arr[bl_wo_foot_note_line04_text.len] ='\0';
		bl_wo_foot_note_line05_text.arr[bl_wo_foot_note_line05_text.len] ='\0';
		bl_wo_foot_note_line06_text.arr[bl_wo_foot_note_line06_text.len] ='\0';
		bl_wo_foot_note_line07_text.arr[bl_wo_foot_note_line07_text.len] ='\0';
		bl_wo_foot_note_line08_text.arr[bl_wo_foot_note_line08_text.len] ='\0';
		bl_wo_foot_note_line09_text.arr[bl_wo_foot_note_line09_text.len] ='\0';
		bl_wo_foot_note_line10_text.arr[bl_wo_foot_note_line10_text.len] ='\0';


	}
		     

fetch_patient_name()
{
    bl_patient_name.arr[0]		= '\0';
	nd_ln1_add.arr[0]		= '\0';
	nd_ln2_add.arr[0]		= '\0';
	nd_ln3_add.arr[0]		= '\0';
	nd_ln4_add.arr[0]		= '\0';
	nd_postal_code.arr[0]	= '\0';

    bl_patient_name.len		= 0;
	nd_ln1_add.len		= 0;
	nd_ln2_add.len		= 0;
	nd_ln3_add.len		= 0;
	nd_ln4_add.len		= 0;
	nd_postal_code.len	= 0;

    EXEC SQL SELECT a.short_name,
					ln1_mail_add,
					ln2_mail_add,
					ln3_mail_add,
					ln4_mail_add,
					mail_postal_code
               INTO :bl_patient_name,
					:nd_ln1_add,
					:nd_ln2_add,
					:nd_ln3_add,
					:nd_ln4_add,
					:nd_postal_code
               FROM MP_PATIENT_MAST a,MP_PAT_OTHER_DTLS b
	          WHERE a.patient_id = b.patient_id
			  AND   a.patient_id = :bl_patient_id;

    if (OERROR) 
		err_mesg("SELECT failed on table MP_PATIENT_MAST",0,"");

	bl_patient_name.arr[bl_patient_name.len]    = '\0';
	nd_ln1_add.arr[nd_ln1_add.len]		= '\0';
	nd_ln2_add.arr[nd_ln2_add.len]		= '\0';
	nd_ln3_add.arr[nd_ln3_add.len]		= '\0';
	nd_ln4_add.arr[nd_ln4_add.len]		= '\0';
	nd_postal_code.arr[nd_postal_code.len]	= '\0';

}

fetch_reason_desc()
{
    bl_reason_desc.arr[0]	= '\0';
	bl_reason_desc.len		= 0;

   EXEC SQL SELECT substr(action_reason_desc,1,115)
               INTO :bl_reason_desc
               FROM BL_ACTION_REASON
	          WHERE action_reason_code = :bl_reason_code;

    if (OERROR) 
		err_mesg("SELECT failed on table BL_ACTION_REASON",0,"");

	bl_reason_desc.arr[bl_reason_desc.len]           = '\0';

}

fetch_blng_catg_desc()
{
    bl_blng_catg_desc.arr[0]	= '\0';
	bl_blng_catg_desc.len		= 0;

   EXEC SQL SELECT long_desc
               INTO :bl_blng_catg_desc
               FROM BL_BLNG_GRP_CATG
	          WHERE BLNG_GRP_CATG =:nd_blng_grp_catg;

    if (OERROR) 
		err_mesg("SELECT failed on table BL_BLNG_GRP_CATG",0,"");

	bl_blng_catg_desc.arr[bl_blng_catg_desc.len]           = '\0';

}

print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14s  ",str_amt);
    }
}                        

check_page_end(l_lead_lines, l_print_flag)
int l_lead_lines;
int	l_print_flag;
{
	if(l_print_flag==1)
		l_lead_lines=l_lead_lines+10;

	if((lctr+l_lead_lines)> 55) 
	{
		fprintf(fp,"\f");
		print_head();
		lctr = 3;
	}
}

print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}




fetch_legend_value()
{
	for(i=1;i<=300;i++)
	{
		l_pk_value.arr[0] = '\0';

		//EXEC SQL SELECT LTRIM(RTRIM('BLR00099.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		EXEC SQL SELECT LTRIM(RTRIM('BLRINSWO.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;
          
		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
          


	}
}

get_local_date()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	  
       	get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date,'DD/MM/RRRR HH24:MI'),:p_language_id,t_date);  
      
	   :nd_loc_date := to_char(t_date,'DD/MM/RRRR');
	

	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

                     
init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
date_convert.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
date_convert.len = 0;
}


fun_change_loc_date()
{

strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr);
nd_temp_date.arr[nd_temp_date.len]='\0';

get_local_date();

strcpy(date_convert.arr,nd_loc_date.arr); 

}