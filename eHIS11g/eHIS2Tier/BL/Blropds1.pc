/************************************************************************/
/* OCS MEDICOM VER 1.0                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLROPDS1.PC                                  */
/* AUTHOR                : M.NITIN KUMAR                                */
/* DATE WRITTEN          : 26-AUG-1993                                  */
/* Modified				 : V. Srikanth / 04/04/2000                     */
/*                                                                      */
/* CALLED FROM           :                                              */
/*                                                                      */  
/*  FUNCTION               :                                            */
/*                                                                      */ 
/*  TABLE DETAILS                                                       */
/*                                                                      */ 
/*  PARAMETERS           :            -                                 */
/*                                                                      */
/*  SUBROUTINES          :                                              */
/*                                                                      */
/*  Changes Made		 :	Program Compiled for the purpose of changing*/
/*							the Bill Format  VSK 22/06/2000             */
/*                                                                      */
/************************************************************************/
                                                                   
#include <stdio.h>   
#include <string.h>      
#include <bl.h>

#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

/*
#define DEBUG 0
*/
                       
#define INIT_MESG "Outpatient Bill printing in Progress"
#define ONLINE_PRINTING     1
                       
EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR	uid_pwd      [132],
             nd_pgm_date  [35];

   VARCHAR nd_session_id              [16],
           nd_fm_doc_type             [7],
		   nd_facility_id	          [3],
           nd_to_doc_type             [7],
           nd_fm_doc_num              [9],
           nd_to_doc_num              [9],
           nd_fm_doc_date             [11],
           nd_to_doc_date             [11],
		   nd_title                   [31];
   char    trx_type,
	       filename[100];

EXEC SQL END DECLARE SECTION;

// EXEC ORACLE OPTION(HOLD_CURSOR = YES);
// EXEC ORACLE OPTION(REBIND = NO);

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>
char string_var[100];
char p_print_name[9];

void proc_main(argc,argv)
char *argv[];
int argc;
{
   if (argc < 6)
   {
      disp_message(ERR_MESG,"Not enough Parameters for running this program\n");
      proc_exit();
   }

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(g_pgm_id,"BLROPDS1");

   if(sql_connect() == -1)
   {
      disp_message(ORA_MESG,"Error in connecting to Oracle\n");
      if (uid_pwd.len == 0)
         disp_message(ERR_MESG,"Null oracle uid/pwd\n\n\n");
      proc_exit();
   }
   
   set_meduser_role();

   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);

   strcpy(p_print_name,argv[5]);

   strcpy(nd_facility_id.arr,argv[4]);
   nd_facility_id.len = strlen(nd_facility_id.arr);
   
   strcpy(g_facility_id,nd_facility_id.arr);


/*
   chk_active();
*/

   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   nd_fm_doc_type.arr[0]    = '\0';
   nd_fm_doc_num.arr[0]     = '\0';
   nd_fm_doc_date.arr[0]    = '\0';
   nd_to_doc_type.arr[0]    = '\0';
   nd_to_doc_num.arr[0]     = '\0';
   nd_to_doc_date.arr[0]    = '\0';
   nd_title.arr[0]          = '\0';

   nd_fm_doc_type.len       = 0;
   nd_fm_doc_num.len        = 0;
   nd_fm_doc_date.len       = 0;
   nd_to_doc_type.len       = 0;
   nd_to_doc_num.len        = 0;
   nd_to_doc_date.len       = 0;
   nd_title.len             = 0;

   EXEC SQL SELECT PARAM1,PARAM2,PARAM3,PARAM4,PARAM5,PARAM6,PARAM7,PARAM16
            INTO   :nd_fm_doc_type, :nd_fm_doc_num,
                   :nd_to_doc_type, :nd_to_doc_num, 
				   :nd_fm_doc_date, :nd_to_doc_date,
				   :trx_type, :nd_title
              FROM SY_PROG_PARAM
              WHERE PGM_ID     = 'BLROPDS1'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date
	       AND OPERATING_FACILITY_ID = :nd_facility_id;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   nd_fm_doc_type.arr[nd_fm_doc_type.len]    = '\0';
   nd_fm_doc_num.arr[nd_fm_doc_num.len]      = '\0';
   nd_to_doc_type.arr[nd_to_doc_type.len]    = '\0';
   nd_to_doc_num.arr[nd_to_doc_num.len]      = '\0';
   nd_fm_doc_date.arr[nd_fm_doc_date.len]    = '\0';
   nd_to_doc_date.arr[nd_to_doc_date.len]    = '\0';
   nd_title.arr[nd_title.len]                = '\0';

   start_prog_msg();

   prt_op_bill(&trx_type);


/*  Commented by Aldrin for AMH as report-writer program takes of deleting 
    it.  
     EXEC SQL DELETE FROM SY_PROG_PARAM
                  WHERE PGM_ID     = 'BLROPDS1'
                    AND SESSION_ID = :nd_session_id
                    AND PGM_DATE   = :nd_pgm_date
		    AND OPERATING_FACILITY_ID = :nd_facility_id;
   if (OERROR)   
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
    */
/* Added to cater to Online print Routing - Sridharan - 8/June/98 */

	if (strcmp(p_print_name, "BLRVSTD1") == 0)

		strcpy(filename,WORKING_DIR);    
		strcat(filename,"BLROPDS1.LIS");

			//print_online(uid_pwd.arr, "BLRVSTD1", "O", "", "BLROPDS1.LIS", "R");

   PrintDocument
   (
		uid_pwd.arr,		//char	*PUidPwd;
		nd_session_id.arr,	//char	*PSessionID;
		nd_facility_id.arr,	//char	*PFacilityID;
		"BL",				//char	*PModuleID;
		"BLRVSTD1",			//char	*PDocumentID;
		filename,			//char	*POnlinePrintFileNames;
		"O",				//char	*PLocationTypes;
		"",					//char	*PLocationCodes;
		1,					//int		PNumOfCopies;
		1,					//int		PPageFrom;
		99					//int		PPageTo;
	);
	

	
	if (strcmp(p_print_name, "BLRREFD1") == 0)
			//print_online(uid_pwd.arr, "BLRREFD1", "O", "", "BLROPDS1.LIS", "R");

		strcpy(filename,WORKING_DIR);   
		strcat(filename,"BLROPDS1.LIS");
   PrintDocument   
   (
		uid_pwd.arr,		//char	*PUidPwd;
		nd_session_id.arr,	//char	*PSessionID;
		nd_facility_id.arr,	//char	*PFacilityID;
		"BL",				//char	*PModuleID;
		"BLRREFD1",			//char	*PDocumentID;
		filename,			//char	*POnlinePrintFileNames;
		"O",				//char	*PLocationTypes;
		"",					//char	*PLocationCodes;
		1,					//int		PNumOfCopies;
		1,					//int		PPageFrom;
		99					//int		PPageTo;
	);
	


	
	if (strcmp(p_print_name, "BLRPHRBL") == 0)
			//print_online(uid_pwd.arr, "BLRPHRBL", "O", "", "BLROPDS1.LIS", "R");
		strcpy(filename,WORKING_DIR);   
		strcat(filename,"BLROPDS1.LIS");

   PrintDocument
   (
		uid_pwd.arr,		//char	*PUidPwd;
		nd_session_id.arr,	//char	*PSessionID;
		nd_facility_id.arr,	//char	*PFacilityID;
		"BL",				//char	*PModuleID;
		"BLRPHRBL",			//char	*PDocumentID;
		filename,			//char	*POnlinePrintFileNames;
		"O",				//char	*PLocationTypes;
		"",					//char	*PLocationCodes;
		1,					//int		PNumOfCopies;
		1,					//int		PPageFrom;
		99					//int		PPageTo;
	);



   end_prog_msg();
/*

   end_prog_control();
*/
   EXEC SQL COMMIT WORK RELEASE;
    return;
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}
