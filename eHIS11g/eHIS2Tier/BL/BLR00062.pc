/************************************************************************/
/* OCS MEDICOM VER 4.1                                                  */
/************************************************************************/
/* PROGRAM NAME          : BLR00062.PC                                  */
/* AUTHOR                : Robert Joseph                               */  
/* DATE WRITTEN          : 19/03/2005                                   */      
/************************************************************************/
          
#include <stdio.h>         
#include <string.h> 
#include <bl.h>       
#include <math.h> 

#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define ROW_COUNT            (sqlca.sqlerrd[2])
#define NODATAFOUND sqlca.sqlcode == 1403
#define OERROR          (sqlca.sqlcode < 0)
#define MAX_LINES 40
#define REP_WIDTH 180
#define VER  "VER : 4.10\n"
#define ESC  0x1B
/*
#define DEBUG 0
*/

EXEC SQL BEGIN DECLARE SECTION;


VARCHAR     hosp_name                       [120],
			date							[20],
            date_time                       [20],
			d_acc_entity_name			[61],
			d_user						[31],
			d_sysdate					[20],
			nd_facility_id				[3],
            user_id                         [91],
	        nd_pwd 							[91],
            nd_session_id                   [16],
            nd_pgm_date                     [25],
            d_curr_pgm_name                 [15],
			nd_facility				        [3];
VARCHAR     nd_blng_grp_f					[5],
            nd_blng_grp_t					[5],
			nd_ward_f						[5],
			nd_ward_t						[5], 
			nd_order						[3],
			d_blng_grp_id					[5],
	        d_description					[16],
			d_patient_id					[21],
			d_patient						[61],	
            d_episode_id					[9],
			d_cur_ward_code					[5],
			d_ward							[16],
			d_admission_date_time			[21],
			d_discharge_bill_date_time		[21],
			d_cust_code						[9],
			d_cust_name						[16],
			d_blng_catg						 [16],
			nd_dischrg_dt_f					[12],
			nd_dischrg_dt_t					[12],
			nd_blng_grp_catg_f				[5],
			nd_blng_grp_catg_t				[5],

			blng_grp_id						[5],
			d_discharge_yn					[2],
			d_encounter_id					[13],
			d_disc_adv_time					[21],
			nd_discharged_adv_date           [21],	
            cur_ward_code                    [5],
			d_discharge_billing_stage		  [2],	
			d_curr_date						[11],	
			l_translated_value				[201],	
			l_pk_value						[100],
			p_language_id                   [3],
			d_billing_grp_catg				[4],
			billing_grp_catg				[16],
			discharge_bill_date_time		[21],
			nd_date_frm_flag				[2],
			nd_temp_var						[100],
			nd_date_to_flag					[2];

	int i,sl_no=1;
	double d_amount ;
	char filename[150];
	char x_msg[200];
	char loc_legend[999][201];
	char l_mesg[200];
 EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int    lctr = 0,pctr = 0,nvalid = 0,ncancel = 0;
int    first = 1,r_fst = 1,slno =0;
int   line_no = 0, 
      prt_ln_cnt,
      print_column_heading,
      page_no = 0;
	 


FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 5)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }
 
    strcpy(g_pgm_id,"BLR00062");
    strcpy(nd_pwd.arr,argv[1]);
    nd_pwd.len = strlen(nd_pwd.arr);

    EXEC sql connect :nd_pwd;
  
	  
    if (sqlca.sqlcode < 0 )
	{
        disp_message(ORA_MESG,"Error in connecting to Oracle");
        proc_exit();
        }

		set_meduser_role(); 

    	strcpy(d_curr_pgm_name.arr,g_pgm_id); 
    	d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

    	strcpy(nd_session_id.arr,argv[2]);
    	nd_session_id.len = strlen(nd_session_id.arr);
    	strcpy(g_session_id,nd_session_id.arr);

        strcpy(p_language_id.arr,l_language_id.arr);
	    p_language_id.len = l_language_id.len;

    	strcpy(nd_pgm_date.arr,argv[3]);
    	nd_pgm_date.len = strlen(nd_pgm_date.arr);
    	strcpy(g_pgm_date,nd_pgm_date.arr);

    	strcpy(nd_facility.arr,argv[4]);
    	nd_facility.len = strlen(nd_facility.arr);
    	strcpy(g_facility_id,nd_facility.arr);


			nd_blng_grp_f.arr[0]		= '\0';				
            nd_blng_grp_t.arr[0]		= '\0';			
			nd_ward_f.arr[0]			= '\0';					
			nd_ward_t.arr[0]			= '\0';					
			nd_order.arr[0]				= '\0';					

			nd_blng_grp_f.len		= 0;			
            nd_blng_grp_t.len		= 0;		
			nd_ward_f.len			= 0;				
			nd_ward_t.len			= 0;			
			nd_order.len			= 0;
		
			
        EXEC SQL SELECT	PARAM1,PARAM2,PARAM3,PARAM4,PARAM5,PARAM6,PARAM7,PARAM8,PARAM9,PARAM10,PARAM11
				INTO	:nd_blng_grp_f,
						:nd_blng_grp_t,
						:nd_ward_f,
						:nd_ward_t,
						:nd_order,
						:nd_dischrg_dt_f,
						:nd_dischrg_dt_t,
						:nd_blng_grp_catg_f,
						:nd_blng_grp_catg_t,
						:nd_date_frm_flag,
						:nd_date_to_flag
					FROM SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");


			nd_blng_grp_f.arr[nd_blng_grp_f.len]				='\0';			
            nd_blng_grp_t.arr[nd_blng_grp_t.len]				='\0';		
			nd_ward_f.arr[nd_ward_f.len]						='\0';				
			nd_ward_t.arr[nd_ward_t.len]						='\0';				
			nd_order.arr[nd_order.len]							='\0';
			nd_dischrg_dt_f.arr[nd_dischrg_dt_f.len]			='\0';				
			nd_dischrg_dt_t.arr[nd_dischrg_dt_t.len]			='\0';				
			nd_blng_grp_catg_f.arr[nd_blng_grp_catg_f.len]		='\0';
			nd_blng_grp_catg_t.arr[nd_blng_grp_catg_t.len]		='\0';

	EXEC SQL DELETE SY_PROG_PARAM
              WHERE PGM_ID   = :d_curr_pgm_name
              AND SESSION_ID = :nd_session_id
              AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");
   

	declare_cur();

    get_header_dtls();

	fetch_legend_value();

    open_file();

    open_pat_dis_cur() ;

    fprintf(fp,"%c",0x0F); // set printer to compressed mode 

   print_page_header();
   // print_head();

   if(strcmp(nd_order.arr,"B")==0)
    {
	while (fetch_discharge_dtl())
       {
	    get_discharge_adv_date();   		  
	    get_cust_name();


			 if (strcmp(blng_grp_id.arr,d_blng_grp_id.arr) != 0)
				{
			      fetch_blng_grp();
				  fetch_ward();
				  fetch_patient_name();
				  fetch_blng_grp_catg();
				  print_rec(0);
				  strcpy(blng_grp_id.arr,d_blng_grp_id.arr);
				}
			 else
				{
				  fetch_ward();
				  fetch_patient_name();	
				  fetch_blng_grp_catg();			  
				  print_rec(1);
        		  strcpy(blng_grp_id.arr,d_blng_grp_id.arr);
				}
        }
		print_end_of_rep();
     }
   else if(strcmp(nd_order.arr,"W")==0)
     {
	   while (fetch_discharge_dtl())
          {
		    get_discharge_adv_date();
		    get_cust_name();
            if (strcmp(cur_ward_code.arr,d_cur_ward_code.arr) != 0)
				{
				  fetch_ward();
			      fetch_patient_name();
				  fetch_blng_grp();
				  fetch_blng_grp_catg();
				  disp_rec(0);
				  strcpy(cur_ward_code.arr,d_cur_ward_code.arr);
				}
			else
				{
				  fetch_patient_name();
				  fetch_blng_grp();	
				  fetch_blng_grp_catg();		  
				  disp_rec(1);
				  strcpy(cur_ward_code.arr,d_cur_ward_code.arr);
				}
         }

      print_end_of_rep();
     }
	    
    else if(strcmp(nd_order.arr,"C")==0)
     {
	   while (fetch_discharge_dtl())
          {
		    get_discharge_adv_date();
		    get_cust_name();
            if (strcmp(billing_grp_catg.arr,d_billing_grp_catg.arr) != 0)
				{
				  
				  fetch_blng_grp_catg();
				  fetch_ward();
			      fetch_patient_name();
				  fetch_blng_grp();
				  disp_rec1(0);
				  strcpy(billing_grp_catg.arr,d_billing_grp_catg.arr);
				}
			else
				{
				  fetch_patient_name();
				   fetch_ward();
				  fetch_blng_grp();			  
				  disp_rec1(1);
				  strcpy(billing_grp_catg.arr,d_billing_grp_catg.arr);
				}
         }

      print_end_of_rep();
     }
	 else
		{
		 while (fetch_discharge_dtl())
		    {
			    get_discharge_adv_date();
			    get_cust_name();
		       if (strcmp(discharge_bill_date_time.arr,d_discharge_bill_date_time.arr) != 0)
					{
					  fetch_ward();
				      fetch_patient_name();
					  fetch_blng_grp();
					  fetch_blng_grp_catg();
					  disp_rec2(0);
					  strcpy(discharge_bill_date_time.arr,d_discharge_bill_date_time.arr);
					}
				else
					{
					 fetch_ward();
					  fetch_patient_name();
					  fetch_blng_grp();	
					  fetch_blng_grp_catg();		  
					  disp_rec2(1);
					  strcpy(discharge_bill_date_time.arr,d_discharge_bill_date_time.arr);
					}
			 }

		 print_end_of_rep();
	  }


 EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");

fprintf(fp,"%c",0x12); /*** Set Dot-matrix Printer to Normal Mode ***/

 }


 declare_cur()
{

	EXEC SQL DECLARE PATIENT_DISCHARGE_CUR CURSOR FOR 
	select E.BLNG_GRP_CATG,A.BLNG_GRP_ID, a.PATIENT_ID,
	a.EPISODE_ID, D.CUR_WARD_CODE,
	to_char(a.ADMISSION_DATE_TIME,'DD/MM/YYYY'),
	TO_CHAR(a.DISCHARGE_DATE_TIME,'DD/MM/YYYY') ,
	A.CUST_CODE, D.ENCOUNTER_ID,
	NVL(A.DISCHARGED_YN,'N'),
	NVL(A.TOT_UNBLD_AMT,0)-NVL(A.TOT_UNADJ_DEP_AMT,0) -NVL(A.TOT_UNADJ_PREP_AMT,0)AMOUNT,
	C.discharge_billing_stage   
	FROM   BL_EPISODE_FIN_DTLS A , BL_PARAMETERS C, IP_EPISODE D , BL_BLNG_GRP_BY_CATG E
	WHERE A.OPERATING_FACILITY_ID = :nd_facility
	AND A.EPISODE_TYPE IN( 'I','D')
	AND A.EPISODE_ID   = D.EPISODE_ID
	AND A.OPERATING_FACILITY_ID = D.FACILITY_ID
	AND D.FACILITY_ID = C.OPERATING_FACILITY_ID
	AND A.BLNG_GRP_ID = E.BLNG_GRP_ID
	AND A.BLNG_GRP_ID BETWEEN  NVL(:nd_blng_grp_f,'!!') AND NVL(:nd_blng_grp_t,'~~') 
	AND D.CUR_WARD_CODE BETWEEN NVL(:nd_ward_f,'!!!!') and NVL(:nd_ward_t,'~~~~')
	AND trunc(a.DISCHARGE_DATE_TIME) BETWEEN to_date(:nd_dischrg_dt_f,'DD-MON-YYYY') AND to_date(:nd_dischrg_dt_t,'DD-MON-YYYY')
	AND E.BLNG_GRP_CATG BETWEEN  NVL(:nd_blng_grp_catg_f,'!') AND NVL(:nd_blng_grp_catg_t,'~')
	AND ((C.discharge_billing_stage ='2'  AND NVL(A.DISCHARGE_BILL_GEN_IND,'N') = 'N'
	and nvl(DISCHARGED_YN,'N') = 'Y'  )
	or (c.discharge_billing_stage ='1' and NVL(A.DISCHARGE_BILL_GEN_IND,'N') = 'N'
	and A.epIsode_id in (select episode_id from BL_IP_DISCHARGE_ADVICE_VW
	where nvl(DIS_ADV_STATUS,'0') != '9')and nvl(DISCHARGED_YN,'N') = 'N'))
	ORDER BY DECODE(:nd_order,'B',A.BLNG_GRP_ID,'W',D.CUR_WARD_CODE,'C',E.BLNG_GRP_CATG,TO_CHAR(a.DISCHARGE_DATE_TIME,'YYYY/MM/DD'));

  }
	

open_pat_dis_cur() 
  {

	EXEC SQL OPEN PATIENT_DISCHARGE_CUR;
		if (OERROR)
        err_mesg("OPEN failed on cursor PATIENT_DISCHARGE_CUR",0,"");
   }

close_pat_dis_cur()
   {

	EXEC SQL CLOSE PATIENT_DISCHARGE_CUR;
    
	}

fetch_discharge_dtl()
{

			d_blng_grp_id.arr[0]			= '\0';				
	        d_description.arr[0]			= '\0';				
			d_patient_id.arr[0]				= '\0';							
            d_episode_id.arr[0]				= '\0';				
			d_cur_ward_code.arr[0]			= '\0';					
			d_admission_date_time.arr[0]	= '\0';			
			d_discharge_bill_date_time.arr[0]	= '\0';		
			d_cust_code.arr[0]				= '\0';					
            d_discharge_yn.arr[0]			=  '\0';
            d_encounter_id.arr[0]					=  '\0';
			d_discharge_billing_stage.arr[0]		= '\0';
			d_billing_grp_catg.arr[0] ='\0';	
			d_blng_grp_id.len		=0;				
	      			
			d_patient_id.len		=0;					
            d_episode_id.len		=0;					
			d_cur_ward_code.len		=0;					
			d_admission_date_time.len		=0;				
			d_discharge_bill_date_time.len		=0;			
			d_cust_code.len		=0;	
			d_encounter_id.len	=0;					
			d_discharge_yn.len	=0;
			d_discharge_billing_stage.len =0;
			d_billing_grp_catg.len =0;
   EXEC SQL FETCH PATIENT_DISCHARGE_CUR 
               INTO 
			:d_billing_grp_catg,
            :d_blng_grp_id,				
			:d_patient_id,					
            :d_episode_id,						
			:d_cur_ward_code,							
			:d_admission_date_time,				
			:d_discharge_bill_date_time,				
			:d_cust_code,
			:d_encounter_id,
			:d_discharge_yn,
			:d_amount,
			 :d_discharge_billing_stage;
			
	 if (OERROR)
       err_mesg("FETCH failed on cursor PATIENT_DISCHARGE_CUR",0,"");	

			d_billing_grp_catg.arr[d_billing_grp_catg.len]	= '\0';	
     	    d_blng_grp_id.arr[d_blng_grp_id.len]	= '\0';								
			d_patient_id.arr[d_patient_id.len]		= '\0';						
            d_episode_id.arr[d_episode_id.len]		= '\0';							
			d_cur_ward_code.arr[d_cur_ward_code.len]		= '\0';						
			d_admission_date_time.arr[d_admission_date_time.len] = '\0';						
			d_discharge_bill_date_time.arr[d_discharge_bill_date_time.len]		= '\0';				
			d_cust_code.arr[d_cust_code.len]	= '\0';	
			d_encounter_id.arr[d_encounter_id.len] = '\0';
			d_discharge_yn.arr[d_discharge_yn.len]	='\0';
			d_discharge_billing_stage.arr[d_discharge_billing_stage.len]  = '\0';	
		
			
		return(LAST_ROW?0:1);
}

fetch_blng_grp()
	{
	    d_description.arr[0]  ='\0';
        d_description.len		=0;	
	EXEC SQL SELECT  SHORT_DESC into :d_description FROM BL_BLNG_GRP 
	          WHERE blng_grp_id=:d_blng_grp_id;

        d_description.arr[d_description.len]	= '\0';	
	}


fetch_patient_name()
    {
             d_patient.arr[0]  ='\0';
             d_patient.len		=0;

	 EXEC SQL SELECT SHORT_NAME INTO
			   :d_patient
                FROM MP_PATIENT_MAST
                WHERE PATIENT_ID = :d_patient_id;

			 d_patient.arr[d_patient.len] ='\0';
   }


get_discharge_adv_date()
 {
   if(strcmp(d_discharge_yn.arr,"N")==0)
    {
	     d_disc_adv_time.arr[0]		='\0';       
         d_disc_adv_time.len		=0;

    EXEC SQL SELECT to_char(DIS_ADV_DATE_TIME,'dd/mm/yyyy') INTO :d_disc_adv_time 
             FROM BL_IP_DISCHARGE_ADVICE_VW 
	     WHERE facility_id=:nd_facility
	     AND PATIENT_ID=:d_patient_id
	     AND encounter_id=:d_encounter_id
	     AND nvl(dis_adv_status,'!') != '9';

          d_disc_adv_time.arr[d_disc_adv_time.len]	='\0';

     strcpy(nd_discharged_adv_date.arr,d_disc_adv_time.arr);

    }

   else
      strcpy(nd_discharged_adv_date.arr,d_discharge_bill_date_time.arr);
  }

 get_cust_name()
 {
	d_cust_name.arr[0] = '\0';
		d_cust_name.len = 0;

		EXEC SQL select short_name into :d_cust_name
			 from ar_customer 
			 where cust_code = :d_cust_code;
		d_cust_name.arr[d_cust_name.len] = '\0';
 }

fetch_ward()
	{
                d_ward.arr[0]		='\0';
				d_ward.len			=0;

      EXEC SQL SELECT SHORT_DESC INTO :d_ward FROM IP_WARD WHERE
			   FACILITY_ID=:nd_facility 
			   AND WARD_CODE=:d_cur_ward_code;

				d_ward.arr[d_ward.len]		='\0';

	}
// ADDED FOR CRF-346  BY RAVIKIRAN SHRIHARI ON 21/04/2009 START
fetch_blng_grp_catg()
	{
		d_blng_catg.arr[0]    ='\0';
		d_blng_catg.len		  =0;
		EXEC SQL SELECT SHORT_DESC INTO  :billing_grp_catg  FROM BL_BLNG_GRP_CATG
				 WHERE  BLNG_GRP_CATG = :d_billing_grp_catg;
				 
		billing_grp_catg.arr[billing_grp_catg.len]     ='\0';
	}

// ADDED FOR CRF-346  BY RAVIKIRAN SHRIHARI ON 21/04/2009  END

	open_file()
{

    strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00062.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file BLR00062.lis");
       proc_exit();
    }
	
}


get_header_dtls()
{
	EXEC SQL WHENEVER SQLERROR GOTO err_exit;
    d_acc_entity_name.arr[0] ='\0';
    d_curr_date.arr[0]   ='\0';
	d_user.arr[0] ='\0';
    d_sysdate.arr[0] ='\0';
    d_acc_entity_name.len =0;
    d_curr_date.len   =0;
	d_user.len =0;
    d_sysdate.len =0;

	EXEC SQL SELECT upper(ACC_ENTITY_NAME), /* description of the institution */
		   USER, TO_CHAR(SYSDATE, 'DD/MM/YYYY'),TO_CHAR(SYSDATE, 'HH24:MI:SS')
      INTO :d_acc_entity_name,
		   :d_user, :d_sysdate,:d_curr_date
      FROM SY_ACC_ENTITY
	 WHERE acc_entity_id = :nd_facility;
    
	d_acc_entity_name.arr[d_acc_entity_name.len] = '\0';
	d_user.arr[d_user.len]                       = '\0';
	d_sysdate.arr[d_sysdate.len]                 = '\0';
	d_curr_date.arr[d_curr_date.len]			 = '\0';

   
	return;
	err_exit:
	EXEC SQL WHENEVER SQLERROR CONTINUE;
	EXEC SQL ROLLBACK WORK RELEASE;
	proc_exit();
}

print_head()
{

     print_page_title();
  	 //print_line('-',130);
	// next_line(1);
     if(strcmp(nd_order.arr,"B")==0) 
	print_billing_head();
     else if(strcmp(nd_order.arr,"W")==0) 
	 print_ward_head();
     else if(strcmp(nd_order.arr,"C")==0) 
	 print_catg_head(); 
	 else 
	 print_date_head();	  
     print_line('-',REP_WIDTH); 
     next_line(1);
  }

print_page_title()
  {

	int hosp_nm_len, rep_title_len = 10, s1, s2,date_len,user_len,pgm_len;
	char v_rep_title[200],v_as_on_date[12];
	
	fprintf(fp,"MDL : BL");
	hosp_nm_len  =  d_acc_entity_name.len;
	s1 = (REP_WIDTH-hosp_nm_len)/2;
	//horz_skip(s1-18);
	fprintf(fp,"%-38.38s %-28.28s"," ",d_acc_entity_name.arr);
	s2 = (REP_WIDTH-s1-hosp_nm_len);
	//horz_skip(s2-14);
	fprintf(fp,"%61.61s %-12s: %s", " ",loc_legend[14],d_sysdate.arr);
    
	fprintf(fp,"\n");
	
	fprintf(fp,"OPR : %-10.10s", d_user.arr); 	
        user_len=strlen(d_user.arr);
	if (strcmp(d_discharge_billing_stage.arr,"1")==0)
	strcpy(v_rep_title,loc_legend[21]);
	else
    strcpy(v_rep_title,loc_legend[1]);	

	rep_title_len = strlen(v_rep_title);
	s1 = (REP_WIDTH-rep_title_len)/2;
	//horz_skip(s1-user_len-6);
	fprintf(fp,"%-30.30s %-52.52s"," ",v_rep_title);


	s2 = (REP_WIDTH-s1-52);
	//horz_skip(s2-14);
		fprintf(fp,"%-37.37s %-12s:%9s\n"," ",loc_legend[15],d_curr_date.arr);



	
	fprintf(fp,"REP : %-10.10s",d_curr_pgm_name.arr);
    pgm_len=strlen(d_curr_pgm_name.arr);
	strcpy(v_as_on_date,d_sysdate.arr);
	date_len= strlen(v_as_on_date);
	s1 = (REP_WIDTH-date_len-5)/2;
	//horz_skip(s1-pgm_len);
	//horz_skip(s2-11);
	
	 fprintf(fp,"%-30.30s %-6.6s "," ",loc_legend[23]);
	 fprintf(fp,"%-20.20s",v_as_on_date);
        s2 = (REP_WIDTH-s1-date_len-5);
	    horz_skip(s2-20);
		fprintf(fp,"%-12s: %-d\n",loc_legend[16],++page_no);

	lctr = 4;

	print_line('-',REP_WIDTH); next_line(1);

	
}

//-----------
print_page_header()
{
int l1;
fprintf (fp,"%c&l1O",ESC);
fprintf (fp, "%c(s17H", ESC);
//fprintf (fp,"%cg", ESC);
  print_page_title();
 // fprintf(fp,"VER       : 4.1 ");
   next_line(1);
  //print_line('-',REP_WIDTH);
  next_line(1);
  next_line(1);next_line(1);next_line(1);next_line(1);next_line(1);
  fprintf(fp,"           INPUT PARAMETER ");
  next_line(1);
  fprintf(fp,"           --------------- ");
    next_line(1);
  //l1=(REP_WIDTH-25)/2;
  horz_skip(25);
    if(strcmp(nd_date_frm_flag.arr,"N")==0)
		  
	   if (strcmp(nd_date_to_flag.arr,"N")==0)
	
			fprintf(fp,"  %-22s : %-12s ",loc_legend[10],loc_legend[24]);
	   else
		
			fprintf(fp,"  %-22s : %-5s %-10s %-3s %-15s",loc_legend[10],loc_legend[17],loc_legend[26],loc_legend[18],nd_dischrg_dt_t.arr);
   	
    else
	   if (strcmp(nd_date_to_flag.arr,"N")==0) 
	    fprintf(fp,"  %-22s : %-5s %-10s %-3s %-15s",loc_legend[10],loc_legend[17],nd_dischrg_dt_f.arr,loc_legend[18],loc_legend[27]);
   
	   else
	  fprintf(fp,"  %-22s : %-5s %-10s %-3s %-15s",loc_legend[10],loc_legend[17],nd_dischrg_dt_f.arr,loc_legend[18],nd_dischrg_dt_t.arr);
	 
   next_line(1);

   
  horz_skip(25);
    if(strcmp(nd_blng_grp_catg_f.arr,"!!!!")==0)
		  
	   if (strcmp(nd_blng_grp_catg_t.arr,"~~~~")==0)
	
			fprintf(fp,"  %-22.22s : %-12s ",loc_legend[25],loc_legend[24]);
	   else
		
			fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[25],loc_legend[17],loc_legend[26],loc_legend[18],nd_blng_grp_catg_t.arr);
   	
    else
	   if (strcmp(nd_blng_grp_catg_t.arr,"~~~~")==0) 
	    fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[25],loc_legend[17],nd_blng_grp_catg_f.arr,loc_legend[18],loc_legend[27]);
   
	   else
	  fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[25],loc_legend[17],nd_blng_grp_catg_f.arr,loc_legend[18],nd_blng_grp_catg_t.arr);
	 
   next_line(1);

  horz_skip(25);
    if(strcmp(nd_blng_grp_f.arr,"!!!!")==0)
		  
	   if (strcmp(nd_blng_grp_t.arr,"~~~~")==0)
	
			fprintf(fp,"  %-22.22s : %-12s ",loc_legend[2],loc_legend[24]);
	   else
		
			fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[2],loc_legend[17],loc_legend[26],loc_legend[18],nd_blng_grp_t.arr);
   	
    else
	   if (strcmp(nd_blng_grp_t.arr,"~~~~")==0) 
	    fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[2],loc_legend[17],nd_blng_grp_f.arr,loc_legend[18],loc_legend[27]);
   
	   else
	  fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[2],loc_legend[17],nd_blng_grp_f.arr,loc_legend[18],nd_blng_grp_t.arr);
	 
   next_line(1);
  
   horz_skip(25);
   /* if(strcmp(nd_ward_f.arr,"!!!!" )== 0)                                 
      fprintf(fp,"  %-16.16s : %-12s ",loc_legend[7],loc_legend[24]);
    else
      fprintf(fp,"  %-16.16s : %-5s %-5s %-3s %-5s",loc_legend[7],loc_legend[17],nd_ward_f.arr,loc_legend[18],nd_ward_t.arr);
   next_line(1);
   horz_skip(25);
    if(strcmp(nd_order.arr,"B")==0)
      fprintf(fp,"  %-16.16s : %-9s",loc_legend[19],loc_legend[2]);
	else
      fprintf(fp,"  %-16.16s : %-9s",loc_legend[19],loc_legend[7]);*/


    if(strcmp(nd_ward_f.arr,"!!!!")==0)
		  
	   if (strcmp(nd_ward_t.arr,"~~~~")==0)
	
			fprintf(fp,"  %-22.22s : %-12s ",loc_legend[7],loc_legend[24]);
	   else
		
			fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[7],loc_legend[17],loc_legend[26],loc_legend[18],nd_ward_t.arr);
   	
    else
	   if (strcmp(nd_ward_t.arr,"~~~~")==0) 
	    fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[7],loc_legend[17],nd_ward_f.arr,loc_legend[18],loc_legend[27]);
   
	   else
	  fprintf(fp,"  %-22.22s : %-5s %-10s %-3s %-10s",loc_legend[7],loc_legend[17],nd_ward_f.arr,loc_legend[18],nd_ward_t.arr);
	 
   next_line(1);
   horz_skip(25);
    if(strcmp(nd_order.arr,"B")==0)
      fprintf(fp,"  %-22.22s : %-9s",loc_legend[19],loc_legend[2]);
	else if(strcmp(nd_order.arr,"W")==0)
      fprintf(fp,"  %-22.22s : %-9s",loc_legend[19],loc_legend[7]);
    else if(strcmp(nd_order.arr,"C")==0)
      fprintf(fp,"  %-22.22s : %-9s",loc_legend[19],loc_legend[25]);
    else 
      fprintf(fp,"  %-22.22s : %-9s",loc_legend[19],loc_legend[10]);



       next_page();

}

//----------------

print_billing_head()
 {


 fprintf(fp,"%-19.19s %-5.5s %-20.20s %-9.9s %-16.16s %-21.21s %-22.22s %-14.14s %-15.15s %-13.13s %14.14s",loc_legend[2],loc_legend[3],loc_legend[4],loc_legend[5],loc_legend[6],loc_legend[25],loc_legend[7],loc_legend[8],loc_legend[10],loc_legend[12],loc_legend[13]); 
 next_line(1);
 /*
 if(strcmp(d_discharge_billing_stage.arr,"1")==0)
  {
 fprintf(fp,"%-19.19s%-75.75s%-21.21s%-11.11s%-11.11s%-9.9s" ," "," "," ",loc_legend[14],loc_legend[11],loc_legend[22]);
  next_line(1);
 fprintf(fp,"%127.127s%-21.21s"," ",loc_legend[14]);
   }
 else
fprintf(fp,"%-19.19s%-75.75s%-21.21s%-11.11s%-11.11s%-9.9s" ," "," "," ",loc_legend[14],loc_legend[14],loc_legend[22]);
 next_line(1);
 */
 
 }	 

print_ward_head()
 {
 
 fprintf(fp,"%-19.19s %-5.5s %-20.20s %-9.9s %-16.16s %-22.22s %-21.21s %-14.14s %-15.15s %-13.13s %14.14s",loc_legend[7],loc_legend[3],loc_legend[4],loc_legend[5],loc_legend[6],loc_legend[25],loc_legend[2],loc_legend[8],loc_legend[10],loc_legend[12],loc_legend[13]); 
 next_line(1);
 /*
 if(strcmp(d_discharge_billing_stage.arr,"1")==0)
  {
 fprintf(fp,"%-21.21s%-75.75s%-19.19s%-11.11s%-11.11s%-9.9s" ," "," "," ",loc_legend[14],loc_legend[11],loc_legend[22]);
  next_line(1);
 fprintf(fp,"%129.129s%-19.19s"," ",loc_legend[14]);
   }
 else
fprintf(fp,"%-21.21s%-75.75s%-191.9s%-11.11s%-11.11s%-9.9s" ," "," "," ",loc_legend[14],loc_legend[14],loc_legend[22]);
 next_line(1);
 */

 }	
 
 print_catg_head()
 {


  fprintf(fp,"%-22.22s  %-5.5s %-20.20s %-9.9s %-16.16s %-19.19s %-20.20s %-14.14s %-15.15s %-13.13s %14.14s",loc_legend[25],loc_legend[3],loc_legend[4],loc_legend[5],loc_legend[6],loc_legend[7],loc_legend[2],loc_legend[8],loc_legend[10],loc_legend[12],loc_legend[13]); 
  next_line(1);
 }

 print_date_head()
 {


 fprintf(fp,"%-18.18s %-4.4s %-20.20s %-9.9s %-15.15s %-21.21s %-21.21s  %-20.20s %-15.15s %-10.10s %14.14s",loc_legend[10],loc_legend[3],loc_legend[4],loc_legend[5],loc_legend[6],loc_legend[25],loc_legend[2],loc_legend[7],loc_legend[8],loc_legend[12],loc_legend[13]); 
 next_line(1);

 
 }
print_rec(ind)
int ind;
 {
   if (ind == 0)
     { 	
      slno=1;
      if (lctr > 40)
	    print_head();
		//fprintf(fp,"%-3.3s%-16.16s%-4d%-21.21s%-9.9s%-40.40s %-5.5s%-16.16s%-14.14s%-14.14s%-16.16s",d_blng_grp_id.arr,d_description.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		fprintf(fp,"%-3.3s %-16.16s %-4d %-20.20s %-9.9s %-16.16s %-5.5s %-15.15s %-5.5s %-16.16s %-14.14s %-15.15s %-14.14s",d_blng_grp_id.arr,d_description.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		print_formated(d_amount);
		next_line(1);
      
     }
   else
     {
    slno=slno+1;
       if (lctr > 40)
        print_head();
	//	fprintf(fp,"%-3.3s%-16.16s%-4d%-21.21s%-9.9s%-40.40s %-5.5s%-16.16s%-14.14s%-14.14s%-16.16s"," "," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		fprintf(fp,"%-3.3s %-16.16s %-4d %-20.20s %-9.9s %-16.16s %-5.5s %-15.15s %-5.5s %-16.16s %-14.14s %-15.15s %-14.14s"," "," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		print_formated(d_amount);
		next_line(1);
	 }
  }
  

disp_rec(ind)
int ind;
{
  if (ind == 0)
  { 	
       slno=1;
      if (lctr > 40)
	   print_head();
	   	
       //fprintf(fp,"%-5.5s%-16.16s%-4d%-21.21s%-9.9s%-40.40s %-3.3s%-16.16s%-14.14s%-14.14s%-16.16s",d_cur_ward_code.arr,d_ward.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
	   	fprintf(fp,"%-3.3s %-16.16s %-4d %-20.20s %-9.9s %-16.16s %-5.5s %-15.15s %-5.5s %-16.16s %-14.14s %-15.15s %-14.14s",d_cur_ward_code.arr,d_ward.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
	
	   print_formated(d_amount);
	   next_line(1);
      
  }
 else
    {
      slno=slno+1;
        if (lctr > 40)
        print_head();
	//	fprintf(fp,"%-5.5s%-16.16s%-4d%-21.21s%-9.9s%-40.40s %-3.3s%-16.16s%-14.14s%-14.14s%-16.16s"," "," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		fprintf(fp,"%-3.3s %-16.16s %-4d %-20.20s %-9.9s %-16.16s %-5.5s %-15.15s %-5.5s %-16.16s %-14.14s %-15.15s %-14.14s"," "," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		print_formated(d_amount);
		next_line(1);
	}
    } 

disp_rec1(ind)
int ind;
{
  if (ind == 0)
  { 	
       slno=1;
      if (lctr > 40)
	   print_head();
	   	
       	fprintf(fp,"%-3.3s %-20.20s %-4d %-20.20s %-9.9s %-16.16s %-3.3s %-15.15s %-3.3s %-16.16s %-14.14s %-15.15s %-14.14s",d_billing_grp_catg.arr,billing_grp_catg.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_cur_ward_code.arr,d_ward.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
	
	   print_formated(d_amount);
	   next_line(1);
      
  }
 else
    {
      slno=slno+1;
        if (lctr > 40)
        print_head();
		fprintf(fp,"%-3.3s %-20.20s %-4d %-20.20s %-9.9s %-16.16s %-3.3s %-15.15s %-3.3s %-16.16s %-14.14s %-15.15s %-14.14s"," "," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_cur_ward_code.arr,d_ward.arr,d_blng_grp_id.arr,d_description.arr,d_admission_date_time.arr,nd_discharged_adv_date.arr,d_cust_name.arr);
		print_formated(d_amount);
		next_line(1);
	}
    } 
  
disp_rec2(ind)
int ind;
{
  if (ind == 0)
  { 	
       slno=1;
      if (lctr > 40)
	   print_head();
	   	
       	fprintf(fp,"%-18.18s %-4d %-20.20s %-9.9s %-15.15s %-5.5s %-15.15s %-5.5s %-16.16s %-3.3s %-16.16s %-15.15s %-11.11s",nd_discharged_adv_date.arr,slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_blng_grp_id.arr,d_description.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,d_cust_name.arr);
	
	   print_formated(d_amount);
	   next_line(1);
      
  }
 else
    {
      slno=slno+1;
        if (lctr > 40)
        print_head();
		fprintf(fp,"%-18.18s %-4d %-20.20s %-9.9s %-15.15s %-5.5s %-15.15s %-5.5s %-16.16s %-3.3s %-16.16s %-15.15s %-11.11s"," ",slno,d_patient_id.arr,d_episode_id.arr,d_patient.arr,d_billing_grp_catg.arr,billing_grp_catg.arr,d_blng_grp_id.arr,d_description.arr,d_cur_ward_code.arr,d_ward.arr,d_admission_date_time.arr,d_cust_name.arr);
			print_formated(d_amount);
		next_line(1);
	}
    } 
   	
/****************************************************************************/
check_line(skip) /* will check for MAX LINE before printing totals */
int skip;
{
	if ((lctr + skip) >= MAX_LINES)
	{
		next_page(); 
	}
}

next_line(skip) /* will check for MAX LINE before printing totals */		
int skip;
{
	if ((lctr + skip) >= MAX_LINES)
	{
		next_page(); 
	}
	else
	{
		fprintf(fp,"\n"); ++lctr; //fprintf(fp,"LNNO:%2d",lctr); 
	}
}

next_page() /* will move the cursor to next page */
{
	fprintf(fp,"\n");
	fprintf(fp,"\f");
	fprintf(fp,"\n");  
	print_head(); 	
}

/*************************************************************************/
print_line(ch,n) /* this is to obtain required characters */
  char ch;
  int n;
{
	int i;
	for(i=0;i<n;i++)
	fprintf(fp,"%c",ch);  
}

horz_skip(num) /* this is to obtain required blank space */
int num;
{
	int i;
	for(i=0;i<num;i++)fprintf(fp," ");
}



print_formated(loc_amount)
double loc_amount;
{
	char s_amt[15], str_amt[15];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%14s",s_amt);
        fprintf(fp,"%14s  ",str_amt);
    }
}  

fetch_legend_value()
{
	for(i=1;i<=300;i++)
	{
		l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00062.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility,
				'SM',
				'SM_LANG_LEGEND',
				'DFLT_LEGEND_VALUE',
				:l_pk_value,
				:l_translated_value,
				:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}



/*************************************************************************/
print_end_of_rep()
{
	int col;
    next_line(1);
	//for (col = 0; col < (90 -23)/2; col++)
	//fprintf(fp," "); 
	horz_skip((REP_WIDTH-23)/2);
	fprintf(fp,"***  END OF REPORT  ***");
	fflush(fp);
    fclose(fp);
	//fprintf(fp,"%cE",ESC);
}
/****************************************************************************/

   

