/*****************************************************************************/
/*                              BLRINNAT.PC                                  */
/*****************************************************************************/
                        
#define REP_WIDTH 80

#include <stdio.h>     
#include <string.h>
#include <bl.h>       
       
EXEC SQL BEGIN DECLARE SECTION;

    VARCHAR uid_pwd						[91],
		    d_session_id				[16],
		    d_pgm_date					[14],
            rep_date					[20],
            comp_name					[50],
            oper_id						[21],
		    d_pgm_id					[10],
			nd_temp_date[21],
			nd_temp_date1[21],
			date_convert[21],
			date_convert4[21],
			date_convert1[21],
			date_convert2[21],
		    date_convert3[21],
		    nd_loc_date[21],
			nd_loc_date1[21];
	    

    VARCHAR fm_trans_date           [20],
            to_trans_date           [20],
			fm_trans_date1           [20],
            to_trans_date1          [20],
            
            nd_fm_nat_code	           [5],
            nd_to_nat_code 	           [5],
            
            nd_fm_bill_grp             [5],
            nd_to_bill_grp             [5],
			nd_operating_facility_id   [3],
			l_pk_value		           [100],
		    l_translated_value	       [201],
			p_language_id		[3],
		    nd_facility_id	    [3];


                     
    VARCHAR d_nat_code                 [5],  
            d_nationality              [101], 
			l_blng_grp_desc			   [41], 
			l_prev_nationality		   [101], 	
            d_blng_grp_id              [5];
            
	char	l_message[200],
			f_net_charge_amt[25], 
			f_net_total_charge_amt[25],
			f_grand_total_charge_amt[25];

	 double  d_net_charge_amt ,		
	         l_net_charge_amt,
			l_tot_net_charge_amt,
			l_grand_net_charge_amt;	
			
	    char filename[150];
	    char x_msg[200];
	    char loc_legend[999][201];
	    char l_mesg[200];

	int i;		

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
#include <winproc.h>

FILE *f1;

char filename[150];

int page_no = 0,
    line_no,
    rec_cnt = 0,
    print_pos =0,
    g_count;

char file_name[15];

char hdr_line1[REP_WIDTH+1],
     hdr_line2[REP_WIDTH+1],
     hdr_line3[REP_WIDTH+1],
     hdr_line4[REP_WIDTH+1];
     hdr_line5[REP_WIDTH+1];
char rep_title[] = "REVENUE STATISTICS BY NATIONALITY";

void proc_main(argc,argv)
int argc;
char *argv[];
{
    if(argc != 5) 
	{
        disp_message(ERR_MESG,"BLRINNAT : Usage BLRINNPAT userid/password session_id pgm_date facility_id \n");
        proc_exit();
    }  

    strcpy(uid_pwd.arr,argv[1]);
    uid_pwd.len = strlen(uid_pwd.arr);

    strcpy(d_session_id.arr,argv[2]);
    d_session_id.len = strlen(d_session_id.arr);
    
    strcpy(d_pgm_date.arr,argv[3]);
    d_pgm_date.len = strlen(d_pgm_date.arr);

	 strcpy(nd_facility_id.arr,argv[4]);
    	nd_facility_id.len = strlen(nd_facility_id.arr);
    	//strcpy(g_facility_id,nd_facility_id.arr);

    EXEC SQL CONNECT :uid_pwd;

    if(OERROR) 
	{
		disp_message(ORA_MESG,"Unable to connect to oracle.\n");
		proc_exit();
    }

    set_meduser_role();

	
	strcpy(p_language_id.arr,l_language_id.arr);
	p_language_id.len = l_language_id.len;

    fm_trans_date.arr[0]    = '\0';
    to_trans_date.arr[0]    = '\0';

    fm_trans_date1.arr[0]    = '\0';
    to_trans_date1.arr[0]    = '\0';


    nd_fm_nat_code.arr[0]  	   = '\0';
    nd_to_nat_code.arr[0] 	   = '\0';
                               
    nd_fm_bill_grp.arr[0]      = '\0';
    nd_to_bill_grp.arr[0]      = '\0';
          
          
 	EXEC SQL SELECT OPERATING_FACILITY_ID,
					PARAM1,
					PARAM2,
					PARAM3,
					PARAM4,
					PARAM5,
					PARAM6,
					PARAM7,
					PARAM8
			 INTO   :nd_operating_facility_id,
					:fm_trans_date,
	                :to_trans_date,
	                :nd_fm_nat_code,
	                :nd_to_nat_code,
	                :nd_fm_bill_grp,
                    :nd_to_bill_grp,
				    :fm_trans_date1,
	                :to_trans_date1
     		 FROM   SY_PROG_PARAM
			 WHERE  PGM_ID     = 'BLRINNAT'
			 AND    PGM_DATE   = :d_pgm_date
			 AND    SESSION_ID = TO_NUMBER(:d_session_id);
 
    if(OERROR||NO_DATA_FOUND) 
		err_mesg("SELECT failed on table  SY_PROG_PARAM",0,"");


 
    fm_trans_date.arr[fm_trans_date.len]       = '\0';
    to_trans_date.arr[to_trans_date.len]       = '\0';

    fm_trans_date1.arr[fm_trans_date1.len]       = '\0';
    to_trans_date1.arr[to_trans_date1.len]       = '\0';
	
	nd_fm_nat_code.arr[nd_fm_nat_code.len]	         = '\0';
    nd_to_nat_code.arr[nd_to_nat_code.len]	         = '\0';
                               
    nd_fm_bill_grp.arr[nd_fm_bill_grp.len]		     = '\0';
    nd_to_bill_grp.arr[nd_to_bill_grp.len]     		 = '\0';
    
    strcpy(filename,WORKING_DIR);                          
    strcat(filename,"blrinnat.lis");
    strcpy(g_facility_id, nd_operating_facility_id.arr);

    if((f1=fopen(filename,"w")) == NULL) 
    {
       disp_message(ERR_MESG,"Error in opening output file...\n");
       proc_exit();
    }
 
    EXEC SQL SELECT ACC_ENTITY_NAME,
				    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
		       INTO :comp_name,
				    :rep_date,
				    :oper_id
		       FROM SY_ACC_ENTITY_LANG_VW
			  WHERE ACC_ENTITY_ID = :nd_operating_facility_id
			  AND		language_id=:p_language_id;

 
    if(OERROR)
		err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len]   = '\0';
    oper_id.arr[oper_id.len]     = '\0';

	fetch_legend_value();
 
    decl_curs();
 
    do_report();
 
    fclose(f1);
 

    del_parm();
 

    EXEC SQL COMMIT WORK RELEASE;
 

    return;
}

del_parm()
{
 
    EXEC SQL DELETE SY_PROG_PARAM
	         WHERE  PGM_ID     = 'BLRINNAT' 
	         AND    PGM_DATE   = :d_pgm_date
	         AND    SESSION_ID = :d_session_id;

    if(OERROR) 
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,""); 

}

decl_curs()
{
 
	EXEC SQL DECLARE TRANS_LIST_CUR 
			 CURSOR 
				FOR
			 SELECT  C.LONG_DESC ,
					 A.BLNG_GRP_ID,
      				 SUM(NVL(A.ORG_NET_CHARGE_AMT,0))
    		   FROM  BL_PATIENT_CHARGES_FOLIO A, 
		 			 MP_PATIENT_MAST B,
					 MP_COUNTRY_LANG_VW C ,
					 BL_BLNG_PRT_GRP_HDR D
			  WHERE  A.OPERATING_FACILITY_ID =  :nd_operating_facility_id
			   AND		language_id=:p_language_id
            	AND  TRUNC(A.TRX_DATE,'MI')    >= TO_date(:fm_trans_date,'DD/MM/YYYY HH24:MI')
				AND  TRUNC(A.TRX_DATE,'MI')    <= TO_date(:to_trans_date,'DD/MM/YYYY HH24:MI')
//				AND  A.TRX_DATE    >= TO_DATE(NVL(:fm_trans_date||' 00:00','01/01/1000 00:00'),'DD/MM/YYYY HH24:MI')
//				AND  A.TRX_DATE    <= TO_DATE(NVL(:to_trans_date||' 23:59','01/01/3000 23:59'),'DD/MM/YYYY HH24:MI')
				AND  A.PATIENT_ID   = B.PATIENT_ID
				AND  A.BLNG_GRP_ID >= NVL(:nd_fm_bill_grp,'!!!!')
				AND  A.BLNG_GRP_ID <= NVL(:nd_to_bill_grp,'~~~~')   
				AND  (NVL(A.PACKAGE_IND,'X') = 'S' 		          
					 OR 
					 NVL(AVAILED_IND,'N') IN('U','Y'))             
				AND  A.TRX_FINALIZE_IND    = 'Y'
				AND  A.PRT_GRP_HDR_CODE    = D.PRT_GRP_HDR_CODE
				AND  NVL(D.INCOME_YN,'N')  = 'Y'
				AND  C.COUNTRY_CODE        = B.NATIONALITY_CODE
				AND  B.NATIONALITY_CODE   >= NVL(:nd_fm_nat_code,'!!!!!!!!!!!!')
				AND  B.NATIONALITY_CODE   <= NVL(:nd_to_nat_code,'~~~~~~~~~~~~')
			  GROUP 
				 BY	 C.LONG_DESC,
					 A.BLNG_GRP_ID
			  ORDER 
				 BY	 C.LONG_DESC,
					 A.BLNG_GRP_ID;

 
	EXEC SQL OPEN TRANS_LIST_CUR;

    if(OERROR)
		err_mesg("OPEN failed on cursor TRANS_LIST_CUR",0,"");
}


do_report()
{
 
    int cnt,hdr_cnt,first,i;
    hdr_cnt=0;
    line_no = 1;
    g_count = 1;
    form_hdr(); 
	l_tot_net_charge_amt   = 0; 
	l_grand_net_charge_amt = 0; 
     while(fetch_trans_list()) 
	{
 
		l_blng_grp_desc.arr[0] = '\0'; 
		EXEC SQL SELECT short_desc
		           INTO :l_blng_grp_desc
				   FROM bl_blng_grp_LANG_VW
				  WHERE blng_grp_id = 	:d_blng_grp_id
				  AND		language_id=:p_language_id;

		l_blng_grp_desc.arr[l_blng_grp_desc.len] = '\0';
 

		print_formated(f_net_charge_amt,d_net_charge_amt);  
		if(l_prev_nationality.arr[0]=='\0')
          
	        fprintf(f1,"%-27.27s%2s%-4s %-24.24s%2s%20s\n",d_nationality.arr," ",d_blng_grp_id.arr,l_blng_grp_desc.arr," ",f_net_charge_amt);	 
			             
 		//	fprintf(f1,"%-28.28s  %-2.2s   %-15.15s  %20s\n",d_nationality.arr,d_blng_grp_id.arr,l_blng_grp_desc.arr,f_net_charge_amt);	 commented by saikiran
		else if(strcmp(l_prev_nationality.arr,d_nationality.arr)!=0)
		{
		        
			line_no = line_no+4;
			chk_break(3);
			print_formated(f_net_total_charge_amt,l_tot_net_charge_amt); 
			fprintf(f1,"                                                             -------------------\n");
			//fprintf(f1,"                              %10s            %20s\n",loc_legend[10],f_net_total_charge_amt);commented by saikiran
			fprintf(f1,"%-35.35s%-23.23s %21s\n"," ",loc_legend[10],f_net_total_charge_amt);
			fprintf(f1,"                                                             -------------------\n\n");
			//fprintf(f1,"%-28.28s  %-4.4s   %-15.15s  %20s\n",d_nationality.arr,d_blng_grp_id.arr,l_blng_grp_desc.arr,f_net_charge_amt);	commented by saikiran
			fprintf(f1,"%-27.27s%2s%-4s %-24.24s%2s%20s\n",d_nationality.arr," ",d_blng_grp_id.arr,l_blng_grp_desc.arr," ",f_net_charge_amt);

			l_tot_net_charge_amt=0;
		}
		else
			//fprintf(f1,"%-28.28s  %-4.4s   %-15.15s   %20s\n"," ",d_blng_grp_id.arr,l_blng_grp_desc.arr,f_net_charge_amt);	commented by saikiran
			fprintf(f1,"%-29.29s%-4.4s %-24.24s%2s%20s\n"," ",d_blng_grp_id.arr,l_blng_grp_desc.arr," ",f_net_charge_amt);
 
		l_tot_net_charge_amt   = l_tot_net_charge_amt   + d_net_charge_amt; 
		l_grand_net_charge_amt = l_grand_net_charge_amt + d_net_charge_amt; 
 
		l_prev_nationality.len = 0;
		strcpy(l_prev_nationality.arr,d_nationality.arr);
		l_prev_nationality.len = strlen(l_prev_nationality.arr);
		line_no++;
		chk_break(3);
    } 
 
	line_no = line_no+3;
	chk_break(3);

	print_formated(f_net_total_charge_amt,l_tot_net_charge_amt); 
	fprintf(f1,"                                                             -------------------\n");
	//fprintf(f1,"                              %10.10s            %20s\n",loc_legend[10],f_net_total_charge_amt);commented by saikiran
	fprintf(f1,"%-35.35s%-23.23s %21s\n"," ",loc_legend[10],f_net_total_charge_amt);
	fprintf(f1,"                                                             -------------------\n");
	
	line_no = line_no+2;
	chk_break(3);

	print_formated(f_grand_total_charge_amt,l_grand_net_charge_amt); 
	//fprintf(f1,"                              %17.17s     %20s\n",loc_legend[20],f_grand_total_charge_amt);commented by saikiran
	fprintf(f1,"%-35.35s%-23.23s %21s\n"," ",loc_legend[20],f_grand_total_charge_amt);
	fprintf(f1,"                                                             -------------------\n");
	l_grand_net_charge_amt=0;

	line_no ++;
	chk_break(3);
	print_end_of_rep();
}

fetch_trans_list()
{

    d_nat_code.arr[0]          = '\0';
    d_nationality.arr[0]       = '\0';
    d_blng_grp_id.arr[0]	   = '\0';

    d_nat_code.len             = 0;
    d_nationality.len 	       = 0;
    d_blng_grp_id.len 		   = 0;

    d_net_charge_amt           = 0;
 

    EXEC SQL FETCH TRANS_LIST_CUR INTO
            	   :d_nationality,
                   :d_blng_grp_id,
                   :d_net_charge_amt; 
             
    if(OERROR)
		err_mesg("FETCH failed on cursor TRANS_LIST_CUR",0,"");

    if(NO_DATA_FOUND)
		return 0;
 
    d_nat_code.arr[d_nat_code.len]        = '\0';
    d_nationality.arr[d_nationality.len]  = '\0';
    d_blng_grp_id.arr[d_blng_grp_id.len]  = '\0';
    return 1;
}

chk_break(nol)
int nol;
{
	if(line_no+nol >= 55) 
	{
       fprintf(f1,"");
	   g_count = 1;
       form_hdr();
	}
}

print_end_of_rep()
{
    fprintf(f1,"\n\n                            ** %17s **\n",loc_legend[140]);
}


print_formated(s_amt, l_amt)
double l_amt;
char s_amt[500];
{

    if(l_amt < 0)
	{
       
		put_val(s_amt,-l_amt); 
        format_amt(s_amt); 
        strcat(s_amt,"-");
    }
    else 
	{
        put_val(s_amt,l_amt);
        format_amt(s_amt);
        strcat(s_amt," ");
    }
}


form_hdr()
{
    static int first = 1;
    char buf[17];
    char ctmp[50];
	char dtmp[50];
    int col;
	int i;

    char fm_nat_code   [150];
    char to_nat_code   [150];
    char fm_bill_grp   [150];
    char to_bill_grp   [150]; 


    if(strcmp(nd_fm_nat_code.arr,"!!!!") == 0)
      strcpy(fm_nat_code, loc_legend[120]);
    else 
      strcpy(fm_nat_code, nd_fm_nat_code.arr);      
      
    if(strcmp(nd_to_nat_code.arr,"~~~~") == 0)
       strcpy(to_nat_code, loc_legend[130]);
    else 
       strcpy(to_nat_code, nd_to_nat_code.arr);
          

    if(strcmp(nd_fm_bill_grp.arr,"!!") == 0)
       strcpy(fm_bill_grp, loc_legend[120]);
    else 
       strcpy(fm_bill_grp, nd_fm_bill_grp.arr); 
    
    if(strcmp(nd_to_bill_grp.arr,"~~") == 0)
      strcpy(to_bill_grp, loc_legend[130]);
    else 
      strcpy(to_bill_grp, nd_to_bill_grp.arr);
    
    ++page_no; 

    if(first) 
	{ 
        memset(hdr_line1,' ',REP_WIDTH+1);
        memset(hdr_line2,' ',REP_WIDTH+1);

        strcpy(hdr_line1,"MDL : ");
		strcat(hdr_line1,loc_legend[50]);
        col = (int)(REP_WIDTH-strlen(comp_name.arr))/2;
        strncpy(hdr_line1+col,comp_name.arr,strlen(comp_name.arr));

		init_date_temp_var();
		strcpy(date_convert4.arr,rep_date.arr);
		fun_change_loc_date4();
        col = (REP_WIDTH-strlen(date_convert4.arr));
        strcpy(hdr_line1+col,date_convert4.arr);
    
        strncpy(hdr_line2,"OPR :",5);
        strcpy(hdr_line2+6,oper_id.arr);

		first = 0;
    } 
    memset(hdr_line3,' ',REP_WIDTH+1);

    strcpy(hdr_line3,"REP : ");
	strcat(hdr_line3,loc_legend[40]);
    col = (int)(REP_WIDTH-strlen(rep_title))/2;
    strncpy(hdr_line3+col,rep_title,strlen(rep_title));
    sprintf(buf,"%4s%4s :  %4d"," ",loc_legend[30],page_no);
    strcpy(hdr_line3+(REP_WIDTH-16),buf); 
    fprintf(f1,"%s            %-s\n",hdr_line1, comp_name.arr);
    fprintf(f1,"%s \n",hdr_line2);
    fprintf(f1,"%s      %-29s\n",hdr_line3, hdr_line3+col);

	 memset(hdr_line4,' ',REP_WIDTH+1);        
	 //memset(hdr_line5,' ',REP_WIDTH+1); 

 

	init_date_temp_var();
     strcpy(date_convert.arr,fm_trans_date1.arr);
     fun_change_loc_date();
    strcpy(date_convert1.arr,date_convert.arr);

	sprintf(ctmp,"%6s %2s :%s",loc_legend[80],loc_legend[60],date_convert1.arr);	                                   
    
	init_date_temp_var();
    strcpy(date_convert.arr,to_trans_date1.arr);
 	fun_change_loc_date();
	strcpy(date_convert2.arr,date_convert.arr);
	sprintf(dtmp,"%2s :%s",loc_legend[70],date_convert2.arr);
  
	init_date_temp_var();
    strcpy(date_convert3.arr,fm_trans_date.arr);
    fun_change_loc_date1();
    strcpy(fm_trans_date.arr,date_convert3.arr);

	init_date_temp_var();
    strcpy(date_convert3.arr,to_trans_date.arr);
    fun_change_loc_date1();
    strcpy(to_trans_date.arr,date_convert3.arr); 

   
    col = (int)(REP_WIDTH-strlen(ctmp))/2;
    strncpy(hdr_line4+col,ctmp,strlen(ctmp));
    //col = (int)(REP_WIDTH-strlen(dtmp))/2;
    strncpy(hdr_line5,dtmp,strlen(dtmp));

	//fprintf(f1,"%s %s\n",hdr_line4,hdr_line5);
	fprintf(f1,"                       %13s %4s\n",ctmp,dtmp);   
    fprintf(f1,"                      %11s %4s %s %2s %s\n",loc_legend[90],loc_legend[60],fm_nat_code,loc_legend[70],to_nat_code);  
    fprintf(f1,"                     %13s %4s %s %2s %s\n",loc_legend[100],loc_legend[60],fm_bill_grp,loc_legend[70],to_bill_grp);  
                     
 
    for (i=0;i<REP_WIDTH;i++)
		fprintf(f1,"-"); 
    
	fprintf(f1,"\n"); 
       
    fprintf(f1,"%-27.27s%2s%-28.28s%2s%21s\n",loc_legend[90]," ",loc_legend[100], " ",loc_legend[110]); 

    for (i=0;i<REP_WIDTH;i++)
		fprintf(f1,"-"); 
	fprintf(f1,"\n"); 
 
	line_no=10;   
}

print_spaces(n)
{
	int j=0;
	for(j=0;j<n;j++)
	fprintf(f1," ");
}

fetch_legend_value()
{
	for(i=1;i<=900;i++)
	{
		l_pk_value.arr[0] = '\0'; 
		EXEC SQL SELECT LTRIM(RTRIM('BLRINNAT.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		           INTO :l_pk_value
				   FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN
			blcommon.get_local_lang_desc(:nd_facility_id,
										'SM',
										'SM_LANG_LEGEND',
										'DFLT_LEGEND_VALUE',
										:l_pk_value,
										:l_translated_value,
										:p_language_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}
get_local_date()
{
 	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	  
      // 	get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);  
      
	  // :nd_loc_date := to_char(t_date,'DD/MM/YYYY');
	   :nd_loc_date :=  	sm_convert_date_2t(to_date(:nd_temp_date,'DD/MM/YYYY HH24:MI:SS'),:p_language_id);  
	
      
	END;

	END-EXEC;
 
		if (OERROR)
        err_mesg("SELECTING Date failed",0,"");

}

                     
init_date_temp_var()
{
nd_temp_date.arr[0] = '\0';
nd_temp_date1.arr[0] = '\0';
nd_loc_date.arr[0]  = '\0';
nd_loc_date1.arr[0]  = '\0';
date_convert.arr[0] = '\0';
date_convert4.arr[0] = '\0';
date_convert1.arr[0] = '\0';
date_convert2.arr[0] = '\0';
date_convert3.arr[0] = '\0';

nd_temp_date.len = 0;
nd_loc_date.len  = 0;
nd_temp_date1.len = 0;
nd_loc_date1.len  = 0;

date_convert.len = 0;
date_convert1.len = 0;
date_convert2.len = 0;
date_convert3.len = 0;
date_convert4.len = '0';
}


fun_change_loc_date()
{
 
strcpy(nd_temp_date.arr,date_convert.arr);
nd_temp_date.len = strlen(nd_temp_date.arr); 
 
get_local_date();
 strcpy(date_convert.arr,nd_loc_date.arr); 
 
}


fun_change_loc_date4()
{ 

strcpy(nd_temp_date.arr,date_convert4.arr);
nd_temp_date.len = strlen(nd_temp_date.arr); 
 
get_local_date();
 strcpy(date_convert4.arr,nd_loc_date.arr); 
 
}



fun_change_loc_date1()
{
  
strcpy(nd_temp_date1.arr,date_convert3.arr);
nd_temp_date1.len = strlen(nd_temp_date1.arr);

get_local_date1();
strcpy(date_convert3.arr,nd_loc_date1.arr);
}

get_local_date1()
{

	
	EXEC SQL EXECUTE

	DECLARE

	t_date  date;
	
	BEGIN
	  
  //     	get_locale_date.CONVERT_TO_LOCALE_DATE(to_date(:nd_temp_date1,'DD/MM/YYYY HH24:MI'),:p_language_id,t_date);  
      
//	   :nd_loc_date1 := to_char(t_date,'DD/MM/YYYY HH24:MI');
	
  	   :nd_loc_date1 :=  	sm_convert_datetime_2t(to_date(:nd_temp_date1,'DD/MM/YYYY HH24:MI'),:p_language_id);  
    
	END;

	END-EXEC;
        

		if (OERROR)
        err_mesg("SELECTING get_local_date1 failed",0,"");

}