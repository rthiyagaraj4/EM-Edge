/* Preprocessor Directives  */

#include <stdio.h>
#include <string.h>
#include <bl.h> 
EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
//#include <sqlca.h>     
//#include <sqlda.h>
#include <winproc.h>

/* Macros */  

#define NODATAFOUND sqlca.sqlcode==1403
#define OERROR (sqlca.sqlcode < 0) 
#define MAX_LINES 55

/* Declarations */

EXEC SQL BEGIN DECLARE SECTION;	

	VARCHAR uid_pwd 	        [91],	        
	     	nd_sysdate              [31],		
		nd_facility_id		[4] ,			
		nd_user_id  	        [31],	
		nd_pgm_id		[31],
		nd_hospital_name	[61],				
		
		nd_session_id		[20],
		nd_pgm_date		[30],
		nd_appl_num		[11],
		
		nd_up_to_date		[31],
		nd_from_blng_grp	[3],    
		nd_to_blng_grp		[3],
		nd_from_appln		[11],
		nd_to_appln		[11],
		nd_option		[2],
		nd_hcare_expiry_date	[12];	

  
        VARCHAR d_customer_code	[9],		  
		d_customer_name	[16],			
		d_appln		[11],		
		d_patient_id	[21],				
		d_patient_name  [61],
		d_patient_nam1  [31],
		d_emp_patient_id[21],
		d_emp_patient_name[61],
		d_emp_patient_nam1[61],
            d_short_name_full  [61],
		d_facility	[16],
		d_hcare_scheme	[8],	
		d_ser_code	[11],
		d_ser_name	[16],	
		d_bill_type	[7],
		d_bill_num	[9],	
		d_bill_date	[11],
		d_cash_counter	[16];

	VARCHAR d_prev_customer_code	[9],
		d_prev_customer_name	[16],
		d_prev_appln		[11],
		d_prev_patient_id	[21],				
		d_prev_patient_name  	[61],
		d_prev_emp_patient_id	[21],
		d_prev_emp_patient_name	[61],		
		d_prev_emp_patient_nam1	[31],		
		d_prev_hcare_scheme	[8];	
				
  
	double	d_subscription_amt,	
		d_prev_subscription_amt,
		d_gross_amt,
		d_disc_amt ,
		d_net_amt  ,
		d_total_amt = 0;	

	 int nd_status = 0,
	     nd_type   = 0,
	     nd_emp_count = 1;
	
	char    buf[10];
	
	char    nd_filename	        [100];


EXEC SQL END DECLARE SECTION;

	FILE 	*f1;
	int	page = 0;
	int	line = 0;
	int     cust_count = 0;
	int     emp_count  = 0;
        int     other_count = 0;

void proc_main(argc, argv)
	int	argc;
	char	*argv[];
{    
   void prt_line(int l, char spl_symbol[1]);   
  

   void prt_hdr_initial();
   void prt_hdr_next();
   void prt_hdr();    
   void page_hdr();
   void dec_cursor();
   void open_cursor();
   void prev_cust_det();
   void close_cursor();
   int  fetch_cursor();

   void dec_cursor1();
   void open_cursor1();
   void close_cursor1();   
   int  fetch_cursor1();

   void dec_cursor2();
   void open_cursor2();
   void close_cursor2();   
   int  fetch_cursor2();

  
   void report_process();
   void report_process1();
   void report_process2();
   void tot_prt();
   void prev_sub_hdr_prt();
   void prev_sub_hdr_prt1();

   void line_check();
   void sub_hdr_prt(); 
   void rec_prt();
   void sub_hdr_prt1(); 
   void rec_prt1();

   


  /* INPUT ARGUMENT CHECK */  




     if (argc < 5)      {
	disp_message(ERR_MESG,"Usage BLRHCSUB uid/passwd@db Session Pgm_date Facility-ID");
	proc_exit();
     }


	
     strcpy(nd_pgm_id.arr, argv[0]);
     nd_pgm_id.len = strlen(nd_pgm_id.arr);   

     strcpy(g_pgm_id,argv[0]);

     strcpy(uid_pwd.arr, argv[1]);
     uid_pwd.len = strlen(uid_pwd.arr);   

     strcpy(nd_session_id.arr, argv[2]);
     nd_session_id.len = strlen(nd_session_id.arr);      	 
     strcpy(g_session_id,nd_session_id.arr);	

     strcpy(nd_pgm_date.arr, argv[3]);
     nd_pgm_date.len = strlen(nd_pgm_date.arr);      	    
     strcpy(g_pgm_date,nd_pgm_date.arr);
   	 
     strcpy(nd_facility_id.arr, argv[5]);
     nd_facility_id.len = strlen(nd_facility_id.arr);      
     strcpy(g_facility_id,nd_facility_id.arr);
   

/* DB LOGIN */

    EXEC SQL CONNECT :uid_pwd;
    if (OERROR) 
    {
    	disp_message (ORA_MESG, "UserId / Password failed to Connect");
        proc_exit();  
    }	  	

   set_meduser_role();



   nd_up_to_date.arr[0]		= '\0';
   nd_from_blng_grp.arr[0]	= '\0';
   nd_to_blng_grp.arr[0]	= '\0';
   nd_from_appln.arr[0]		= '\0';
   nd_to_appln.arr[0]		= '\0';
   nd_option.arr[0]		= '\0';

   nd_up_to_date.len		= 0;
   nd_from_blng_grp.len		= 0;
   nd_to_blng_grp.len		= 0;
   nd_from_appln.len		= 0;
   nd_to_appln.len		= 0;
   nd_option.len		= 0;


  EXEC SQL SELECT param1,
		  param2,
		  param3,
		  param4,
		  param5,
		  param6
	   INTO 
		 :nd_up_to_date,
		 :nd_from_blng_grp,
		 :nd_to_blng_grp,
		 :nd_from_appln,
		 :nd_to_appln,
		 :nd_option
	   FROM sy_prog_param
	   WHERE operating_facility_id = :nd_facility_id
	   AND   session_id = :nd_session_id
	   AND   pgm_id     = :nd_pgm_id
	   AND   pgm_date   = :nd_pgm_date;

   nd_up_to_date.arr[nd_up_to_date.len]		= '\0';
   nd_from_blng_grp.arr[nd_from_blng_grp.len]	= '\0';
   nd_to_blng_grp.arr[nd_to_blng_grp.len]	= '\0';
   nd_from_appln.arr[nd_from_appln.len]		= '\0';
   nd_to_appln.arr[nd_to_appln.len]		= '\0';
   nd_option.arr[nd_option.len]			= '\0';

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NODATAFOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   EXEC SQL DELETE FRoM sy_prog_param
	    WHERE operating_facility_id = :nd_facility_id
	    AND   session_id = :nd_session_id
	    AND   pgm_id     = :nd_pgm_id
	    AND   pgm_date   = :nd_pgm_date;
	   
   if (OERROR)
        err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");


/* OUTPUT FILE */

	strcpy(nd_filename,WORKING_DIR);   
	strcat(nd_filename,argv[0]);
	strcat(nd_filename,".lis");
	if((f1 = fopen(nd_filename, "w")) == NULL) 
	{
		 disp_message (ERR_MESG, " Error opening output file ....");
		 proc_exit();
        } 
	

  nd_sysdate.arr[0]       = '\0';  
  nd_sysdate.len = 0;

  EXEC SQL SELECT to_char(SYSDATE,'DD/MM/YYYY HH24:MI') INTO :nd_sysdate FROM dual;
  nd_sysdate.arr[nd_sysdate.len]       = '\0';  

  nd_user_id.arr[0]       = '\0';  
  nd_user_id.len = 0;
  EXEC SQL SELECT USER INTO :nd_user_id FROM dual;
  nd_user_id.arr[nd_user_id.len]       = '\0';  

  nd_hospital_name.arr[0]	= '\0';       
  nd_hospital_name.len = 0;
  EXEC SQL SELECT accounting_name
	   INTO :nd_hospital_name 
	   FROM sy_acc_entity
	   WHERE acc_entity_id = :nd_facility_id;

  nd_hospital_name.arr[nd_hospital_name.len]	= '\0';  


/* PROCESS */   


  
   page_hdr();  
   nd_type = 2;
	
   if (strcmp(nd_option.arr,"C") == 0)
	   {    report_process() ;	}
   if (strcmp(nd_option.arr,"E") == 0)
	   {    report_process1();	}
   if (strcmp(nd_option.arr,"O") == 0)
	   {    report_process1();	}
   if (strcmp(nd_option.arr,"A") == 0)
	   { 	report_process2();	}   
   
   fprintf(f1,"\n");	 		
   prt_line(58," "); 
   fprintf(f1,"*** End Of Report ***");
   fprintf(f1, "\n");   	 
	
  
/* CLOSE FILE */

   EXEC SQL COMMIT RELEASE; 
   fclose(f1);   
   return;   
}

void line_check()
{
   if (line > MAX_LINES)
   {
	fprintf(f1,"\f");	    
	page_hdr();
   }
}       

void page_hdr()
{
   prt_hdr();
   if (page==1)
   { prt_hdr_initial();
    }
   else
   { prt_hdr_next();}
 }


void prt_hdr()
{     
   line = 0;    
   page = page +1;
   fprintf(f1,"\n");       
   fprintf(f1,"MDL : BL");
   prt_line(42," "); 
   fprintf(f1,"%-31s",nd_hospital_name.arr);
   prt_line(30," "); 
   fprintf(f1,"%-20s",nd_sysdate.arr);           
   fprintf(f1,"\n"); 
   fprintf(f1,"OPR : %-31s",nd_user_id.arr); 
   prt_line(10," ");    
   fprintf(f1,"Healthcare Subscription Utilization Report");
   prt_line(30," "); 
   fprintf(f1,"Page :%-6d",page);           
   fprintf(f1,"\n"); 
   fprintf(f1,"REP : BLRHCSUT"); 
   prt_line(38," "); 
   fprintf(f1,"(UP TO DATE ON %-10.10s)",nd_sysdate.arr); 
   fprintf(f1,"\n"); 
   //prt_line(132,"-");   
 }  

void prt_hdr_initial()
{
   fprintf(f1,"\n");    
   fprintf(f1,"VER : 4.1");
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"		INPUT PARAMETERS:");
   fprintf(f1,"\n");    
   fprintf(f1,"		-----------------");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    

   fprintf(f1,"		Up To Date				 : %-10.10s",nd_up_to_date.arr);
   fprintf(f1,"\n\n");
   fprintf(f1,"		Billing Group			From	 : %-2.2s",nd_from_blng_grp.arr);
   fprintf(f1,"\n");
   fprintf(f1,"						To	 : %-2.2s",nd_to_blng_grp.arr);
   fprintf(f1,"\n\n");
   fprintf(f1,"		Application No			From	 : %-10.10s",nd_from_appln.arr);
   fprintf(f1,"\n");
   fprintf(f1,"						To	 : %-10.10s",nd_to_appln.arr);
   fprintf(f1,"\n\n");   

   fprintf(f1,"		Selection(Employess / Customers / Others):  ");

   if (strcmp(nd_option.arr,"E") == 0)
   {   fprintf(f1,"Employees");}

   if (strcmp(nd_option.arr,"C") == 0)
   {   fprintf(f1,"Customers");} 
	
   if (strcmp(nd_option.arr,"O") == 0)
   {   fprintf(f1,"Others");} 

   if (strcmp(nd_option.arr,"A") == 0)
   {   fprintf(f1,"All");} 

   fprintf(f1,"\n");    

   line = MAX_LINES + 1; 

}

void prt_hdr_next()
{
   fprintf(f1,"-----------------------------------------------------------------------------------------------------------------------------------------------");
   fprintf(f1,"\n");    
   fprintf(f1,"Facility        Cash Counter    Bill Number     Bill Date  Service             "); 
   fprintf(f1,"       Gross Amount        Discount       Net Amount");
   fprintf(f1,"\n");    
   fprintf(f1,"-----------------------------------------------------------------------------------------------------------------------------------------------");   
   //prt_line(132,"-");  
   fprintf(f1, "\n");     
}

	

void prt_line(int line_length, char spl_symbol[1])
{  
 int i;  
  for(i=1;i<=line_length;i=i+1)
	 {fprintf(f1,spl_symbol);}
}

void dec_cursor()
{ 
  EXEC SQL DECLARE bill_cursor CURSOR FOR   
  		SELECT	a.customer_code					customer_code1,
				b.short_name 					customer_name,
				a.hcare_appl_num				appl_num,
				a.patient_id					patient_id,
				SUBSTR(h.acc_entity_name,1,15)	facility,
				SUBSTR(c.short_name,1,30)		patinet_name,
				SUBSTR(c.short_name,31,60)		patinet_nam1,
                        c.short_name,
				i.short_desc					hcare_scheme,	
				NVL(a.subscription_amt,0)		subscription_amt,
				e.package_service_code			ser_code,
				f.short_desc					ser_name,
				d.doc_type_code					bill_type,
				d.doc_num						bill_num,
				TRUNC(d.doc_date)				bill_date,
				g.short_desc					cash_counter,
				NVL(e.gross_amt,0)				gross_amt,
				NVL(e.serv_disc_amt,0)			disc_amt,
				NVL(e.net_amt,0)				net_amt		
		FROM	         bl_hcare_trn			a,
				ar_customer			b,
				mp_patient_mast			c,
				bl_bill_hdr				d,
				bl_bill_service_line	e,
				bl_blng_serv			f,
				bl_cash_counter			g,
				sy_acc_entity			h,
				bl_health_scheme		i 		
		WHERE	a.customer_code		=	b.cust_code
		AND		a.scheme_id			=	i.scheme_id
		AND		a.patient_id		=	c.patient_id
		AND		a.customer_code		IS 	NOT NULL 	
		AND		a.payment_option	=	'R'
		AND     TRUNC(a.hcare_expiry_date) >= TO_DATE(:nd_up_to_date,'dd/mm/yyyy')
		AND		a.hcare_status		=	'A'	
		AND		b.acc_entity_code IN ( SELECT acc_entity_code FROM sy_acc_entity
						       WHERE acc_entity_id=a.operating_facility_id)
		AND             d.patient_id = 	a.patient_id
		AND 		a.blng_grp_id = d.blng_grp_id
		AND		d.doc_type_code = e.doc_type_code
		AND		d.doc_num	= e.doc_num
		AND             TRUNC(d.doc_date) between TRUNC(a.hcare_start_date)
						  AND 
						  TRUNC(a.hcare_expiry_date)
		AND 		d.operating_facility_id	= e.operating_facility_id
		AND 		e.package_service_code	= f.blng_serv_code
		AND		g.cash_counter_code = d.cash_counter_code
		AND  		g.operating_facility_id = d.operating_facility_id
		AND		h.acc_entity_id	= d.operating_facility_id
		AND		a.blng_grp_id	between NVL(:nd_from_blng_grp,'!!')
						AND	NVL(:nd_to_blng_grp,'~~')
		AND		a.hcare_appl_num between NVL(:nd_from_appln,'!!!!!!!!!!')
						AND 	NVL(:nd_to_appln,'~~~~~~~~~~')
		ORDER BY 	customer_code,
				HCARE_APPL_NUM,
				a.patient_id,
				a.operating_facility_id,
				d.doc_date;
	return;
 }

void dec_cursor1()
{ 

  EXEC SQL DECLARE bill_cursor1 CURSOR FOR   
  		SELECT		a.emp_patient_id			emp_patient_id,
				a.hcare_appl_num				appl_num,
				a.patient_id					patient_id,
				SUBSTR(h.acc_entity_name,1,15)	facility,
				SUBSTR(c.short_name,1,30)		patinet_name,
				SUBSTR(c.short_name,31,60)		patinet_nam1,
                        c.short_name,
				i.short_desc					hcare_scheme,	
				NVL(a.subscription_amt,0)		subscription_amt,
				e.package_service_code			ser_code,
				f.short_desc					ser_name,
				d.doc_type_code					bill_type,
				d.doc_num						bill_num,
				TRUNC(d.doc_date)				bill_date,
				g.short_desc					cash_counter,
				NVL(e.gross_amt,0)				gross_amt,
				NVL(e.serv_disc_amt,0)			disc_amt,
				NVL(e.net_amt,0)				net_amt
		
		FROM	bl_hcare_trn			a,				
				mp_patient_mast				c,
				bl_bill_hdr				d,
				bl_bill_service_line	e,
				bl_blng_serv			f,
				bl_cash_counter			g,
				sy_acc_entity			h,
				bl_health_scheme		i

		WHERE	a.patient_id		=	c.patient_id
		AND		a.scheme_id			=	i.scheme_id
		AND ((          :nd_option		='E'
				AND a.employee_id	IS 	NOT NULL 	
				AND a.payment_option	<>	'R')
		    OR
		     (          :nd_option		='O'
				AND a.employee_id	IS 	NULL 	
				AND a.customer_code	IS      NULL))		 
		AND     TRUNC(a.hcare_expiry_date) 	>=	TO_DATE(:nd_up_to_date,'dd/mm/yyyy')
		AND		a.hcare_status		=	'A'	
		AND             d.patient_id = 	a.patient_id
		AND 		a.blng_grp_id = d.blng_grp_id
		AND		d.doc_type_code = e.doc_type_code
		AND		d.doc_num	= e.doc_num
		AND             TRUNC(d.doc_date) between TRUNC(a.hcare_start_date)
						  AND 
						  TRUNC(a.hcare_expiry_date)
		AND 		d.operating_facility_id	= e.operating_facility_id
		AND 		e.package_service_code	= f.blng_serv_code
		AND		g.cash_counter_code = d.cash_counter_code
		AND  		g.operating_facility_id = d.operating_facility_id
		AND		h.acc_entity_id	= d.operating_facility_id
		AND		a.blng_grp_id	between NVL(:nd_from_blng_grp,'!!')
						AND	NVL(:nd_to_blng_grp,'~~')
		AND		a.hcare_appl_num between 										 		NVL(:nd_from_appln,'!!!!!!!!!!')
						AND 	
						NVL(:nd_to_appln,'~~~~~~~~~~')
		ORDER BY 	emp_patient_id,
				hcare_appl_num,
				a.patient_id,
				a.operating_facility_id,
				d.doc_date;
		return;
 }



void open_cursor()
{ 
 EXEC SQL OPEN bill_cursor;
 if (sqlca.sqlcode < 0) 
	 {	disp_message (ERR_MESG, "Open bill Cursor Failed");
       		proc_exit();
	 } 

 	return;
 }

void open_cursor1()
{ 
 EXEC SQL OPEN bill_cursor1;
 
 if (sqlca.sqlcode < 0) 
	 {	disp_message (ERR_MESG, "Open bill Cursor Failed");
       		proc_exit();
	 } 

 	 return;
 }


int fetch_cursor()
{ 

	d_customer_code.arr[0]	=  '\0';
	d_customer_name.arr[0]  =  '\0';
 	d_appln.arr[0]		=  '\0';
	d_patient_id.arr[0]	=  '\0';
	d_facility.arr[0]	=  '\0';
	d_patient_name.arr[0]	=  '\0';
	d_patient_nam1.arr[0]	=  '\0';
	d_hcare_scheme.arr[0]	=  '\0';	
	d_ser_code.arr[0]	=  '\0';
	d_ser_name.arr[0]	=  '\0';
	d_bill_type.arr[0]	=  '\0';
	d_bill_num.arr[0]	=  '\0';
	d_bill_date.arr[0]	=  '\0';
	d_cash_counter.arr[0] =  '\0';

	d_customer_code.len = 0;
	d_customer_name.len = 0;
 	d_appln.len 	    = 0;
	d_patient_id.len    = 0;
	d_facility.len	    = 0;
	d_patient_name.len  = 0;
	d_patient_nam1.len  = 0;
	d_hcare_scheme.len  =0;
	d_ser_code.len = 0;
	d_ser_name.len = 0;
	d_bill_type.len = 0;
	d_bill_num.len = 0;
	d_bill_date.len = 0;
	d_cash_counter.len = 0;


	d_subscription_amt	= 0;
	d_gross_amt 		= 0;
	d_disc_amt  		= 0;
 	d_net_amt   		= 0;


  EXEC SQL FETCH bill_cursor INTO
		 :d_customer_code,
		 :d_customer_name,
		 :d_appln,
		 :d_patient_id,
		 :d_facility,
		 :d_patient_name,
		 :d_patient_nam1,
             :d_short_name_full,
		 :d_hcare_scheme,	
		 :d_subscription_amt,
		 :d_ser_code,
		 :d_ser_name,
		 :d_bill_type,
		 :d_bill_num,
		 :d_bill_date,
		 :d_cash_counter,
		 :d_gross_amt,
		 :d_disc_amt,
		 :d_net_amt;

	d_customer_code.arr[d_customer_code.len]	=  '\0';
	d_customer_name.arr[d_customer_name.len]        =  '\0';
 	d_appln.arr[d_appln.len]			=  '\0';
	d_patient_id.arr[d_patient_id.len]		=  '\0';
	d_facility.arr[d_facility.len]			=  '\0';
	d_patient_name.arr[d_patient_name.len]		=  '\0';
	d_patient_nam1.arr[d_patient_nam1.len]		=  '\0';
	d_hcare_scheme.arr[d_hcare_scheme.len]		=  '\0';	
	d_ser_code.arr[d_ser_code.len]			=  '\0';
	d_ser_name.arr[d_ser_name.len]			=  '\0';
	d_bill_type.arr[d_bill_type.len]		=  '\0';
	d_bill_num.arr[d_bill_num.len]		=  '\0';
	d_bill_date.arr[d_bill_date.len]		=  '\0';
	d_cash_counter.arr[d_cash_counter.len]		 =  '\0';
	d_short_name_full.arr[d_short_name_full.len]     =  '\0';	


    if (NODATAFOUND)
	return 0;
  EXEC SQL EXECUTE
 BEGIN
 declare
      str1   varchar2(100);
     str2   varchar2(60);
     
    
   BEGIN
     blcommon.split_words(:d_short_name_full,30,'*',1,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_name   :=str2;
       END IF;
    blcommon.split_words(:d_short_name_full,30,'*',2,str1,str2);
       IF str2 IS NOT NULL THEN
         :d_patient_nam1  := str2;
      END IF;
    blcommon.split_words(:d_short_name_full,30,'*',3,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_patient_nam1    := :d_patient_nam1 || str2;
       end if;

	 
     
 END;
  END;
       
   END-EXEC;
       d_patient_name.arr[d_patient_name.len]  = '\0';
       d_patient_nam1.arr[d_patient_nam1.len]  = '\0';

       	nd_status = 1;
        return 1;
 }

int fetch_cursor1()
{ 


	d_emp_patient_id.arr[0]	=  '\0';
 	d_appln.arr[0]		=  '\0';
	d_patient_id.arr[0]	=  '\0';
	d_facility.arr[0]	=  '\0';
	d_patient_name.arr[0]	=  '\0';
	d_patient_nam1.arr[0]	=  '\0';
	d_hcare_scheme.arr[0]	=  '\0';	
	d_ser_code.arr[0]	=  '\0';
	d_ser_name.arr[0]	=  '\0';
	d_bill_type.arr[0]	=  '\0';
	d_bill_num.arr[0]	=  '\0';
	d_bill_date.arr[0]	=  '\0';
	d_cash_counter.arr[0] =  '\0';

	d_emp_patient_id.len = 0;
 	d_appln.len 	    = 0;
	d_patient_id.len    = 0;
	d_facility.len	    = 0;
	d_patient_name.len  = 0;
	d_patient_nam1.len  = 0;
	d_hcare_scheme.len  =0;
	d_ser_code.len = 0;
	d_ser_name.len = 0;
	d_bill_type.len = 0;
	d_bill_num.len = 0;
	d_bill_date.len = 0;
	d_cash_counter.len = 0;


	d_subscription_amt	= 0;
	d_gross_amt 		= 0;
	d_disc_amt  		= 0;
 	d_net_amt   		= 0;


  EXEC SQL FETCH bill_cursor1 INTO
		 :d_emp_patient_id,
		 :d_appln,
		 :d_patient_id,
		 :d_facility,
		 :d_patient_name,
		 :d_patient_nam1,
             :d_short_name_full,
		 :d_hcare_scheme,	
		 :d_subscription_amt,
		 :d_ser_code,
		 :d_ser_name,
		 :d_bill_type,
		 :d_bill_num,
		 :d_bill_date,
		 :d_cash_counter,
		 :d_gross_amt,
		 :d_disc_amt,
		 :d_net_amt;

	d_emp_patient_id.arr[d_emp_patient_id.len]	=  '\0';
 	d_appln.arr[d_appln.len]			=  '\0';
	d_patient_id.arr[d_patient_id.len]		=  '\0';
	d_facility.arr[d_facility.len]			=  '\0';
	d_patient_name.arr[d_patient_name.len]		=  '\0';
	d_patient_nam1.arr[d_patient_nam1.len]		=  '\0';
	d_hcare_scheme.arr[d_hcare_scheme.len]		=  '\0';	
	d_ser_code.arr[d_ser_code.len]			=  '\0';
	d_ser_name.arr[d_ser_name.len]			=  '\0';
	d_bill_type.arr[d_bill_type.len]		=  '\0';
	d_bill_num.arr[d_bill_num.len]			=  '\0';
	d_bill_date.arr[d_bill_date.len]		=  '\0';
	d_cash_counter.arr[d_cash_counter.len]		 =  '\0';
      d_short_name_full.arr[d_short_name_full.len]     =  '\0';
	d_emp_patient_name.arr[0]			=  '\0';		
	d_emp_patient_nam1.arr[0]			=  '\0';		
	d_emp_patient_name.len				= 0;
	d_emp_patient_nam1.len				= 0;
 EXEC SQL EXECUTE
 BEGIN
 declare
      str1   varchar2(100);
     str2   varchar2(60);
     
    
   BEGIN
     blcommon.split_words(:d_short_name_full,30,'*',1,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_emp_patient_name   :=str2;
       END IF;
    blcommon.split_words(:d_short_name_full,30,'*',2,str1,str2);
       IF str2 IS NOT NULL THEN
         :d_emp_patient_nam1  := str2;
      END IF;
    blcommon.split_words(:d_short_name_full,30,'*',3,str1,str2);
        IF str2 IS NOT NULL THEN
         :d_emp_patient_nam1    := :d_emp_patient_nam1 || str2;
       end if;

	 
     
 END;
  END;
       
   END-EXEC;
       d_emp_patient_name.arr[d_emp_patient_name.len]  = '\0';
       d_emp_patient_nam1.arr[d_emp_patient_nam1.len]  = '\0';


	EXEC SQL SELECT SUBSTR(short_name,1,30), decode(substr(short_name,31,60),NULL,' ',substr(short_name,31,60)) shortname1,
                      short_name
	INTO :d_emp_patient_name,
		 :d_emp_patient_nam1,
            :d_short_name_full
		 FROM mp_patient_mast
		 WHERE patient_id = NVL(:d_emp_patient_id,:d_patient_id);
	
	d_emp_patient_name.arr[d_emp_patient_name.len]	=  '\0';		
	d_emp_patient_nam1.arr[d_emp_patient_nam1.len]	=  '\0';		
      d_short_name_full.arr[d_short_name_full.len]    =  '\0';


    if (NODATAFOUND)
	return 0;
 

	nd_status = 1;
        return 1;

 }


void close_cursor()
{ 
 EXEC SQL close bill_cursor;
 return;
 }

void close_cursor1()
{ 
 EXEC SQL CLOSE bill_cursor1;
 return;
 }

print_formated(loc_amount)
double loc_amount;
{
    char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);
        format_amt(s_amt);        
        sprintf(str_amt,"%15s",s_amt);
        fprintf(f1,"%-15sCR",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);
        format_amt(s_amt);        
        sprintf(str_amt,"%15s",s_amt);
        fprintf(f1,"%-15s ",str_amt);
        }
}

void sub_hdr_prt()

{	
	fprintf(f1,"Application No: %-10.10s",d_appln.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Patient: %-20.20s %-30.30s",d_patient_id.arr,d_patient_name.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_subscription_amt);
   	fprintf(f1,"\n\n");
  
   if(strlen(d_patient_nam1.arr) > 2)
	{
	fprintf(f1,"%56s %s \n\n"," ",d_patient_nam1.arr);
	}
   else
   {fprintf(f1,"\n");}

	line = line +2;
	line_check();   
}

void sub_hdr_prt1()

{	if (strcmp(nd_option.arr,"E") == 0 )
	{
	if (nd_emp_count == 1 )
	{
	    nd_emp_count = 0;
	fprintf(f1,"Application No: %-10.10s",d_appln.arr); 		
        fprintf(f1," ");
	if (d_emp_patient_id.arr[0])
	{
	fprintf(f1,"Patient: %-20.20s %-30.30s",d_emp_patient_id.arr,d_emp_patient_name.arr); 		
	}
	else
	{fprintf(f1,"Patient: %-20.20s %-30.30s",d_patient_id.arr,d_patient_name.arr); 
	}		

        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_subscription_amt);
	fprintf(f1,"\n");

   if (d_emp_patient_id.arr[0])
   {
		if(strlen(d_emp_patient_nam1.arr) > 2)
		{
		fprintf(f1,"%40s %s \n\n"," ",d_emp_patient_nam1.arr);
		line++;
		}
		else  fprintf(f1,"\n");
	}
	else
	{
		if(strlen(d_patient_nam1.arr) > 2)
		{
		fprintf(f1,"%40s %s \n\n"," ",d_patient_nam1.arr);
		line++;
		}
		else  fprintf(f1,"\n");
    }

	line = line + 2 ;
	line_check();
	}
	fprintf(f1,"Patient       : %-20.20s %-30.30s", d_patient_id.arr,d_patient_name.arr);
   	fprintf(f1,"\n");
    if(strlen(d_patient_nam1.arr) > 2)
	{
	 fprintf(f1,"%36s %s \n\n"," ",d_patient_nam1.arr);
	 line++;
	}
	else fprintf(f1,"\n");



	line = line +2;
	line_check();   }


	if (strcmp(nd_option.arr,"O") == 0 )
	{		
	fprintf(f1,"Application No: %-10.10s",d_appln.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Patient: %-20.20s %-30.30s",d_patient_id.arr,d_patient_name.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_subscription_amt);	
	fprintf(f1,"\n");

	if(strlen(d_patient_nam1.arr) > 2)
	{
	fprintf(f1,"%31s %s \n\n"," ",d_patient_nam1.arr);
	}
	else fprintf(f1,"\n");


	line = line +2;
	line_check();   
	}
   }

	
void prev_sub_hdr_prt()

{	
	fprintf(f1,"Application No: %-10.10s",d_prev_appln.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Patient: %-20.20s %-33.33s",d_prev_patient_id.arr,d_prev_patient_name.arr); 	
        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_prev_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_prev_subscription_amt);
	
   	fprintf(f1,"\n\n");
	line = line +2;
	line_check();   
}

void prev_sub_hdr_prt1()

{	if (strcmp(nd_option.arr,"E") == 0 )   
	{
	fprintf(f1,"Application No: %-10.10s",d_prev_appln.arr); 		
        fprintf(f1," ");
       	if (d_prev_emp_patient_id.arr[0])
	{
	fprintf(f1,"Patient: %-20.20s 			%-33.33s", 							d_prev_emp_patient_id.arr,d_prev_emp_patient_name.arr); 		
	}
	else
	{
	fprintf(f1,"Patient: %-20.20s 			%-33.33s", 							d_prev_patient_id.arr,d_prev_patient_name.arr); 		
	}
	
        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_prev_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_prev_subscription_amt);

	fprintf(f1,"\n\n");

	fprintf(f1,"Patient       : %-20.20s -41.41s", 								d_prev_patient_id.arr,d_prev_patient_name.arr);
	
		
   	fprintf(f1,"\n\n");
	line = line +4;
	line_check();   
	}
	else
	{
	fprintf(f1,"Application No: %-10.10s",d_prev_appln.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Patient: %-20.20s 			%-33.33s", 						d_prev_patient_id.arr,d_prev_patient_name.arr); 	
        fprintf(f1," ");
	fprintf(f1,"Scheme: %-8.8s",d_prev_hcare_scheme.arr); 		
        fprintf(f1," ");
	fprintf(f1,"Amount: ");
	print_formated(d_prev_subscription_amt);	
		
   	fprintf(f1,"\n\n");
	line = line +2;
	line_check();   
	}
}



void rec_prt()
{
       
	fprintf(f1,"%-15.15s "	,	d_facility.arr);	
	fprintf(f1,"%-15.15s "	,	d_cash_counter.arr);		
        fprintf(f1,"%-6.6s/%-8.8s ",	d_bill_type.arr,d_bill_num.arr);
	fprintf(f1,"%-10.105s "	,	d_bill_date.arr);		
	fprintf(f1,"%-10.6s/%-15.15s ",	d_ser_code.arr,d_ser_name.arr);
	print_formated(d_gross_amt);
	fprintf(f1," ");
	print_formated(d_disc_amt);
	fprintf(f1," ");
	print_formated(d_net_amt);
	fprintf(f1," ");
        d_total_amt  = d_total_amt + d_net_amt;
        fprintf(f1,"\n");

	line = line + 1;	
	line_check();
}

void prev_cust_det()
{
        strcpy(d_prev_customer_code.arr,d_customer_code.arr);
	d_prev_customer_code.len = strlen(d_prev_customer_code.arr);					

	strcpy(d_prev_customer_name.arr,d_customer_name.arr);
	d_prev_customer_name.len = strlen(d_prev_customer_name.arr);					

	strcpy(d_prev_patient_id.arr,d_patient_id.arr);
	d_prev_patient_id.len = strlen(d_prev_patient_id.arr);

	strcpy(d_prev_patient_name.arr,d_patient_name.arr);
	d_prev_patient_name.len = strlen(d_prev_patient_name.arr);

	strcpy(d_prev_appln.arr,d_appln.arr);	
	d_prev_appln.len = strlen(d_prev_appln.arr);

	strcpy(d_prev_hcare_scheme.arr,d_hcare_scheme.arr);
	d_prev_hcare_scheme.len = strlen(d_prev_hcare_scheme.arr);

	d_prev_subscription_amt	= d_subscription_amt;
}


void prev_emp_det()
{
        
	strcpy(d_prev_emp_patient_id.arr,d_emp_patient_id.arr);
	d_prev_emp_patient_id.len = strlen(d_prev_emp_patient_id.arr);

	strcpy(d_prev_emp_patient_name.arr,d_emp_patient_name.arr);
	d_prev_emp_patient_name.len = strlen(d_prev_emp_patient_name.arr);

	strcpy(d_prev_patient_id.arr,d_patient_id.arr);
	d_prev_patient_id.len = strlen(d_prev_patient_id.arr);

	strcpy(d_prev_patient_name.arr,d_patient_name.arr);
	d_prev_patient_name.len = strlen(d_prev_patient_name.arr);

	strcpy(d_prev_appln.arr,d_appln.arr);	
	d_prev_appln.len = strlen(d_prev_appln.arr);

	strcpy(d_prev_hcare_scheme.arr,d_hcare_scheme.arr);
	d_prev_hcare_scheme.len = strlen(d_prev_hcare_scheme.arr);

	d_prev_subscription_amt	= d_subscription_amt;
}

void tot_prt()
   {
	fprintf(f1,"\n");
	prt_line(107," ");
	fprintf(f1,"Total :  ");
	print_formated(d_total_amt);	
	d_total_amt = 0;
	fprintf(f1,"\n");
	fprintf(f1,"\n");
	line = line +2;
	line_check();
    }


void report_process()
{        
    int fetch_cursor_check;	
	nd_status = 0;
	dec_cursor();
	open_cursor();	    
	line_check();  
        fetch_cursor_check = fetch_cursor();			
	prev_cust_det();

	line_check();          	

  while(fetch_cursor_check)  {  	
     if (strcmp(d_prev_customer_code.arr,d_customer_code.arr) == 0)        {	 
	
	if (strcmp(d_prev_appln.arr,d_appln.arr) == 0)
	{	
	 if (line == 0 || nd_type == 1)		
	  { fprintf(f1,"Customer     : %-8.8s %-15.15s",d_customer_code.arr,d_customer_name.arr); 
	    fprintf(f1,"\n\n");
	    line = line +2;
	    sub_hdr_prt();
	   }
	    rec_prt();
	}
	else
	{  if (line == 0 )
	  	{ fprintf(f1,"Customer     : %-8.8s 15.15s", 								d_customer_code.arr,d_customer_name.arr); 
		   fprintf(f1,"\n\n");
		    line = line +2;
		  prev_sub_hdr_prt();} 
	    	  tot_prt();
          if (line > (MAX_LINES-6))
          	{ line = MAX_LINES +1;
	    	  line_check();	
		}	
	       	  sub_hdr_prt();
		  rec_prt();
       }
	}        
			
     else
       { 
	
          if (line == 0 )
	  	{ fprintf(f1,"Customer: %-8.8s %-15.15s", 									d_prev_customer_code.arr,d_prev_customer_name.arr); 
		     fprintf(f1,"\n\n");
		  line = line +2;
		  prev_sub_hdr_prt();} 
	    	  tot_prt();		
          if (line > (MAX_LINES-6))
          	{ line = MAX_LINES +1;
	    	  line_check();	
		}	
	       	  sub_hdr_prt();
		  rec_prt();
       }        
        prev_cust_det();
	nd_type = nd_type + 1;
        fetch_cursor_check = fetch_cursor();	             
     }
	if (nd_status == 1)
	{tot_prt();}	

	close_cursor();
  }


void report_process1()
{ 
 int fetch_cursor_check;	
	nd_status = 0;

	dec_cursor1();

	open_cursor1();	

	line_check();  

        fetch_cursor_check = fetch_cursor1();			

	prev_emp_det();

	line_check();          	

  while(fetch_cursor_check)  {  	
	
	if (strcmp(d_prev_appln.arr,d_appln.arr) == 0)
	{	
	 if (line == 0 || nd_type == 1) 		
	  { if (strcmp(nd_option.arr,"E") == 0 )
		{fprintf(f1,"Employees");}
	    else
		{fprintf(f1,"Others");}		
	    fprintf(f1,"\n\n");
	    line = line +2;
	    sub_hdr_prt1();
	   }
	    rec_prt();
	}
	else
	{  	nd_emp_count = 1;
		if (line == 0 )
	  { if (strcmp(nd_option.arr,"E") == 0 )
		{fprintf(f1,"Employees");}
	    else
		{fprintf(f1,"Others");}		

	    fprintf(f1,"\n\n");
	    line = line +2;
	    prev_sub_hdr_prt1();
	   }
	    tot_prt();
          if (line > (MAX_LINES-6))
          	{ line = MAX_LINES +1;
	    	  line_check();	
		}	
	       	  sub_hdr_prt1();
		  rec_prt();
       }	
			
        prev_emp_det();
	nd_type = nd_type + 1;
        fetch_cursor_check = fetch_cursor1();	             
     }
	if (nd_status == 1)
	{tot_prt();}	
	close_cursor1();	
	return;
  }


void report_process2()
{        
   nd_status = 0;
   nd_type = 1;
   strcpy(nd_option.arr,"E");   
   report_process1();

   nd_status = 0;
   nd_type = 1;
   strcpy(nd_option.arr,"C");   
   report_process();

   nd_status = 0;
   nd_type = 1;
   strcpy(nd_option.arr,"O"); 
   report_process1();

   return;
  }
