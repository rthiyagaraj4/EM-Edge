/************************************************************************/
/* PROGRAM NAME          : BLR00025.PC                                  */
/* AUTHOR                : D Ganesh Murthi                              */
/* DATE WRITTEN          : 15/02/2005                                	*/
/*                                                                      */
/* CALLED FROM           :                                              */
/*                                                                      */
/************************************************************************/

#include <stdio.h>
#include <string.h>  
#include <bl.h>
  
#define OERROR (sqlca.sqlcode < 0)
#define LAST_ROW (sqlca.sqlcode == 1403)
#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
#define RESOURCE_BUSY        (sqlca.sqlcode == -54)
#define DUPLICATE_KEY        (sqlca.sqlcode == -1)
#define	MAX_LINES	60
#define ESC     0x1B

#define INIT_MESG "Report Generation is in progress"

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR		uid_pwd				[132],
			hosp_name			[120],
			nd_currency		[10],
			nd_refund_type[2],
			date_time			[20],
			user_id				[20],
			nd_pgm_date			[35],
			nd_facility_name	[31],
			nd_session_id		[16],
			nd_facility_id		[3];
            
VARCHAR		nd_lang_id			[4],
			l_pk_value			[200],  
			l_translated_value	[201];

int			l_line_no =0;
int			l_page_no =0;
int			i;    

VARCHAR   	d_patient_name          [61],
			d_ln1_res_add			[41],
			d_ln2_res_add			[41],
			d_ln3_res_add			[41],
			d_ln4_res_add			[41],
			d_res_postal_code		[11],
			cur_date                [11],
			d_res_country_code		[11];

VARCHAR		nd_episode_type			[2],
			nd_pat_from				[21],
			nd_pat_to				[21],
			l_sysdate				[20],
			l_hospital_name			[50];

VARCHAR     d_bill_doc_dtls         [31],
            d_bill_doc_type_code    [7],
			d_admission_date        [11],
			d_discharge_date_time	[21],
			d_national_id_num		[31],
			d_patient_id			[21];

VARCHAR     d_hosp_name				[60],
			d_address1				[60],
			d_address2				[60],
			d_telnum				[21],
			d_address3				[60];
 
double		d_bill_amt,
			d_deposit_amt,
			d_outstdg_amt;
double		l_start_point;

int d_bill_doc_num;
char		loc_legend[50][201];
char		filename[200];
char		string_var[200];

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include <winproc.h>

int    lctr = 0,pctr = 0;

FILE *fp;

void proc_main(argc,argv)
char *argv[];
int argc;
{
    if (argc < 4)
    {
     int i = 0;
       disp_message(ERR_MESG,"Not enough Parameters for running this program");
       proc_exit();
    }

	strcpy(uid_pwd.arr,argv[1]);
	uid_pwd.len = strlen(uid_pwd.arr);

	nd_session_id.len = 0;
	nd_session_id.arr[nd_session_id.len] = '\0';

	strcpy(nd_session_id.arr,argv[2]);
	nd_session_id.len = strlen(nd_session_id.arr);
	nd_session_id.arr[nd_session_id.len] = '\0'; 

	nd_pgm_date.len = 0;
	nd_pgm_date.arr[nd_pgm_date.len] = '\0';
   
	strcpy(nd_pgm_date.arr,argv[3]);
	nd_pgm_date.len = strlen(nd_pgm_date.arr);
	nd_pgm_date.arr[nd_pgm_date.len] = '\0';

	strcpy(nd_facility_id.arr,argv[4]);
	nd_facility_id.len = strlen(nd_facility_id.arr);
	nd_facility_id.arr[nd_facility_id.len] = '\0';

	if(sql_connect() == -1)
	{
		disp_message(ERR_MESG,"Error in connecting to Oracle\n");
		if (uid_pwd.len == 0)
			disp_message(ERR_MESG,"Null oracle uid/pwd\n\n\n");
		proc_exit();
	}

	set_meduser_role();

    strcpy(nd_lang_id.arr,l_language_id.arr);
	nd_lang_id.len = l_language_id.len; 

	fetch_prog_param();
    
	declare_cursors();

	fetch_hosp_name();

	fetch_hosp_address();
    
    open_file();

	fetch_legend_value();

    print_report();  

    //end_of_rep();
   

	EXEC SQL DELETE SY_PROG_PARAM
            WHERE PGM_ID   = 'BLR00025'
            AND SESSION_ID = :nd_session_id
            AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
         err_mesg("DELETE failed on table SY_PROG_PARAM",0,"");

    
    EXEC SQL COMMIT WORK RELEASE;
    if (OERROR)
         err_mesg("COMMIT WORK RELEASE failed",0,"");

fclose(fp);
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

declare_cursors()
{
EXEC SQL DECLARE MAIN_CUR CURSOR FOR 
select	a.doc_type_code,
	    a.doc_num,
		to_char(a.admission_date,'dd/mm/yyyy'), 
		to_char(nvl(c.discharge_date_time,sysdate),'dd/mm/yyyy'),
		b.national_id_num,
		a.patient_id,
		a.bill_amt, 
		decode(nvl(DEPOSIT_ADJ_AMT,0)+nvl(PREPAY_ADJ_AMT,0),0,0,nvl(DEPOSIT_ADJ_AMT,0)+nvl(PREPAY_ADJ_AMT,0)) deposit_amt,
		a.BILL_TOT_OUTST_AMT outstdg_amt
from	bl_bill_dcp_dtl_vw a, 
		mp_patient_mast b, 
		BL_ENCOUNTER_FOR_QRY_VW c
where	a.patient_id=b.patient_id
and		a.episode_type=c.episode_type(+)
and		a.episode_id=c.episode_id(+)
and		nvl(a.visit_id,9999)=nvl(c.visit_id(+),9999)
and     a.episode_type = decode(:nd_episode_type,'A',a.episode_type,:nd_episode_type)
and		a.patient_id between nvl(:nd_pat_from,'!!!!!!!!!!!!!!!!!!!!')
and		nvl(:nd_pat_to,'~~~~~~~~~~~~~~~~~~~~')	
and		nvl(BILL_TOT_OUTST_AMT,0) < 0
and nvl(bill_status,'X') != 'C'
and (
     (:nd_refund_type in ('D','B') and (nvl(deposit_adj_amt,0)+nvl(prepay_adj_amt,0)) != 0)
     or
     (:nd_refund_type in ('O','B') and (nvl(deposit_adj_amt,0)+nvl(prepay_adj_amt,0)) = 0)     
     )

order by a.patient_id;     

/*
decode(nvl(DEPOSIT_ADJ_AMT,0)+nvl(PREPAY_ADJ_AMT,0),0,'Adjustment Bill',nvl(DEPOSIT_ADJ_AMT,0)+nvl(PREPAY_ADJ_AMT,0)) deposit_amt,a.BILL_TOT_OUTST_AMT outstdg_amt

EXEC SQL DECLARE MULTIPLE_DEP CURSOR FOR
select ORG_DOC_TYPE_CODE||'/'||ORG_DOC_NUM||' '||ORG_DOC_DATE
from bl_patient_ledger
where trx_type_code in (5,6) 
and (AD_PR_ADJ_BILL_DOC_TYPE  = :d_bill_doc_type_code
AD_PR_ADJ_BILL_DOC_NUM    = :d_bill_doc_num )
or
(ALL_DOC_TYPE_CODE = :d_bill_doc_type_code
 ALL_DOC_num       = :d_bill_doc_num);
*/





EXEC SQL OPEN MAIN_CUR;  
	if(OERROR)	   
	  err_mesg("OPEN failed on cursor MAIN_CUR",0,"");


}

get_multiple_dep_cur()
 {
 EXEC SQL DECLARE MULTIPLE_DEP CURSOR FOR
 select ORG_DOC_TYPE_CODE||'/'||ORG_DOC_NUM||' '||ORG_DOC_DATE
from bl_patient_ledger
	where AD_PR_ADJ_BILL_DOC_TYPE  = :d_bill_doc_type_code
	  and AD_PR_ADJ_BILL_DOC_NUM   = :d_bill_doc_num  
	  and RECPT_NATURE_CODE IN('AD','PR')    
      and nvl(TRX_STATUS,'X') != 'C';


    EXEC SQL OPEN MULTIPLE_DEP;
        if(OERROR)
         err_mesg("OPEN failed on cursor MULTIPLE_DEP",0,"");

  }

fetch_main_cur()
{
    d_bill_doc_type_code.arr[0]   = '\0';
    d_admission_date.arr[0]       = '\0';
    d_discharge_date_time.arr[0]  = '\0';
	d_national_id_num.arr[0]      = '\0';
	d_patient_id.arr[0]			  = '\0';
     
	d_bill_doc_type_code.len	  = 0;
    d_admission_date.len          = 0;
	d_discharge_date_time.len     = 0;
	d_national_id_num.len         = 0;
	d_patient_id.len			  = 0;

    d_bill_amt					  = 0;
	d_deposit_amt				  = 0;
    d_outstdg_amt				  = 0;
	d_bill_doc_num				  = 0;

    EXEC SQL FETCH MAIN_CUR 
	         INTO  
	   :d_bill_doc_type_code,
       :d_bill_doc_num ,
       :d_admission_date,
	   :d_discharge_date_time,
	   :d_national_id_num,
	   :d_patient_id,
	   :d_bill_amt,
	   :d_deposit_amt,
	   :d_outstdg_amt;
 
    if(OERROR)
	err_mesg("FETCH failed on cursor MAIN_CUR",0,"");

    if(NO_DATA_FOUND)
	return 0;
    d_bill_doc_type_code.arr[d_bill_doc_type_code.len]     = '\0';
	d_admission_date.arr[d_admission_date.len]             = '\0';
	d_discharge_date_time.arr[d_discharge_date_time.len]   = '\0';
    d_national_id_num.arr[d_national_id_num.len]		   = '\0';
	d_patient_id.arr[d_patient_id.len]					   = '\0';

    return 1;
}

fetch_multiple_dep_cur()
 {
   d_bill_doc_dtls.arr[0]     ='\0'; 
   d_bill_doc_dtls.len        =0;

    EXEC SQL FETCH MULTIPLE_DEP
	         INTO  :d_bill_doc_dtls;

      if(OERROR)
	     err_mesg("FETCH failed on cursor  MULTIPLE_DEP",0,"");
      if(NO_DATA_FOUND)
	 return 0;
   d_bill_doc_dtls.arr[d_bill_doc_dtls.len]     = '\0';

   return 1;
 }

  
fetch_prog_param()
{
    
    nd_episode_type.arr[0]     ='\0'; 
	nd_pat_from.arr[0]		   ='\0';
	nd_pat_to.arr[0]		   ='\0';
	nd_refund_type.arr[0] = '\0';

    nd_episode_type.len        =0;
	nd_pat_from.len			   =0;
	nd_pat_to.len			   =0;
	nd_refund_type.len = 0;
  
 
   EXEC SQL SELECT  PARAM1,PARAM2, PARAM3, PARAM4
            INTO    :nd_episode_type, :nd_pat_from, :nd_pat_to, :nd_refund_type
            FROM    SY_PROG_PARAM
            WHERE PGM_ID   = 'BLR00025'
            AND SESSION_ID = :nd_session_id
            AND PGM_DATE   = :nd_pgm_date;

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

	nd_episode_type.arr[nd_episode_type.len]	= '\0';
	nd_pat_from.arr[nd_pat_from.len]	= '\0';
	nd_pat_to.arr[nd_pat_to.len]	= '\0';
	nd_refund_type.arr[nd_refund_type.len] = '\0';
}

end_of_rep()
{
	fprintf(fp,"      ***  END OF REPORT ***\n\f");
	fflush(fp);
}

open_file()
{
    strcpy(filename,WORKING_DIR);
	strcat(filename,"BLR00025.lis");

    if ((fp = fopen(filename,"w")) == NULL)
    {
       disp_message(ERR_MESG,"Error in opening file BLR00025.lis");
       proc_exit();
    }
}

print_page_title()
{

   fprintf(fp,"\f");
/*

	double l_report_width;
	double l_letter_heading_length;
	double l_start_point;
	double l_comp_name_end_point;
	int	   l_page_width; 	

	l_line_no=0;
	l_page_no++;

	fprintf(fp,"%c&k4S",ESC); 	// To Set compressed mode 
	
	l_report_width=85;
	l_letter_heading_length = strlen(loc_legend[1]);

	//Code for Line 1
	//l_start_point=ceill((l_report_width/2)-(l_letter_heading_length/2));
	fprintf(fp,"\n");	
	print_spaces(l_start_point);
	fprintf(fp,"%s \n\n",loc_legend[1]);
	l_line_no = l_line_no + 4;*/
}


print_letter_detail()
{
	
    fprintf(fp,"%c(s3B",ESC);  
	fprintf(fp,"%c(s9H",ESC);  
	l_start_point=(63-strlen(d_hosp_name.arr))/2;
	print_spaces(l_start_point);
    fprintf(fp,"     %s\n",d_hosp_name.arr);
	l_start_point=(63-(strlen(d_address1.arr)+strlen(d_address2.arr)))/2;
	print_spaces(l_start_point);
    fprintf(fp,"     %s %s\n",d_address1.arr,d_address2.arr);
	l_start_point=(63-(strlen(d_address3.arr)+strlen(d_telnum.arr)+7))/2;
	print_spaces(l_start_point);
    fprintf(fp,"     %s Phone: %s\n",d_address3.arr, d_telnum.arr);
	fprintf(fp,"\n");
	fprintf(fp,"%c(s0B",ESC); 
	fprintf(fp,"%c(s11H",ESC);  
	fprintf(fp,"%-65.65s %s %s\n"," ",loc_legend[47],cur_date.arr);
    fprintf(fp,"     %-60.60s \n",d_patient_name.arr);
    fprintf(fp,"     %-40.40s \n",d_ln1_res_add.arr);
	fprintf(fp,"     %-40.40s \n",d_ln2_res_add.arr);
	fprintf(fp,"     %-40.40s \n",d_ln3_res_add.arr);
	fprintf(fp,"     %-40.40s \n",d_ln4_res_add.arr);
	fprintf(fp,"\n\n");
	fprintf(fp,"     %s\n\n",loc_legend[1]);
	fprintf(fp,"     %s %s ", loc_legend[2], loc_legend[3]);
	 print_deposit_dtls();
	//fprintf(fp,"%s \n\n", d_bill_doc_dtls.arr);
	fprintf(fp,"     %s %s\n\n",loc_legend[4], loc_legend[5]);
	fprintf(fp,"     2.	  %s %s\n", loc_legend[6], loc_legend[7]);
	fprintf(fp,"          %s ", loc_legend[8]);
	fprintf(fp,"%s ",nd_currency.arr);
	print_formated_tr(d_outstdg_amt);      
    fprintf(fp," %s %s\n", loc_legend[10], loc_legend[11]);
    fprintf(fp,"          %s ", loc_legend[12]);
    fprintf(fp,"%s ", nd_currency.arr);
    print_formated_tr(d_bill_amt);
    fprintf(fp," %s %s ", loc_legend[13], loc_legend[14]);
    fprintf(fp,"%-10.10s %s %-10.10s.\n\n", d_admission_date.arr,loc_legend[48],d_discharge_date_time.arr);
    fprintf(fp,"     3.	  %s %s %s \n", loc_legend[15], loc_legend[16], loc_legend[17]);
    fprintf(fp,"          %s\n", loc_legend[18]);
    fprintf(fp,"   	     i)    %s\n", loc_legend[19]);
    fprintf(fp,"  	     ii)   %s\n", loc_legend[20]);
    fprintf(fp,"	     iii)  %s %s\n", loc_legend[21], loc_legend[22]);
    fprintf(fp,"	     iv)   %s\n\n", loc_legend[23]);
    fprintf(fp,"     4.	  %s %s %s\n", loc_legend[24], loc_legend[25], loc_legend[26]);
    fprintf(fp,"          %s %s %s ", loc_legend[27], loc_legend[28], d_hosp_name.arr); 
    fprintf(fp,"%s\n", loc_legend[30]);
    fprintf(fp,"          %s %s %s ",loc_legend[31], loc_legend[32],loc_legend[33]);
    fprintf(fp,"%s \n", loc_legend[34]);					
    fprintf(fp,"          %s %s \n\n", loc_legend[35], loc_legend[36]);  
    fprintf(fp,"     %s\n\n", loc_legend[37]);
    fprintf(fp,"     %s\n\n", loc_legend[38]);
    fprintf(fp,"     %s\n", loc_legend[39]);
	fprintf(fp,"     %s\n", loc_legend[40]);
	fprintf(fp,"     %s\n", loc_legend[41]);
	fprintf(fp,"     %s\n", loc_legend[42]);    
	fprintf(fp,"     %s\n", loc_legend[43]);
	fprintf(fp,"     %s\n\n\n", d_hosp_name.arr);
	fprintf(fp,"     %s %s\n", loc_legend[45], loc_legend[46]);
/*	l_line_no+61;
	check_page_break();*/
	fprintf(fp,"\f\n");
}




print_deposit_dtls()
{
 int dep_cnt=0,sp_cnt=0;

	while(fetch_multiple_dep_cur())
	{
	dep_cnt=dep_cnt+1;
	sp_cnt=sp_cnt+strlen(d_bill_doc_dtls.arr);
	if(dep_cnt==1)
	     {
	      fprintf(fp,"%s", d_bill_doc_dtls.arr);
		  sp_cnt=0;	
	     }
	 else if(dep_cnt==2 || sp_cnt>=70)
	  {
	    sp_cnt=0;
       fprintf(fp,",\n     %s", d_bill_doc_dtls.arr);
	    sp_cnt=sp_cnt+strlen(d_bill_doc_dtls.arr);
	  }
	else 
	   {
	  fprintf(fp,",%s", d_bill_doc_dtls.arr);
	    //sp_cnt=sp_cnt+strlen(d_bill_doc_dtls.arr);
	    }
    }
		fprintf(fp," \n\n");
        dep_cnt=0;sp_cnt=0;
}

print_report()
{
  cur_date.arr[0] = '\0';
  cur_date.len    = 0;
  
    EXEC SQL
	         select to_char(sysdate,'dd/mm/yyyy') into :cur_date from dual;

  // cur_date.arr[cur_date.len] = '\0';*/

 //print_page_title();
	while(fetch_main_cur())
	{
		fetch_pat_address();
		get_multiple_dep_cur();
		print_letter_detail();
	}

}

fetch_hosp_name()
{
    hosp_name.arr[0] = '\0';
    date_time.arr[0] = '\0';
    user_id.arr[0]   = '\0';
    nd_currency.arr[0] = '\0';
    hosp_name.len    = 0;
    date_time.len    = 0;
    user_id.len      = 0;
    nd_currency.len = 0;

    EXEC SQL SELECT ACC_ENTITY_NAME, 
				  TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
				  USER,
				  base_currency
         INTO	 :hosp_name, :date_time, :user_id,:nd_currency
         FROM	 SY_ACC_ENTITY
		 where   acc_entity_id= :nd_facility_id;          

       if (OERROR) err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

hosp_name.arr[hosp_name.len]           = '\0';
date_time.arr[date_time.len]           = '\0';
user_id.arr[user_id.len]               = '\0';
nd_currency.arr[nd_currency.len] = '\0';
}
  
print_formated(loc_amount)
double loc_amount;
{
    char s_amt[30], str_amt[30];	
    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
	    //strcat(s_amt,"-");
        sprintf(str_amt,"%10s",s_amt);
		l_ltrim(s_amt);
        fprintf(fp,"%10sCr",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%10s",s_amt);
		l_ltrim(s_amt);
        fprintf(fp,"%10s",str_amt);
    }
}

print_formated_tr(loc_amount)
double loc_amount;
{
    char s_amt[30], str_amt[30];	
    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);        
        format_amt(s_amt);
        sprintf(str_amt,"%s",s_amt);
	l_ltrim(s_amt);
        fprintf(fp,"%sCR",str_amt);
    }
    else 
	{
        put_val(s_amt,loc_amount);         
        format_amt(s_amt);
        sprintf(str_amt,"%s",s_amt);
		l_ltrim(s_amt);
        fprintf(fp,"%s",str_amt);
    }
}

check_page_break()
{
	if (l_line_no >= 60)	
	{
		//print_page_title();
		 fprintf(fp,"\f");
	}
}


print_spaces(l_length)
double l_length;
{
	for(i=0;i<l_length;i++)
	{
		fprintf(fp," ");
	}
}


fetch_pat_address()
{
    d_patient_name.arr[0]        = '\0';
    d_ln1_res_add.arr[0]		 = '\0';
	d_ln2_res_add.arr[0]         = '\0';
    d_ln3_res_add.arr[0]		 = '\0';
    d_ln4_res_add.arr[0]		 = '\0';
    d_res_postal_code.arr[0]     = '\0';
    d_res_country_code.arr[0]    = '\0';

	d_patient_name.len			 = 0;
    d_ln1_res_add.len			 = 0;
	d_ln2_res_add.len            = 0;
    d_ln3_res_add.len			 = 0;
    d_ln4_res_add.len			 = 0;
    d_res_postal_code.len        = 0;
    d_res_country_code.len       = 0;


 EXEC SQL
      SELECT short_name 
	  INTO   :d_patient_name
	  FROM   MP_Patient_Mast
	  WHERE  patient_id = :d_patient_id;


EXEC SQL  
	 SELECT	ln1_res_add, ln2_res_add, ln3_res_add, ln4_res_add, res_postal_code, res_country_code
	 INTO   d_ln1_res_add,
		   :d_ln2_res_add,
		   :d_ln3_res_add,
		   :d_ln4_res_add,
           :d_res_postal_code,
		   :d_res_country_code
	 FROM	mp_pat_other_dtls
	 WHERE  patient_id = :d_patient_id;
   
          
    if(OERROR)
	err_mesg("FETCH failed on cursor PAT_ADDRESS",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_patient_name.arr[d_patient_name.len]             = '\0';

    d_ln1_res_add.arr[d_ln1_res_add.len]               = '\0';
    d_ln2_res_add.arr[d_ln2_res_add.len]               = '\0';
    d_ln3_res_add.arr[d_ln3_res_add.len]               = '\0';
    d_ln4_res_add.arr[d_ln4_res_add.len]			   = '\0';
    d_res_postal_code.arr[d_res_postal_code.len]	   = '\0';
    d_res_country_code.arr[d_res_country_code.len]     = '\0';

    return 1;

}


fetch_hosp_address()
{
    d_hosp_name.arr[0]        = '\0';
    d_address1.arr[0]		 = '\0';
	d_address2.arr[0]         = '\0';
    d_address3.arr[0]		 = '\0';
	d_telnum.arr[0]			 = '\0';
 
	d_hosp_name.len			 = 0;
    d_address1.len			 = 0;
	d_address2.len            = 0;
    d_address3.len			 = 0;
	d_telnum.len			=0;
 
	EXEC SQL  
	select  acc_entity_name, ln1_add, ln2_add, ln3_add, tel_num
	into    :d_hosp_name,
	        :d_address1,
			:d_address2,
			:d_address3,
			:d_telnum
	from	SY_ACC_ENTITY
	where   acc_entity_id= :nd_facility_id;          

    if(OERROR)
	err_mesg("FETCH failed on cursor HOSP_ADDRESS",0,"");

    if(NO_DATA_FOUND)
	return 0;

    d_hosp_name.arr[d_hosp_name.len]             = '\0';

    d_address1.arr[d_address1.len]               = '\0';
    d_address2.arr[d_address2.len]               = '\0';
    d_address3.arr[d_address3.len]               = '\0';
	d_telnum.arr[d_telnum.len]					 = '\0';
    return 1;

}  


fetch_legend_value()
{
    for(i=1;i<50;i++)
	{	l_pk_value.arr[0] = '\0';

		EXEC SQL SELECT LTRIM(RTRIM('BLR00025.LEGEND_'||LTRIM(RTRIM(TO_CHAR(:i,'009')))))
		         INTO :l_pk_value
				 FROM dual;

		l_pk_value.arr[l_pk_value.len]	= '\0';
		l_translated_value.arr[0]		= '\0';

		EXEC SQL EXECUTE
		BEGIN			
			blcommon.get_local_lang_desc(	
							:nd_facility_id,
							'SM',
							'SM_LANG_LEGEND',  
							'DFLT_LEGEND_VALUE',
							:l_pk_value,
							:l_translated_value,
							:nd_lang_id);
		END;
		END-EXEC;

		l_translated_value.arr[l_translated_value.len] = '\0';
		strcpy(loc_legend[i],l_translated_value.arr);
	}
}

