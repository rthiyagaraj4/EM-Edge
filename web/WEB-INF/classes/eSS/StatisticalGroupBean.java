/*******************************************************************************
 * Copyright 1999-2015, Computer Sciences Corporation. All rights reserved.
 *  
 * Warning: This computer program is protected by copyright law and international treaties.
 * Unauthorized reproduction or distribution of this program, or any portion of it, 
 * may result in severe civil and criminal penalties, and will be prosecuted to 
 * the maximum extent possible under the law.
 ******************************************************************************/
/* Generated by java source file generator - Medicom Solutions (P) Ltd */
/**
* Java Bean for StatisticalGroup
*/
package eSS ;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.HashMap;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.* ;

import eSS.Common.* ;

public class StatisticalGroupBean extends MasterCodeBean implements Serializable { 

	private String stat_group_code;
	private String count_components_yn = "N";
	
	public void setStat_group_code(String stat_group_code) {
		 this.stat_group_code = stat_group_code.toUpperCase();
	}

	public String getStat_group_code( ) {
		 return stat_group_code;
	}

	public void setCount_components_yn(String count_components_yn) {
		 this.count_components_yn = checkForNull(count_components_yn,"N");
	}

	public String getCount_components_yn( ) {
		 return count_components_yn;
	}

	/* Over-ridden Adapter methods start here */

	public HashMap modify() {
		HashMap		hmTableData	=	new HashMap()	;
		HashMap		hmSQLMap	=	new HashMap()	;
		ArrayList	alModifyData=	new ArrayList()	;

		alModifyData.add(getLong_desc());        
		alModifyData.add(getShort_desc());       
		alModifyData.add(getCount_components_yn());        
		alModifyData.add(getEff_status());       
		alModifyData.add(getLoginById());      
		alModifyData.add(getLoginAtWsNo());    
		alModifyData.add(getLoginFacilityId());
		alModifyData.add(getStat_group_code());        
						 
		hmTableData.put	( "properties",getProperties());
		hmTableData.put	( "ModifyData",alModifyData);
		hmSQLMap.put	( "ModifySQL", eSS.Common.SsRepository.getSsKeyValue("SQL_SS_STAT_GROUP_UPDATE"));
		return singleTableHandlerMethodCall(hmTableData, hmSQLMap, FUNCTION_UPDATE );
	}

	public HashMap insert() {
		HashMap		hmTableData	=	new HashMap()	;
		HashMap		hmSQLMap	=	new HashMap()	;
		ArrayList	alInsertData=	new ArrayList()	;
		ArrayList	alWhereData=	new ArrayList()	;

		alInsertData.add(getStat_group_code());          
		alInsertData.add(getLong_desc());          
		alInsertData.add(getShort_desc());         
		alInsertData.add(getCount_components_yn());          
		alInsertData.add(getEff_status());         
		alInsertData.add(getLoginById());        
		alInsertData.add(getLoginAtWsNo());     
		alInsertData.add(getLoginFacilityId());  
		alInsertData.add(getLoginById());        
		alInsertData.add(getLoginAtWsNo());      
		alInsertData.add(getLoginFacilityId());	
		System.err.println(alInsertData);
		alWhereData.add(getStat_group_code());
		
		hmTableData.put	( "properties",getProperties());
		hmTableData.put	( "InsertData",alInsertData);
		hmTableData.put	( "WhereData",alWhereData);

		hmSQLMap.put	( "InsertSQL", eSS.Common.SsRepository.getSsKeyValue("SQL_SS_STAT_GROUP_INSERT"));
		hmSQLMap.put	( "SelectSQL", eSS.Common.SsRepository.getSsKeyValue("SQL_SS_STAT_GROUP_COUNT"));

		return singleTableHandlerMethodCall(hmTableData, hmSQLMap, FUNCTION_INSERT );
	}

	public void clear() {
		super.clear();
		stat_group_code="";
		count_components_yn="";
	}

	public void setAll(Hashtable recordSet ) {
		super.setAll(recordSet);
		setStat_group_code((String) recordSet.get("stat_group_code"));
		setCount_components_yn((String) recordSet.get("count_components_yn"));
	}


	public void loadData() throws Exception {
		String stParameters[]	=	{getStat_group_code()};
		HashMap hmRecord		= 	fetchRecord(eSS.Common.SsRepository.getSsKeyValue("SQL_SS_STAT_GROUP_SELECT_SINGLE"),stParameters);
		setStat_group_code(	(String)hmRecord.get("STAT_GROUP_CODE"));
		setLong_desc(	(String)hmRecord.get("LONG_DESC"));
		setShort_desc(	(String)hmRecord.get("SHORT_DESC"));
		setEff_status(	(String)hmRecord.get("EFF_STATUS"));
		setCount_components_yn(	(String)hmRecord.get("COUNT_COMPONENTS_YN"));
	}

	public String paramsInBean() {
		return "|stat_group_code:"+stat_group_code+ "||Long Desc:" +  long_desc+ "||Short Desc:" + short_desc + "||Eff_status:" + eff_status+ "||count_components_yn:" + count_components_yn+"|";
	}
}
