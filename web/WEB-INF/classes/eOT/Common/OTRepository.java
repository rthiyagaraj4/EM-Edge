/*******************************************************************************
 * Copyright 1999-2015, Computer Sciences Corporation. All rights reserved.
 *  
 * Warning: This computer program is protected by copyright law and international treaties.
 * Unauthorized reproduction or distribution of this program, or any portion of it, 
 * may result in severe civil and criminal penalties, and will be prosecuted to 
 * the maximum extent possible under the law.
 ******************************************************************************/
package eOT.Common;
import java.util.HashMap;
public class OTRepository {
private  static int  i;
private static HashMap dataMap;
	/*
    private OTRepository() throws Exception {
		i = 0;
		dataMap = new HashMap();
		load();
	}
	*/
	// modified to 

	static {   
		i = 0;
		dataMap = new HashMap();
		load();
	}

/*	public static synchronized String getOTKeyValue(String s) throws Exception {
		if(instance == null)
			instance = new OTRepository();
		return instance.getValue(s);
	}
*/

  // changed to
	public static String getOTKeyValue(String s) throws Exception {
		return getValue(s);
	}

//	private String getValue(String s) throws Exception {
	// changed to 
	private static String getValue(String s) throws Exception {
		String s1 = "";
		try {
			s1 = (String)dataMap.get(s);
			if(s1 == null)
				throw new Exception(s + " : Key not found");
		}catch(Exception exception) {
			throw new Exception(s + " : Key not found");
		}
		return s1;
	}

	protected void finalize() throws Throwable {
		if(dataMap != null)
			dataMap = null;
	}

//	private void load() throws Exception {
	// changed to 

	private static void load() {

	// Start of CommonBean Queries.
		dataMap.put("SQL_OT_COMMON_SELECT1","SELECT STATUS_CODE, STATUS_DESC, COLOR_IND FROM OT_STATUS_LANG_VW WHERE LANGUAGE_ID = ? ORDER BY STATUS_CODE");
		dataMap.put("SQL_OT_COMMON_SELECT2","SELECT PATIENT_ID,EPISODE_ID,ENCOUNTER_ID,WARD_CODE,OPER_ROOM_CODE,BOOKING_NUM,SURGEON_CODE,ANESTHETIST_CODE,DOCUMENTATION_LEVEL,PATIENT_CLASS,EPISODE_TYPE , REF_SOURCE_TYPE, REF_SOURCE_CODE,POST_OPER_DIAG,ANESTHESIA_CODE, SPECIALITY_CODE,PRE_OPER_DIAG,TO_CHAR(RECOVERY_START_TIME,'DD/MM/YYYY HH24:MI'),TO_CHAR(RECOVERY_END_TIME,'DD/MM/YYYY HH24:MI'),TRFR_TO, TRFR_WARD_CODE, EXTUBATED_OR_INTUBATED,TO_CHAR(CHECK_IN_TIME,'DD/MM/YYYY HH24:MI') OPER_DAT,VISIT_ID,RECVERY_ROOM_CODE FROM OT_POST_OPER_HDR WHERE OPERATING_FACILITY_ID=? AND OPER_NUM = ?");
		dataMap.put("SQL_OT_COMMON_SELECT3","SELECT PATIENT_NAME, to_char(DATE_OF_BIRTH,'dd/mm/yyyy') DATE_OF_BIRTH, SEX,RACE_CODE FROM MP_PATIENT where PATIENT_ID=?");
		dataMap.put("SQL_OT_COMMON_SELECT4","SELECT SHORT_NAME FROM SY_PHYSICIAN_MAST WHERE FACILITY_ID = ? AND PHYSICIAN_ID = ?");
//		dataMap.put("SQL_OT_COMMON_SELECT5","SELECT SHORT_NAME FROM SY_PHYSICIAN_MAST WHERE FACILITY_ID = ? AND PHYSICIAN_ID = ?");

//Changed by Rajesh on 22nd April 2008 against SCR-1546
		//dataMap.put("SQL_OT_COMMON_SELECT5","SELECT PRACTITIONER_NAME FROM AM_PRACTITIONER_LANG WHERE LANGUAGE_ID = ? AND PRACTITIONER_ID= ?");
//Changed by Rajesh on 1st july 2010 against SCR-1546
		dataMap.put("SQL_OT_COMMON_SELECT5","SELECT PRACTITIONER_NAME FROM AM_PRACTITIONER_LANG_VW WHERE LANGUAGE_ID = ? AND PRACTITIONER_ID= ?");
		
		//Below part commented by Suma for the addition of new column OPER_LINE_STATUS
		//dataMap.put("SQL_OT_COMMON_SELECT6","SELECT A.OPER_CODE,B.SHORT_DESC,NVL(DECODE(A.RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Bilateral','N','Not Applicable'),'Not Applicable') RIGHT_LEFT_FLAG,A.OPER_REMARKS,A.OPER_LINE_NUM OPR_LN_NUM,A.ORDER_LINE_NUM ORD_LN_NUM,A.ORDER_ID ORD_ID FROM OT_POST_OPER_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND A.OPER_NUM=? AND A.OPER_CODE=B.OPER_CODE");

		dataMap.put("SQL_OT_COMMON_SELECT6","SELECT A.OPER_CODE,B.LONG_DESC OPER_DESC,NVL(DECODE(A.RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Bilateral','N','Not Applicable'),'Not Applicable') RIGHT_LEFT_FLAG,A.OPER_REMARKS,A.OPER_LINE_NUM OPR_LN_NUM,A.ORDER_LINE_NUM ORD_LN_NUM,A.ORDER_ID ORD_ID,A.OPER_LINE_STATUS  OPER_LINE_STATUS,A.CANCEL_REMARKS CANCEL_REMARKS FROM OT_POST_OPER_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND A.OPER_NUM=? AND A.OPER_CODE=B.OPER_CODE");//MMS-QH-CRF-0199
		dataMap.put("SQL_OT_COMMON_SELECT7","SELECT TO_CHAR(BOOKING_START_TIME,'HH24:MI')  FROM OT_BOOKING_HDR WHERE OPERATING_FACILITY_ID=? AND BOOKING_NUM=?");
		dataMap.put("SQL_OT_COMMON_SELECT8","SELECT ASSIGN_CARE_LOCN_TYPE, ASSIGN_CARE_LOCN_CODE,  SPECIALTY_CODE FROM PR_ENCOUNTER WHERE FACILITY_ID=? AND PATIENT_ID=? AND  ENCOUNTER_ID=?");
		dataMap.put("SQL_OT_COMMON_SELECT9","SELECT SHORT_DESC FROM  OT_OPER_ROOM_LANG_VW WHERE LANGUAGE_ID = ? AND OPER_ROOM_CODE=?");
		dataMap.put("SQL_OT_COMMON_SELECT10","SELECT SHORT_DESC FROM AM_SPECIALITY_LANG_VW WHERE SPECIALITY_CODE = ? AND LANGUAGE_ID = ?");
		dataMap.put("SQL_OT_COMMON_SELECT11","SELECT LONG_DESC SHORT_DESC FROM  IP_NURSING_UNIT_LANG_VW WHERE FACILITY_ID=?	AND	 NURSING_UNIT_CODE = ? AND LANGUAGE_ID =?");
		dataMap.put("SQL_OT_COMMON_SELECT12","SELECT A.LINE_NUM, B.SHORT_DESC,A.OPER_CODE, A.APPL_RIGHT_LEFT_FLAG, A.OPER_REMARKS FROM OT_BOOKING_DTLS A,OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND  A.BOOKING_NUM = ?	AND A.OPER_CODE=B.OPER_CODE");
		dataMap.put("SQL_OT_COMMON_SELECT13","SELECT DISCR_MSR_ID FROM OT_SPECIALITIES WHERE SPECIALITY_CODE=?");
		dataMap.put("SQL_OT_COMMON_SELECT14","SELECT S.NOTE_TYPE, NOTE_TYPE_DESC FROM OT_NOTE_TYPE_FOR_SPECIALTIES S, CA_NOTE_TYPE_LANG_VW C WHERE SPECIALTY_CODE=? AND LOCN_TYPE=? AND S.NOTE_TYPE=C.NOTE_TYPE AND C.LANGUAGE_ID=?");
		dataMap.put("SQL_OT_COMMON_SELECT15","SELECT ROUND(MONTHS_BETWEEN(SYSDATE,TO_DATE(?,'DD/MM/YYYY'))/12) AGE FROM DUAL");
		dataMap.put("SQL_OT_PATIENT_SEARCH_SELECT","SELECT PATIENT_ID, PATIENT_NAME, PATIENT_CLASS, ENCOUNTER_ID, EPISODE_ID, OP_EPISODE_VISIT_NUM, TO_CHAR(DATE_OF_BIRTH,'DD/MM/YYYY') DATE_OF_BIRTH, SEX,RACE_CODE FROM OT_PATIENT_LOOKUP_VW WHERE FACILITY_ID=? ");
		dataMap.put("SQL_OT_COMMON_SELECT16","SELECT BL_EPISODE_TYPE FROM MP_EPISODE_TYPE_VW WHERE PATIENT_CLASS=? AND EPISODE_TYPE =?");
		
		
	// End of CommonBean Queries

		
	// Other Common Queries used in the module
		dataMap.put("SQL_OT_SYSDATE_SELECT1","SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') CURRENT_DATE, TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI') DATE_TIME, TO_CHAR(SYSDATE,'MM/YYYY') MON_YEAR, TO_CHAR(SYSDATE,'HH24:MI') HOURS_MTS FROM DUAL");
		dataMap.put("SQL_OT_COMMON_QRY_SELECT1","SELECT EPISODE_TYPE FROM MP_EPISODE_TYPE_VW WHERE PATIENT_CLASS =?");
		dataMap.put("SQL_OT_COMMON_QRY_SELECT2","SELECT PATIENT_ID FROM OT_BOOKING_HDR WHERE OPERATING_FACILITY_ID =? AND BOOKING_NUM=?");
		dataMap.put("SQL_OT_COMMON_QRY_SELECT3","SELECT TO_CHAR(TRUNC(SYSDATE) + (?/(60*24)),'dd/mm/yyyy hh24:mi') FROM DUAL");
		
	// End of common queries
	
	// Start of Queries for OT Slate Function. Created by bshankar.
		// Speciality
		dataMap.put("SQL_OT_SLATE_SELECT2","SELECT A.SPECIALITY_CODE OPER_GROUP_CODE, B.SHORT_DESC LONG_DESC FROM OT_SPECIALITIES A,  AM_SPECIALITY_LANG_VW B WHERE B.LANGUAGE_ID=? AND A.SPECIALITY_CODE =  B.SPECIALITY_CODE ORDER BY 2");
		// Theatre Type
		dataMap.put("SQL_OT_SLATE_SELECT3","SELECT LOCN_TYPE, SHORT_DESC FROM AM_CARE_LOCN_TYPE_LANG_VW WHERE CARE_LOCN_TYPE_IND = 'O' AND LANGUAGE_ID = ? ORDER BY 2");
		// Theatre
		dataMap.put("SQL_OT_SLATE_SELECT4","SELECT OPER_ROOM_CODE, SHORT_DESC FROM OT_OPER_ROOM_LANG_VW WHERE LANGUAGE_ID = ? AND OPERATING_FACILITY_ID=? AND THEATRE_TYPE=NVL(?,THEATRE_TYPE) AND NVL(STATUS,'E') = 'E' ORDER BY 2");
		// Surgeon
		dataMap.put("SQL_OT_SLATE_SELECT5","Select PHYSICIAN_ID,SHORT_NAME from SY_PHYSICIAN_MAST where FACILITY_ID=? AND PRACT_TYPE IN ('MD','SG') AND NVL(STATUS,'E')='E'");
		// User Role
		//dataMap.put("SQL_OT_SLATE_SELECT6","SELECT ROLE_ID, ROLE_DESC FROM OT_ROLES WHERE NVL(STATUS,'E') = 'E' ORDER BY 2");
		dataMap.put("SQL_OT_SLATE_SELECT6","SELECT ROLE_ID, ROLE_DESC FROM OT_ROLES_LANG_VW WHERE LANGUAGE_ID = ? AND NVL(STATUS,'E') = 'E' AND NVL(APPL_TO_OT_SLATE,'N') = 'Y' ORDER BY 2");

		// THE FOLLOWING QUERIES ARE USED FOR GETTING THE DATA FROM SEARCH CRITERIA.
		//Scheduled Cases
//		dataMap.put("SQL_OT_SLATE_SELECT7","SELECT ORDER_ID, TO_CHAR(APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME,TO_CHAR(APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, APPT_REF_NUM, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN FROM OT_SCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND TO_CHAR(APPT_DATE,'DD/MM/YYYY') = ? AND OPER_ROOM_CODE BETWEEN ? AND ? AND NVL(SPECIALITY_CODE,'X')=NVL(?,NVL(SPECIALITY_CODE,'X')) AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X'))");
		//modified 08/07/05
		//dataMap.put("SQL_OT_SLATE_SELECT7","SELECT ORDER_ID, TO_CHAR(APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME,TO_CHAR(APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, APPT_REF_NUM, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN FROM OT_SCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND TO_CHAR(APPT_DATE,'DD/MM/YYYY') = ? AND OPER_ROOM_CODE BETWEEN ? AND ? AND INSTR(NVL(ALL_SPECIALITY_CODES,'#X#'),NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(ALL_SPECIALITY_CODES,'X')))>0 AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X')) ORDER BY 2");
		//dataMap.put("SQL_OT_SLATE_SELECT7","SELECT ORDER_ID, TO_CHAR(APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME,TO_CHAR(APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, APPT_REF_NUM, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN, OPER_ROOM_CODE FROM OT_SCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND TO_CHAR(APPT_DATE,'DD/MM/YYYY') = ? AND NVL(OPER_ROOM_CODE,'X')=NVL(?,NVL(OPER_ROOM_CODE,'X')) AND INSTR(NVL(ALL_SPECIALITY_CODES,'#X#'),NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(ALL_SPECIALITY_CODES,'X')))>0 AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X')) AND NVL(OPER_STATUS,'X')=NVL(?,NVL(OPER_STATUS,'X')) AND booking_stage in (select stage_code from ot_booking_fin_stages where serial_no in (select max(serial_no) from ot_booking_fin_stages)) ORDER BY 2");
		//ORDER BY TO_CHAR(APPT_FROM_TIME,'SSSSS')
		//UnScheduled Cases
//		dataMap.put("SQL_OT_SLATE_SELECT8","SELECT ORDER_ID, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN FROM OT_UNSCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE BETWEEN ? AND ? AND OPER_DATE=TO_DATE(?,'DD/MM/YYYY') AND NVL(SPECIALITY_CODE,'X')=NVL(?,NVL(SPECIALITY_CODE,'X')) AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X'))");
		//dataMap.put("SQL_OT_SLATE_SELECT8","SELECT ORDER_ID, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN,OPER_ROOM_CODE FROM OT_UNSCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND NVL(OPER_ROOM_CODE,'X')=NVL(?,NVL(OPER_ROOM_CODE,'X')) AND  OPER_DATE=TO_DATE(?,'DD/MM/YYYY') AND INSTR(NVL(ALL_SPECIALITY_CODES,'#X#'),NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(ALL_SPECIALITY_CODES,'X')))>0 AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X')) AND NVL(OPER_STATUS,'X')=NVL(?,NVL(OPER_STATUS,'X'))");

		//dataMap.put("SQL_OT_SLATE_SELECT7"," SELECT a.ORDER_ID ORDER_ID, TO_CHAR(a.APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME,TO_CHAR(a.APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, a.PATIENT_ID PATIENT_ID, (SELECT DECODE (?, 'en', NVL (PATIENT_NAME, PATIENT_NAME_LOC_LANG), NVL (PATIENT_NAME_LOC_LANG, PATIENT_NAME) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID)  PATIENT_NAME, a.OPER_CODE OPER_CODE, a.OPER_DESC OPER_DESC, a.SPECIALITY_CODE SPECIALITY_CODE, a.SPECIALITY_DESC SPECIALITY_DESC, a.SURGEON_CODE SURGEON_CODE, a.SURGEON_NAME SURGEON_NAME, a.OPER_STATUS OPER_STATUS, a.OPER_NUM OPER_NUM, a.STATUS_DESC STATUS_DESC, a.APPT_REF_NUM APPT_REF_NUM, a.COLOR_IND COLOR_IND, a.TEXT_COLOR TEXT_COLOR, NVL(a.NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(a.SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN, a.OPER_ROOM_CODE OPER_ROOM_CODE,c.SHORT_DESC SHORT_DESC,b.RESCHEDULED_COUNT RESCHEDULED_COUNT,NVL(a.ANAESTHESIA_DOC_COMP_YN,'N') ANAESTHESIA_DOC_COMP_YN FROM OT_SCHD_OPERS_VW  a,OT_BOOKING_HDR b, OT_NATURE_OF_SURGERY_LANG_VW c WHERE C.LANGUAGE_ID = ? AND a.OPERATING_FACILITY_ID=? AND a.OPERATING_FACILITY_ID= b.OPERATING_FACILITY_ID AND a.APPT_REF_NUM = b.BOOKING_NUM AND  b.NATURE_CODE = c.NATURE_CODE AND a.APPT_DATE = to_date(?,'dd/mm/yyyy') AND NVL(a.OPER_ROOM_CODE,'X')=NVL(?,NVL(a.OPER_ROOM_CODE,'X')) AND INSTR(NVL(a.ALL_SPECIALITY_CODES,'#X#'),NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(a.ALL_SPECIALITY_CODES,'X')))>0 AND NVL(a.SURGEON_CODE,'X')=NVL(?,NVL(a.SURGEON_CODE,'X')) AND NVL(a.OPER_STATUS,'X')=NVL(?,NVL(a.OPER_STATUS,'X')) AND a.booking_stage in (select stage_code from ot_booking_fin_stages where serial_no in (select max(serial_no) from ot_booking_fin_stages)) AND A.LANGUAGE_ID = ? ORDER BY 2");
		//Qury altered by rajesh fr crf 357 on 14/04/2009
		dataMap.put("SQL_OT_SLATE_SELECT7"," SELECT TO_CHAR(A.APPT_DATE,'DD/MM/YYYY') APPT_DATE, a.ORDER_ID ORDER_ID, TO_CHAR(a.APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME,TO_CHAR(a.APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, a.PATIENT_ID PATIENT_ID, (SELECT DECODE (?, 'en', NVL (PATIENT_NAME, PATIENT_NAME_LOC_LANG), NVL (PATIENT_NAME_LOC_LANG, PATIENT_NAME) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID)  PATIENT_NAME, a.OPER_CODE OPER_CODE, a.OPER_DESC OPER_DESC, a.SPECIALITY_CODE SPECIALITY_CODE, a.SPECIALITY_DESC SPECIALITY_DESC, a.SURGEON_CODE SURGEON_CODE, a.SURGEON_NAME SURGEON_NAME, a.OPER_STATUS OPER_STATUS, a.OPER_NUM OPER_NUM, a.STATUS_DESC STATUS_DESC, a.APPT_REF_NUM APPT_REF_NUM, a.COLOR_IND COLOR_IND, a.TEXT_COLOR TEXT_COLOR, NVL(a.NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(a.SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN, a.OPER_ROOM_CODE OPER_ROOM_CODE,c.SHORT_DESC SHORT_DESC,b.RESCHEDULED_COUNT RESCHEDULED_COUNT,NVL(a.ANAESTHESIA_DOC_COMP_YN,'N') ANAESTHESIA_DOC_COMP_YN FROM OT_SCHD_OPERS_VW  a,OT_BOOKING_HDR b, OT_NATURE_OF_SURGERY_LANG_VW c WHERE C.LANGUAGE_ID = ? AND a.OPERATING_FACILITY_ID=? AND a.OPERATING_FACILITY_ID= b.OPERATING_FACILITY_ID AND a.APPT_REF_NUM = b.BOOKING_NUM AND  b.NATURE_CODE = c.NATURE_CODE AND a.APPT_DATE BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') AND upper(C.NATURE_TYPE ) = DECODE(?,'EL','EL','EM','EM','A',C.NATURE_TYPE) AND NVL(a.OPER_ROOM_CODE,'X')=NVL(?,NVL(a.OPER_ROOM_CODE,'X')) AND INSTR(NVL(a.ALL_SPECIALITY_CODES,'#X#'),NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(a.ALL_SPECIALITY_CODES,'X')))>0 AND NVL(a.SURGEON_CODE,'X')=NVL(?,NVL(a.SURGEON_CODE,'X')) AND ((? = 0) OR  (? = 1 and A.OPER_STATUS IN (?))) AND a.booking_stage in (select stage_code from ot_booking_fin_stages where serial_no in (select max(serial_no) from ot_booking_fin_stages)) AND A.LANGUAGE_ID = ? ORDER BY A.APPT_DATE");
		//ORDER BY TO_CHAR(APPT_FROM_TIME,'SSSSS')
		//UnScheduled Cases
//		dataMap.put("SQL_OT_SLATE_SELECT8","SELECT ORDER_ID, PATIENT_ID, PATIENT_NAME, OPER_CODE, OPER_DESC, SPECIALITY_CODE, SPECIALITY_DESC, SURGEON_CODE, SURGEON_NAME, OPER_STATUS, OPER_NUM, STATUS_DESC, COLOR_IND, TEXT_COLOR, NVL(NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN, NVL(SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN FROM OT_UNSCHD_OPERS_VW WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE BETWEEN ? AND ? AND OPER_DATE=TO_DATE(?,'DD/MM/YYYY') AND NVL(SPECIALITY_CODE,'X')=NVL(?,NVL(SPECIALITY_CODE,'X')) AND NVL(SURGEON_CODE,'X')=NVL(?,NVL(SURGEON_CODE,'X'))");

		// by bshankar against 2619 
		//dataMap.put("SQL_OT_SLATE_SELECT8","SELECT a.ORDER_ID ORDER_ID, a.PATIENT_ID  PATIENT_ID,(SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = a.PATIENT_ID)  PATIENT_NAME, a.OPER_CODE OPER_CODE,a. OPER_DESC OPER_DESC ,a. SPECIALITY_CODE  SPECIALITY_CODE, a. SPECIALITY_DESC  SPECIALITY_DESC,a. SURGEON_CODE  SURGEON_CODE,a. SURGEON_NAME  SURGEON_NAME,a. OPER_STATUS  OPER_STATUS, a.OPER_NUM OPER_NUM, a.STATUS_DESC STATUS_DESC, a.COLOR_IND COLOR_IND,  a.TEXT_COLOR TEXT_COLOR, NVL(a.NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN,  NVL(a.SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN,a.OPER_ROOM_CODE OPER_ROOM_CODE, c.SHORT_DESC NAT_SHORT_DESC,NVL(a.ANAESTHESIA_DOC_COMP_YN,'N') ANAESTHESIA_DOC_COMP_YN  FROM OT_UNSCHD_OPERS_VW a, ot_post_oper_hdr b, OT_NATURE_OF_SURGERY_LANG_VW c WHERE C.LANGUAGE_ID = ? AND a.OPERATING_FACILITY_ID=? AND a.OPER_NUM   = b.OPER_NUM AND  b.NATURE_CODE  = c.NATURE_CODE AND NVL(a.OPER_ROOM_CODE,'X')=NVL(?,NVL(a.OPER_ROOM_CODE,'X')) AND   a.OPER_DATE=TO_DATE(?,'DD/MM/YYYY') AND INSTR(NVL(a.ALL_SPECIALITY_CODES,'#X#'), NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(a.ALL_SPECIALITY_CODES,'X')))>0 AND NVL(a.SURGEON_CODE,'X')=NVL(?,NVL(a.SURGEON_CODE,'X')) AND  NVL(a.OPER_STATUS,'X')=NVL(?,NVL(a.OPER_STATUS,'X'))");

		// changed above qry for SCR-2619
		//dataMap.put("SQL_OT_SLATE_SELECT8","SELECT a.ORDER_ID ORDER_ID, a.PATIENT_ID  PATIENT_ID,(SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = a.PATIENT_ID)  PATIENT_NAME, a.OPER_CODE OPER_CODE,a. OPER_DESC OPER_DESC ,a. SPECIALITY_CODE  SPECIALITY_CODE, a. SPECIALITY_DESC  SPECIALITY_DESC,a. SURGEON_CODE  SURGEON_CODE,a. SURGEON_NAME  SURGEON_NAME,a. OPER_STATUS  OPER_STATUS, a.OPER_NUM OPER_NUM, a.STATUS_DESC STATUS_DESC, a.COLOR_IND COLOR_IND,  a.TEXT_COLOR TEXT_COLOR, NVL(a.NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN,  NVL(a.SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN,a.OPER_ROOM_CODE OPER_ROOM_CODE, c.SHORT_DESC NAT_SHORT_DESC,NVL(a.ANAESTHESIA_DOC_COMP_YN,'N') ANAESTHESIA_DOC_COMP_YN  FROM OT_UNSCHD_OPERS_VW a, ot_post_oper_hdr b, OT_NATURE_OF_SURGERY_LANG_VW c WHERE C.LANGUAGE_ID = ? AND a.OPERATING_FACILITY_ID=? AND a.OPERATING_FACILITY_ID=b.OPERATING_FACILITY_ID AND a.OPER_NUM   = b.OPER_NUM AND  b.NATURE_CODE  = c.NATURE_CODE AND NVL(a.OPER_ROOM_CODE,'X')=NVL(?,NVL(a.OPER_ROOM_CODE,'X')) AND   a.OPER_DATE=TO_DATE(?,'DD/MM/YYYY') AND INSTR(NVL(a.ALL_SPECIALITY_CODES,'#X#'), NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(a.ALL_SPECIALITY_CODES,'X')))>0 AND NVL(a.SURGEON_CODE,'X')=NVL(?,NVL(a.SURGEON_CODE,'X')) AND  NVL(a.OPER_STATUS,'X')=NVL(?,NVL(a.OPER_STATUS,'X')) AND A.LANGUAGE_ID=?");

		// changed above qry for CRF-0311 by rajesh
		dataMap.put("SQL_OT_SLATE_SELECT8","SELECT TO_CHAR(A.OPER_DATE,'DD/MM/YYYY') OPER_DATE, a.ORDER_ID ORDER_ID, b.ENCOUNTER_ID ENCOUNTER_ID, a.PATIENT_ID  PATIENT_ID,(SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = a.PATIENT_ID)  PATIENT_NAME, a.OPER_CODE OPER_CODE,a. OPER_DESC OPER_DESC ,a. SPECIALITY_CODE  SPECIALITY_CODE, a. SPECIALITY_DESC  SPECIALITY_DESC,a. SURGEON_CODE  SURGEON_CODE,a. SURGEON_NAME  SURGEON_NAME,a. OPER_STATUS  OPER_STATUS, a.OPER_NUM OPER_NUM, a.STATUS_DESC STATUS_DESC, a.COLOR_IND COLOR_IND,  a.TEXT_COLOR TEXT_COLOR, NVL(a.NURSING_DOC_COMP_YN,'N') NURSING_DOC_COMP_YN,  NVL(a.SURGEON_DOC_COMP_YN,'N') SURGEON_DOC_COMP_YN,a.OPER_ROOM_CODE OPER_ROOM_CODE, c.SHORT_DESC NAT_SHORT_DESC,NVL(a.ANAESTHESIA_DOC_COMP_YN,'N') ANAESTHESIA_DOC_COMP_YN  FROM OT_UNSCHD_OPERS_VW a, ot_post_oper_hdr b, OT_NATURE_OF_SURGERY_LANG_VW c WHERE C.LANGUAGE_ID = ? AND a.OPERATING_FACILITY_ID=? AND a.OPERATING_FACILITY_ID=b.OPERATING_FACILITY_ID AND a.OPER_NUM   = b.OPER_NUM AND  b.NATURE_CODE  = c.NATURE_CODE AND NVL(a.OPER_ROOM_CODE,'X')=NVL(?,NVL(a.OPER_ROOM_CODE,'X')) AND   a.OPER_DATE BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') AND upper(C.NATURE_TYPE ) = DECODE(?,'EL','EL','EM','EM','A',C.NATURE_TYPE) AND INSTR(NVL(a.ALL_SPECIALITY_CODES,'#X#'), NVL(DECODE(?,NULL,NULL,'#'||?||'#'),NVL(a.ALL_SPECIALITY_CODES,'X')))>0 AND NVL(a.SURGEON_CODE,'X')=NVL(?,NVL(a.SURGEON_CODE,'X')) AND ((? = 0) OR  (? = 1 and A.OPER_STATUS IN (?))) AND A.LANGUAGE_ID=? ORDER BY A.OPER_DATE");

		// Menu Function List
		dataMap.put("SQL_OT_SLATE_SELECT9","SELECT A.FUNCTION_ID FUNCTION_ID, FUNCTION_DESC_USER, NVL(URL_DESC,'NO_URL') URL_DESC FROM OT_FUNCTIONS_LANG_VW A, OT_FUNCT_APPL_FOR_STATUS B, OT_ROLES_FUNCTIONS C WHERE A.LANGUAGE_ID = ? AND A.FUNCTION_ID = B.FUNCTION_ID AND B.FUNCTION_ID = C.FUNCTION_ID AND B.STATUS_CODE=? AND C.ROLE_ID=? ORDER BY C.SRL_NO");

//		dataMap.put("SQL_OT_SLATE_SELECT10","SELECT DECODE(COUNT(*),'1','Y','N') VALID_USER FROM SM_APPL_USER WHERE UPPER(APPL_USER_ID)=UPPER(?) AND APP_PASSWORD.ENCRYPT(?) = APPL_USER_PASSWORD AND NVL(EFF_STATUS,'E')='E'");
		dataMap.put("SQL_OT_SLATE_SELECT10","SELECT UPPER(APP_PASSWORD.DECRYPT(APPL_USER_PASSWORD)) PWD FROM SM_APPL_USER WHERE UPPER(APPL_USER_ID)=UPPER(?) AND NVL(EFF_STATUS,'E')='E'");
		//check user/function
		dataMap.put("SQL_OT_SLATE_SELECT11","SELECT DECODE(COUNT(*),'1','Y','N') VALID_USER FROM OT_USER_FUNCTIONS WHERE UPPER(USER_ID)=UPPER(?) AND UPPER(FUNCTION_ID)=?");

		dataMap.put("SQL_OT_SLATE_SELECT12","SELECT FUNCTION_ID , FUNCTION_DESC_USER, NVL(URL_DESC,'NO_URL') URL_DESC FROM OT_FUNCTIONS_LANG_VW WHERE LANGUAGE_ID = ? AND FUNCTION_ID IN (SELECT FUNCTION_ID FROM OT_FUNCT_APPL_FOR_STATUS WHERE STATUS_CODE='10') ORDER BY FUNCTION_ID");

		dataMap.put("SQL_OT_SLATE_SELECT13","SELECT SHORT_DESC OPER_DESC FROM OT_WAITLISTING_DTL A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE AND A.WAITLIST_NUM = ?");

		//dataMap.put("SQL_OT_SLATE_SELECT14","SELECT b.SHORT_DESC OPER_DESC, c.SHORT_DESC NAT_SHORT_DESC FROM OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B,OT_NATURE_OF_SURGERY_LANG_VW c,ot_booking_hdr d WHERE B.LANGUAGE_ID = ? AND C.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE  AND a.BOOKING_NUM   = d.BOOKING_NUM AND  d.NATURE_CODE  = c.NATURE_CODE AND a.BOOKING_NUM=d.BOOKING_NUM  and a.OPERATING_FACILITY_ID=d.OPERATING_FACILITY_ID and A.BOOKING_NUM=?");
		
		//Modified bala on 04/12/2008 as per vishwa's instructions
		// Modified by Dilip on 08/04/2011 Incident No: 27032. Added facility filter.

		dataMap.put("SQL_OT_SLATE_SELECT14","SELECT b.LONG_DESC OPER_DESC FROM OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID  = ? AND A.OPER_CODE = B.OPER_CODE AND A.BOOKING_NUM=?  AND A.OPERATING_FACILITY_ID = NVL(?,A.OPERATING_FACILITY_ID)");//MMS-QH-CRF-0199

		//added 02/07/05
		dataMap.put("SQL_OT_SLATE_SELECT16","SELECT B.LONG_DESC OPER_DESC FROM OT_POST_OPER_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE AND A.OPER_NUM = ?   and  NVL(A.OPER_LINE_STATUS,'X' ) NOT IN '99' AND A.OPERATING_FACILITY_ID = NVL(?,A.OPERATING_FACILITY_ID)");	//MMS-QH-CRF-0199

		dataMap.put("SQL_OT_SLATE_SELECT15","SELECT SHORT_DESC OPER_DESC FROM OT_POST_OPER_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE AND A.OPER_NUM=? and  NVL(A.OPER_LINE_STATUS,'X' ) NOT IN '99'");		

		//queries for waitlist in Slate
		dataMap.put("SQL_OT_SLATE_WAITLIST_SELECT12","SELECT ORDER_ID,PATIENT_ID, (SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID) PATIENT_NAME,SURGERY_TYPE,SPECIALITY_CODE,SPECIALITY_DESC,SURGEON_CODE,SURGEON_NAME,TO_CHAR(PREFERRED_DATE,'DD/MM/YYYY') PREFERRED_DATE, WAITLIST_NUM, OPER_DESC, MULTIPLE_OPERS_YN FROM OT_WAITLIST_VW A  WHERE OPERATING_FACILITY_ID=? AND BOOKING_NUM IS NULL AND PREFERRED_DATE=TO_DATE(?,'DD/MM/YYYY') AND SPECIALITY_CODE=? AND SURGEON_CODE=NVL(?,SURGEON_CODE) AND NVL(QUEUE_REC_CREATED_YN,'N')='N' ORDER BY 1");

		dataMap.put("SQL_OT_SLATE_WAILIST_SELECT13","SELECT DISTINCT A.OPER_ROOM_CODE, A.SHORT_DESC FROM OT_OPER_ROOM_LANG_VW A, OT_DIARY_SCHEDULE B WHERE A.LANGUAGE_ID = ? AND B.OPERATING_FACILITY_ID=? AND A.OPERATING_FACILITY_ID=? AND A.OPER_ROOM_CODE = B.OPER_ROOM_CODE AND TRUNC(BOOKING_DATE) = TRUNC(SYSDATE) AND TEAM_DOCTOR_CODE = ? AND TEAM_DOCTOR_TYPE = 'D' AND SPECIALITY_CODE IN ('*ALL',?) ORDER BY 2");

		//queries for ReSchedule in Slate
		dataMap.put("SQL_OT_SLATE_RESCHEDULE_SELECT13","SELECT ORDER_ID,PATIENT_ID,  (SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID) PATIENT_NAME, OPER_ROOM_DESC, SURGEON_CODE, SURGEON_NAME, SPECIALITY_CODE, SPECIALITY_DESC,OPER_CODE,OPER_DESC,OPER_ROOM_CODE, APPT_REF_NUM, TO_CHAR(DATE_OF_BIRTH,'DD/MM/YYYY') DATE_OF_BIRTH, SEX FROM OT_SCHD_OPERS_VW A WHERE OPERATING_FACILITY_ID=? AND APPT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY HH24:MI') AND TO_DATE(?,'DD/MM/YYYY HH24:MI') AND OPER_ROOM_CODE=? AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND SURGEON_CODE=NVL(?,SURGEON_CODE) AND BOOKING_STATUS IN (?,?) AND OPER_STATUS='10' ORDER BY PATIENT_ID");

	// End of OT Slate Function Queries. Created by bshankar.
	// Start of Barcode queries. Added by bshankar.
		// Menu Function List
		dataMap.put("SQL_OT_BARCODE_SELECT1","SELECT A.FUNCTION_ID FUNCTION_ID, FUNCTION_DESC_USER, NVL(URL_DESC,'NO_URL') URL_DESC FROM OT_FUNCTIONS_LANG_VW A WHERE A.LANGUAGE_ID = ? AND NVL(ALLOW_BARCODE,'X') = 'Y' ORDER BY 2");

	// End of Barcode queries
	
	//Start of Verify CheckList Queries
	//Maheshwaran K added APPL_FOR_INTRA_OPER for the CHL-CRF-0043 [IN:035927] as on 26/02/2013
		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT1","SELECT B.ITEM_LEVEL, A.CHECKLIST_CODE, A.CHECKLIST_ITEM_CODE, A.CHECKLIST_ITEM_SRL_NO, B.DESCRIPTION, B.CHECKLIST_TYPE, B.LIST_ID, B.ACCEPT_REMARKS_YN ,A.APPL_FOR_INTRA_OPER FROM OT_CHECKLIST_DTL A, OT_CHECKLIST_ITEMS_LANG_VW B ");
//		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT1","SELECT  A.OPERATING_FACILITY_ID, A.CHECKLIST_STAGE, A.BOOKING_NUM, A.OPER_NUM,B.CHECKLIST_CODE, B.CHECKLIST_ITEM_CODE, B.CHECKLIST_ITEM_SRL_NO, C.DESCRIPTION, C.CHECKLIST_TYPE, C.LIST_ID, C.ACCEPT_REMARKS_YN, C.ITEM_LEVEL, A.CHECKLIST_VALUE, A.CHECKLIST_REMARKS FROM  OT_OPER_CHECKLIST_DTLS A, OT_CHECKLIST_DTL B, OT_CHECKLIST_ITEMS C ");
		// commented and mofified below for Thai conversion
		// dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT2","SELECT LIST_ID, ITEM_DESC, ITEM_VALUE, NVL(DEFAULT_VALUE_YN,'N') DEFAULT_VALUE_YN FROM OT_CHECKLIST_LISTVALS_DTL WHERE LIST_ID=?");

		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT2","SELECT LIST_ID, ITEM_DESC, ITEM_VALUE, NVL(DEFAULT_VALUE_YN,'N') DEFAULT_VALUE_YN FROM OT_CHKLIST_LISTVAL_DTL_LANG_VW WHERE LANGUAGE_ID = ? AND LIST_ID=? order by DEFAULT_VALUE_YN desc");

//		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT3","SELECT CHECKLIST_ITEM_SRL_NO, CHECKLIST_ITEM_CODE, CHECKLIST_STAGE, CHECKLIST_CODE, CHECKLIST_VALUE, CHECKLIST_REMARKS, ADDED_BY_ID FROM OT_OPER_CHECKLIST_DTLS WHERE OPERATING_FACILITY_ID=? AND NVL(BOOKING_NUM,'X') = NVL(?,NVL(BOOKING_NUM,'X')) AND NVL(OPER_NUM,'X') = NVL(?,NVL(OPER_NUM,'X')) AND NVL(ORDER_ID,'X') = NVL(?,NVL(ORDER_ID,'X')) ORDER BY CHECKLIST_CODE, CHECKLIST_ITEM_SRL_NO");
		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT3","SELECT CHECKLIST_ITEM_SRL_NO, CHECKLIST_ITEM_CODE, CHECKLIST_STAGE, CHECKLIST_CODE, DECODE(CHECKLIST_VALUE,NULL,'Select',CHECKLIST_VALUE) CHECKLIST_VALUE, CHECKLIST_REMARKS, ADDED_BY_ID FROM OT_OPER_CHECKLIST_DTLS WHERE OPERATING_FACILITY_ID=? AND NVL(BOOKING_NUM,'X') = NVL(?,NVL(BOOKING_NUM,'X')) AND NVL(OPER_NUM,'X') = NVL(?,NVL(OPER_NUM,'X')) AND NVL(ORDER_ID,'X') = NVL(?,NVL(ORDER_ID,'X')) AND CHECKLIST_STAGE IN (?,?,?,?) ORDER BY CHECKLIST_CODE, CHECKLIST_ITEM_SRL_NO");

		dataMap.put("SQL_OT_VERIFY_CHECKLIST_INSERT","INSERT INTO  OT_OPER_CHECKLIST_DTLS(OPERATING_FACILITY_ID,CHECKLIST_STAGE,ORDER_ID,BOOKING_NUM,OPER_NUM,CHECKLIST_CODE,CHECKLIST_ITEM_CODE,CHECKLIST_ITEM_SRL_NO,CHECKLIST_VALUE,CHECKLIST_REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
		dataMap.put("SQL_OT_VERIFY_CHECKLIST_UPDATE","UPDATE OT_OPER_CHECKLIST_DTLS SET CHECKLIST_VALUE=?, CHECKLIST_REMARKS=?, MODIFIED_DATE=SYSDATE, MODIFIED_BY_ID=?, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND NVL(BOOKING_NUM,'X') = NVL(?, NVL(BOOKING_NUM,'X')) AND NVL(OPER_NUM,'X') = NVL(?, NVL(OPER_NUM,'X')) AND NVL(ORDER_ID,'X') = NVL(?, NVL(ORDER_ID,'X')) AND CHECKLIST_CODE=? AND CHECKLIST_ITEM_CODE=? AND CHECKLIST_ITEM_SRL_NO=? AND CHECKLIST_STAGE=?");

		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT4","SELECT ROLE_ID, ROLE_DESC FROM OT_ROLES_LANG_VW ");
//		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT5","SELECT DECODE(COUNT(*),'1','Y','N') VALID_PIN FROM SM_APPL_USER WHERE UPPER(APPL_USER_ID)=UPPER(?) AND APP_PASSWORD.ENCRYPT(?) = PIN_NO");
		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT5","SELECT UPPER(APP_PASSWORD.DECRYPT(PIN_NO)) PIN_NO FROM SM_APPL_USER WHERE UPPER(APPL_USER_ID)=UPPER(?)");
		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT6","SELECT PRE_OP_CHKLST_USR1_ID, NVL(PRE_OP_CHKLST_USR1_COMPL_YN,'N') PRE_OP_CHKLST_USR1_COMPL_YN, PRE_OP_CHKLST_USR2_ID, NVL(PRE_OP_CHKLST_USR2_COMPL_YN,'N') PRE_OP_CHKLST_USR2_COMPL_YN, PRE_OP_CHKLST_USR3_ID, NVL(PRE_OP_CHKLST_USR3_COMPL_YN,'N') PRE_OP_CHKLST_USR3_COMPL_YN, PRE_OP_CHKLST_USR4_ID, NVL(PRE_OP_CHKLST_USR4_COMPL_YN,'N') PRE_OP_CHKLST_USR4_COMPL_YN, POST_OP_CHKLST_USR1_ID, NVL(POST_OP_CHKLST_USR1_COMPL_YN,'N') POST_OP_CHKLST_USR1_COMPL_YN, POST_OP_CHKLST_USR2_ID, NVL(POST_OP_CHKLST_USR2_COMPL_YN,'N') POST_OP_CHKLST_USR2_COMPL_YN, POST_OP_CHKLST_USR3_ID, NVL(POST_OP_CHKLST_USR3_COMPL_YN,'N') POST_OP_CHKLST_USR3_COMPL_YN, POST_OP_CHKLST_USR4_ID, NVL(POST_OP_CHKLST_USR4_COMPL_YN,'N') POST_OP_CHKLST_USR4_COMPL_YN  FROM OT_OPER_CHECKLIST_HDR WHERE OPERATING_FACILITY_ID=? AND NVL(BOOKING_NUM,'X')=NVL(?,NVL(BOOKING_NUM,'X')) AND NVL(OPER_NUM,'X')=NVL(?,NVL(OPER_NUM,'X')) AND NVL(ORDER_ID,'X')=NVL(?,NVL(ORDER_ID,'X')) ");

		dataMap.put("SQL_OT_VERIFY_CHECKLIST_SELECT7","SELECT NVL(CHECK_FOR_CHECK_LIST_COMPL,'N') CHECK_FOR_CHECK_LIST_COMPL FROM OT_FUNCTIONS_LANG_VW WHERE LANGUAGE_ID = ? AND FUNCTION_ID  = ?");

	//End of Verify CheckList Queries
	//Start of InstrumentCount Queries
	//modfied below query on 12/11/2009 against CRF-0783 by Sathish given by DIlip
		//dataMap.put("SQL_OT_INSTRUMENT_COUNT_UPDATE","UPDATE OT_STORE_ISSUE_DTLS SET OPEN_QTY = ?, INITIAL_STATUS = ?, INITIAL_STATUS_REMARKS = NVL(?,''), RETURN_QTY = ?, FINAL_STATUS = ?, FINAL_REMARKS = NVL(?,''), GENERAL_REMARKS=NVL(?,''), FINALIZED_YN = NVL(?,'N'),MODIFIED_BY_ID=?, MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?, MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID = ? AND nvl(BOOKING_NUM,'XX')=NVL( ?,nvl(BOOKING_NUM,'XX')) AND OPER_NUM = NVL(?,OPER_NUM) AND SET_CODE = ? AND TRAY_NUM = ? AND ITEM_CODE = ?");
		dataMap.put("SQL_OT_INSTRUMENT_COUNT_UPDATE","UPDATE OT_STORE_ISSUE_DTLS SET CSSD_QTY= ?,OPEN_QTY = ?, INITIAL_STATUS = ?, INITIAL_STATUS_REMARKS = NVL(?,''), RETURN_QTY = ?, FINAL_STATUS = ?, FINAL_REMARKS = NVL(?,''), GENERAL_REMARKS=NVL(?,''), FINALIZED_YN = NVL(?,'N'),MODIFIED_BY_ID=?, MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?, MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID = ? AND nvl(BOOKING_NUM,'XX')=NVL( ?,nvl(BOOKING_NUM,'XX')) AND OPER_NUM = NVL(?,OPER_NUM) AND SET_CODE = ? AND TRAY_NUM = ? AND ITEM_CODE = ?");
		dataMap.put("SQL_OT_INSTRUMENT_COUNT_UPDATE_HDR","UPDATE OT_STORE_ISSUE_HDR SET INITIAL_COUNT_CMPL_YN=NVL(?,'N'),FINAL_COUNT_CMPL_YN=NVL(?,'N') WHERE OPERATING_FACILITY_ID=?  AND nvl(BOOKING_NUM,'XX')=NVL( ?,nvl(BOOKING_NUM,'XX')) AND OPER_NUM = NVL(?,OPER_NUM) AND SET_CODE=? AND TRAY_NUM=?");
	//End of InstrumentCount Queries

	
	// Start of Queries for Checkin Function. Created by Bshankar.
		dataMap.put("SQL_OT_CHEKIN_SELECT1","SELECT PATIENT_NAME, to_char(DATE_OF_BIRTH,'dd/mm/yyyy') DATE_OF_BIRTH,SEX,RACE_CODE FROM MP_PATIENT where PATIENT_ID=?");
		//Modified by rajesh for showing Asst_srgn_2 on 09/10
		
		//dataMap.put("SQL_OT_CHEKIN_SELECT2","SELECT WAITLIST_NUM,ORDER_ID, NATURE_CODE, NATURE_TYPE, EPISODE_TYPE, PATIENT_CLASS, EPISODE_ID, ENCOUNTER_ID, VISIT_ID, EPISODE_TYPE,SOURCE_TYPE,SOURCE_CODE, TO_CHAR(BOOKING_DATE,'DD/MM/YYYY') BOOKING_DATE, TEAM_DOCTOR_CODE, ANAESTHESIA_CODE, ANAESTHETIST1_CODE, SPECIALITY_CODE, SOURCE_CODE, SOURCE_TYPE,ORDER_TYPE_CODE,OPER_ROOM_CODE,PATIENT_ID,OPER_ROOM_CODE,PRE_OPER_DIAG,ASST_SURGEON_CODE,(SELECT SHORT_NAME FROM AM_PRACTITIONER_LANG_VW WHERE PRACTITIONER_ID = ASST_SURGEON_CODE AND LANGUAGE_ID = ?) ASST_SURGEON_DESC FROM OT_BOOKING_HDR WHERE OPERATING_FACILITY_ID =? AND BOOKING_NUM=?");
		dataMap.put("SQL_OT_CHEKIN_SELECT2","SELECT WAITLIST_NUM,ORDER_ID, NATURE_CODE, NATURE_TYPE, EPISODE_TYPE, PATIENT_CLASS, EPISODE_ID, ENCOUNTER_ID, VISIT_ID, EPISODE_TYPE,SOURCE_TYPE,SOURCE_CODE, TO_CHAR(BOOKING_DATE,'DD/MM/YYYY') BOOKING_DATE, TEAM_DOCTOR_CODE, ANAESTHESIA_CODE, ANAESTHETIST1_CODE, SPECIALITY_CODE, SOURCE_CODE, SOURCE_TYPE,ORDER_TYPE_CODE,OPER_ROOM_CODE,PATIENT_ID,OPER_ROOM_CODE,PRE_OPER_DIAG,ASST_SURGEON_CODE, (SELECT SHORT_NAME FROM AM_PRACTITIONER_LANG_VW WHERE PRACTITIONER_ID = ASST_SURGEON_CODE AND LANGUAGE_ID = ?) ASST_SURGEON_DESC,ASST_SURGEON_CODE_2, (SELECT SHORT_NAME FROM AM_PRACTITIONER_LANG_VW WHERE PRACTITIONER_ID = ASST_SURGEON_CODE_2 AND LANGUAGE_ID = ?) ASST_SURGEON_DESC_2 FROM OT_BOOKING_HDR WHERE OPERATING_FACILITY_ID =? AND BOOKING_NUM=?");
		dataMap.put("SQL_OT_CHEKIN_SELECT3","SELECT SPECIALTY_CODE FROM PR_ENCOUNTER WHERE FACILITY_ID = ? AND PATIENT_ID =? AND ENCOUNTER_ID =?");
		//dataMap.put("SQL_OT_CHEKIN_SELECT4","SELECT SHORT_NAME FROM SY_PHYSICIAN_MAST WHERE FACILITY_ID = ? AND PHYSICIAN_ID = ?");
		//Changed by bshankar on 21st April 2008 against SCR-1546
		dataMap.put("SQL_OT_CHEKIN_SELECT4","SELECT PRACTITIONER_NAME FROM AM_PRACTITIONER_LANG_VW WHERE LANGUAGE_ID = ? AND PRACTITIONER_ID= ?");
		dataMap.put("SQL_OT_CHEKIN_SELECT5","SELECT SHORT_DESC FROM AM_ANAESTHESIA WHERE ANAESTHESIA_CODE = ?");
		dataMap.put("SQL_OT_CHEKIN_SELECT6","SELECT SHORT_DESC FROM AM_SPECIALITY_LANG_VW WHERE SPECIALITY_CODE = ? AND LANGUAGE_ID =?");
		//SQL_OT_CHEKIN_SELECT7 Query added facility_id by sathish on 29/04/10 for PE issue
		dataMap.put("SQL_OT_CHEKIN_SELECT7","SELECT LONG_DESC DESCRIPTION FROM IP_NURSING_UNIT_LANG_VW WHERE NURSING_UNIT_CODE=? AND LANGUAGE_ID = ? AND FACILITY_ID = ?");
		dataMap.put("SQL_OT_CHEKIN_SELECT8","SELECT NVL(TO_NURSING_UNIT, FR_NURSING_UNIT_CODE) WARD_CODE, 'W' SOURCE_TYPE, NVL(TO_SPECIALTY_CODE,FR_SPECIALTY_CODE) SPECIALITY_CODE, ENCOUNTER_ID, NVL(TO_PRACTITIONER_ID, FR_PRACTITIONER_ID) PRACTITIONER_ID, TRN_TYPE  FROM IP_ADT_TRN WHERE PATIENT_ID =? AND FACILITY_ID=? AND  TRN_TYPE IN ('A', 'D', 'T') AND TRN_DATE_TIME = (SELECT MAX(TRN_DATE_TIME) FROM IP_ADT_TRN WHERE PATIENT_ID =? AND FACILITY_ID =? AND TRN_TYPE IN ('A', 'D', 'T'))");
		dataMap.put("SQL_OT_CHEKIN_SELECT9","SELECT SHORT_DESC, NATURE_CODE, NATURE_TYPE FROM OT_NATURE_OF_SURGERY_LANG_VW WHERE LANGUAGE_ID = ? AND NVL(STATUS,'E') = 'E' ORDER BY SHORT_DESC");
		//dataMap.put("SQL_OT_CHEKIN_SELECT10","SELECT A.LINE_NUM, B.SHORT_DESC,A.OPER_CODE, NVL(DECODE(A.APPL_RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Both Sides','N','Not Applicable'),'Not Applicable') APPL_RIGHT_LEFT_FLAG, A.OPER_REMARKS FROM OT_BOOKING_DTLS A,OT_OPER_MAST B WHERE A.OPERATING_FACILITY_ID=? AND  A.BOOKING_NUM = ?	AND A.OPER_CODE=B.OPER_CODE");
		dataMap.put("SQL_OT_CHEKIN_SELECT10","SELECT A.LINE_NUM, LONG_DESC OPER_DESC,A.OPER_CODE,NVL(A.APPL_RIGHT_LEFT_FLAG,'N') APPL_RIGHT_LEFT_FLAG, NVL(DECODE(A.APPL_RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Bilateral','N','Not Applicable'),'Not Applicable') APPL_RIGHT_LEFT_FLAG_DESC, A.OPER_REMARKS,B.SPECIALITY_CODE,A.ORDER_ID,A.ORDER_TYPE_CODE,A.ORDER_LINE_NUM,A.FPP_CATEGORY FROM OT_BOOKING_DTLS A,OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND  A.BOOKING_NUM = ?	AND A.OPER_CODE=B.OPER_CODE ORDER BY ORDER_LINE_NUM ");//MMS-QH-CRF-0199 Modified against ML-MMOH-CRF-1939-US3
		dataMap.put("SQL_OT_CHEKIN_SELECT11","SELECT ORDER_TYPE_CODE, ORDER_ID, PATIENT_ID, EPISODE_TYPE, PATIENT_CLASS, EPISODE_ID, ENCOUNTER_ID, VISIT_ID, ORDER_DATE_TIME, NATURE_TYPE, NATURE_CODE, SOURCE_TYPE, SOURCE_CODE, TEAM_DOCTOR_IND, PERFORMING_TEAM_SURGEON, ANAESTHETIST_CODE, ANAESTHESIA_CODE, PREF_SURG_DATE,SPECIALITY_CODE,PRE_OPER_DIAG FROM OT_PENDING_ORDER WHERE ORDER_ID = ?");
		//dataMap.put("SQL_OT_CHEKIN_SELECT12","SELECT A.ORDER_LINE_NUM, B.SHORT_DESC, B.OPER_CODE, B.APPL_RIGHT_LEFT_FLAG, A.ITEM_NARRATION OPER_REMARKS FROM OR_ORDER_LINE A, OT_OPER_MAST B WHERE A.ORDER_ID= ? AND  A.ORDER_CATALOG_CODE	= B.ORDER_CATALOG_CODE");
		//dataMap.put("SQL_OT_CHEKIN_SELECT12","SELECT A.ORDER_LINE_NO, B.SHORT_DESC, B.OPER_CODE,NVL(DECODE(A.APPL_RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Both Sides','N','Not Applicable'),'Not Applicable') APPL_RIGHT_LEFT_FLAG, A.OPER_REMARKS FROM OT_PENDING_ORDER_LINE A,OT_OPER_MAST B WHERE A.ORDER_ID = ? AND A.ORDER_CATALOG_CODE = B.ORDER_CATALOG_CODE");

		//modified order by is added for billing on 22/10/2008
		dataMap.put("SQL_OT_CHEKIN_SELECT12","SELECT A.ORDER_LINE_NO, B.LONG_DESC OPER_DESC, B.OPER_CODE,A.APPL_RIGHT_LEFT_FLAG,NVL(DECODE(A.APPL_RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Bilateral','N','Not Applicable'),'Not Applicable') APPL_RIGHT_LEFT_FLAG_DESC, A.OPER_REMARKS,B.SPECIALITY_CODE,ORDER_ID,ORDER_TYPE_CODE FROM OT_PENDING_ORDER_LINE A,OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.ORDER_ID = ? AND A.ORDER_CATALOG_CODE = B.ORDER_CATALOG_CODE ORDER BY ORDER_LINE_NO");//MMS-QH-CRF-0199
		// modified SQL_OT_CHEKIN_SELECT13(removed order by order_line_num) by sathish on 30-04-2010
		//dataMap.put("SQL_OT_CHEKIN_SELECT13","SELECT SPECIALITY_CODE FROM OT_SPECIALITY_ORDER_TYPES WHERE ORDER_TYPE_CODE = ? ORDER BY ORDER_LINE_NUM" );

		dataMap.put("SQL_OT_CHEKIN_SELECT13","SELECT SPECIALITY_CODE FROM OT_SPECIALITY_ORDER_TYPES WHERE ORDER_TYPE_CODE = ?" );
		//added by subramanian on 10/07/2005
		dataMap.put("SQL_OT_CHEKIN_SELECT14","SELECT ORDER_COMMENT FROM OR_ORDER_COMMENT WHERE ORDER_ID =?");
		 //modified by rajesh for inserting Asst_srgn_2 on 09/10 
		//dataMap.put("SQL_OT_POST_OPER_HDR_INSERT","INSERT INTO OT_POST_OPER_HDR (OPERATING_FACILITY_ID,OPER_NUM,OPER_DATE,ORDER_ID,BOOKING_NUM,WAITLIST_NUM,PATIENT_ID,PATIENT_CLASS,EPISODE_TYPE,ENCOUNTER_ID,EPISODE_ID,NATURE_TYPE,NATURE_CODE,SPECIALITY_CODE,OPER_STATUS,SURGEON_CODE,ANESTHETIST_CODE,ANESTHESIA_CODE,OPER_ROOM_CODE,ORDER_TYPE_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,PRE_OPER_DIAG,REF_SOURCE_CODE,REF_SOURCE_TYPE,CHECK_IN_TIME,ALL_SPECIALITY_CODES,VISIT_ID) VALUES (?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,to_date(?,'DD/MM/YYYY HH24:MI'),?,?)");
		dataMap.put("SQL_OT_POST_OPER_HDR_INSERT","INSERT INTO OT_POST_OPER_HDR (OPERATING_FACILITY_ID,OPER_NUM,OPER_DATE,ORDER_ID,BOOKING_NUM,WAITLIST_NUM,PATIENT_ID,PATIENT_CLASS,EPISODE_TYPE,ENCOUNTER_ID,EPISODE_ID,NATURE_TYPE,NATURE_CODE,SPECIALITY_CODE,OPER_STATUS,SURGEON_CODE,ANESTHETIST_CODE,ANESTHESIA_CODE,OPER_ROOM_CODE,ORDER_TYPE_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,PRE_OPER_DIAG,REF_SOURCE_CODE,REF_SOURCE_TYPE,CHECK_IN_TIME,ALL_SPECIALITY_CODES,VISIT_ID,ASST_SURGEON_CODE,ASST_SURGEON_CODE_2) VALUES (?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,to_date(?,'DD/MM/YYYY HH24:MI'),?,?,?,?)");
		dataMap.put("SQL_OT_POST_OPER_DTLS_INSERT","INSERT INTO OT_POST_OPER_DTLS(OPERATING_FACILITY_ID,OPER_NUM,OPER_LINE_NUM,OPER_CODE,RIGHT_LEFT_FLAG,OPER_REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,ORDER_ID,ORDER_TYPE_CODE,ORDER_LINE_NUM,FPP_CATEGORY) VALUES(?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");//Modified Against ML-MMOH-CRF-1939-US3
		
	// End of Checkin Queries.

	// Start of Queries for Holding Area Function. Created by Bala.
	   dataMap.put("SQL_OT_HOLDING_AREA_SELECT1","SELECT TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY HH24:MI'), B.HOLDING_AREA_DESC,TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'HH24:MI') HH_MTS,A.HOLDING_AREA_CODE, TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY'), SPECIALITY_CODE  FROM OT_POST_OPER_HDR A, OT_HOLDING_AREAS_LANG_VW B  WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID =? AND A.OPER_NUM =? AND A.HOLDING_AREA_CODE = B.HOLDING_AREA_CODE");
   // End of Holding Area Function Queries.


	// Start of Queries for Recovery Function. Created by Bala.
		dataMap.put("SQL_OT_DISPOSAL_DTLS_SELECT","SELECT A.ANATOMICAL_SITE_CODE SITE_CODE, B.SHORT_DESC SITE_DESC, A.DISPOSAL_CODE DISP_CODE, C.DISPOSAL_DESC DISP_DESC, A.GIVEN_BY GIVEN, A.RECEIVED_BY RECEIVED FROM OT_POST_OPER_ORGAN A, AM_ANATOMICAL_SITE_LANG_VW B, OT_ORGAN_DISPOSAL_LANG_VW C WHERE C.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND A.OPER_NUM=? AND A.ANATOMICAL_SITE_CODE=B.ANATOMICAL_SITE_CODE AND A.DISPOSAL_CODE=C.DISPOSAL_CODE AND B.LANGUAGE_ID=?");
		dataMap.put("SQL_OT_CHK_IN_RECOVERY_SELECT","SELECT TO_CHAR(NVL(CHECK_INTO_RECOVERY_TIME,SYSDATE) ,'DD/MM/YYYY HH24:MI') RECOVERY_TIME FROM OT_POST_OPER_HDR WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=?");
		dataMap.put("SQL_OT_CHK_IN_RECOVERY_INSERT","INSERT INTO OT_POST_OPER_ORGAN(OPERATING_FACILITY_ID,OPER_NUM,ANATOMICAL_SITE_CODE,DISPOSAL_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,GIVEN_BY,RECEIVED_BY) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?)");
		dataMap.put("SQL_OT_CHK_IN_RECOVERY_INSERT1","INSERT INTO OT_POST_OPER_UNTOWARD(OPERATING_FACILITY_ID,OPER_NUM,UNUSUAL_OCCUR_CODE,ACTION_REMARKS,GEN_REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
		dataMap.put("SQL_OT_DISPOSAL_DTLS_UPDATE","UPDATE OT_POST_OPER_ORGAN SET ANATOMICAL_SITE_CODE=?,DISPOSAL_CODE=?,GIVEN_BY=?,RECEIVED_BY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=?");
		dataMap.put("SQL_OT_DISPOSAL_DTLS_DELETE","DELETE FROM OT_POST_OPER_ORGAN WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND ANATOMICAL_SITE_CODE=? AND DISPOSAL_CODE=?");

   // End of Recovery Function Queries.
	
	// Start of Queries for Booking Functions. Created by Pandian
		dataMap.put("SQL_OT_BOOKING_SELECT1","");
	// End of Booking Function Queries.

	// Start of Queries for Transfer-To-OT from Recovery Function. Created by Bala.
		dataMap.put("SQL_OT_TRANFER_TO_OT_SELECT1","SELECT LOCN_TYPE,SHORT_DESC FROM AM_CARE_LOCN_TYPE_LANG_VW WHERE CARE_LOCN_TYPE_IND='O' AND LANGUAGE_ID = ? ORDER BY 1");
		dataMap.put("SQL_OT_TRANFER_TO_OT_SELECT2","SELECT OPER_ROOM_CODE,SHORT_DESC FROM OT_OPER_ROOM_LANG_VW WHERE LANGUAGE_ID = ? AND OPERATING_FACILITY_ID=? AND THEATRE_TYPE=? ORDER BY 2"); //Modified by lakshmi for scf-7685
		dataMap.put("SQL_OT_TRANFER_TO_OT_SELECT3","SELECT STATUS_CODE,STATUS_DESC FROM OT_STATUS_LANG_VW WHERE LANGUAGE_ID = ? AND STATUS_CODE IN('40','50') ORDER BY 2");
		dataMap.put("SQL_OT_TRANFER_TO_OT_SELECT4","SELECT OPER_ROOM_CODE,SHORT_DESC FROM OT_OPER_ROOM_LANG_VW WHERE LANGUAGE_ID = ? AND OPERATING_FACILITY_ID=? AND THEATRE_TYPE=? and oper_room_code not in(select  oper_room_code from ot_post_oper_hdr where SYSDATE - 1 / 1440 between check_in_time and nvl(check_out_time,SYSDATE) and trunc(check_in_time)=trunc(sysdate) and operating_facility_id=? AND oper_status != '99' ) ORDER BY 2"); //Added For PMG2016-KDAH-CRF-0001
	// End of Transfer-To-OT from Recovery Function Queries.

	// Start of Queries for CancelCheckIn Function. Created by Bala.
		dataMap.put("SQL_OT_CANCEL_CHECK_IN_SELECT1","SELECT APPL_USER_NAME FROM SM_APPL_USER WHERE APPL_USER_ID=UPPER(?) AND LANGUAGE_ID = ? ");
	
	// End of Cancel Check-In Queries Function Queries.

	// Start of Queries for Check-Out from Ward Function. Created by bshankar.
	// From TO_CHAR(APPT_DATE,'DD/MM/YYYY') where clause TO_CHAR is removed in the below 3 queries for PE Change -- Dilip - 03/05/2010
	//Query has been modified by DhanasekarV on 29/11/2010 against incident IN025270
	    dataMap.put("SQL_OT_WARD_CHK_OUT_SELECT1","SELECT PATIENT_ID, (SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID) PATIENT_NAME, PRIMARY_OPER_CODE, OPER_DESC, SURGEON_NAME, TO_CHAR(APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME, TO_CHAR(APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, STATUS_DESC, OPER_STATUS, APPT_REF_NUM, APPT_YN, ORDER_ID, SPECIALITY_CODE, TO_CHAR(CASE_CALLED_TIME,'HH24:MI') CASE_CALLED_TIME, TO_CHAR(CHECK_OUT_FROM_WARD_TIME,'HH24:MI') CHECK_OUT_FROM_WARD_TIME FROM OT_CHK_OUT_FROM_WARD_VW A WHERE OPERATING_FACILITY_ID=? AND APPT_DATE=TO_DATE(?,'DD/MM/YYYY') AND SOURCE_CODE=? AND PATIENT_ID=NVL(?,PATIENT_ID) AND NVL(APPT_YN,'X')=NVL(?,'X') AND A.LANGUAGE_ID = ? ORDER BY APPT_DATE, APPT_FROM_TIME");
		 dataMap.put("SQL_OT_WARD_CHK_OUT_SELECT3","SELECT PATIENT_ID, (SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID) PATIENT_NAME, PRIMARY_OPER_CODE, OPER_DESC, SURGEON_NAME, TO_CHAR(APPT_FROM_TIME,'HH24:MI') APPT_FROM_TIME, TO_CHAR(APPT_TO_TIME,'HH24:MI') APPT_TO_TIME, STATUS_DESC, OPER_STATUS, APPT_REF_NUM, APPT_YN, ORDER_ID, SPECIALITY_CODE, TO_CHAR(CASE_CALLED_TIME,'HH24:MI') CASE_CALLED_TIME, TO_CHAR(CHECK_OUT_FROM_WARD_TIME,'HH24:MI') CHECK_OUT_FROM_WARD_TIME FROM OT_CHK_OUT_FROM_WARD_VW A  WHERE OPERATING_FACILITY_ID=? AND APPT_DATE=TO_DATE(?,'DD/MM/YYYY') AND SOURCE_CODE=? AND PATIENT_ID=NVL(?,PATIENT_ID) AND A.LANGUAGE_ID = ? ORDER BY APPT_DATE, APPT_FROM_TIME");


	   dataMap.put("SQL_OT_WARD_CHK_OUT_SELECT2","SELECT PATIENT_ID, (SELECT DECODE (?, 'en', NVL (patient_name, patient_name_loc_lang), NVL (patient_name_loc_lang, patient_name) )  FROM MP_PATIENT WHERE PATIENT_ID = A.PATIENT_ID) PATIENT_NAME, EXAM_CODE, EXAM_DESC, PHYSICIAN_NAME, TO_CHAR(APPT_START_TIME,'HH24:MI') APPT_START_TIME, TO_CHAR(APPT_END_TIME,'HH24:MI') APPT_END_TIME, STATUS_DESC, APPT_REF_NUM, ORDER_ID FROM RD_CHK_OUT_FROM_WARD_VW A WHERE OPERATING_FACILITY_ID=? AND APPT_DATE=TO_DATE(?,'DD/MM/YYYY') AND REF_SOURCE_CODE=? AND PATIENT_ID=NVL(?,PATIENT_ID) ORDER BY APPT_DATE, APPT_START_TIME");
   // End of Holding Area Function Queries.


		// Start of Queries for  Surgeon Record Notes. Created by bala.
		dataMap.put("SQL_OT_OPERATIONS_SELECT1","SELECT A.OPER_CODE,A.OPER_LINE_NUM, B.SHORT_DESC,DECODE(A.RIGHT_LEFT_FLAG,'R','Right Side','L','Left Side','B','Bilateral') RIGHT_LEFT_FLAG,A.OPER_REMARKS FROM OT_POST_OPER_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID=? AND A.OPER_NUM=? AND A.OPER_CODE=B.OPER_CODE AND NVL(STATUS,'E')='E' ");
		dataMap.put("SQL_OT_OPERATIONS_SELECT2","SELECT MAX(OPER_LINE_NUM) FROM OT_POST_OPER_DTLS WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=?");
		dataMap.put("SQL_OT_PERSONNEL_SELECT1","SELECT DISTINCT A.SPECIALITY_CODE, B.SHORT_DESC SPECIALITY_DESC FROM OT_OPER_MAST_LANG_VW A, AM_SPECIALITY_LANG_VW B WHERE A.LANGUAGE_ID = ? AND B.LANGUAGE_ID = A.LANGUAGE_ID AND A.OPER_CODE IN (SELECT OPER_CODE FROM OT_POST_OPER_DTLS WHERE OPERATING_FACILITY_ID = ?  AND OPER_NUM = ? AND NVL(OPER_LINE_STATUS,'X' ) NOT IN '99' ) AND A.SPECIALITY_CODE = B.SPECIALITY_CODE AND NVL(B.EFF_STATUS,'E')='E'");
		//dataMap.put("SQL_OT_PERSONNEL_SELECT2","SELECT A.SPECIALITY_CODE, DECODE(A.SPECIALITY_CODE, '*ALL',	'All Specialities',C.SHORT_DESC) SPECIALITY_DESC, A.ROLE_ID, B.ROLE_DESC,B.ROLE_TYPE, A.PRACTITIONER_ID,  D.PRACTITIONER_NAME FROM OT_POST_OPER_PERSONNEL A, OT_ROLES B, AM_SPECIALITY C, AM_PRACTITIONER D WHERE OPERATING_FACILITY_ID	=? AND OPER_NUM	= ? AND A.SPECIALITY_CODE = C.SPECIALITY_CODE (+) AND A.ROLE_ID = B.ROLE_ID AND A.PRACTITIONER_ID = D.PRACTITIONER_ID");
		//dataMap.put("SQL_OT_PERSONNEL_SELECT2","SELECT A.SPECIALITY_CODE, DECODE(A.SPECIALITY_CODE, '*ALL',	'All Specialities',C.SHORT_DESC) SPECIALITY_DESC, A.ROLE_ID, B.ROLE_DESC,B.ROLE_TYPE, A.PRACTITIONER_ID,  D.PRACTITIONER_NAME,E.POSITION_DESC POS_DESC FROM OT_POST_OPER_PERSONNEL A, OT_ROLES_LANG_VW B, AM_SPECIALITY_LANG_VW C,AM_PRACTITIONER_LANG_VW D, AM_POSITION E WHERE B.LANGUAGE_ID = ? AND D.LANGUAGE_ID=B.LANGUAGE_ID AND C.LANGUAGE_ID=B.LANGUAGE_ID AND OPERATING_FACILITY_ID =? AND OPER_NUM	= ? AND A.SPECIALITY_CODE = C.SPECIALITY_CODE (+) AND A.ROLE_ID = B.ROLE_ID AND A.PRACTITIONER_ID = D.PRACTITIONER_ID AND  D.POSITION_CODE    = E.POSITION_CODE(+)");
		// DhanasekarV modified against the issue IN024272 on 11/10/2010
		dataMap.put("SQL_OT_PERSONNEL_SELECT2","SELECT A.SPECIALITY_CODE,DECODE(A.SPECIALITY_CODE, '*ALL',	'All Specialities',GET_DESC(?,'AM_SPECIALITY_LANG_VW','LONG_DESC','SPECIALITY_CODE',A.SPECIALITY_CODE)) SPECIALITY_DESC,A.ROLE_ID, B.ROLE_DESC,B.ROLE_TYPE, A.PRACTITIONER_ID, GET_DESC(?,'AM_PRACTITIONER_LANG_VW','PRACTITIONER_NAME','PRACTITIONER_ID',A.PRACTITIONER_ID) PRACTITIONER_NAME,E.POSITION_DESC POS_DESC FROM OT_POST_OPER_PERSONNEL A, OT_ROLES_LANG_VW B, AM_SPECIALITY C,AM_PRACTITIONER D, AM_POSITION E WHERE B.LANGUAGE_ID = ? AND OPERATING_FACILITY_ID =? AND OPER_NUM	= ? AND A.SPECIALITY_CODE = C.SPECIALITY_CODE (+) AND A.ROLE_ID = B.ROLE_ID AND A.PRACTITIONER_ID = D.PRACTITIONER_ID AND  D.POSITION_CODE    = E.POSITION_CODE(+) order by B.ROLE_DESC");
		dataMap.put("OT_POST_OPER_DTLS_I","INSERT INTO OT_POST_OPER_DTLS(OPERATING_FACILITY_ID,OPER_NUM,OPER_LINE_NUM,OPER_CODE,RIGHT_LEFT_FLAG,OPER_REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,ORDER_ID,ORDER_TYPE_CODE,ORDER_LINE_NUM,OPER_ADDED_IN_SURGEON_NOTES_YN,FPP_CATEGORY) VALUES(?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,'Y',?)");//AAKH-CRF-0090
		dataMap.put("OT_POST_OPER_DTLS_U","UPDATE OT_POST_OPER_DTLS SET RIGHT_LEFT_FLAG=?,OPER_REMARKS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=?,OPER_LINE_STATUS=?,CANCEL_REMARKS=?,CANCELLED_BY_ID=?,CANCELLED_DATE=?,FPP_CATEGORY=? WHERE	OPER_LINE_NUM=? AND OPER_CODE=? AND OPER_NUM = ? AND OPERATING_FACILITY_ID=?");
		//dataMap.put("OT_POST_OPER_DTLS_D","DELETE FROM OT_POST_OPER_DTLS WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=?  AND OPER_LINE_NUM=? AND  OPER_CODE=? ");
		dataMap.put("OT_POST_OPER_DTLS_D","UPDATE OT_POST_OPER_DTLS SET OPER_LINE_STATUS='99' WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=?  AND OPER_LINE_NUM=? AND OPER_CODE=? ");
		dataMap.put("OT_POST_OPER_PERSONNEL_I","INSERT INTO OT_POST_OPER_PERSONNEL(OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,PRACTITIONER_ID,ROLE_ID,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,ROLE_TYPE) VALUES (?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?)");
		dataMap.put("OT_POST_OPER_PERSONNEL_D","DELETE FROM OT_POST_OPER_PERSONNEL WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SPECIALITY_CODE=? AND PRACTITIONER_ID=? AND ROLE_ID=?");
		dataMap.put("PR_PROBLEM_I","INSERT INTO PR_PROBLEM(PATIENT_ID,SRL_NO,DIAG_CODE,RECORD_TYPE,CAUSE_INDICATOR,TERM_ID,DIAG_CODE_SCHEME,DIAG_DESC,TAB_LIST_NO,ANALYSIS_CODE,PRIMARY_YN,FINAL_YN,NOTIFIABLE_YN,SENSITIVE_YN,ONSET_DATE,ONSET_PRACTITIONER_ID,ONSET_FACILITY_ID,ONSET_LOCN_CODE,ONSET_LOCN_TYPE,ONSET_ENCOUNTER_ID,ONSET_RECORDED_DATE,CLOSE_DATE,CLOSE_PRACTITIONER_ID,CLOSE_FACILITY_ID,CLOSE_LOCN_CODE,CLOSE_LOCN_TYPE,CLOSE_ENCOUNTER_ID,CLOSE_RECORDED_DATE,PROBLEM_STATUS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,IP_DIAG_STAGE,PROBLEM_REMARKS,DIAG_TYPE,SIGNIFICANT_YN) VALUES(?,?,?,DECODE(?,'2','D',NULL),NULL,NULL,?,?,'','',NVL(?,'N'),'N',?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,SYSDATE,?,?,?,SYSDATE,?,?,'I',?,'F',NVL(?,'N'))");
		//dataMap.put("PR_PROBLEM_U","UPDATE PR_PROBLEM SET PRIMARY_YN =?,SIGNIFICANT_YN=?,ONSET_DATE=TO_DATE(?,'DD/MM/YYYY'),CLOSE_DATE=TO_DATE(?,'DD/MM/YYYY'),CLOSE_FACILITY_ID=?,CLOSE_LOCN_CODE=?,CLOSE_LOCN_TYPE=?,CLOSE_ENCOUNTER_ID=?,CLOSE_RECORDED_DATE=TO_DATE(?,'DD/MM/YYYY'),CLOSE_PRACTITIONER_ID=?,PROBLEM_STATUS=?,PROBLEM_REMARKS=? WHERE PATIENT_ID=? AND SRL_NO=?");
		dataMap.put("PR_PROBLEM_U","UPDATE PR_PROBLEM SET PRIMARY_YN =?,SIGNIFICANT_YN=?,ONSET_DATE = NVL(TO_DATE(?,'DD/MM/YYYY'),NULL),CLOSE_DATE=NVL(TO_DATE(?,'DD/MM/YYYY'),NULL),CLOSE_FACILITY_ID=?,CLOSE_LOCN_CODE=?,CLOSE_LOCN_TYPE=?,CLOSE_ENCOUNTER_ID=?,CLOSE_RECORDED_DATE=NVL(TO_DATE(?,'DD/MM/YYYY'),NULL),CLOSE_PRACTITIONER_ID=?,PROBLEM_STATUS=?,PROBLEM_REMARKS=? WHERE PATIENT_ID=? AND SRL_NO=?");
		dataMap.put("OT_POST_OPER_DIAG_I","INSERT INTO OT_POST_OPER_DIAG(OPERATING_FACILITY_ID,OPER_NUM,DIAG_CODING_SCHEME,DIAG_CODE,SRL_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID)VALUES(?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
		dataMap.put("OT_POST_OPER_DIAG_U","UPDATE OT_POST_OPER_DIAG SET MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND DIAG_CODE=? AND SRL_NO=?");

		dataMap.put("OT_POST_OPER_DTL2_WOU_I","INSERT INTO OT_POST_OPER_DTL2 (OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,WOUND_TYPE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES (?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
			dataMap.put("OT_POST_OPER_DTL2_WOU_U","UPDATE OT_POST_OPER_DTL2 SET WOUND_TYPE=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SPECIALITY_CODE=?");
   // End Surgeon Record Notes Queries.

		// Start of Queries for  Record Nursing Notes. Created by bala.
			dataMap.put("OT_POST_OPER_SPECIMENS_I","INSERT INTO OT_POST_OPER_SPECIMENS(OPERATING_FACILITY_ID,OPER_NUM,SPECIMEN_DTL,DEPT_CODE,QTY,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES (?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");	
			dataMap.put("OT_POST_OPER_SPECIMENS_U","UPDATE OT_POST_OPER_SPECIMENS SET QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPER_NUM=? AND OPERATING_FACILITY_ID=? AND SPECIMEN_DTL=? AND DEPT_CODE=?");
			dataMap.put("OT_POST_OPER_SPECIMENS_D","DELETE FROM OT_POST_OPER_SPECIMENS WHERE  OPER_NUM=? AND OPERATING_FACILITY_ID=? AND SPECIMEN_DTL=? AND DEPT_CODE=?");
			dataMap.put("OT_POST_OPER_ORGAN_I","INSERT INTO OT_POST_OPER_ORGAN(OPERATING_FACILITY_ID,OPER_NUM,ANATOMICAL_SITE_CODE,DISPOSAL_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,GIVEN_BY,RECEIVED_BY) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?)");
			dataMap.put("OT_POST_OPER_ORGAN_U","UPDATE OT_POST_OPER_ORGAN SET DISPOSAL_CODE=?,GIVEN_BY=?,RECEIVED_BY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND ANATOMICAL_SITE_CODE=?");
			dataMap.put("OT_POST_OPER_ORGAN_D","DELETE FROM OT_POST_OPER_ORGAN WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND ANATOMICAL_SITE_CODE=? AND DISPOSAL_CODE=?");

			//dataMap.put("OT_SURGICAL_ACCESSORIES_INSTRUMENT_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,TRAY_NO,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");

			dataMap.put("OT_SURGICAL_ACCESSORIES_INSTRUMENT_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,TRAY_NO,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,BILL_SUB_REGN_NUM,BILL_SUB_REGN_LINE_NUM,QUANTITY) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?)");


			dataMap.put("OT_SURGICAL_ACCESSORIES_INSTRUMENT_U","UPDATE OT_SURGICAL_ACCESSORIES SET TRAY_NO=?,REMARKS=?,QUANTITY=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");

			dataMap.put("OT_SURGICAL_ACCESSORIES_INSTRUMENT_D","DELETE FROM OT_SURGICAL_ACCESSORIES WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
	
			//dataMap.put("OT_SURGICAL_ACCESSORIES_EQUIPMENTS_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,EQUIPMENT_ID,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");

			dataMap.put("OT_SURGICAL_ACCESSORIES_EQUIPMENTS_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,EQUIPMENT_ID,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,BILL_SUB_REGN_NUM,BILL_SUB_REGN_LINE_NUM,QUANTITY, desired_date) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY HH24:MI'))");


		    dataMap.put("OT_SURGICAL_ACCESSORIES_EQUIPMENTS_U","UPDATE OT_SURGICAL_ACCESSORIES SET EQUIPMENT_ID=?,REMARKS=?,QUANTITY=?, desired_date = TO_DATE(?,'DD/MM/YYYY HH24:MI') WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?	");

			//dataMap.put("OT_SURGICAL_ACCESSORIES_EQUIPMENTS_D","DELETE FROM OT_SURGICAL_ACCESSORIES WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
			//Above Line commented and below line added Against AMRI-CRF-294
			dataMap.put("OT_SURGICAL_ACCESSORIES_EQUIPMENTS_D","UPDATE OT_SURGICAL_ACCESSORIES SET STATUS='99' WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
			
			//dataMap.put("OT_SURGICAL_ACCESSORIES_PACKAGES_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,QUANTITY,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
			
			
			dataMap.put("OT_SURGICAL_ACCESSORIES_PACKAGES_I","INSERT INTO OT_SURGICAL_ACCESSORIES(OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,QUANTITY,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,BILL_SUB_REGN_NUM,BILL_SUB_REGN_LINE_NUM) VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?)");


			dataMap.put("OT_SURGICAL_ACCESSORIES_PACKAGES_U","UPDATE OT_SURGICAL_ACCESSORIES SET QUANTITY=?,REMARKS=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");

			dataMap.put("OT_SURGICAL_ACCESSORIES_PACKAGES_D","DELETE FROM OT_SURGICAL_ACCESSORIES WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
			
			//dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_I","INSERT INTO OT_SURGICAL_ACCESSORIES (OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,QUANTITY,PROSTHESIS_MFR,PROSTHESIS_BATCH_NO,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");

			//dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_I","INSERT INTO OT_SURGICAL_ACCESSORIES (OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,QUANTITY,PROSTHESIS_MFR,PROSTHESIS_BATCH_NO,REMARKS,REQ_STORE_CODE,RESERVED_QTY,REQUESTED_QTY,SALE_DOCUMENT_TYPE,SALE_DOCUMENT_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,BILL_SUB_REGN_NUM,BILL_SUB_REGN_LINE_NUM) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?)");
			// Newly inclueded by sathish on 09/09/09 for crf 677
			dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_I","INSERT INTO OT_SURGICAL_ACCESSORIES (OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,ACCESSORY_CODE,ACCESSORY_TYPE,QUANTITY,PROSTHESIS_MFR,PROSTHESIS_BATCH_NO,REMARKS,REQ_STORE_CODE,RESERVED_QTY,REQUESTED_QTY,SALE_DOCUMENT_TYPE,SALE_DOCUMENT_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,BILL_SUB_REGN_NUM,BILL_SUB_REGN_LINE_NUM,EXCL_INCL_IND, ACTION_REASON_CODE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");

			//dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_U","UPDATE OT_SURGICAL_ACCESSORIES SET QUANTITY=?,PROSTHESIS_MFR=?,PROSTHESIS_BATCH_NO=?,REMARKS=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");

			//dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_U","UPDATE OT_SURGICAL_ACCESSORIES SET QUANTITY=?,PROSTHESIS_MFR=?,PROSTHESIS_BATCH_NO=?,REMARKS=?,EXCL_INCL_IND=?, ACTION_REASON_CODE=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
		
//			dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_U","UPDATE OT_SURGICAL_ACCESSORIES SET QUANTITY=?,PROSTHESIS_MFR=?,PROSTHESIS_BATCH_NO=?,REMARKS=?,EXCL_INCL_IND=?, ACTION_REASON_CODE=?,SALE_DOCUMENT_TYPE = ?, SALE_DOCUMENT_NO =?, BILL_SUB_REGN_NUM =?,BILL_SUB_REGN_LINE_NUM=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");
			dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_U","UPDATE OT_SURGICAL_ACCESSORIES SET QUANTITY=?,PROSTHESIS_MFR=?,PROSTHESIS_BATCH_NO=?,REMARKS=?,EXCL_INCL_IND=?, ACTION_REASON_CODE=?,SALE_DOCUMENT_TYPE = ?, SALE_DOCUMENT_NO =?, BILL_SUB_REGN_NUM =?,BILL_SUB_REGN_LINE_NUM=?,REQ_STORE_CODE=?,REQUESTED_QTY=?  WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");

			dataMap.put("OT_SURGICAL_ACCESSORIES_IMPLANTS_D","DELETE FROM OT_SURGICAL_ACCESSORIES WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND ACCESSORY_CODE=?");

			//dataMap.put("OT_POST_OPER_DTL2_I","INSERT INTO OT_POST_OPER_DTL2 (OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,PREPARATION_TIME,ANEST_PROC_START_TIME,ANEST_PROC_END_TIME,ANEST_START_TIME,ANEST_END_TIME,SURG_START_TIME,SURG_END_TIME, ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES (?,?,?,NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),NVL(TO_DATE(?,'DD/MM/YYYY HH24:MI'),NULL),?,SYSDATE,?,?,?,SYSDATE,?,?)");

			// Commented and modified as below by Bala on 18th April 2008 against SCR-3270
			//dataMap.put("OT_POST_OPER_DTL2_I","INSERT INTO OT_POST_OPER_DTL2 (OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,PREPARATION_TIME,ANEST_PROC_START_TIME,ANEST_PROC_END_TIME,ANEST_START_TIME,ANEST_END_TIME,SURG_START_TIME,SURG_END_TIME, ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,VISITING_PERSONNEL) VALUES (?,?,?,TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),?,SYSDATE,?,?,?,SYSDATE,?,?,?)");
			dataMap.put("OT_POST_OPER_DTL2_I","INSERT INTO OT_POST_OPER_DTL2 (OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,PREPARATION_TIME,ANEST_PROC_START_TIME,ANEST_PROC_END_TIME,ANEST_START_TIME,ANEST_END_TIME,SURG_START_TIME,SURG_END_TIME, ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,VISITING_PERSONNEL,WOUND_TYPE,PREP_START_TIME,PREP_END_TIME) VALUES (?,?,?,TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'),?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,TO_DATE(?,'DD/MM/YYYY HH24:MI'),TO_DATE(?,'DD/MM/YYYY HH24:MI'))");//Modified Against ML-MMOH-CRF-1936
			dataMap.put("OT_POST_OPER_DTL2_U","UPDATE OT_POST_OPER_DTL2 SET PREPARATION_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),ANEST_PROC_START_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),ANEST_PROC_END_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),ANEST_START_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),ANEST_END_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),SURG_START_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),SURG_END_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=?,PREP_START_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI'),PREP_END_TIME=TO_DATE(?,'DD/MM/YYYY HH24:MI') WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SPECIALITY_CODE=?");//Modified Against ML-MMOH-CRF-1936
			dataMap.put("OT_POST_OPER_DTL2_D","DELETE FROM OT_POST_OPER_DTL2 WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SPECIALITY_CODE=?");		
			// Commented and modified as below by Bala on 18th April 2008 against SCR-3270
			//dataMap.put("VISIT_PERSONNEL_I","INSERT INTO OT_POST_OPER_DTL2(OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,VISITING_PERSONNEL,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES (?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
			dataMap.put("VISIT_PERSONNEL_I","INSERT INTO OT_POST_OPER_DTL2(OPERATING_FACILITY_ID,OPER_NUM,SPECIALITY_CODE,VISITING_PERSONNEL,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE, MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,WOUND_TYPE) VALUES (?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?)");
			dataMap.put("VISIT_PERSONNEL_U","UPDATE OT_POST_OPER_DTL2 SET VISITING_PERSONNEL=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SPECIALITY_CODE=?");
			dataMap.put("OT_POST_OPER_PROC_DTLS_I","INSERT INTO OT_POST_OPER_PROC_DTLS (OPERATING_FACILITY_ID,OPER_NUM,OPER_CODE,OPER_LINE_NUM,PROC_CODING_SCHEME,PROC_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
			dataMap.put("OT_POST_OPER_PROC_DTLS_U","UPDATE OT_POST_OPER_PROC_DTLS SET  PROC_CODING_SCHEME=?,PROC_CODE =?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND PROC_CODING_SCHEME=? AND PROC_CODE=?");
			dataMap.put("OT_POST_OPER_PROC_DTLS_D","DELETE FROM OT_POST_OPER_PROC_DTLS WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND OPER_CODE=? AND OPER_LINE_NUM=? AND PROC_CODING_SCHEME=? AND PROC_CODE=?");
			
			//// Nursing Record Notes Queries.

			//Booking sql Repository
			//Sql Repository for Common date Change 
			//By pandian DiaryScheduleSearch.jsp
dataMap.put("SQL_OT_DIARY_DATE_SELECT1","select to_char(SYSDATE,'mm/dd/yyyy') dat1,to_char(SYSDATE,'mm/yyyy') month1,to_char(SYSDATE,'dd/mm/yyyy') dat2 from dual");

//By pandian Schedule.jsp
dataMap.put("SQL_OT_SCHEDULE_SELECT1","select to_char(FROM_TIME,'hh24:mi') FROM_TIME1, to_char(FROM_TIME,'dd/mm/yyyy hh24:mi') FROM_TIME2,to_char(TO_TIME,'hh24:mi') TO_TIME1,PATIENT_ID PATIENT_ID1,PATIENT_NAME PATIENT_NAME1,SURGEON_NAME SURGEON_NAME1,SPECIALITY_DESC SPECIALITY_DESC1,SPECIALITY_CODE  SPECIALITY_CODE1,BOOKING_NUM BOOKING_NUM1, OPER_DESC OPER_DESC1, MULTIPLE_OPERS_YN MULTIPLE_OPERS_YN1,STATUS STATUS1,TOOL_TIP_MSG TOOL_TIP_MSG1  FROM OT_BOOKING_TIME_SLOTS_VW where OPER_ROOM_CODE=? and OPERATING_FACILITY_ID=? and to_char(BOOKING_DATE,'dd/mm/yyyy')=? order by  to_char(FROM_TIME,'hh24:mi')");

//dataMap.put("SQL_OT_SCHEDULE_SELECT2","SELECT LONG_DESC OPER_DESC FROM OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE AND A.BOOKING_NUM = ?");//43967 AND MMS-QH-CRF-0199

dataMap.put("SQL_OT_SCHEDULE_SELECT2","SELECT LONG_DESC OPER_DESC FROM OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPER_CODE = B.OPER_CODE AND A.BOOKING_NUM = ? AND A.OPERATING_FACILITY_ID = ?");//AAKH-SCF-0384 & AMS-SCF-0761

//dataMap.put("SQL_OT_PENDING_SERARCH_SELECT1","SELECT SHORT_NAME SHORT_NAME1 FROM MP_PATIENT_MAST WHERE PATIENT_ID =?");
// Modified By Rajesh For Displaying Patient name in local language

dataMap.put("SQL_OT_PENDING_SERARCH_SELECT1","SELECT decode (?,'en',PATIENT_NAME, NVL(PATIENT_NAME_LOC_LANG,PATIENT_NAME)) SHORT_NAME1 FROM MP_PATIENT WHERE PATIENT_ID =?");

//By pandian PendingOrderSearch.jsp
dataMap.put("SQL_OT_PENDING_DTL_SELECT1","SELECT ORDER_STATUS_CODE ORDER_STATUS_CODE1 FROM OR_ORDER_STATUS_CODE WHERE ORDER_STATUS_TYPE = '15'");

dataMap.put("SQL_OT_PENDING_DTL_SELECT2","SELECT SHORT_DESC FROM OT_PENDING_ORDER_LINE A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.ORDER_ID = ? AND A.ORDER_CATALOG_CODE=B.ORDER_CATALOG_CODE ");


//By pandian OperationStaticDtl.jsp
dataMap.put("SQL_OT_OPERATION_SERARCH_SELECT1","SELECT OPER_CODE OPER_CODE1, OPER_DESC OPER_DESC1, APPL_RIGHT_LEFT_FLAG APPL_RIGHT_LEFT_FLAG1, to_char(OPER_DURN,'hh24:mi') OPER_DURN1, OPER_REMARKS OPER_REMARKS1,ORDER_LINE_NO ORDER_LINE_NO1,SPECIALITY_CODE  FROM OT_PENDING_ORDERS_DTL_VW WHERE ORDER_ID = ? ORDER BY ORDER_LINE_NO");

//By pandian OperationRegisterFrame.jsp
dataMap.put("SQL_OT_COMMON_DATE_SELECT1","select to_char(to_date(?,'dd/mm/yyyy'),'D') from dual");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT1","SELECT PERFORMING_FACILITY_ID PERFORMING_FACILITY_ID1,to_char(PREF_SURG_DATE,'dd/mm/yyyy') PREF_SURG_DATE1, ORDER_TYPE_CODE  ORDER_TYPE_CODE1, TEAM_DOCTOR_IND TEAM_DOCTOR_IND1,PERFORMING_TEAM_SURGEON PERFORMING_TEAM_SURGEON1, PATIENT_ID PATIENT_ID1,ADMISSION_DATE ADMISSION_DATE1, DISCHARGE_DATE DISCHARGE_DATE1,EPISODE_ID EPISODE_ID1,PATIENT_CLASS PATIENT_CLASS1,ENCOUNTER_ID ENCOUNTER_ID1, EPISODE_TYPE EPISODE_TYPE1, VISIT_ID VISIT_ID1, NATURE_TYPE NATURE_TYPE1,SURGERY_NATURE SURGERY_NATURE1,SPECIALITY_CODE SPECIALITY_CODE1, REF_SOURCE_TYPE REF_SOURCE_TYPE1, REF_SOURCE_CODE REF_SOURCE_CODE1,ANAESTHESIA_CODE ANAESTHESIA_CODE1, ANAESTHETIST_CODE ANAESTHETIST_CODE1,WAITLIST_NUM WAITLIST_NUM1, PATIENT_POSITION PATIENT_POSITION1,PRE_OPER_DIAG PRE_OPER_DIAG1,SPECIALITY_DESC FROM OT_PENDING_ORDERS_VW WHERE ORDER_ID = ?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT2","select short_desc short_desc1 from AM_ANAESTHESIA where 	NVL(Eff_Status,'X')='E' and  ANAESTHESIA_CODE=?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT3","select short_name short_name1 from SY_PHYSICIAN_MAST where FACILITY_ID  = ? and  PRACT_TYPE IN ('AN') and  NVL(STATUS,'X') <> 'S' and PHYSICIAN_ID=?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT4","SELECT SHORT_NAME  SHORT_NAME1 FROM SY_PHYSICIAN_MAST WHERE FACILITY_ID = ? AND PRACT_TYPE IN ('MD','SG') AND NVL(STATUS,'X') <> 'S' and PHYSICIAN_ID=?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT5","SELECT SHORT_DESC SHORT_DESC1 FROM OT_NATURE_OF_SURGERY_LANG_VW WHERE LANGUAGE_ID = ? AND NVL(STATUS,'E') = 'E' and NATURE_CODE=?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT6","SELECT SHORT_DESC SHORT_DESC1   FROM OT_POSITION_LANG_VW WHERE LANGUAGE_ID = ? AND NVL(STATUS,'Y') = 'Y' and POSITION_CODE=?");


//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT7","SELECT LONG_DESC SHORT_DESC1 FROM IP_NURSING_UNIT_LANG_VW WHERE  FACILITY_ID =?  AND NVL(EFF_STATUS,'D') = 'E'  and NURSING_UNIT_CODE= ? AND LANGUAGE_ID = ?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT8","SELECT LONG_DESC SHORT_DESC1  FROM   OP_CLINIC_LANG_VW WHERE   FACILITY_ID =?  AND NVL(EFF_STATUS,'D') = 'E'  and CLINIC_CODE=? AND LANGUAGE_ID = ?");


//By pandian OperationProcedureHdr.jsp
//dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT9","SELECT LONG_DESC  SHORT_DESC1 REFERRAL_CODE1 FROM AM_REFERRAL_LANG_VW  WHERE  NVL(EFF_STATUS,'D') = 'E' AND  REFERRAL_CODE =? AND LANGUAGE_ID = ?");
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT9","SELECT LONG_DESC  SHORT_DESC1 FROM AM_REFERRAL_LANG_VW  WHERE  NVL(EFF_STATUS,'D') = 'E' AND  REFERRAL_CODE =? AND LANGUAGE_ID = ?");

dataMap.put("SQL_OT_BOOKING_DTL_SELECT1","SELECT SUM(TO_NUMBER(TO_CHAR(OPER_DURN,'hh24'))) HOUR1,SUM(TO_NUMBER(TO_CHAR(OPER_DURN,'mi'))) MIN1 FROM	  OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B 	 WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID = ? AND A.BOOKING_NUM = ? AND  A.OPER_CODE	= B.OPER_CODE");


//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT10","SELECT PATIENT_NAME SHORT_NAME1, to_char(DATE_OF_BIRTH,'dd/mm/yyyy')  DATE_OF_BIRTH1, SEX SEX1, RACE_CODE RACE_CODE1 FROM MP_PATIENT WHERE PATIENT_ID =?");

//By pandian OperationProcedureHdr.jsp
dataMap.put("SQL_OT_PROCEDURE_HDR_SELECT11","SELECT ENCOUNTER_ID ENCOUNTER_ID1 FROM IP_ADT_TRN    WHERE PATIENT_ID= ?    AND   FACILITY_ID = ?  AND   TRN_TYPE IN ('A', 'D', 'T') AND   TRN_DATE_TIME = (SELECT 	MAX(TRN_DATE_TIME) 	FROM IP_ADT_TRN	 WHERE PATIENT_ID = ?  	AND   FACILITY_ID = ? AND   TRN_TYPE IN ('A', 'D', 'T'))");

//By pandian CollectDuration.jsp
dataMap.put("SQL_OT_COLLECT_DURATION_SELECT1","SELECT TO_CHAR(APPT_TIME,'HH24:MI') APPT_TIME1, TO_CHAR(APPT_TIME,'DD/MM/YYYY HH24:MI') APPT_TIME2 FROM OR_ORDER_CATALOG WHERE ORDER_CATEGORY = 'OT' AND ORDER_CATALOG_CODE = ?");

//By pandian CollectDuration.jsp
dataMap.put("SQL_OT_COLLECT_DURATION_SELECT2","SELECT TO_CHAR(AVG_SURGERY_TIME,'HH24:MI') AVG_SURGERY_TIME1 FROM OT_SURG_OPER_AVG_TIME WHERE  PRACTITIONER_ID = ? AND OPER_CODE = ?");

//BY Pandian OTPICKGENBYDTL
//dataMap.put("SQL_OT_PICGENBYDTL_SELECT1","SELECT SHORT_NAME SHORT_NAME1, DECODE(SEX,'M', 'Male', 'F', 'Female', 'Unknown') SEX1 , DATE_OF_BIRTH DATE_OF_BIRTH1  FROM MP_PATIENT_MAST  WHERE PATIENT_ID = ?");
// Modified by Rajesh for displaying patient name in local language

dataMap.put("SQL_OT_PICGENBYDTL_SELECT1","SELECT DECODE (?,'en',PATIENT_NAME, NVL(PATIENT_NAME_LOC_LANG,PATIENT_NAME)) SHORT_NAME1, DECODE(SEX,'M', 'Male', 'F', 'Female', 'Unknown') SEX1 , DATE_OF_BIRTH DATE_OF_BIRTH1  FROM MP_PATIENT  WHERE PATIENT_ID = ?");

dataMap.put("SQL_OT_PICGENBYDTL_SELECT2","SELECT OPER_NUM  FROM OT_POST_OPER_HDR  WHERE OPERATING_FACILITY_ID = ?  AND OPER_DATE = ?  AND PATIENT_ID = NVL(?, PATIENT_ID)");

//By Pandian OTPICKRIVEWDTL

dataMap.put("SQL_OT_PICGENBYVIEW_SELECT1","SELECT PATIENT_ID PATIENT_ID1, PATIENT_NAME PATIENT_NAME1,to_char( SURGERY_DATE,'dd/mm/yyyy') SURGERY_DATE1,  SURGEON_CODE SURGEON_CODE1, SURGEON_NAME SURGEON_NAME1, BOOKING_NUM BOOKING_NUM1,OPER_CODE OPER_CODE1, OPER_DESC OPER_DESC1 FROM OT_PICK_LIST_VW WHERE OPERATING_FACILITY_ID = ? ");


//By Pandian OTPICKRIVEWITEM

dataMap.put("SQL_OT_PICKVIEWITEM_SELECT1","SELECT ITEM_TYPE ITEM_TYPE1, DECODE(ITEM_TYPE,'I', 'Instrument', 'E', 'Equipment', 'P', 'Package', 'S', 'Implant','R','Resource Type') ITEM_TYPE_DESC1 , ITEM_ID ITEM_ID1, NO_OF_UNITS QTY FROM OT_PICK_LISTS WHERE FINALIZED_YN = 'N' AND	OPERATING_FACILITY_ID 	= ?  AND PATIENT_ID			= ? AND	 TO_CHAR(SURGERY_DATE,'dd/mm/yyyy')		= ? AND	 TEAM_DOCTOR_CODE	= ? AND	 BOOKING_NUM		= ? AND   	 OPER_CODE			= ?");
dataMap.put("SQL_OT_PICKVIEWITEM_SELECT2","SELECT LONG_DESC ITEM_DESC1  FROM OT_INSTRUMENT_LANG_VW WHERE LANGUAGE_ID = ? AND INSTR_CODE = ? AND NVL(STATUS,'E') = 'E'");
dataMap.put("SQL_OT_PICKVIEWITEM_SELECT3","SELECT LONG_DESC ITEM_DESC1 FROM OT_PACKAGE_HDR_LANG_VW WHERE LANGUAGE_ID = ? AND PACKAGE_CODE = ? AND NVL(STATUS,'E') = 'E'");
dataMap.put("SQL_OT_PICKVIEWITEM_SELECT4","SELECT LONG_DESC ITEM_DESC1 FROM OT_EQUIPMENT_LANG_VW WHERE LANGUAGE_ID = ? AND EQUIPMENT_CODE = ? AND NVL(STATUS,'E') = 'E'");
dataMap.put("SQL_OT_PICKVIEWITEM_SELECT5","SELECT SHORT_DESC ITEM_DESC1 FROM OT_PROSTHESIS_LANG_VW WHERE LANGUAGE_ID = ? AND PROSTHESIS_CODE =? AND NVL(STATUS,'E') = 'E'");
dataMap.put("SQL_OT_PICKVIEWITEM_SELECT6","SELECT ROLE_DESC ITEM_DESC1 FROM OT_ROLES_LANG_VW WHERE LANGUAGE_ID = ? AND ROLE_ID =? AND NVL(STATUS,'E') = 'E'");

//By Pandian PreReschedule.jsp
dataMap.put("SQL_OT_PRERESCHEDULE_SELECT1","SELECT OPER_ROOM_CODE OPER_ROOM_CODE1, OPER_ROOM_DESC OPER_ROOM_DESC1, BOOKING_NUM  BOOKING_NUM1,to_char(BOOKING_DATE,'dd/mm/yyyy')  BOOKING_DATE1,to_char(BOOKING_START_TIME ,'hh24:mi') BOOKING_START_TIME1,to_char(BOOKING_END_TIME,'hh24:mi')  BOOKING_END_TIME1,SURGEON_CODE SURGEON_CODE1, SURGEON_NAME SURGEON_NAME1,OPER_TRFR_CODE OPER_TRFR_CODE1,REASON_DESC REASON_DESC1,ACTION_BY_ID ACTION_BY_ID1,to_char(ACTION_DATE,'dd/mm/yyyy')  ACTION_DATE1 FROM OT_BOOKING_RESCHD_DTLS_VW WHERE OPERATING_FACILITY_ID = ? AND BOOKING_NUM = ?");

//dataMap.put("SQL_OT_PRERESCHEDULE_SELECT2","SELECT PATIENT_ID PATIENT_ID1,PATIENT_NAME PATIENT_NAME1, to_char(DATE_OF_BIRTH,'dd/mm/yyyy') DATE_OF_BIRTH1, SEX  SEX1 FROM	  OT_BOOKING_RESCHD_DTLS_VW WHERE OPERATING_FACILITY_ID	= ? AND	  BOOKING_NUM		= ?");
dataMap.put("SQL_OT_PRERESCHEDULE_SELECT2","SELECT  A.PATIENT_ID PATIENT_ID1,DECODE (B.PROTECTION_IND,'5', B.CODED_PSEUDO_NAME,SUBSTR (B.PATIENT_NAME, 1, 60)) PATIENT_NAME1, to_char(B.DATE_OF_BIRTH,'dd/mm/yyyy') DATE_OF_BIRTH1,DECODE (B.SEX, 'M', 'MALE', 'F', 'FEMALE', 'UNKNOWN') SEX1 FROM OT_BOOKING_HDR A,MP_PATIENT B WHERE A.PATIENT_ID = B.PATIENT_ID	AND   A.OPERATING_FACILITY_ID  = ? AND   A.BOOKING_NUM  = ?");


//By Pandian CalendarSlot.jsp

dataMap.put("SQL_OT_CALENDAR_SELECT1","select to_char(to_date(?,'dd/mm/yyyy'),'D') from dual");

dataMap.put("SQL_OT_CALENDAR_SELECT2","SELECT DAY_CODE DAY_CODE1 FROM OT_DAY_OF_WEEK 	WHERE DAY_STATUS = 'H'");

dataMap.put("SQL_OT_CALENDAR_SELECT3","SELECT HOLIDAY_DATE	HOLIDAY_DATE1 FROM OT_HOLIDAY WHERE OPERATING_FACILITY_ID =?");

//By pandian VerificationSearch.jsp 
dataMap.put("SQL_OT_VERIFICATION_SEARCH_SELECT1","SELECT PRE_STAGE_DESC STAGE_DESC1, STAGE_CODE STAGE_CODE1, SERIAL_NO  FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? UNION SELECT 'All Stages', '*A' , 0 SERIAL_NO FROM DUAL ORDER BY SERIAL_NO  ");
//dataMap.put("SQL_OT_VERIFICATION_SEARCH_SELECT1","SELECT PRE_STAGE_DESC STAGE_DESC1, STAGE_CODE STAGE_CODE1,to_char(SYSDATE,'dd/mm/yyyy') SYSDATE1 FROM OT_BOOKING_FIN_STAGES UNION SELECT 'All Stages', '*A' FROM DUAL ORDER BY 2");


//BY pandian VerficationSchSearch.jsp
dataMap.put("SQL_OT_VERIFICATION_SELECT1","SELECT STAGE_CODE STAGE_CODE1, POST_STAGE_DESC POST_STAGE_DESC1, COLOR_IND COLOR_IND1, TEXT_COLOR TEXT_COLOR1 FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? ORDER BY SERIAL_NO");
//commented by SUBRAMANIAN on 06/07/2005 changing POST_STAGE_DESC TO PRE_STAGE_DESC
//dataMap.put("SQL_OT_VERIFICATION_SELECT2","SELECT POST_STAGE_DESC STAGE_DESC1, STAGE_CODE STAGE_CODE1 FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO >(SELECT SERIAL_NO FROM OT_BOOKING_FIN_STAGES 	WHERE STAGE_CODE = ?)");
//dataMap.put("SQL_OT_VERIFICATION_SELECT2","SELECT PRE_STAGE_DESC STAGE_DESC1, STAGE_CODE STAGE_CODE1 FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? AND SERIAL_NO >(SELECT SERIAL_NO FROM OT_BOOKING_FIN_STAGES WHERE STAGE_CODE = ?)");
dataMap.put("SQL_OT_VERIFICATION_SELECT2","SELECT PRE_STAGE_DESC STAGE_DESC1, STAGE_CODE STAGE_CODE1 FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? AND SERIAL_NO >(SELECT SERIAL_NO FROM OT_BOOKING_FIN_STAGES WHERE STAGE_CODE = ?) ORDER BY SERIAL_NO");
dataMap.put("SQL_OT_VERIFICATION_SELECT3","SELECT PRIORITY_DESC PRIORITY_DESC1, PRIORITY_CODE PRIORITY_CODE1 FROM OT_BOOKING_PRIORITY_LANG_VW WHERE LANGUAGE_ID = ? AND NVL(STATUS,'E') = 'E' ORDER BY 1");
dataMap.put("SQL_OT_VERIFICATION_SELECT4","SELECT NVL(PAC_STAGE_YN,'N') PAC_YN1 FROM OT_BOOKING_FIN_STAGES  WHERE  SERIAL_NO = (SELECT MIN(SERIAL_NO)  FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO >= (SELECT SERIAL_NO FROM 	OT_BOOKING_FIN_STAGES WHERE STAGE_CODE =?))");
//commented on 28/05/2005 by bala by changing PRE_STAGE_DESC to POST_STAGE_DESC
//dataMap.put("SQL_OT_VERIFICATION_SELECT5","SELECT STAGE_CODE STAGE_CODE1, SPECIFIC_IND SPECIFIC_IND1,ACTION_IF_NOT_DONE ACTION_IF_NOT_DONE1, /* *PRE_STAGE_DESC PRE_STAGE_DESC1*/ FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO = (SELECT MIN(SERIAL_NO)FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO > ?)");
//dataMap.put("SQL_OT_VERIFICATION_SELECT5","SELECT STAGE_CODE STAGE_CODE1, SPECIFIC_IND SPECIFIC_IND1,ACTION_IF_NOT_DONE ACTION_IF_NOT_DONE1, POST_STAGE_DESC POST_STAGE_DESC1 FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? AND SERIAL_NO = (SELECT MIN(SERIAL_NO)FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO > ?)");
dataMap.put("SQL_OT_VERIFICATION_SELECT5","SELECT STAGE_CODE STAGE_CODE1, SPECIFIC_IND SPECIFIC_IND1,ACTION_IF_NOT_DONE ACTION_IF_NOT_DONE1, POST_STAGE_DESC POST_STAGE_DESC1 FROM OT_BOOKING_FIN_STAGES_LANG_VW WHERE LANGUAGE_ID = ? AND SERIAL_NO = (SELECT MIN(SERIAL_NO)FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO > ?) ORDER BY SERIAL_NO");


dataMap.put("SQL_OT_BOOKINGDTLS_SELECT1","SELECT BOOKING_NUM BOOKING_NUM1, to_char(BOOKING_DATE,'dd/mm/yyyy') BOOKING_DATE1, to_char(BOOKING_START_TIME,'hh24:mi') BOOKING_START_TIME1, to_char(BOOKING_END_TIME,'hh24:mi') BOOKING_END_TIME1,	  PATIENT_ID PATIENT_ID1, PATIENT_NAME PATIENT_NAME1, SEX SEX1, to_char(DATE_OF_BIRTH,'dd/mm/yyyy') DATE_OF_BIRTH1,  ENCOUNTER_ID ENCOUNTER_ID1,	  THEATRE_DESC THEATRE_DESC1, SURGEON_NAME SURGEON_NAME1,SPECIALITY_CODE SPECIALITY_CODE1, SPECIALITY_DESC SPECIALITY_DESC1, ANAESTHETIST_NAME ANAESTHETIST_NAME1, ANAESTHESIA_DESC ANAESTHESIA_DESC1, PATIENT_POSITION_DESC PATIENT_POSITION_DESC1, PRE_OPER_DIAG  PRE_OPER_DIAG1,SOURCE_TYPE SOURCE_TYPE1, SOURCE_CODE SOURCE_CODE1, BOOKING_REMARKS BOOKING_REMARKS1 FROM    OT_BOOKINGS_VW WHERE LANGUAGE_ID =? AND OPERATING_FACILITY_ID 	= ?  AND BOOKING_NUM = ?");
dataMap.put("SQL_OT_PROCEDUREDTLS_SELECT1","SELECT A.OPER_CODE OPER_CODE1, B.LONG_DESC OPER_DESC,  DECODE(NVL(A.APPL_RIGHT_LEFT_FLAG,'X'),'R', 'Right Side', 'L', 'Left Side','B', 'Bilateral') APPL_RIGHT_LEFT_FLAG1, to_char(A.OPER_DURN,'hh24:mi') OPER_DURN1, A.OPER_REMARKS OPER_REMARKS1  FROM	  OT_BOOKING_DTLS A, OT_OPER_MAST_LANG_VW B WHERE B.LANGUAGE_ID = ? AND A.OPERATING_FACILITY_ID 	= ? AND	 A.BOOKING_NUM 	= ?  AND  A.OPER_CODE	= B.OPER_CODE");//MMS-QH-CRF-0199
dataMap.put("SQL_OT_BOOKINGCANCEL_SELECT1","SELECT to_char(SYSDATE,'dd/mm/yyyy hh24:mi') SYSDATE1,APPL_USER_NAME APPL_USER_NAME1  FROM SM_APPL_USER_LANG_VW WHERE APPL_USER_ID = ? AND LANGUAGE_ID = ?");

dataMap.put("SQL_OT_BOOKING_AUTHORIZATION","SELECT BOOK_SCHEDULE_YN BOOK_SCHEDULE_YN1, (SELECT NVL(RESTRICT_THEATRE_BOOKING_YN,'N') FROM OT_PARAM_FOR_FACILITY WHERE OPERATING_FACILITY_ID=A.OPERATING_FACILITY_ID) RESTRICT_THEATRE_BOOKING_YN, NVL(CANCEL_SCHEDULE_YN,'N') CANCEL_SCHEDULE_YN, NVL(TRANSFER_SCHEDULE_YN,'N') TRANSFER_SCHEDULE_YN  FROM OT_BOOKING_ACCESS_RIGHTS A WHERE A.OPERATING_FACILITY_ID =?  AND APPL_USER_ID=?");

dataMap.put("SQL_OT_BOOKING_AUTHORIZATION1","SELECT OVERIDE_SPLTY_RESTRICTION_YN OVERIDE_SPLTY_RESTRICTION_YN1  FROM OT_BOOKING_ACCESS_RIGHTS WHERE OPERATING_FACILITY_ID =?  AND APPL_USER_ID=?");

	// Start of Queries for RD Exams CheckList Function. Created by bshankar.
		dataMap.put("SQL_OT_EXAMS_CHECKLIST_HDR_INSERT","INSERT INTO  RD_REQUEST_CHECK_LSIT_HDR(OPERATING_FACILITY_ID,CHECK_LIST_REF,PATIENT_ID,APPT_REF_NUM,REQUEST_NUM,CHECK_LIST_SRL,CHECK_LIST_CODE,COMPLETED_BY_ID,COMPLETED_BY_DATE,ADDED_BY_ID,ADDED_BY_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_BY_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,DECODE(?,'Y',SYSDATE,'N',''),?,SYSDATE,?,?,?,SYSDATE,?,?)");
		dataMap.put("SQL_OT_EXAMS_CHECKLIST_HDR_UPDATE","UPDATE RD_REQUEST_CHECK_LSIT_HDR SET COMPLETED_BY_ID=?, COMPLETED_BY_DATE=DECODE(?,'Y',SYSDATE,'N',null), MODIFIED_BY_DATE=SYSDATE, MODIFIED_BY_ID=?, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND CHECK_LIST_REF=? AND PATIENT_ID=? AND CHECK_LIST_CODE=? AND CHECK_LIST_SRL=?");

		dataMap.put("SQL_OT_EXAMS_CHECKLIST_DTL_INSERT","INSERT INTO  RD_REQUEST_CHECK_LSIT_DTL(OPERATING_FACILITY_ID,CHECK_LIST_REF,CHECK_LIST_SRL,CHECK_LIST_ITEM_CODE,CHECK_LIST_ITEM_VALUE,CHECK_LIST_REMARKS,ADDED_BY_ID,ADDED_BY_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_BY_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
		dataMap.put("SQL_OT_EXAMS_CHECKLIST_DTL_UPDATE","UPDATE RD_REQUEST_CHECK_LSIT_DTL SET CHECK_LIST_ITEM_VALUE=?, CHECK_LIST_REMARKS=?, MODIFIED_BY_DATE=SYSDATE, MODIFIED_BY_ID=?, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND CHECK_LIST_REF=? AND CHECK_LIST_ITEM_CODE=? AND CHECK_LIST_SRL=?");
		dataMap.put("SQL_OT_EXAMS_RD_APPT_UPDATE","UPDATE RD_APPT SET CHECK_OUT_FROM_WARD_YN=?, CHECK_OUT_FROM_WARD_TIME=SYSDATE, MODIFIED_BY_ID=?, MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?, MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND APPT_REF_NUM=?");

	// End of Queries for RD Exams CheckList Function. Created by bshankar.

	// Start of Queries for Swab Count Function. Created by bshankar.
		dataMap.put("SQL_OT_SWAB_COUNT_VERIFY_INSERT","INSERT INTO  OT_OPER_SWAB_INSTR_CNT_HDR(OPERATING_FACILITY_ID,OPER_NUM,SWAB_SERIAL_NUMBER,BASIC_SET,SUPPLEMENTARY_SET,DISC_IN_FIRST_COUNT,XRAY_PERFORMED,MISSING_ITEM_FOUND,REMARKS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");

		dataMap.put("SQL_OT_SWAB_COUNT_VERIFY_UPDATE","UPDATE OT_OPER_SWAB_INSTR_CNT_HDR SET BASIC_SET=?, SUPPLEMENTARY_SET=?,DISC_IN_FIRST_COUNT=?, XRAY_PERFORMED=?, MISSING_ITEM_FOUND=?, REMARKS=?, MODIFIED_DATE=SYSDATE, MODIFIED_BY_ID=?, MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_NUM=? AND SWAB_SERIAL_NUMBER=?");

	//	dataMap.put("SQL_OT_SLATE_STATUS_TIMES","SELECT TO_CHAR(CHECK_OUT_FROM_WARD_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_FROM_WARD_TIME,TO_CHAR(CHECK_IN_TIME,'DD/MM/YYYY HH24:MI') CHECK_IN_TIME,TO_CHAR(CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY HH24:MI')CHECK_INTO_HOLDING_AREA_TIME,TO_CHAR(CHECK_INTO_OR_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_OR_TIME,TO_CHAR(NURSING_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') NURSING_DOC_COMP_TIME,TO_CHAR(SURGEON_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') SURGEON_DOC_COMP_TIME,TO_CHAR(ANAESTHETIST_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI')ANAESTHETIST_DOC_COMP_TIME FROM OT_POST_OPER_HDR WHERE OPERATING_FACILITY_ID = ? AND OPER_NUM = ? ");
	//dataMap.put("SQL_OT_SLATE_STATUS_TIMES","SELECT TO_CHAR(CASE_CALLED_TIME,'DD/MM/YYYY HH24:MI') CASE_CALLED_TIME,TO_CHAR(CHECK_OUT_FROM_WARD_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_FROM_WARD_TIME FROM OT_QUEUE WHERE OPERATING_FACILITY_ID = ? AND APPT_REF_NUM = ?");

	//dataMap.put("SQL_OT_SLATE_STATUS_TIMES1","SELECT  TO_CHAR(B.CASE_CALLED_TIME,'DD/MM/YYYY HH24:MI') CASE_CALLED_TIME, TO_CHAR(B.CHECK_OUT_FROM_WARD_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_FROM_WARD_TIME,TO_CHAR(A.CHECK_IN_TIME,'DD/MM/YYYY HH24:MI') CHECK_IN_TIME,TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_HOLDING_AREA_TIME, TO_CHAR(A.CHECK_INTO_OR_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_OR_TIME,TO_CHAR(A.NURSING_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') NURSING_DOC_COMP_TIME,TO_CHAR(A.SURGEON_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') SURGEON_DOC_COMP_TIME,TO_CHAR(A.ANAESTHETIST_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') ANAESTHETIST_DOC_COMP_TIME,TO_CHAR(A.RECOVERY_START_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_START_TIME,TO_CHAR(A.RECOVERY_END_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_END_TIME FROM OT_POST_OPER_HDR A, OT_QUEUE B WHERE A.OPERATING_FACILITY_ID = ? AND A.OPER_NUM =? AND A.OPERATING_FACILITY_ID  = B.OPERATING_FACILITY_ID AND A.OPER_NUM= B.OPER_NUM ");
	dataMap.put("SQL_OT_SLATE_STATUS_TIMES","SELECT TO_CHAR(CASE_CALLED_TIME,'DD/MM/YYYY HH24:MI') CASE_CALLED_TIME,TO_CHAR(CHECK_OUT_FROM_WARD_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_FROM_WARD_TIME,HOLDING_AREA_CODE FROM OT_QUEUE WHERE OPERATING_FACILITY_ID = ? AND APPT_REF_NUM = ?");

	//dataMap.put("SQL_OT_SLATE_STATUS_TIMES1","SELECT  TO_CHAR(B.CASE_CALLED_TIME,'DD/MM/YYYY HH24:MI') CASE_CALLED_TIME, TO_CHAR(B.CHECK_OUT_FROM_WARD_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_FROM_WARD_TIME,TO_CHAR(A.CHECK_IN_TIME,'DD/MM/YYYY HH24:MI') CHECK_IN_TIME,CANCELLED_BY,TO_CHAR(CANCELLATION_DATE_TIME,'DD/MM/YYYY HH24:MI') CANCELLATION_DATE_TIME, DECODE(CANCEL_REASON,NULL,'',(SELECT REASON_DESC FROM OT_REASONS_LANG_VW WHERE LANGUAGE_ID = ? AND REASON_CODE = CANCEL_REASON)) CANCEL_REASON, TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_HOLDING_AREA_TIME, TO_CHAR(A.CHECK_INTO_OR_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_OR_TIME,TO_CHAR(A.NURSING_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') NURSING_DOC_COMP_TIME,TO_CHAR(A.SURGEON_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') SURGEON_DOC_COMP_TIME,TO_CHAR(A.ANAESTHETIST_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') ANAESTHETIST_DOC_COMP_TIME,TO_CHAR(A.RECOVERY_START_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_START_TIME,TO_CHAR(A.RECOVERY_END_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_END_TIME,A.HOLDING_AREA_CODE HOLDING_AREA_CODE FROM OT_POST_OPER_HDR A, OT_QUEUE B WHERE A.OPERATING_FACILITY_ID = ? AND A.OPER_NUM =? AND A.OPERATING_FACILITY_ID  = B.OPERATING_FACILITY_ID AND A.OPER_NUM= B.OPER_NUM ");
//Newly added by rajesh on 17/10/2008 for displaying check out time in OT_SLATE
	dataMap.put("SQL_OT_SLATE_STATUS_TIMES1","SELECT  TO_CHAR(A.CHECK_IN_TIME,'DD/MM/YYYY HH24:MI') CHECK_IN_TIME,CANCELLED_BY,TO_CHAR(CANCELLATION_DATE_TIME,'DD/MM/YYYY HH24:MI') CANCELLATION_DATE_TIME, DECODE(CANCEL_REASON,NULL,'',(SELECT REASON_DESC FROM OT_REASONS_LANG_VW WHERE LANGUAGE_ID = ? AND REASON_CODE = CANCEL_REASON)) CANCEL_REASON, TO_CHAR(A.CHECK_INTO_HOLDING_AREA_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_HOLDING_AREA_TIME, TO_CHAR(A.CHECK_INTO_OR_TIME,'DD/MM/YYYY HH24:MI') CHECK_INTO_OR_TIME,TO_CHAR(A.NURSING_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') NURSING_DOC_COMP_TIME,TO_CHAR(A.SURGEON_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') SURGEON_DOC_COMP_TIME,TO_CHAR(A.ANAESTHETIST_DOC_COMP_TIME,'DD/MM/YYYY HH24:MI') ANAESTHETIST_DOC_COMP_TIME,TO_CHAR(A.RECOVERY_START_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_START_TIME,TO_CHAR(A.RECOVERY_END_TIME,'DD/MM/YYYY HH24:MI') RECOVERY_END_TIME,TO_CHAR(A.CHECK_OUT_TIME,'DD/MM/YYYY HH24:MI') CHECK_OUT_TIME FROM OT_POST_OPER_HDR A WHERE A.OPERATING_FACILITY_ID = ? AND A.OPER_NUM =? ");


	// End of Queries for Swab Count Function. Created by bshankar.

	// Queries For Masters------------------------------------------------------------------------
	//Set Components Insert, Modify & Delete(Masters)
	/* Below dataMap is commented for RUT-CRF-0091 and changed OT_INSTRUMENT_COMPONENTS_I & OT_INSTRUMENT_COMPONENTS_U  */
	//dataMap.put("OT_INSTRUMENT_COMPONENTS_I","INSERT INTO OT_INSTRUMENT_COMPONENTS(INSTR_CODE,ITEM_CODE,ITEM_QTY,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_INSTRUMENT_COMPONENTS_I","INSERT INTO OT_INSTRUMENT_COMPONENTS(INSTR_CODE,ITEM_CODE,ITEM_QTY,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_INSTRUMENT_COMPONENTS_U","UPDATE OT_INSTRUMENT_COMPONENTS SET ITEM_QTY=?,STLOCATION=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE INSTR_CODE=? AND ITEM_CODE=?");
	dataMap.put("OT_INSTRUMENT_COMPONENTS_D","DELETE FROM OT_INSTRUMENT_COMPONENTS WHERE INSTR_CODE=? AND ITEM_CODE=?");

	// Surgical Accessories Header only insert
	dataMap.put("OT_OPER_SURGICAL_ACCESSORIES_INSERT","INSERT INTO OT_OPER_SURGICAL_ACCESSORIES(APPLICABILITY,SPECIALITY_CODE ,OPER_CAT_CODE,OPER_SUB_CAT_CODE,OPER_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");

	//Surgical Accessories(Consumables,Equipments,Instruments,Prosthesis,Personnel Required)Detail
	//1.Consumables SQL
	dataMap.put("OT_OPER_PACKAGE_I","INSERT INTO OT_OPER_PACKAGE(OPER_CODE,PACKAGE_CODE,PACKAGE_QTY,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,APPLICABILITY) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");

	dataMap.put("OT_OPER_PACKAGE_U1","UPDATE OT_OPER_PACKAGE SET PACKAGE_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_U2","UPDATE OT_OPER_PACKAGE SET PACKAGE_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_U3","UPDATE OT_OPER_PACKAGE SET PACKAGE_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_U4","UPDATE OT_OPER_PACKAGE SET PACKAGE_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_U5","UPDATE OT_OPER_PACKAGE SET PACKAGE_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND OPER_CODE=? AND PACKAGE_CODE=?");

	dataMap.put("OT_OPER_PACKAGE_D1","DELETE FROM OT_OPER_PACKAGE WHERE APPLICABILITY=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_D2","DELETE FROM OT_OPER_PACKAGE WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_D3","DELETE FROM OT_OPER_PACKAGE WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=?  AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_D4","DELETE FROM OT_OPER_PACKAGE WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=?  AND PACKAGE_CODE=?");
	dataMap.put("OT_OPER_PACKAGE_D5","DELETE FROM OT_OPER_PACKAGE WHERE APPLICABILITY=? AND OPER_CODE=? AND PACKAGE_CODE=?");

	//2.Equipments SQL
	dataMap.put("OT_OPER_EQUIPMENT_I","INSERT INTO OT_OPER_EQUIPMENT(OPER_CODE,EQUIPMENT_CODE,NO_OF_UNITS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,APPLICABILITY) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");
	dataMap.put("OT_OPER_EQUIPMENT_U1","UPDATE OT_OPER_EQUIPMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_U2","UPDATE OT_OPER_EQUIPMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_U3","UPDATE OT_OPER_EQUIPMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_U4","UPDATE OT_OPER_EQUIPMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_U5","UPDATE OT_OPER_EQUIPMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND OPER_CODE=? AND EQUIPMENT_CODE=?");

	dataMap.put("OT_OPER_EQUIPMENT_D1","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_D2","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_D3","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_D4","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND EQUIPMENT_CODE=?");
	//dataMap.put("OT_OPER_EQUIPMENT_D5","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND EQUIPMENT_CODE=?");
	dataMap.put("OT_OPER_EQUIPMENT_D5","DELETE FROM OT_OPER_EQUIPMENT WHERE APPLICABILITY=? AND OPER_CODE=? AND EQUIPMENT_CODE=?");

	//3.Instruments SQL
	dataMap.put("OT_OPER_INSTRUMENT_I","INSERT INTO OT_OPER_INSTRUMENT(OPER_CODE,INSTR_CODE,NO_OF_UNITS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,APPLICABILITY) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");
	dataMap.put("OT_OPER_INSTRUMENT_U1","UPDATE OT_OPER_INSTRUMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_U2","UPDATE OT_OPER_INSTRUMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_U3","UPDATE OT_OPER_INSTRUMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_U4","UPDATE OT_OPER_INSTRUMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_U5","UPDATE OT_OPER_INSTRUMENT SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND OPER_CODE=? AND INSTR_CODE=?");

	dataMap.put("OT_OPER_INSTRUMENT_D1","DELETE FROM OT_OPER_INSTRUMENT WHERE APPLICABILITY=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_D2","DELETE FROM OT_OPER_INSTRUMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_D3","DELETE FROM OT_OPER_INSTRUMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=?  AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_D4","DELETE FROM OT_OPER_INSTRUMENT WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND INSTR_CODE=?");
	dataMap.put("OT_OPER_INSTRUMENT_D5","DELETE FROM OT_OPER_INSTRUMENT WHERE APPLICABILITY=? AND OPER_CODE=? AND INSTR_CODE=?");
	//4.Prosthesis SQL
	dataMap.put("OT_OPER_PROSTHESIS_I","INSERT INTO OT_OPER_PROSTHESIS(OPER_CODE,PROSTHESIS_CODE,NO_OF_UNITS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,APPLICABILITY) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");
	dataMap.put("OT_OPER_PROSTHESIS_U1","UPDATE OT_OPER_PROSTHESIS SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_U2","UPDATE OT_OPER_PROSTHESIS SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_U3","UPDATE OT_OPER_PROSTHESIS SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_U4","UPDATE OT_OPER_PROSTHESIS SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_U5","UPDATE OT_OPER_PROSTHESIS SET NO_OF_UNITS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND OPER_CODE=? AND PROSTHESIS_CODE=?");

	dataMap.put("OT_OPER_PROSTHESIS_D1","DELETE FROM OT_OPER_PROSTHESIS WHERE APPLICABILITY=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_D2","DELETE FROM OT_OPER_PROSTHESIS WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_D3","DELETE FROM OT_OPER_PROSTHESIS WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_D4","DELETE FROM OT_OPER_PROSTHESIS WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND PROSTHESIS_CODE=?");
	dataMap.put("OT_OPER_PROSTHESIS_D5","DELETE FROM OT_OPER_PROSTHESIS WHERE APPLICABILITY=? AND OPER_CODE=? AND PROSTHESIS_CODE=?");

	//5.Personnel Required SQL
	dataMap.put("OT_OPER_PERSONNEL_REQD_I","INSERT INTO OT_OPER_PERSONNEL_REQD(OPER_CODE,ROLE_ID,NO_OF_PERSONS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,APPLICABILITY) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?,?,?)");
	dataMap.put("OT_OPER_PERSONNEL_REQD_U1","UPDATE OT_OPER_PERSONNEL_REQD SET NO_OF_PERSONS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_U2","UPDATE OT_OPER_PERSONNEL_REQD SET NO_OF_PERSONS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_U3","UPDATE OT_OPER_PERSONNEL_REQD SET NO_OF_PERSONS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_U4","UPDATE OT_OPER_PERSONNEL_REQD SET NO_OF_PERSONS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_U5","UPDATE OT_OPER_PERSONNEL_REQD SET NO_OF_PERSONS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=? AND OPER_CODE=? AND ROLE_ID=?");

	dataMap.put("OT_OPER_PERSONNEL_REQD_D1","DELETE FROM OT_OPER_PERSONNEL_REQD WHERE APPLICABILITY=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_D2","DELETE FROM OT_OPER_PERSONNEL_REQD WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_D3","DELETE FROM OT_OPER_PERSONNEL_REQD WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_D4","DELETE FROM OT_OPER_PERSONNEL_REQD WHERE APPLICABILITY=? AND SPECIALITY_CODE=? AND OPER_CAT_CODE=? AND OPER_SUB_CAT_CODE=? AND ROLE_ID=?");
	dataMap.put("OT_OPER_PERSONNEL_REQD_D5","DELETE FROM OT_OPER_PERSONNEL_REQD WHERE APPLICABILITY=? AND OPER_CODE=? AND ROLE_ID=?");

	//Consumable Packs Header Insert & Modify
	//CRF-268 Consumable pack - Rajesh V
	dataMap.put("OT_PACKAGE_HDR_INSERT","INSERT INTO OT_PACKAGE_HDR(PACKAGE_CODE,LONG_DESC,SHORT_DESC,STATUS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,SS_GROUP_CODE) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?)");
	dataMap.put("OT_PACKAGE_HDR_MODIFY","UPDATE OT_PACKAGE_HDR SET LONG_DESC=?,SHORT_DESC=?,STATUS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=?,SS_GROUP_CODE = ?  WHERE PACKAGE_CODE=? ");
	//CRF-268 Consumable pack - Rajesh V	
	//Consumable Packs Detail Insert,Modify & Delete
	//dataMap.put("OT_PACKAGE_DTL_I","INSERT INTO OT_PACKAGE_DTL(PACKAGE_CODE,ITEM_CODE,REQD_QTY,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_PACKAGE_DTL_I","INSERT INTO OT_PACKAGE_DTL(PACKAGE_CODE,ITEM_CODE,REQD_QTY,STATUS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,'E',?,SYSDATE,?,?,?,SYSDATE,?,?)");

	dataMap.put("OT_PACKAGE_DTL_U","UPDATE OT_PACKAGE_DTL SET REQD_QTY=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE  ITEM_CODE=? AND PACKAGE_CODE=? ");
	dataMap.put("OT_PACKAGE_DTL_D","DELETE FROM OT_PACKAGE_DTL WHERE PACKAGE_CODE=? AND ITEM_CODE=? ");

	//Checklist Header Insert & Modify
	dataMap.put("OT_CHECKLIST_HDR_INSERT","INSERT INTO OT_CHECKLIST_HDR(CHECKLIST_CODE,DESCRIPTION,STATUS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_CHECKLIST_HDR_MODIFY","UPDATE OT_CHECKLIST_HDR SET DESCRIPTION=?,STATUS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE CHECKLIST_CODE=?");
	//Checklist Detail Insert,Modify & Delete
	//Maheshwaran K added APPL_FOR_INTRA_OPER for the CHL-CRF-0043 [IN:035927] as on 26/02/2013
	dataMap.put("OT_CHECKLIST_DTL_I","INSERT INTO OT_CHECKLIST_DTL(CHECKLIST_CODE,CHECKLIST_ITEM_CODE,CHECKLIST_ITEM_SRL_NO,APPL_FOR_INTRA_OPER,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_CHECKLIST_DTL_U","UPDATE OT_CHECKLIST_DTL SET CHECKLIST_ITEM_CODE=?,APPL_FOR_INTRA_OPER=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE CHECKLIST_CODE=? AND CHECKLIST_ITEM_SRL_NO=?");
	dataMap.put("OT_CHECKLIST_DTL_D","DELETE FROM OT_CHECKLIST_DTL WHERE CHECKLIST_CODE=? AND CHECKLIST_ITEM_SRL_NO=?");

	// List Items Header Insert & Modify
	dataMap.put("OT_CHECKLIST_LISTVALS_HDR_INSERT","INSERT INTO OT_CHECKLIST_LISTVALS_HDR(LIST_ID,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,LIST_DESC) VALUES(?,?,SYSDATE,?,?,?,SYSDATE,?,?,?)");
	dataMap.put("OT_CHECKLIST_LISTVALS_HDR_MODIFY","UPDATE OT_CHECKLIST_LISTVALS_HDR SET LIST_DESC=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE LIST_ID=?");
	// List Items Detail Insert,Modify & Delete
	dataMap.put("OT_CHECKLIST_LISTVALS_DTL_I","INSERT INTO OT_CHECKLIST_LISTVALS_DTL(LIST_ID,ITEM_DESC,ITEM_VALUE,DEFAULT_VALUE_YN,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_CHECKLIST_LISTVALS_DTL_U","UPDATE OT_CHECKLIST_LISTVALS_DTL SET ITEM_DESC=?,DEFAULT_VALUE_YN=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE LIST_ID=? AND ITEM_VALUE=?");
	dataMap.put("OT_CHECKLIST_LISTVALS_DTL_D","DELETE FROM OT_CHECKLIST_LISTVALS_DTL WHERE LIST_ID=? AND ITEM_VALUE=?");

	//Swab & Instruments Template Header Insert & Modify
	dataMap.put("OT_SWAB_INSTR_TMPL_HDR_INSERT","INSERT INTO OT_SWAB_INSTR_TMPL_HDR(TEMPLATE_ID,DESCRIPTION,STATUS,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_SWAB_INSTR_TMPL_HDR_MODIFY","UPDATE OT_SWAB_INSTR_TMPL_HDR SET DESCRIPTION=?,STATUS=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE TEMPLATE_ID=?");
	//Swab & Instruments Template Detail Insert,Modify & Delete
	dataMap.put("OT_SWAB_INSTR_TMPL_DTL_I","INSERT INTO OT_SWAB_INSTR_TMPL_DTL(TEMPLATE_ID,ITEM_CODE,ITEM_SRL_NO,INITIAL_COUNT,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_SWAB_INSTR_TMPL_DTL_U","UPDATE OT_SWAB_INSTR_TMPL_DTL SET ITEM_CODE=?,INITIAL_COUNT=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE TEMPLATE_ID=? AND ITEM_SRL_NO=?");
	dataMap.put("OT_SWAB_INSTR_TMPL_DTL_D","DELETE FROM OT_SWAB_INSTR_TMPL_DTL WHERE TEMPLATE_ID=? AND ITEM_SRL_NO=?");

	dataMap.put("OT_SPECIALITY_TIME_TABLE_I","INSERT INTO OT_SPECIALITY_TIME_TABLE(OPERATING_FACILITY_ID,OPER_ROOM_CODE,DAY_CODE,SPECIALITY_CODE,START_TIME_DATE,END_TIME_DATE,SCHEDULE_TYPE,FIRST_WEEK_YN,SECOND_WEEK_YN,THIRD_WEEK_YN,FOURTH_WEEK_YN,FIFTH_WEEK_YN,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,TO_DATE(?,'HH24:MI'),TO_DATE(?,'HH24:MI'),?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_SPECIALITY_TIME_TABLE_U","UPDATE OT_SPECIALITY_TIME_TABLE SET START_TIME_DATE=TO_DATE(?,'HH24:MI'), END_TIME_DATE=TO_DATE(?,'HH24:MI'),SCHEDULE_TYPE=?,FIRST_WEEK_YN=?,SECOND_WEEK_YN=?,THIRD_WEEK_YN=?,FOURTH_WEEK_YN=?,FIFTH_WEEK_YN=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE=? AND DAY_CODE=? AND SPECIALITY_CODE=? AND TO_CHAR(START_TIME_DATE,'HH24:MI')=?");
//    dataMap.put("OT_SPECIALITY_TIME_TABLE_D","DELETE FROM OT_SPECIALITY_TIME_TABLE WHERE WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE=? AND DAY_CODE=? AND SPECIALITY_CODE=? AND TO_CHAR(START_TIME_DATE,'HH24:MI')=?");
    dataMap.put("OT_SPECIALITY_TIME_TABLE_D","DELETE FROM OT_SPECIALITY_TIME_TABLE WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE=? AND DAY_CODE=? AND SPECIALITY_CODE=? AND TO_CHAR(START_TIME_DATE,'HH24:MI')=?");
    //CRF-004 Authorize Slots for Booking - Rajesh V 
	dataMap.put("OT_DIARY_TIMETABLE_I","INSERT INTO OT_DIARY_TIMETABLE(OPERATING_FACILITY_ID,OPER_ROOM_CODE,DAY_CODE,RESOURCE_CLASS,RESOURCE_ID,SPECIALITY_CODE,FROM_TIME,TO_TIME,SCHEDULE_TYPE,FIRST_WEEK_YN,SECOND_WEEK_YN,THIRD_WEEK_YN,FOURTH_WEEK_YN,FIFTH_WEEK_YN,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID,AVAILABLE_SLOTS,PERMISSIBLE_SLOTS) VALUES(?,?,?,'D',?,?,TO_DATE(?,'HH24:MI'), TO_DATE(?,'HH24:MI'), ?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?,?,?)");
	dataMap.put("OT_DIARY_TIMETABLE_U","UPDATE OT_DIARY_TIMETABLE SET TO_TIME=TO_DATE(?,'HH24:MI'),SCHEDULE_TYPE=?,FIRST_WEEK_YN=?,SECOND_WEEK_YN=?,THIRD_WEEK_YN=?,FOURTH_WEEK_YN=?,FIFTH_WEEK_YN=?,MODIFIED_BY_ID=?, MODIFIED_DATE=SYSDATE, MODIFIED_AT_WS_NO=?, MODIFIED_FACILITY_ID=?, AVAILABLE_SLOTS = ?, PERMISSIBLE_SLOTS = ?  WHERE OPERATING_FACILITY_ID=? AND OPER_ROOM_CODE=? AND DAY_CODE=? AND RESOURCE_ID=? AND SPECIALITY_CODE=?  AND TO_CHAR(FROM_TIME,'HH24:MI')=?");
	dataMap.put("OT_DIARY_TIMETABLE_D","DELETE FROM OT_DIARY_TIMETABLE WHERE OPERATING_FACILITY_ID=? AND DAY_CODE=? AND RESOURCE_CLASS=? AND RESOURCE_ID=? AND OPER_ROOM_CODE=? AND TO_CHAR(FROM_TIME,'HH24:MI')=? AND TO_CHAR(TO_TIME,'HH24:MI')=? AND SPECIALITY_CODE=? AND SCHEDULE_TYPE=?");
    //CRF-004 Authorize Slots for Booking - Rajesh V 

	//Booking Finalisation Stages Header Insert & Modify
	dataMap.put("OT_BOOKING_FIN_STAGES_INSERT","INSERT INTO OT_BOOKING_FIN_STAGES(STAGE_CODE,PRE_STAGE_DESC ,POST_STAGE_DESC,SERIAL_NO,POSITION_CODE,SPECIFIC_IND,ACTION_IF_NOT_DONE,PAC_STAGE_YN,COLOR_IND,TEXT_COLOR ,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_BOOKING_FIN_STAGES_MODIFY","UPDATE OT_BOOKING_FIN_STAGES SET PRE_STAGE_DESC=?,POST_STAGE_DESC=?,SERIAL_NO=?,POSITION_CODE=?,SPECIFIC_IND=?,ACTION_IF_NOT_DONE=?,PAC_STAGE_YN=?,COLOR_IND=?,TEXT_COLOR=?,MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE STAGE_CODE=?");

	////Booking Finalisation Stages Detail Insert & Delete
	dataMap.put("OT_BOOKING_FIN_STAGES_DTL_I","INSERT INTO OT_BOOKING_FIN_STAGES_DTL(STAGE_CODE,FACILITY_ID,APPL_USER_ID,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	dataMap.put("OT_BOOKING_FIN_STAGES_DTL_D","DELETE FROM OT_BOOKING_FIN_STAGES_DTL WHERE STAGE_CODE=? AND FACILITY_ID=?  AND  APPL_USER_ID=?");

	// added by bshankar. Keys for Surgeon Preferences Master Function.
	dataMap.put("OT_OPER_DR_PREFERENCE_I","INSERT INTO OT_OPER_DR_PREFERENCE(OPER_CODE,TEAM_DOCTOR_CODE,PREF_TYPE,PREF_ID,NO_OF_UNITS,APPLICABILITY,SPECIALITY_CODE,OPER_CAT_CODE,OPER_SUB_CAT_CODE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
	//dataMap.put("OT_OPER_DR_PREFERENCE_U","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE OPER_CODE=NVL(?,OPER_CODE) AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND OPER_CAT_CODE=NVL(?,OPER_CAT_CODE) AND OPER_SUB_CAT_CODE=NVL(?,OPER_SUB_CAT_CODE) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	// Added by Selvam
	/*
	dataMap.put("OT_OPER_DR_PREFERENCE_U_AOPR","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=NVL(?,APPLICABILITY) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SSPL","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=NVL(?,APPLICABILITY) AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SCAT","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=NVL(?,APPLICABILITY) AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND OPER_CAT_CODE=NVL(?,OPER_CAT_CODE) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SSUB","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=NVL(?,APPLICABILITY) AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND OPER_CAT_CODE=NVL(?,OPER_CAT_CODE) AND OPER_SUB_CAT_CODE=NVL(?,OPER_SUB_CAT_CODE) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SOPR","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE APPLICABILITY=NVL(?,APPLICABILITY) AND SPECIALITY_CODE=NVL(?,SPECIALITY_CODE) AND OPER_CAT_CODE=NVL(?,OPER_CAT_CODE) AND OPER_SUB_CAT_CODE=NVL(?,OPER_SUB_CAT_CODE) AND OPER_CODE=NVL(?,OPER_CODE) AND TEAM_DOCTOR_CODE=? AND PREF_TYPE=? AND PREF_ID=?");
	*/
	dataMap.put("OT_OPER_DR_PREFERENCE_U_AOPR","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE NVL(APPLICABILITY,'!')=NVL(?,NVL(APPLICABILITY,'!')) AND NVL(TEAM_DOCTOR_CODE,'!')=NVL(?,NVL(TEAM_DOCTOR_CODE,'!')) AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SSPL","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE NVL(APPLICABILITY,'!')=NVL(?,NVL(APPLICABILITY,'!')) AND NVL(SPECIALITY_CODE,'!')=NVL(?,NVL(SPECIALITY_CODE,'!')) AND NVL(TEAM_DOCTOR_CODE,'!')=NVL(?,NVL(TEAM_DOCTOR_CODE,'!')) AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SCAT","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE NVL(APPLICABILITY,'!')=NVL(?,NVL(APPLICABILITY,'!')) AND NVL(SPECIALITY_CODE,'!')=NVL(?,NVL(SPECIALITY_CODE,'!')) AND NVL(OPER_CAT_CODE,'!')=NVL(?,NVL(OPER_CAT_CODE,'!')) AND NVL(TEAM_DOCTOR_CODE,'!')=NVL(?,NVL(TEAM_DOCTOR_CODE,'!')) AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SSUB","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE NVL(APPLICABILITY,'!')=NVL(?,NVL(APPLICABILITY,'!')) AND NVL(SPECIALITY_CODE,'!')=NVL(?,NVL(SPECIALITY_CODE,'!')) AND NVL(OPER_CAT_CODE,'!')=NVL(?,NVL(OPER_CAT_CODE,'!')) AND NVL(OPER_SUB_CAT_CODE,'!')=NVL(?,NVL(OPER_SUB_CAT_CODE,'!')) AND NVL(TEAM_DOCTOR_CODE,'!')=NVL(?,NVL(TEAM_DOCTOR_CODE,'!')) AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_U_SOPR","UPDATE OT_OPER_DR_PREFERENCE SET NO_OF_UNITS=?, MODIFIED_BY_ID=?,MODIFIED_DATE=SYSDATE,MODIFIED_AT_WS_NO=?,MODIFIED_FACILITY_ID=? WHERE NVL(APPLICABILITY,'!')=NVL(?,NVL(APPLICABILITY,'!')) AND NVL(SPECIALITY_CODE,'!')=NVL(?,NVL(SPECIALITY_CODE,'!')) AND NVL(OPER_CAT_CODE,'!')=NVL(?,NVL(OPER_CAT_CODE,'!')) AND NVL(OPER_SUB_CAT_CODE,'!')=NVL(?,NVL(OPER_SUB_CAT_CODE,'!')) AND NVL(OPER_CODE,'!')=NVL(?,NVL(OPER_CODE,'!')) AND NVL(TEAM_DOCTOR_CODE,'!')=NVL(?,NVL(TEAM_DOCTOR_CODE,'!')) AND PREF_TYPE=? AND PREF_ID=?");
	dataMap.put("OT_OPER_DR_PREFERENCE_D" , "DELETE FROM OT_OPER_DR_PREFERENCE WHERE NVL(OPER_CODE,'X') = NVL(?,'X') AND NVL(TEAM_DOCTOR_CODE,'X')=NVL(?,'X')  AND PREF_TYPE = ? AND PREF_ID = ? AND NVL(APPLICABILITY,'X')=NVL(?,'X') AND NVL(SPECIALITY_CODE,'X')=NVL(?,'X') AND NVL(OPER_CAT_CODE,'X')=NVL(?,'X') AND NVL(OPER_SUB_CAT_CODE,'X') = NVL(?,'X')" );

	//BlockslotsByAgeGroup Insert,Update and Delete
		dataMap.put("OT_OPER_ROOM_PREF_I","INSERT INTO OT_OPER_ROOM_PREF(OPERATING_FACILITY_ID,OPER_ROOM_CODE,FROM_TIME,TO_TIME,AGE_GROUP_CODE,ALERT_TYPE,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) VALUES(?,?,TO_DATE(?'DD/MM/YYYY HH24:MI'),TO_DATE(?'DD/MM/YYYY HH24:MI'),?,?,?,SYSDATE,?,?,?,SYSDATE,?,?)");
		//dataMap.put("OT_OPER_ROOM_PREF_U","UPDATE OT_OPER_ROOM_PREF SET         WHERE            ");
		//dataMap.put("OT_OPER_ROOM_PREF_D","DELETE FROM OT_OPER_ROOM_PREF WHERE ");

	//Added for CRF 298	
	dataMap.put("ALT_FAC_SITE_SETTING","SELECT 1 FROM  SM_SITE_PARAM SITE1, SM_FUNCTION_CONTROL CTRL1 WHERE SITE1.CUSTOMER_ID = CTRL1.SITE_ID AND CTRL1.MODULE_ID = 'OT' AND CTRL1.FUNCTIONALITY_ID = 'ALT_FAC_BOOKING' AND NVL(SITE1.RESTRICT_FCY_BY_CURR_DB_YN, 'N') = 'Y'");

	//Added for MO-CRF-20106
	dataMap.put("ALT_FAC_SITE_SETTING_MOD","SELECT 1 FROM  SM_SITE_PARAM SITE1, SM_FUNCTION_CONTROL CTRL1 WHERE SITE1.CUSTOMER_ID = CTRL1.SITE_ID AND CTRL1.MODULE_ID = 'OT' AND CTRL1.FUNCTIONALITY_ID = 'ALT_FAC_BOOKING'");

	//Added queries for BRU-CRF-006
	dataMap.put("OT_STAFF_ASSIGNMENT_INSERT","INSERT INTO OT_STAFF_ASSIGNMENT (OPERATING_FACILITY_ID, STAFF_ASSIGNMENT_ID, ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, " 
			+  "ROLE_ID, SHOW_WIDGET_YN, FROM_TIME, TO_TIME, ADDED_BY_ID, ADDED_DATE, ADDED_AT_WS_NO, ADDED_FACILITY_ID, MODIFIED_BY_ID, MODIFIED_DATE, " 
			+  "MODIFIED_AT_WS_NO, MODIFIED_FACILITY_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, ?, ?, ?, SYSDATE, ?, ?)");
	dataMap.put("OT_STAFF_ASSIGNMENT_UPDATE", "UPDATE OT_STAFF_ASSIGNMENT SET  STAFF_ID = ?, ROLE_ID = ?, SHOW_WIDGET_YN = ?, FROM_TIME = ?, TO_TIME = ?, " 
			+ "MODIFIED_BY_ID = ?, MODIFIED_DATE = SYSDATE, MODIFIED_AT_WS_NO = ?, MODIFIED_FACILITY_ID = ? WHERE OPERATING_FACILITY_ID = ? " 
			+ "AND ASSIGNMENT_DATE = ? AND OPER_ROOM_CODE = ? AND STAFF_ASSIGNMENT_ID = ?");
	dataMap.put("OT_STAFF_ASSIGNMENT_DELETE", "DELETE FROM OT_STAFF_ASSIGNMENT WHERE STAFF_ASSIGNMENT_ID = ?");
	dataMap.put("OT_STAFF_ASSIGNMENT_HIST_INSERT", "INSERT INTO OT_STAFF_ASSIGNMENT_HIST (OPERATING_FACILITY_ID, STAFF_ASSIGNMENT_HIST_ID, STAFF_ASSIGNMENT_ID, " 
			+ "ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, ROLE_ID, SHOW_WIDGET_YN, FROM_TIME, TO_TIME, ADDED_BY_ID, ADDED_DATE, ADDED_AT_WS_NO, ADDED_FACILITY_ID, " 
			+ "MODIFIED_BY_ID, MODIFIED_DATE, MODIFIED_AT_WS_NO, MODIFIED_FACILITY_ID) SELECT OPERATING_FACILITY_ID, ? STAFF_ASSIGNMENT_HIST_ID, STAFF_ASSIGNMENT_ID, " 
			+ "ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, ROLE_ID, SHOW_WIDGET_YN, FROM_TIME, TO_TIME, ADDED_BY_ID, SYSDATE ADDED_DATE, ADDED_AT_WS_NO, ADDED_FACILITY_ID, " 
			+ "MODIFIED_BY_ID, MODIFIED_DATE, MODIFIED_AT_WS_NO, MODIFIED_FACILITY_ID FROM OT_STAFF_ASSIGNMENT WHERE STAFF_ASSIGNMENT_ID =  ? ");
	dataMap.put("OT_STAFF_ASSIGNMENT_SEQ_SELECT", "SELECT STAFF_ASSIGNMENT_ID_SEQ.NEXTVAL FROM DUAL");
	dataMap.put("OT_STAFF_ASSIGNMENT_HIST_SEQ_SELECT", "SELECT STAFF_ASSIGNMENT_HIST_ID_SEQ.NEXTVAL FROM DUAL");
	dataMap.put("OT_STAFF_ASSIGNMENT_ROOM_SELECT", "SELECT SHORT_DESC  DESCRIPTION, OPER_ROOM_CODE CODE FROM OT_OPER_ROOM_LANG_VW WHERE OPERATING_FACILITY_ID = ? AND LANGUAGE_ID=? order by DESCRIPTION");
	dataMap.put("OT_STAFF_ASSIGNMENT_ROLE_SELECT", "SELECT ROLE_DESC DESCRIPTION,ROLE_ID || '~' || ROLE_TYPE CODE  FROM OT_ROLES_LANG_VW WHERE LANGUAGE_ID = ?  AND NVL(APPL_TO_OT_SLATE,'N') = 'N' AND NVL(STATUS,'E') = 'E' and ROLE_TYPE != 'OS'");
	dataMap.put("OT_STAFF_ASSIGNMENT_SELECT", "SELECT STAFF_ASSIGNMENT_ID, ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, STAFF.ROLE_ID, SHOW_WIDGET_YN, FROM_TIME, TO_TIME, " 
			+ "PRACTITIONER_NAME STAFF_NAME, ROLE_DESC, TO_CHAR(STAFF.MODIFIED_DATE, 'DD/MM/YYYY HH24:MI') MODIFIED_DATE, STAFF.MODIFIED_BY_ID FROM OT_STAFF_ASSIGNMENT STAFF, AM_PRACTITIONER_LANG_VW AM, OT_ROLES_LANG_VW ROLES WHERE " 
			+ "TO_DATE(ASSIGNMENT_DATE,'DD/MM/YYYY') BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND STAFF.STAFF_ID = AM.PRACTITIONER_ID AND AM.LANGUAGE_ID = ?  " 
			+ "AND ROLES.LANGUAGE_ID = ? AND ROLES.ROLE_ID = STAFF.ROLE_ID AND OPERATING_FACILITY_ID = ? AND OPER_ROOM_CODE = ?");
	dataMap.put("OT_STAFF_ASSIGNMENT_HIST_SELECT", "SELECT STAFF_ASSIGNMENT_HIST_ID, STAFF_ASSIGNMENT_ID, ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, STAFF.ROLE_ID, " 
			+ "SHOW_WIDGET_YN, FROM_TIME, TO_TIME, PRACTITIONER_NAME STAFF_NAME, ROLE_DESC, TO_CHAR(STAFF.ADDED_DATE, 'DD/MM/YYYY HH24:MI') MODIFIED_DATE, STAFF.MODIFIED_BY_ID" 
			+ " FROM OT_STAFF_ASSIGNMENT_HIST STAFF, AM_PRACTITIONER_LANG_VW AM, " 
			+ "OT_ROLES_LANG_VW ROLES WHERE TO_DATE(ASSIGNMENT_DATE,'DD/MM/YYYY') BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND STAFF.STAFF_ID = " 
			+ "AM.PRACTITIONER_ID AND AM.LANGUAGE_ID = ?  AND ROLES.LANGUAGE_ID = ? AND ROLES.ROLE_ID = STAFF.ROLE_ID AND OPERATING_FACILITY_ID = ? AND OPER_ROOM_CODE = ? " 
			+ "ORDER BY STAFF_ASSIGNMENT_ID, STAFF.ADDED_DATE  DESC");
	dataMap.put("OT_STAFF_ASSIGNMENT_WITH_HIST_SELECT", "SELECT STAFF_ASSIGNMENT_ID, ASSIGNMENT_DATE, OPER_ROOM_CODE, STAFF_ID, STAFF.ROLE_ID, SHOW_WIDGET_YN, FROM_TIME, TO_TIME, " 
			+ "PRACTITIONER_NAME STAFF_NAME, ROLE_DESC, TO_CHAR(STAFF.MODIFIED_DATE, 'DD/MM/YYYY HH24:MI') MODIFIED_DATE, STAFF.MODIFIED_BY_ID FROM OT_STAFF_ASSIGNMENT STAFF, AM_PRACTITIONER_LANG_VW AM, OT_ROLES_LANG_VW ROLES WHERE " 
			+ "TO_DATE(ASSIGNMENT_DATE,'DD/MM/YYYY') BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND STAFF.STAFF_ID = AM.PRACTITIONER_ID AND AM.LANGUAGE_ID = ?  " 
			+ "AND ROLES.LANGUAGE_ID = ? AND ROLES.ROLE_ID = STAFF.ROLE_ID AND OPERATING_FACILITY_ID = ? AND OPER_ROOM_CODE = ? AND EXISTS " 
			+ "( SELECT 1 FROM  OT_STAFF_ASSIGNMENT_HIST HIST WHERE HIST.STAFF_ASSIGNMENT_ID = STAFF.STAFF_ASSIGNMENT_ID)");
			
	dataMap.put("OT_DISPLAY_MAPPING_INSERT", "INSERT INTO OT_DISPLAY_MAPPING (OPERATING_FACILITY_ID, DISPLAY_STATUS, COLOR_CODE, STATUS_CODE, ADDED_BY_ID, ADDED_DATE, " 
			+ "ADDED_AT_WS_NO, ADDED_FACILITY_ID, MODIFIED_BY_ID, MODIFIED_DATE, MODIFIED_AT_WS_NO, MODIFIED_FACILITY_ID) VALUES(?, ?, ?, ?, ?, SYSDATE, ?, ?, ?, SYSDATE, ?, ?)");
	dataMap.put("OT_DISPLAY_MAPPING_PARAM_UPDATE", "UPDATE OT_PARAM_FOR_FACILITY SET AUTO_REFRESH_YN = ?, REFRESH_INTERVAL = ?, REFRESH_INTERVAL_TIME = ? WHERE  OPERATING_FACILITY_ID = ?");
	dataMap.put("OT_DISPLAY_MAPPING_DELETE", "DELETE FROM OT_DISPLAY_MAPPING WHERE OPERATING_FACILITY_ID = ? AND DISPLAY_STATUS = ?");
	dataMap.put("OT_DISPLAY_MAPPING_SELECT", "SELECT DISPLAY_STATUS, COLOR_CODE, OT.STATUS_CODE, OT.STATUS_DESC, AUTO_REFRESH_YN, REFRESH_INTERVAL, " 
			+ "REFRESH_INTERVAL_TIME  FROM OT_DISPLAY_MAPPING DISP, OT_STATUS_LANG_VW OT, OT_PARAM_FOR_FACILITY PARAM WHERE PARAM.OPERATING_FACILITY_ID = " 
			+ "DISP.OPERATING_FACILITY_ID AND OT.STATUS_CODE = DISP.STATUS_CODE AND OT.LANGUAGE_ID = ? AND DISP.OPERATING_FACILITY_ID = ?");
	dataMap.put("OT_SLATE_STATUS_SELECT", "SELECT STATUS_DESC, STATUS_CODE FROM OT_STATUS_LANG_VW OT WHERE LANGUAGE_ID = ?  ORDER BY 2");
			
	dataMap.put("PATIENT_DASHBOARD_SELECT", "SELECT   0 IS_SCHD, A.PATIENT_ID PATIENT_ID, DECODE (D.SEX, 'M', 'MALE', 'F', 'FEMALE') SEX, 'Emergency' CURRENT_LOCN, " 
			+ "a.oper_status operstatus, NVL(DISPLAY_STATUS,A.STATUS_DESC) STATUS, NVL (color_code, a.color_ind) COLOR_CODE, A.OPER_DATE BKG_DATE, A.OPER_DATE BKG_ST_TIME  FROM OT_UNSCHD_OPERS_VW A, OT_POST_OPER_HDR B ," 
			+ " MP_PATIENT D,OT_DISPLAY_MAPPING MAP WHERE    A.OPERATING_FACILITY_ID = B.OPERATING_FACILITY_ID AND A.OPER_NUM   = B.OPER_NUM   AND A.PATIENT_ID = D.PATIENT_ID " 
			+ "AND A.OPER_STATUS = MAP.STATUS_CODE (+) AND A.OPERATING_FACILITY_ID = ? AND  A.LANGUAGE_ID = ? AND TO_CHAR(A.OPER_DATE, 'DD/MM/YYYY') = ? " 
			+ " UNION SELECT  1 IS_SCHD, A.PATIENT_ID PATIENT_ID, " 
			+ "DECODE (D.SEX, 'M', 'MALE', 'F', 'FEMALE') SEX, OT_PAT_CURR_LOCATION(A.OPERATING_FACILITY_ID,NULL,A.APPT_REF_NUM,NULL,a.language_id) CURRENT_LOCN, " 
			+ "a.oper_status operstatus, NVL(DISPLAY_STATUS,A.STATUS_DESC) STATUS, NVL (color_code, a.color_ind)  COLOR_CODE, A.APPT_DATE BKG_DATE, A.APPT_FROM_TIME BKG_ST_TIME    FROM OT_SCHD_OPERS_VW A, OT_BOOKING_HDR B, " 
			+ "MP_PATIENT D,OT_DISPLAY_MAPPING MAP  WHERE  A.OPERATING_FACILITY_ID = B.OPERATING_FACILITY_ID AND A.APPT_REF_NUM = B.BOOKING_NUM AND A.PATIENT_ID =" 
			+ " D.PATIENT_ID AND A.BOOKING_STAGE IN (SELECT STAGE_CODE FROM OT_BOOKING_FIN_STAGES WHERE SERIAL_NO IN (SELECT MAX (SERIAL_NO) FROM OT_BOOKING_FIN_STAGES)) " 
			+ "AND (A.APPT_DATE = NVL(OPER_DATE, A.APPT_DATE) OR  (A.APPT_DATE + 1) = OPER_DATE )  AND A.OPER_STATUS = MAP.STATUS_CODE (+)  AND A.OPERATING_FACILITY_ID = ? AND  A.LANGUAGE_ID = ? " 
			+ " AND (TO_CHAR(A.APPT_DATE, 'DD/MM/YYYY') = ? OR ( TO_CHAR(OPER_DATE, 'DD/MM/YYYY') = ? AND TO_CHAR(A.APPT_DATE, 'DD/MM/YYYY') = ?))");
	// All the JNDI strings should come here
	 dataMap.put("JNDI_OT_CHECKIN", "java:comp/env/CheckIn");
	 dataMap.put("JNDI_OT_RECORD_SURGEON", "java:comp/env/RecordSurgeon");
	 dataMap.put("JNDI_OT_RECORD_NURSING", "java:comp/env/RecordNursing");
	 dataMap.put("JNDI_AT_POST_ANAESTHESIA", "java:comp/env/PostAnaesthesia");
	 dataMap.put("JNDI_OT_VERIFY_CHECK_LIST", "java:comp/env/VerifyCheckList");
 	 dataMap.put("JNDI_OT_BOOKING", "java:comp/env/Booking");
	 dataMap.put("JNDI_OT_EXAMS_CHECKLIST", "java:comp/env/ExamsCheckList");
	 dataMap.put("JNDI_OT_INSTRUMENT_COUNT", "java:comp/env/InstrumentCount");
	 dataMap.put("JNDI_OT_ADMIN_FUNCTION", "java:comp/env/AdministrativeFunction");	
	 //AAKH-71 Start
	 dataMap.put("SQL_OR_AUTHORISE_ORDER_SELECT_LOCATION_LOOKUP", "SELECT distinct CODE,DESCRIPTION FROM (Select locn_code code, DECODE(PATIENT_CLASS,'DC',IP_GET_DESC.IP_NURSING_UNIT(facility_id,locn_code,?,'2'),'IP',IP_GET_DESC.IP_NURSING_UNIT(facility_id,locn_code,?,'2'),'EM',OP_GET_DESC.OP_CLINIC(facility_id,locn_code,?,'2'),'OP',OP_GET_DESC.OP_CLINIC(facility_id,locn_code,?,'2'),'R',AM_GET_DESC.AM_REFERRAL(locn_code,?,'1') )  description from Or_Pract_For_Locn_Vw where patient_class like ? and nvl(facility_id, ?)  like ? ) ##FILTER## WHERE CODE like UPPER(?) and UPPER(DESCRIPTION) like UPPER(?) order by DESCRIPTION");
	 //dataMap.put("SQL_OR_PAT_ORDER_BY_LOCN_CLINIC_MULTI_PATIENT_PROCEDURE_LOOKUP", "SELECT CLINIC_CODE CODE,LONG_DESC description FROM op_clinic_lang_vw WHERE EFF_STATUS = 'E' AND CLINIC_TYPE = 'E' AND LANGUAGE_ID=?  and upper(CLINIC_CODE) like upper(?) and upper(LONG_DESC) like upper(?)");
	 dataMap.put("SQL_OR_PAT_ORDER_BY_LOCN_CLINIC_MULTI_PATIENT_PROCEDURE_LOOKUP", "SELECT CLINIC_CODE CODE,LONG_DESC description FROM op_clinic_lang_vw WHERE EFF_STATUS = 'E' AND CLINIC_TYPE IN ('C','E') AND LANGUAGE_ID=?  and upper(CLINIC_CODE) like upper(?) and upper(LONG_DESC) like upper(?)");
	//AAKH-71 end
	//dataMap.put("SQL_OT_OR_CATEGORY_TYPE","select distinct ORDER_FIELD_VALUE from or_order_field_values where ORDER_FIELD_MNEMONIC='OT1' and ORDER_FIELD_VALUE!='null' order by ORDER_FIELD_VALUE");//Commented against  MO-CRF-20086
	dataMap.put("SQL_OT_OR_CATEGORY_TYPE","select ALPHANUM_VALUE from OR_ORDER_FIELD_REF_VAL_LANG_VW where ORDER_CATEGORY='OT' and FIELD_MNEMONIC='OT_CATEGORY_TYPE' AND LANGUAGE_ID=?");//Added  against MO-CRF-20086-US1
	}
}
