package eOT.resources;
import java.util.*;
public class OTSqlQueries extends ListResourceBundle implements java.io.Serializable {
	public Object[][] getContents() {
        return contents;
   }
	
	static final Object[][] contents = {
			{"OTINTERNALREP_1","SELECT description, code FROM (SELECT '*All Surgeon' description, '*ALL' code FROM DUAL UNION SELECT short_name description, practitioner_id code FROM am_practitioner_lang_vw WHERE language_id = '#' AND NVL (eff_status, 'E') = 'E' AND practitioner_id IN (SELECT resource_id FROM ot_diary_timetable WHERE resource_class = 'D' AND operating_facility_id = '#')) WHERE UPPER (description) LIKE UPPER (?) AND UPPER (code) LIKE UPPER (?) ORDER BY 1"},
			{"OTINTERNALREP_2","SELECT description, code FROM (SELECT 'All' description, '*ALL' code FROM DUAL UNION SELECT short_name description, practitioner_id code FROM am_practitioner_lang_vw WHERE language_id = '#' AND practitioner_id <> '*ALL' AND pract_type IN (SELECT b.pract_type FROM ot_pract_types_for_role_type b WHERE b.role_type = 'OS') AND NVL (eff_status, 'E') = 'E' AND (   practitioner_id IN (SELECT practitioner_id FROM am_pract_specialities WHERE facility_id = '#' AND speciality_code = '#') OR primary_speciality_code = '#' )) WHERE UPPER (description) LIKE UPPER (?) AND UPPER (code) LIKE UPPER (?) ORDER BY 2"},
			{"OTINTERNALREP_3","SELECT DISTINCT c.practitioner_name surgeon_name1, '' theatre_type_desc1, a.team_doctor_code surgeon_code1, '' speciality_code1, a.oper_room_code oper_room_code1, b.short_desc oper_room_desc1 FROM ot_diary_schedule a, ot_oper_room_lang_vw b, (SELECT x.language_id, x.practitioner_id, x.practitioner_name FROM am_practitioner_lang_vw x WHERE x.language_id = '#' AND x.practitioner_id = '#' AND x.practitioner_id <> '*ALL' UNION SELECT language_id, '*ALL' practitioner_id, 'All' practitioner_name FROM sm_language WHERE language_id = '#') c WHERE b.language_id = '#' AND c.language_id = '#' AND a.operating_facility_id = '#' AND a.operating_facility_id = b.operating_facility_id AND b.oper_room_code = NVL ('#', b.oper_room_code) AND (   a.team_doctor_code = '#' OR a.team_doctor_code = '*ALL' ) AND (   speciality_code = NVL ('#', speciality_code) OR speciality_code = '*ALL' ) AND a.oper_room_code = b.oper_room_code AND a.team_doctor_code = c.practitioner_id AND booking_date BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND ADD_MONTHS (TO_DATE (?, 'dd/mm/yyyy'), 1) ORDER BY '#' "},
			{"OTINTERNALREP_4","SELECT DISTINCT c.practitioner_name surgeon_name1, '' theatre_type_desc1, a.team_doctor_code surgeon_code1, a.speciality_code speciality_code1, a.oper_room_code oper_room_code1, b.short_desc oper_room_desc1 FROM ot_diary_schedule a, ot_oper_room_lang_vw b, (SELECT x.language_id, x.practitioner_id, x.practitioner_name FROM am_practitioner_lang_vw x WHERE x.language_id = '#' AND x.practitioner_id <> '*ALL' UNION SELECT language_id, '*ALL' practitioner_id, 'All' practitioner_name FROM sm_language WHERE language_id = '#') c WHERE b.language_id = '#' AND c.language_id = '#' AND a.operating_facility_id = '#' AND a.operating_facility_id = b.operating_facility_id AND (   speciality_code = NVL ('#', speciality_code) OR speciality_code = '*ALL' ) AND b.oper_room_code = NVL ('#', b.oper_room_code) AND a.oper_room_code = b.oper_room_code AND a.team_doctor_code = c.practitioner_id AND booking_date BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND ADD_MONTHS (TO_DATE (?, 'dd/mm/yyyy'), 1) ORDER BY '#' "},
			{"OTINTERNALREP_5","SELECT description, code FROM (SELECT 'All' description, '*ALL' code FROM DUAL UNION SELECT short_name description, practitioner_id code FROM am_practitioner_lang_vw WHERE language_id = '#' AND practitioner_id <> '*ALL' AND pract_type IN (SELECT pract_type FROM ot_pract_types_for_role_type WHERE role_type = 'OS') AND NVL (eff_status, 'X') <> 'S') WHERE UPPER (description) LIKE UPPER (?) AND UPPER (code) LIKE UPPER (?) ORDER BY 2"},
			{"OTINTERNALREP_6","SELECT RECOVERY_ROOM_DESC DESCRIPTION,RECOVERY_ROOM_CODE CODE FROM OT_RECOVERY_ROOM_LANG_VW WHERE OPERATING_FACILITY_ID='#'and upper(RECOVERY_ROOM_DESC) like upper(?) and upper(RECOVERY_ROOM_CODE) like upper(?) AND LANGUAGE_ID='#' AND STATUS ='E'"}, // Added Against MOHE-SCF-0245
			{"OTINTERNALREP_7","SELECT OPER_CODE CODE, LONG_DESC DESCRIPTION FROM OT_OPER_MAST_LANG_VW WHERE LANGUAGE_ID='##' AND  UPPER(LONG_DESC) LIKE UPPER(?) AND UPPER(OPER_CODE) LIKE UPPER(?) ORDER BY 2"}, // Added Against MOHE-SCF-0245
			
	};
}
