/************************************************************************/
/* OCS MEDICOM VER 1.0                                                   */
/************************************************************************/
/* PROGRAM NAME          : ARBORPST.PC                                  */
/* AUTHOR                : S. SRIRAM                                    */
/* DATE WRITTEN          : 09-FEB-1993                                  */
/*                                                                      */
/* CALLED FROM           :                                                */
/*                                                                      */
/*  FUNCTION             :                                                */
/*                                                                       */
/*  TABLE DETAILS                                                       */
/*                                                                      */
/*        S. No.       TABLENAMES             INPUT/OUTPUT              */
/*                                                                      */
/*         1.        AR_CASHIER              Query/Update               */
/*         2.        GL_ACC_CHART                Lookup                 */
/*         3.        SY_DEPT                     Lookup                 */
/*         4.        GL_PRODUCT_LINE             Lookup                 */
/*         5.        GL_SUBLEDGER_LINE           Lookup                 */
/*         6.        GL_ACC_COMBINATION          Lookup                 */
/*         7.        SY_DOC_CONTROL            Insert/Lookup            */
/*         8.        SY_PROG_CONTROL           Update/Lookup            */
/*         9.        SY_PROG_MESG                Insert                 */
/*                                                                      */
/*  PARAMETERS           :            -                                 */
/*                                                                      */
/*  SUBROUTINES          :                                              */
/*                                                                      */
/*         1.        ERR_MESG            err_mesg                       */
/*         2.        POST                validate_posting_acct          */
/*         3.        POST_DOC            post_doc (GL posting acc val)  */
/*                                                                      */
/*                                                                      */
/************************************************************************/
                           
#include <stdio.h>
#include <math.h>
#include <string.h>
#include "gl.h"

#define OERROR (sqlca.sqlcode < 0)

#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)

#define TABLE_ALREADY_EXISTS (sqlca.sqlcode == -955)

#define RESOURCE_BUSY        (sqlca.sqlcode == -54)

/*                   
extern char OUTPUT_FILE_NAME[75];                   
*/
/*#define DEBUG 1*/


EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd[132];

    int process_rep_flg;
    VARCHAR  p_language_id[4];
   VARCHAR  nd_facility_id   [3],
			nd_session_id    [16],
            nd_pgm_date      [25],
            nd_fm_doc_type   [7],
            nd_to_doc_type   [7],
            nd_fm_doc_num    [10],
            nd_to_doc_num    [10],
            nd_fm_doc_date   [12],
            nd_to_doc_date   [12],
            nd_proc_flag     [2],
            nd_view_print_flg[2],
			interface_code   [2],

            pmnt_terms_code  [3],
            billing_group    [5],  -- CRF-0120
            patient_id       [21],
            patient_flag     [2],
            bl_instal_flag   [2],
            mp_instal_flag   [2],
            nd_error_flag    [2],
            print_flag       [3],
            mast_status      [3],
            d_curr_pgm_name                      [15],
            dummy            [10][5],

            d_last_inv_doc_date           [12],

			nd_acc_entity_code            [5],
			d_module_valid_id             [3],
			d_added_by_id				  [31],
		    d_modified_by_id			  [31],
			d_added_date				  [31],
			d_modified_date				  [31],



            d_sy_acc_bl_instal_flag       [4],
            d_sy_acc_mp_instal_flag       [4],
            d_ar_acc_status               [2],
            d_ar_acc_valid_flag           [2],
            d_customer_status             [2],
            d_customer_patient_flag       [2],
            d_pmnt_terms_status           [2],
            d_bl_blng_grp_status          [2],

            sy_doc_print_flag             [3],
            curr_acc_year                 [5],
            curr_acc_month                [3],
            gl_summ_pro_flag              [2],
            d_sy_num_acc_per              [5],
            prior_post_allow              [3],
            d_chk_amt_local               [19];

 VARCHAR    d_rc_hdr_acc_entity_code               [5],
            d_rc_hdr_doc_type_code                 [7],
            d_rc_hdr_doc_num                       [9],
            d_rc_hdr_party_type_code               [3],
            d_rc_hdr_doc_date                      [15],
            d_rc_hdr_doc_ref                       [11],
            d_rc_hdr_cust_code                     [9],
            d_rc_hdr_main_acc1_code_bk           [7],
            d_rc_hdr_main_acc2_code_bk           [5],
            d_rc_hdr_subl_group_code_bk          [4],
            d_rc_hdr_subl_line_code_bk           [9],
            d_rc_hdr_dept_code_bk                [11],
            d_rc_hdr_pr_group_code_bk            [4],
            d_rc_hdr_pr_line_code_bk             [5],
            d_rc_hdr_main_acc1_code_sp           [7],
            d_rc_hdr_main_acc2_code_sp           [5],
            d_rc_hdr_subl_group_code_sp          [4],
            d_rc_hdr_subl_line_code_sp           [9],
            d_rc_hdr_dept_code_sp                [11],
            d_rc_hdr_pr_group_code_sp            [11],
            d_rc_hdr_pr_line_code_sp             [5],
            d_rc_hdr_amt_foreign                   [17],
            d_rc_hdr_amt_local                     [17],
            d_rc_hdr_narration                     [51],
            d_rc_hdr_post_month                    [3],
            d_rc_hdr_post_year                     [5],
            d_rc_hdr_currency_code                 [7],
            d_rc_hdr_exchg_rate                    [15],
            d_rc_hdr_bank_desc                     [31],
            d_rc_hdr_cheque_num                    [11],
            d_rc_hdr_cheque_date                   [15],
            d_rc_hdr_misc_clong_name           [101],  -- CRF-0120
            d_rc_hdr_misc_cshort_name          [61],  -- CRF-0120
            d_rc_hdr_misc_cadd1_desc           [61],
            d_rc_hdr_misc_cadd2_desc           [61],
            d_rc_hdr_misc_cadd3_desc           [61],
            d_rc_hdr_misc_czip_desc            [31],
            d_rc_hdr_misc_long_name_ch             [101],  -- CRF-0120
            d_rc_hdr_misc_short_name_ch            [101],  -- CRF-0120
            d_rc_hdr_misc_add1_desc_ch             [61],
            d_rc_hdr_misc_add2_desc_ch             [61],
            d_rc_hdr_misc_add3_desc_ch             [61],
            d_rc_hdr_misc_zip_desc_ch              [61],
            d_rc_hdr_tel_num                       [31],
            d_rc_hdr_contact_name                  [101],  -- CRF-0120
            d_rc_hdr_contact_name_title            [61],  -- CRF-0120
            d_rc_hdr_error_flag                    [2],
            d_rc_hdr_print_flag                    [2],
            d_rc_hdr_posted_flag                   [2],
            d_rc_hdr_interface_flag                [2],
            d_rc_hdr_posted_date                   [15],
            d_rc_hdr_posted_by_id                  [21],
            d_rc_hdr_rowid                         [31],
            d_sy_doc_print_flag                    [2];

    VARCHAR rep_date[20],
            comp_name[50],
            oper_id[21],
           d_ar_cust_long_name         [41],
	   d_acct_desc_bank            [65],
	   d_acct_desc_susp            [65],
	   d_conv_date_doc             [12],
	   d_conv_date_bank            [12],
	   nd_conv_fm_date             [12],
	   nd_conv_to_date             [12];
  VARCHAR temp_doc_num[9];

double     d_amt_local;

char  string_var[150];
/* This variable is used for calling post_doc (Posting acc validation)   */

int  d_num_of_acc_periods, nd_no_of_decimal;

/*                                                                       */ 

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

int g_err_typ;

char g_err_id[10],
     g_err_msg[80];

double g_tot = 0;

/* These variables are used for calling post_doc (Posting acc validation) */

int  d_curr_year;
int  d_curr_month;
char d_summ_flag;

/*                                                                         */

FILE *f1;

int page_no,
    line_no,
    first_line;
int	line_num;
char filename[150];

void proc_main(argc,argv)
char *argv[];
int argc;
{
 strcpy(filename,WORKING_DIR);
 strcat(filename,"arborpst.lis");
   if (argc < 5)
   {
    int i = 0;
      disp_message(ERR_MESG,"Not enough Parameters for running this program");
      proc_exit();
   }

   strcpy(g_pgm_id,"ARBORPST");
   strcpy(OUTPUT_FILE_NAME,"ARBORPST.LIS");
   
   strcpy(d_curr_pgm_name.arr,g_pgm_id); 
   d_curr_pgm_name.len = strlen(d_curr_pgm_name.arr); 

   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);

   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   strcpy(nd_pgm_date.arr,argv[3]);
   nd_pgm_date.len = strlen(nd_pgm_date.arr);

   if(sql_connect() == -1)
   {
      disp_message(ERR_MESG,"Error in connecting to Oracle");
      proc_exit();
   }
                     
   /***** CHECKING FOR ACTIVE FLAG IN SY_PROG_CONTROL *****/
   strcpy(g_pgm_date,argv[3]);
   strcpy(g_facility_id,argv[4]);
   set_meduser_role();
   strcpy(p_language_id.arr,l_language_id.arr);
   p_language_id.len = l_language_id.len;
   chk_active();

   nd_fm_doc_type.arr[0]    = '\0';
   nd_fm_doc_num.arr[0]     = '\0';
   nd_fm_doc_date.arr[0]    = '\0';
   nd_to_doc_type.arr[0]    = '\0';
   nd_to_doc_num.arr[0]     = '\0';
   nd_to_doc_date.arr[0]    = '\0';
   nd_proc_flag.arr[0]      = '\0';
   nd_view_print_flg.arr[0] = '\0';
   nd_facility_id.arr[0]   = '\0';

   nd_fm_doc_type.len       = 0;
   nd_fm_doc_num.len        = 0;
   nd_fm_doc_date.len       = 0;
   nd_to_doc_type.len       = 0;
   nd_to_doc_num.len        = 0;
   nd_to_doc_date.len       = 0;
   nd_proc_flag.len         = 0;
   nd_view_print_flg.len    = 0;

   nd_facility_id.len       = 0;
   process_rep_flg          = 0;

   
   EXEC SQL SELECT OPERATING_FACILITY_ID, 
                   PARAM1,
				   PARAM2,
				   PARAM3,
				   PARAM4,
				   PARAM5,
				   PARAM6,
				   PARAM8,
                   PARAM9,
				   PARAM10,
                   TO_CHAR(TO_DATE(PARAM3,'DD/MM/YYYY'),'DD/MM/YYYY'),
		           TO_CHAR(TO_DATE(PARAM6,'DD/MM/YYYY'),'DD/MM/YYYY')
              INTO :nd_facility_id,
			       :nd_fm_doc_type, 
				   :nd_fm_doc_num, 
				   :nd_fm_doc_date,
                   :nd_to_doc_type, 
				   :nd_to_doc_num, 
				   :nd_to_doc_date,
                   :nd_proc_flag,
                   :nd_view_print_flg, 
				   :process_rep_flg,
		           :nd_conv_fm_date, 
				   :nd_conv_to_date
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'ARBORPST'
               AND SESSION_ID = :nd_session_id
               AND PGM_DATE   = :nd_pgm_date;
                  
                 
    

   if (OERROR)
        err_mesg("SELECT failed on table SY_PROG_PARAM",0,"");

   if (NOT_FOUND)
        err_mesg("No Record found in SY_PROG_PARAM",0,"");

   strcpy(temp_doc_num.arr,"");
   temp_doc_num.arr[temp_doc_num.len]        = '\0';

   nd_fm_doc_type.arr[nd_fm_doc_type.len]    = '\0';
   nd_fm_doc_num.arr[nd_fm_doc_num.len]      = '\0';
   nd_fm_doc_date.arr[nd_fm_doc_date.len]    = '\0';
   nd_to_doc_type.arr[nd_to_doc_type.len]    = '\0';
   nd_to_doc_num.arr[nd_to_doc_num.len]      = '\0';
   nd_to_doc_date.arr[nd_to_doc_date.len]    = '\0';
   nd_proc_flag.arr[nd_proc_flag.len]        = '\0';
   nd_view_print_flg.arr[nd_view_print_flg.len]        = '\0';
   nd_conv_fm_date.arr[nd_conv_fm_date.len]  = '\0';
   nd_facility_id.arr[nd_facility_id.len]  = '\0';

 

   start_prog_control();

   start_prog_msg();

   
   delete_records();

   fetch_parameter();

   fetch_detls();


   open_files();
  

   declare_cursor();


    page_no=1;
    line_no=1;
   
   put_inp_parm();

      

   put_hdr();

      

   while (fetch_cur())
   {
      strcpy(nd_error_flag.arr,"N");
      nd_error_flag.len = 1;

      if (!fetch_rec())    /* Fetch all the details & lock Hdr row */
          continue;

   

      validate_posting();

      validate_print_flg();

      if(line_no == 1)
	    put_hdr();
      


	  fetch_cust_dets();

      put_doc_hdr();

	   

      update_err_flg();

	  
     if (nd_error_flag.arr[0] == 'N')
      {
	      if (strcmp(d_rc_hdr_party_type_code.arr, "C") == 0)
          {  
		     
		     ar_posting();
		  }

	         if ((strcmp(d_rc_hdr_party_type_code.arr , "C") == 0) 
	          && (strcmp(interface_code.arr , "O") == 0))
     		  {
		        gl_doc_insert();
                gl_posting(); 
                ins_gl_distrbn(d_rc_hdr_doc_type_code.arr,d_rc_hdr_doc_num.arr,7);
		       }
  
       }   

       EXEC SQL COMMIT WORK;
 
       if (OERROR)
         err_mesg("COMMIT failed",0,""); 
   }
   end_prog_msg();
   end_prog_control();
   print_end_of_rep();
   EXEC SQL COMMIT WORK RELEASE;

   
   fclose(f1);

}

declare_cursor()
{

   EXEC SQL DECLARE CUR_RECEIPTS CURSOR FOR
             SELECT DOC_TYPE_CODE, DOC_NUM
               FROM AR_CASHIER
              WHERE DOC_TYPE_CODE >= NVL(:nd_fm_doc_type,'      ')
                AND DOC_TYPE_CODE <= NVL(:nd_to_doc_type,'~~~~~~')
                AND DOC_NUM       >= NVL(:nd_fm_doc_num,0)
                AND DOC_NUM       <= NVL(:nd_to_doc_num,99999999)
                AND NVL(DOC_DATE,SYSDATE)      >= 
                    NVL(TO_DATE(:nd_fm_doc_date,'DD/MM/YYYY'),to_date('00010101','YYYYDDMM'))
                AND NVL(DOC_DATE,SYSDATE)      <= 
                    NVL(TO_DATE(:nd_to_doc_date,'DD/MM/YYYY'),to_date('47123112','YYYYDDMM'))
                AND NVL(POSTED_FLAG,'N') = 'N';

   EXEC SQL OPEN CUR_RECEIPTS;

   if (OERROR)
         err_mesg("OPEN failed on cursor CUR_RECEIPTS",0,"");

 EXEC SQL DECLARE BL_REC_HDR_CUR CURSOR FOR
           SELECT ACC_ENTITY_CODE,
                  PARTY_TYPE_CODE,
                  TO_CHAR(DOC_DATE,'DD/MON/YYYY'),
                  DOC_REF,
                  CUST_CODE,
                  MAIN_ACC1_CODE_BANK,
                  MAIN_ACC2_CODE_BANK,
                  SUBLEDGER_GROUP_CODE_BANK,
                  SUBLEDGER_LINE_CODE_BANK,
                  DEPT_CODE_BANK,
                  PRODUCT_GROUP_CODE_BANK,
                  PRODUCT_LINE_CODE_BANK,
                  MAIN_ACC1_CODE_SUSP,
                  MAIN_ACC2_CODE_SUSP,
                  SUBLEDGER_GROUP_CODE_SUSP,
                  SUBLEDGER_LINE_CODE_SUSP,
                  DEPT_CODE_SUSP,
                  PRODUCT_GROUP_CODE_SUSP,
                  PRODUCT_LINE_CODE_SUSP,
                  AMT_FOREIGN,
                  AMT_LOCAL,
                  NARRATION,
                  POST_MONTH,
                  POST_YEAR,
                  CURRENCY_CODE,
                  EXCHG_RATE,
                  BANK_DESC,
                  CHEQUE_NUM,
                  TO_CHAR(CHEQUE_DATE,'DD/MON/YYYY'),
                  MISC_CUST_LONG_NAME,
                  MISC_CUST_SHORT_NAME,
                  MISC_CUST_ADD1_DESC,
                  MISC_CUST_ADD2_DESC,
                  MISC_CUST_ADD3_DESC,
                  MISC_CUST_ZIP_DESC,
                  MISC_CUST_LONG_NAME_CHINESE,
                  MISC_CUST_SHORT_NAME_CHINESE,
                  MISC_CUST_ADD1_DESC_CHINESE,
                  MISC_CUST_ADD2_DESC_CHINESE,
                  MISC_CUST_ADD3_DESC_CHINESE,
                  MISC_CUST_ZIP_DESC_CHINESE,
                  TEL_NUM,
                  CONTACT_NAME,
                  CONTACT_NAME_TITLE,
                  PRINT_FLAG,
                  ROWID,
				  ADDED_BY_ID,    
				  MODIFIED_BY_ID,
				  ADDED_DATE  ,
				  MODIFIED_DATE 
             FROM AR_CASHIER
            WHERE DOC_TYPE_CODE = :d_rc_hdr_doc_type_code
              AND DOC_NUM       = :d_rc_hdr_doc_num
              FOR UPDATE OF ERROR_FLAG NOWAIT;
 
   EXEC SQL DECLARE SY_ACC_ENTITY_DOC_TYPE_CUR CURSOR FOR
             SELECT NVL(DOC_PRINT_FLAG,'X')
               FROM GL_ACC_ENTITY_DOC_TYPE_VW
              WHERE DOC_TYPE_CODE   = :d_rc_hdr_doc_type_code;
    
    EXEC SQL DECLARE AR_CUSTOMER_CUR CURSOR FOR
              SELECT DECODE(CHINESE_REPORTING_FLAG,'Y',
                     RPAD(NVL(LONG_NAME_CHINESE,' '),33,' '),RPAD(NVL(LONG_NAME,' '),33,' '))
                FROM AR_CUSTOMER
               WHERE CUST_CODE = :d_rc_hdr_cust_code;

}  

validate_print_flg()
{

      EXEC SQL OPEN SY_ACC_ENTITY_DOC_TYPE_CUR;

      if (OERROR)
         err_mesg("OPEN failed on cursor SY_ACC_ENTITY_DOC_TYPE_CUR",0,"");

      d_sy_doc_print_flag.arr[0]   = '\0';
      d_sy_doc_print_flag.len      = 0;

      EXEC SQL FETCH SY_ACC_ENTITY_DOC_TYPE_CUR
                INTO :d_sy_doc_print_flag;

      if (OERROR)
         err_mesg("FETCH failed on cursor SY_ACC_ENTITY_DOC_TYPE_CUR",0,"");

      d_sy_doc_print_flag.arr[d_sy_doc_print_flag.len] = '\0';

      if (d_sy_doc_print_flag.arr[0] == 'Y' &&
                  d_rc_hdr_print_flag.arr[0] != 'Y')               
                  {
					  error_insert("1","AR7777","Receipt Hdr Print flag is not set to Y");
		              nd_error_flag.arr[0] = 'Y';
        	      }
}

fetch_cur()
{
   d_rc_hdr_doc_type_code.arr[0]     = '\0';
   d_rc_hdr_doc_num.arr[0]           = '\0';

   d_rc_hdr_doc_type_code.len        = 0;
   d_rc_hdr_doc_num.len              = 0;


   EXEC SQL FETCH CUR_RECEIPTS
             INTO :d_rc_hdr_doc_type_code, :d_rc_hdr_doc_num;

   if (OERROR)
         err_mesg("FETCH failed on cursor CUR_RECEIPTS",0,"");

   d_rc_hdr_doc_type_code.arr[d_rc_hdr_doc_type_code.len]     = '\0';
   d_rc_hdr_doc_num.arr[d_rc_hdr_doc_num.len]                 = '\0';

   if (LAST_ROW)
       return(0);
   else
       return(1);
}

fetch_rec()
{
d_rc_hdr_acc_entity_code.arr[0]           = '\0';
d_rc_hdr_party_type_code.arr[0]           = '\0';
d_rc_hdr_doc_date.arr[0]                  = '\0';
d_rc_hdr_doc_ref.arr[0]                   = '\0';
d_rc_hdr_cust_code.arr[0]                 = '\0';
d_rc_hdr_main_acc1_code_bk.arr[0]       = '\0';
d_rc_hdr_main_acc2_code_bk.arr[0]       = '\0';
d_rc_hdr_subl_group_code_bk.arr[0]      = '\0';
d_rc_hdr_subl_line_code_bk.arr[0]       = '\0';
d_rc_hdr_dept_code_bk.arr[0]            = '\0';
d_rc_hdr_pr_group_code_bk.arr[0]        = '\0';
d_rc_hdr_pr_line_code_bk.arr[0]         = '\0';
d_rc_hdr_main_acc1_code_sp.arr[0]       = '\0';
d_rc_hdr_main_acc2_code_sp.arr[0]       = '\0';
d_rc_hdr_subl_group_code_sp.arr[0]      = '\0';
d_rc_hdr_subl_line_code_sp.arr[0]       = '\0';
d_rc_hdr_dept_code_sp.arr[0]            = '\0';
d_rc_hdr_pr_group_code_sp.arr[0]        = '\0';
d_rc_hdr_pr_line_code_sp.arr[0]         = '\0';
d_rc_hdr_amt_foreign.arr[0]               = '\0';
d_rc_hdr_amt_local.arr[0]                 = '\0';
d_rc_hdr_narration.arr[0]                 = '\0';
d_rc_hdr_post_month.arr[0]                = '\0';
d_rc_hdr_post_year.arr[0]                 = '\0';
d_rc_hdr_currency_code.arr[0]             = '\0';
d_rc_hdr_exchg_rate.arr[0]                = '\0';
d_rc_hdr_bank_desc.arr[0]                 = '\0';
d_rc_hdr_cheque_num.arr[0]                = '\0';
d_rc_hdr_cheque_date.arr[0]               = '\0';
d_rc_hdr_misc_clong_name.arr[0]       = '\0';
d_rc_hdr_misc_cshort_name.arr[0]      = '\0';
d_rc_hdr_misc_cadd1_desc.arr[0]       = '\0';
d_rc_hdr_misc_cadd2_desc.arr[0]       = '\0';
d_rc_hdr_misc_cadd3_desc.arr[0]       = '\0';
d_rc_hdr_misc_czip_desc.arr[0]        = '\0';
d_rc_hdr_misc_long_name_ch.arr[0]         = '\0';
d_rc_hdr_misc_short_name_ch.arr[0]        = '\0';
d_rc_hdr_misc_add1_desc_ch.arr[0]         = '\0';
d_rc_hdr_misc_add2_desc_ch.arr[0]         = '\0';
d_rc_hdr_misc_add3_desc_ch.arr[0]         = '\0';
d_rc_hdr_misc_zip_desc_ch.arr[0]          = '\0';
d_rc_hdr_tel_num.arr[0]                   = '\0';
d_rc_hdr_contact_name.arr[0]              = '\0';
d_rc_hdr_contact_name_title.arr[0]        = '\0';
d_rc_hdr_rowid.arr[0]                     = '\0';
d_rc_hdr_print_flag.arr[0]                = '\0';
d_added_by_id.arr[0] = '\0';
d_modified_by_id.arr[0] = '\0';
d_added_date.arr[0] = '\0';
d_modified_date.arr[0] = '\0';


d_rc_hdr_acc_entity_code.len               = 0;
d_rc_hdr_party_type_code.len               = 0;
d_rc_hdr_doc_date.len                      = 0;
d_rc_hdr_doc_ref.len                       = 0;
d_rc_hdr_cust_code.len                     = 0;
d_rc_hdr_main_acc1_code_bk.len           = 0;
d_rc_hdr_main_acc2_code_bk.len           = 0;
d_rc_hdr_subl_group_code_bk.len          = 0;
d_rc_hdr_subl_line_code_bk.len           = 0;
d_rc_hdr_dept_code_bk.len                = 0;
d_rc_hdr_pr_group_code_bk.len            = 0;
d_rc_hdr_pr_line_code_bk.len             = 0;
d_rc_hdr_main_acc1_code_sp.len           = 0;
d_rc_hdr_main_acc2_code_sp.len           = 0;
d_rc_hdr_subl_group_code_sp.len          = 0;
d_rc_hdr_subl_line_code_sp.len           = 0;
d_rc_hdr_dept_code_sp.len                = 0;
d_rc_hdr_pr_group_code_sp.len            = 0;
d_rc_hdr_pr_line_code_sp.len             = 0;
d_rc_hdr_amt_foreign.len                   = 0;
d_rc_hdr_amt_local.len                     = 0;
d_rc_hdr_narration.len                     = 0;
d_rc_hdr_post_month.len                    = 0;
d_rc_hdr_post_year.len                     = 0;
d_rc_hdr_currency_code.len                 = 0;
d_rc_hdr_exchg_rate.len                    = 0;
d_rc_hdr_bank_desc.len                     = 0;
d_rc_hdr_cheque_num.len                    = 0;
d_rc_hdr_cheque_date.len                   = 0;
d_rc_hdr_misc_clong_name.len           = 0;
d_rc_hdr_misc_cshort_name.len          = 0;
d_rc_hdr_misc_cadd1_desc.len           = 0;
d_rc_hdr_misc_cadd2_desc.len           = 0;
d_rc_hdr_misc_cadd3_desc.len           = 0;
d_rc_hdr_misc_czip_desc.len            = 0;
d_rc_hdr_misc_long_name_ch.len             = 0;
d_rc_hdr_misc_short_name_ch.len            = 0;
d_rc_hdr_misc_add1_desc_ch.len             = 0;
d_rc_hdr_misc_add2_desc_ch.len             = 0;
d_rc_hdr_misc_add3_desc_ch.len             = 0;
d_rc_hdr_misc_zip_desc_ch.len              = 0;
d_rc_hdr_tel_num.len                       = 0;
d_rc_hdr_contact_name.len                  = 0;
d_rc_hdr_contact_name_title.len            = 0;
d_rc_hdr_print_flag.len                    = 0;
d_rc_hdr_rowid.len                         = 0;
d_added_by_id.len = 0;
d_modified_by_id.len = 0;
d_added_date.len = 0;
d_modified_date.len = 0;

   EXEC SQL OPEN BL_REC_HDR_CUR;

   if (RESOURCE_BUSY)
       return (0);
   else if (OERROR)
         err_mesg("OPEN failed on cursor BL_REC_HDR_CUR",0,"");

   EXEC SQL FETCH BL_REC_HDR_CUR 
             INTO :d_rc_hdr_acc_entity_code,
                  :d_rc_hdr_party_type_code,
                  :d_rc_hdr_doc_date,
                  :d_rc_hdr_doc_ref,
                  :d_rc_hdr_cust_code,
                  :d_rc_hdr_main_acc1_code_bk,
                  :d_rc_hdr_main_acc2_code_bk,
                  :d_rc_hdr_subl_group_code_bk,
                  :d_rc_hdr_subl_line_code_bk,
                  :d_rc_hdr_dept_code_bk,
                  :d_rc_hdr_pr_group_code_bk,
                  :d_rc_hdr_pr_line_code_bk,
                  :d_rc_hdr_main_acc1_code_sp,
                  :d_rc_hdr_main_acc2_code_sp,
                  :d_rc_hdr_subl_group_code_sp,
                  :d_rc_hdr_subl_line_code_sp,
                  :d_rc_hdr_dept_code_sp,
                  :d_rc_hdr_pr_group_code_sp,
                  :d_rc_hdr_pr_line_code_sp,
                  :d_rc_hdr_amt_foreign,
                  :d_rc_hdr_amt_local,
                  :d_rc_hdr_narration,
                  :d_rc_hdr_post_month,
                  :d_rc_hdr_post_year,
                  :d_rc_hdr_currency_code,
                  :d_rc_hdr_exchg_rate,
                  :d_rc_hdr_bank_desc,
                  :d_rc_hdr_cheque_num,
                  :d_rc_hdr_cheque_date,
                  :d_rc_hdr_misc_clong_name,
                  :d_rc_hdr_misc_cshort_name,
                  :d_rc_hdr_misc_cadd1_desc,
                  :d_rc_hdr_misc_cadd2_desc,
                  :d_rc_hdr_misc_cadd3_desc,
                  :d_rc_hdr_misc_czip_desc,
                  :d_rc_hdr_misc_long_name_ch,
                  :d_rc_hdr_misc_short_name_ch,
                  :d_rc_hdr_misc_add1_desc_ch,
                  :d_rc_hdr_misc_add2_desc_ch,
                  :d_rc_hdr_misc_add3_desc_ch,
                  :d_rc_hdr_misc_zip_desc_ch,
                  :d_rc_hdr_tel_num,
                  :d_rc_hdr_contact_name,
                  :d_rc_hdr_contact_name_title,
                  :d_rc_hdr_print_flag,
                  :d_rc_hdr_rowid,
				  :d_added_by_id,
				  :d_modified_by_id,
				  :d_added_date,
				  :d_modified_date;

    if (OERROR)
         err_mesg("FETCH failed on cursor BL_REC_HDR_CUR",0,"");

d_rc_hdr_acc_entity_code.arr[d_rc_hdr_acc_entity_code.len]             = '\0';
d_rc_hdr_party_type_code.arr[d_rc_hdr_party_type_code.len]             = '\0';
d_rc_hdr_doc_date.arr[d_rc_hdr_doc_date.len]                           = '\0';
d_rc_hdr_doc_ref.arr[d_rc_hdr_doc_ref.len]                             = '\0';
d_rc_hdr_cust_code.arr[d_rc_hdr_cust_code.len]                         = '\0';

d_rc_hdr_main_acc1_code_bk.arr[d_rc_hdr_main_acc1_code_bk.len]     = '\0';
d_rc_hdr_main_acc2_code_bk.arr[d_rc_hdr_main_acc2_code_bk.len]     = '\0';
d_rc_hdr_subl_group_code_bk.arr[d_rc_hdr_subl_group_code_bk.len]   = '\0';
d_rc_hdr_subl_line_code_bk.arr[d_rc_hdr_subl_line_code_bk.len]     = '\0';
d_rc_hdr_dept_code_bk.arr[d_rc_hdr_dept_code_bk.len]               = '\0';
d_rc_hdr_pr_group_code_bk.arr[d_rc_hdr_pr_group_code_bk.len]       = '\0';
d_rc_hdr_pr_line_code_bk.arr[d_rc_hdr_pr_line_code_bk.len]         = '\0';

d_rc_hdr_main_acc1_code_sp.arr[d_rc_hdr_main_acc1_code_sp.len]     = '\0';
d_rc_hdr_main_acc2_code_sp.arr[d_rc_hdr_main_acc2_code_sp.len]     = '\0';
d_rc_hdr_subl_group_code_sp.arr[d_rc_hdr_subl_group_code_sp.len]   = '\0';
d_rc_hdr_subl_line_code_sp.arr[d_rc_hdr_subl_line_code_sp.len]     = '\0';
d_rc_hdr_dept_code_sp.arr[d_rc_hdr_dept_code_sp.len]               = '\0';
d_rc_hdr_pr_group_code_sp.arr[d_rc_hdr_pr_group_code_sp.len]       = '\0';
d_rc_hdr_pr_line_code_sp.arr[d_rc_hdr_pr_line_code_sp.len]         = '\0';

d_rc_hdr_amt_foreign.arr[d_rc_hdr_amt_foreign.len]                     = '\0';
d_rc_hdr_amt_local.arr[d_rc_hdr_amt_local.len]                         = '\0';
d_rc_hdr_narration.arr[d_rc_hdr_narration.len]                         = '\0';
d_rc_hdr_post_month.arr[d_rc_hdr_post_month.len]                       = '\0';
d_rc_hdr_post_year.arr[d_rc_hdr_post_year.len]                         = '\0';
d_rc_hdr_currency_code.arr[d_rc_hdr_currency_code.len]                 = '\0';
d_rc_hdr_exchg_rate.arr[d_rc_hdr_exchg_rate.len]                       = '\0';
d_rc_hdr_bank_desc.arr[d_rc_hdr_bank_desc.len]                         = '\0';
d_rc_hdr_cheque_num.arr[d_rc_hdr_cheque_num.len]                       = '\0';
d_rc_hdr_cheque_date.arr[d_rc_hdr_cheque_date.len]                     = '\0';
d_rc_hdr_misc_clong_name.arr[d_rc_hdr_misc_clong_name.len]     = '\0';
d_rc_hdr_misc_cshort_name.arr[d_rc_hdr_misc_cshort_name.len]   = '\0';
d_rc_hdr_misc_cadd1_desc.arr[d_rc_hdr_misc_cadd1_desc.len]     = '\0';
d_rc_hdr_misc_cadd2_desc.arr[d_rc_hdr_misc_cadd2_desc.len]     = '\0';
d_rc_hdr_misc_cadd3_desc.arr[d_rc_hdr_misc_cadd3_desc.len]     = '\0';
d_rc_hdr_misc_czip_desc.arr[d_rc_hdr_misc_czip_desc.len]       = '\0';
d_rc_hdr_misc_long_name_ch.arr[d_rc_hdr_misc_long_name_ch.len]         = '\0';
d_rc_hdr_misc_short_name_ch.arr[d_rc_hdr_misc_short_name_ch.len]       = '\0';
d_rc_hdr_misc_add1_desc_ch.arr[d_rc_hdr_misc_add1_desc_ch.len]         = '\0';
d_rc_hdr_misc_add2_desc_ch.arr[d_rc_hdr_misc_add2_desc_ch.len]         = '\0';
d_rc_hdr_misc_add3_desc_ch.arr[d_rc_hdr_misc_add3_desc_ch.len]         = '\0';
d_rc_hdr_misc_zip_desc_ch.arr[d_rc_hdr_misc_zip_desc_ch.len]           = '\0';
d_rc_hdr_tel_num.arr[d_rc_hdr_tel_num.len]                             = '\0';
d_rc_hdr_contact_name.arr[d_rc_hdr_contact_name.len]                   = '\0';
d_rc_hdr_contact_name_title.arr[d_rc_hdr_contact_name_title.len]       = '\0';
d_rc_hdr_print_flag.arr[d_rc_hdr_print_flag.len]                       = '\0';
d_rc_hdr_rowid.arr[d_rc_hdr_rowid.len]                                 = '\0';
d_added_by_id.arr[d_added_by_id.len] = '\0';
d_modified_by_id.arr[d_modified_by_id.len] = '\0';
d_added_date.arr[d_added_date.len] = '\0';
d_modified_date.arr[d_modified_date.len] = '\0';

   return(sqlca.sqlerrd[2]);
}                                        

validate_posting()
{
char main_bk[150],main_sp[150];

     strcpy(d_module_valid_id.arr , "AR");


     if (validate_posting_acct( d_rc_hdr_main_acc1_code_bk.arr,
                                d_rc_hdr_main_acc2_code_bk.arr,
                                d_rc_hdr_dept_code_bk.arr,
                                d_rc_hdr_pr_group_code_bk.arr,
                                d_rc_hdr_pr_line_code_bk.arr,
                                d_rc_hdr_subl_group_code_bk.arr,
                                d_rc_hdr_subl_line_code_bk.arr,
                                'N',   /* For chking Bank Reconcile */
								d_module_valid_id.arr,
                                atol(d_rc_hdr_post_year.arr),
								atol(d_rc_hdr_post_month.arr),
								&g_err_typ,
                                g_err_id,
                                g_err_msg
                             ) ==  -1)
     {
	
             if(g_err_typ == 0)
                   err_mesg(g_err_msg,0,"");
             else 
             {              
				  // disp_message(ERR_MESG,"Bank");
                   strcpy(nd_error_flag.arr,"Y");
  sprintf(main_bk,"%s-%s : Invalid Bank Account",d_rc_hdr_main_acc1_code_bk.arr,d_rc_hdr_main_acc2_code_bk.arr);
  error_insert("1","AR7777",main_bk);
 //error_insert("1","AR7777","Invalid Bank Account");
             }
     }
 
     strcpy(d_module_valid_id.arr , "AR"); 

     if (validate_posting_acct( d_rc_hdr_main_acc1_code_sp.arr,
                                d_rc_hdr_main_acc2_code_sp.arr,
                                d_rc_hdr_dept_code_sp.arr,
                                d_rc_hdr_pr_group_code_sp.arr,
                                d_rc_hdr_pr_line_code_sp.arr,
                                d_rc_hdr_subl_group_code_sp.arr,
                                d_rc_hdr_subl_line_code_sp.arr,
                                'N',   /* For chking Bank Reconcile */
								d_module_valid_id.arr,
                                atol(d_rc_hdr_post_year.arr),
								atol(d_rc_hdr_post_month.arr),
                                &g_err_typ,
                                g_err_id,
                                g_err_msg
                             ) ==  -1) 
      {
             if(g_err_typ == 0)
                   err_mesg(g_err_msg,0,"");
             else 
             {
				//disp_message(ERR_MESG,"susp	");
                   strcpy(nd_error_flag.arr,"Y");
                   nd_error_flag.len = 1;
  sprintf(main_sp,"%s-%s : Invalid Susp Account",d_rc_hdr_main_acc1_code_sp.arr,d_rc_hdr_main_acc2_code_sp.arr);
  error_insert("1","AR7777",main_sp);
			 //  error_insert("1","AR7777","Invalid Susp Account");
             }
       }
fflush(stdout);
}

gl_doc_insert()
{
   EXEC SQL INSERT INTO GL_TXN_DOC_HDR
          (
           ACC_ENTITY_CODE,
           DOC_TYPE_CODE,
           BATCH_NUM,
           DOC_NUM,
           DOC_DATE,
           DOC_REF,
           NARRATION,
           POST_MONTH,
           POST_YEAR,
           CTRL_AMT,
           DOC_NATURE,
           UNIT_TYPE_CODE,
           CURRENCY_CODE,
           EXCHG_RATE,
           ERROR_FLAG,
           ADDED_BY_ID,
           MODIFIED_BY_ID,
           ADDED_DATE,
           MODIFIED_DATE,
           MAX_LINE_NUM,
           MODULE_ID,
           TXN_TYPE_DESC,
           STD_JV_REF,
           PRINT_FLAG
           )
      VALUES
         (
           :nd_acc_entity_code,
           :d_rc_hdr_doc_type_code,
           1,
           :d_rc_hdr_doc_num,
           TO_DATE(:d_rc_hdr_doc_date,'DD/MON/YYYY'),
           :d_rc_hdr_cheque_num,
           :d_rc_hdr_narration,
           :d_rc_hdr_post_month,
           :d_rc_hdr_post_year,
           0,
           NULL,
           NULL,
           NULL,
           NULL,
           NULL,
           USER,
           USER,
           SYSDATE,
           SYSDATE,
           2,
           'AR',
           NULL,
           NULL,
           NULL
         );

    if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_HDR",0,"");
            
  EXEC SQL INSERT INTO GL_TXN_DOC_LINE
         (
           ACC_ENTITY_CODE,
           BATCH_NUM,
           DOC_TYPE_CODE,
           DOC_NUM,
           MAIN_ACC1_CODE,
           MAIN_ACC2_CODE,
           SUBLEDGER_GROUP_CODE,
           SUBLEDGER_LINE_CODE,
           DEPT_CODE,
           PRODUCT_GROUP_CODE,
           PRODUCT_LINE_CODE,
           FOREIGN_AMT,
           LOCAL_AMT,
           NARRATION,
           LINE_NUM,
           INTER_ACC_ENTITY,
		   CUST_SUPP_CODE
         )
      VALUES
         (
           :nd_acc_entity_code,
           1,
           :d_rc_hdr_doc_type_code,
           :d_rc_hdr_doc_num,
           :d_rc_hdr_main_acc1_code_bk,
           :d_rc_hdr_main_acc2_code_bk,
           :d_rc_hdr_subl_group_code_bk,
           :d_rc_hdr_subl_line_code_bk,
           :d_rc_hdr_dept_code_bk,
           :d_rc_hdr_pr_group_code_bk,
           :d_rc_hdr_pr_line_code_bk,
           NULL,
           :d_rc_hdr_amt_local,
           :d_rc_hdr_narration,
           '1',
           NULL,
		   :d_rc_hdr_cust_code 
         );

     if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_LINE",0,"");    

  EXEC SQL INSERT INTO GL_TXN_DOC_LINE
         (
           ACC_ENTITY_CODE,
           BATCH_NUM,
           DOC_TYPE_CODE,
           DOC_NUM,
           MAIN_ACC1_CODE,
           MAIN_ACC2_CODE,
           SUBLEDGER_GROUP_CODE,
           SUBLEDGER_LINE_CODE,
           DEPT_CODE,
           PRODUCT_GROUP_CODE,
           PRODUCT_LINE_CODE,
           FOREIGN_AMT,
           LOCAL_AMT,
           NARRATION,
           LINE_NUM,
           INTER_ACC_ENTITY,
		   CUST_SUPP_CODE
         )
      VALUES
         (
           :nd_acc_entity_code,
           1,
           :d_rc_hdr_doc_type_code,
           :d_rc_hdr_doc_num,
           :d_rc_hdr_main_acc1_code_sp,
           :d_rc_hdr_main_acc2_code_sp,
           :d_rc_hdr_subl_group_code_sp,
           :d_rc_hdr_subl_line_code_sp,
           :d_rc_hdr_dept_code_sp,
           :d_rc_hdr_pr_group_code_sp,
           :d_rc_hdr_pr_line_code_sp,
           NULL,
           :d_rc_hdr_amt_local * -1,
           :d_rc_hdr_narration,
           '2',
           NULL,
		   :d_rc_hdr_cust_code
         );

     if (OERROR)
         err_mesg("INSERT failed on table GL_TXN_DOC_LINE - for line 2",0,"");

}    

ar_posting()
{
   EXEC SQL INSERT INTO SY_DOC_CONTROL
      (
         ACC_ENTITY_CODE,
         MODULE_ID,
         DOC_TYPE_CODE,
         DOC_NUM,
         DOC_DATE,
         POSTED_DATE,
         DOC_STATUS,
         NARRATION,
         POST_MONTH,
         POST_YEAR,
         ADDED_BY_ID,
         MODIFIED_BY_ID,
         ADDED_DATE,
         MODIFIED_DATE
      )
   VALUES 
      (
         :d_rc_hdr_acc_entity_code,
         'AR',
         :d_rc_hdr_doc_type_code,
         :d_rc_hdr_doc_num,
         TO_DATE(:d_rc_hdr_doc_date,'DD/MON/YYYY'),
         SYSDATE,
         'P',
         :d_rc_hdr_narration,
         :d_rc_hdr_post_month,
         :d_rc_hdr_post_year,
         USER,
         USER,
         SYSDATE,
         SYSDATE
       );

   if (OERROR)
         err_mesg("INSERT failed on table SY_DOC_CONTROL",0,"");


   EXEC SQL INSERT INTO AR_REC_HDR
      (
         ACC_ENTITY_CODE,
         DOC_TYPE_CODE,
         DOC_NUM,
         LAST_LINE_NUM,
         DOC_DATE,
         DOC_REF,
         CUST_CODE,
         MAIN_ACC1_CODE,
         MAIN_ACC2_CODE,
         SUBLEDGER_GROUP_CODE,
         SUBLEDGER_LINE_CODE,
         DEPT_CODE,
         PRODUCT_GROUP_CODE,
         PRODUCT_LINE_CODE,
         AMT_FOREIGN,
         AMT_LOCAL,
         NARRATION,
         POST_MONTH,
         POST_YEAR,
         CURRENCY_CODE,
         EXCHG_RATE,
         BANK_DESC,
         CHEQUE_NUM,
         CHEQUE_DATE,
         MISC_CUST_LONG_NAME,
         MISC_CUST_SHORT_NAME,
         MISC_CUST_ADD1_DESC,
         MISC_CUST_ADD2_DESC,
         MISC_CUST_ADD3_DESC,
         MISC_CUST_ZIP_DESC,
         MISC_CUST_LONG_NAME_CHINESE,
         MISC_CUST_SHORT_NAME_CHINESE,
         MISC_CUST_ADD1_DESC_CHINESE,
         MISC_CUST_ADD2_DESC_CHINESE,
         MISC_CUST_ADD3_DESC_CHINESE,
         MISC_CUST_ZIP_DESC_CHINESE,
         TEL_NUM,
         CONTACT_NAME,
         CONTACT_NAME_TITLE,
         PRINT_FLAG,
         INTERFACE_FLAG,
		 ADDED_BY_ID,    
		 MODIFIED_BY_ID,
		 ADDED_DATE ,    
		 MODIFIED_DATE  
       )
     VALUES
       (
        :d_rc_hdr_acc_entity_code,
        :d_rc_hdr_doc_type_code,
        :d_rc_hdr_doc_num,
        '0',
        TO_DATE(:d_rc_hdr_doc_date,'DD/MON/YYYY'),
        :d_rc_hdr_doc_ref,
        :d_rc_hdr_cust_code,
        :d_rc_hdr_main_acc1_code_sp,
        :d_rc_hdr_main_acc2_code_sp,
        :d_rc_hdr_subl_group_code_sp,
        :d_rc_hdr_subl_line_code_sp,
        :d_rc_hdr_dept_code_sp,
        :d_rc_hdr_pr_group_code_sp,
        :d_rc_hdr_pr_line_code_sp,
        :d_rc_hdr_amt_foreign,
        :d_rc_hdr_amt_local,
        :d_rc_hdr_narration,
        :d_rc_hdr_post_month,
        :d_rc_hdr_post_year,
        :d_rc_hdr_currency_code,
        :d_rc_hdr_exchg_rate,
        :d_rc_hdr_bank_desc,
        :d_rc_hdr_cheque_num,
        TO_DATE(:d_rc_hdr_cheque_date,'DD/MON/YYYY'),
        :d_rc_hdr_misc_clong_name,
        :d_rc_hdr_misc_cshort_name,
        :d_rc_hdr_misc_cadd1_desc,
        :d_rc_hdr_misc_cadd2_desc,
        :d_rc_hdr_misc_cadd3_desc,
        :d_rc_hdr_misc_czip_desc,
        :d_rc_hdr_misc_long_name_ch,
        :d_rc_hdr_misc_short_name_ch,
        :d_rc_hdr_misc_add1_desc_ch,
        :d_rc_hdr_misc_add2_desc_ch,
        :d_rc_hdr_misc_add3_desc_ch,
        :d_rc_hdr_misc_zip_desc_ch,
        :d_rc_hdr_tel_num,
        :d_rc_hdr_contact_name,
        :d_rc_hdr_contact_name_title,
        'Y',
        'N',
		:d_added_by_id,
		:d_modified_by_id,
		:d_added_date,
		:d_modified_date
		
       );

}

gl_posting()
{
 char r_err_msg[100];




 if (post_doc((long)1,d_rc_hdr_doc_type_code.arr,atol(d_rc_hdr_doc_num.arr),
            r_err_msg) == -1)
        err_mesg(r_err_msg,0,""); 



   return (0);
}

delete_gl_recs()
{
 EXEC SQL DELETE FROM GL_TXN_DOC_HDR 
                WHERE DOC_TYPE_CODE = :d_rc_hdr_doc_type_code
                  AND DOC_NUM       = :d_rc_hdr_doc_num;

  if (OERROR)
         err_mesg("DELETE failed on table GL_TXN_DOC_HDR",0,"");

 EXEC SQL DELETE FROM GL_TXN_DOC_LINE
                WHERE DOC_TYPE_CODE = :d_rc_hdr_doc_type_code
                  AND DOC_NUM       = :d_rc_hdr_doc_num;

  if (OERROR)
         err_mesg("DELETE failed on table GL_TXN_DOC_LINE",0,"");

}

/*----------------------------------- */

error_insert(line_no,msg_id,msg_text)
char line_no[],msg_id[],msg_text[];
{
   
   EXEC SQL BEGIN DECLARE SECTION;

     VARCHAR ar_line_no[5],
             ar_err_code[7],
             l_ar_doc_error_text[71],
             l_doc_type_code_ref[7],
             l_doc_num_ref[9];

   EXEC SQL END DECLARE SECTION;

   char l_ch_amt1[25],
        l_ch_tot_amt[25];

   strcpy(ar_err_code.arr,msg_id);
   ar_err_code.len = strlen(ar_err_code.arr);
   strcpy(l_ar_doc_error_text.arr,msg_text);
   l_ar_doc_error_text.len = strlen(l_ar_doc_error_text.arr);
      
   l_ar_doc_error_text.arr[l_ar_doc_error_text.len] = '\0';
 
   if (strcmp(d_rc_hdr_doc_num.arr,temp_doc_num.arr) != 0){
       line_num = 1;
strcpy(temp_doc_num.arr,d_rc_hdr_doc_num.arr);   
	   }
   else {
	line_num++;
	   }

   sprintf(ar_line_no.arr,"%d",line_num);
   ar_line_no.len = strlen(ar_line_no.arr);

   EXEC SQL INSERT INTO AR_DOC_ERROR
                   (PGM_ID,
                    DOC_TYPE_CODE,    DOC_NUM,
                    LINE_NUM,         ERROR_CODE,
                    ERROR_TEXT,
                    DOC_TYPE_CODE_REF, DOC_NUM_REF)
            VALUES (:d_curr_pgm_name,:d_rc_hdr_doc_type_code,
                    :d_rc_hdr_doc_num,
                    :ar_line_no,      :ar_err_code,
                    :l_ar_doc_error_text,NULL,NULL);
                   // :l_doc_type_code_ref,:l_doc_num_ref);

    if (OERROR)
   {
     sprintf(string_var,"doc type is <%s> - <%d>\n",d_rc_hdr_doc_type_code.arr,d_rc_hdr_doc_type_code.len);
    // disp_message(ORA_MESG,string_var);
     sprintf(string_var,"doc num is <%s> - <%d>\n",d_rc_hdr_doc_num.arr,d_rc_hdr_doc_num.len);
    // disp_message(ORA_MESG,string_var);
     sprintf(string_var,"line no is <%s> - <%d>\n",ar_line_no.arr,ar_line_no.len);
   //  disp_message(ORA_MESG,string_var);
     sprintf(string_var,"err is <%s> - <%d>\n",ar_err_code.arr,ar_err_code.len);
     //disp_message(ORA_MESG,string_var);
     err_mesg("INSERT failed on table AR_DOC_ERROR",0,"");
   }

   strcpy(nd_error_flag.arr,"Y");
   nd_error_flag.len = 1;
}


delete_records()
{
    while (1)
    {
       EXEC SQL DELETE FROM AR_DOC_ERROR 
                      WHERE PGM_ID = :d_curr_pgm_name
                        AND ROWNUM < 500;

       if (OERROR)
         err_mesg("DELETE failed on table AR_DOC_ERROR",0,"");

       EXEC SQL COMMIT WORK;
       if (OERROR)
            err_mesg("COMMIT failed",0,""); 

       if (NOT_FOUND)
             break;
    }
}



/*----------------------------------- */

update_err_flg()
{

  if (nd_error_flag.arr[0] == 'Y')
  {
       EXEC SQL UPDATE AR_CASHIER 
                   SET ERROR_FLAG = :nd_error_flag
                 WHERE ROWID      = :d_rc_hdr_rowid;

       if (OERROR)
            err_mesg("UPDATE failed on table AR_CASHIER",0,"");
   }
   else
   {
       EXEC SQL UPDATE AR_CASHIER
                   SET ERROR_FLAG      = :nd_error_flag,
                       POSTED_FLAG     = 'Y',
                       INTERFACE_FLAG  = DECODE(:interface_code,'O','Y','N'),
                       POSTED_DATE     = SYSDATE,
                       POSTED_BY_ID    = USER
                 WHERE ROWID           = :d_rc_hdr_rowid;
 
       if (OERROR)
           err_mesg("UPDATE failed on table AR_CASHIER",0,"");

    }
}

sql_connect()
{
  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

fetch_parameter()
{

     EXEC SQL SELECT NVL(AR_INTERFACE_CODE, 'B')
                INTO :interface_code
                FROM AR_PARAMETER;

     if (OERROR)
         err_mesg("SELECT failed on table AR_PARAMETER",0,"");

		 interface_code.arr[interface_code.len] = '\0';


     EXEC SQL SELECT CURRENT_ACC_YEAR,CURRENT_ACC_MONTH,
                     PRIOR_POSTING_ALLOW_FLAG,
                     NVL(SUMMARY_PROCESS_FLAG,'X') 
                INTO :curr_acc_year,    :curr_acc_month,
                     :prior_post_allow, :gl_summ_pro_flag
                FROM GL_PARAMETER;

     if (OERROR)
         err_mesg("SELECT failed on table GL_PARAMETER",0,"");

     curr_acc_year.arr[curr_acc_year.len]       = '\0';
     curr_acc_month.arr[curr_acc_month.len]     = '\0';
     prior_post_allow.arr[prior_post_allow.len] = '\0';
     gl_summ_pro_flag.arr[gl_summ_pro_flag.len] = '\0';

     d_num_of_acc_periods = 0;

        EXEC SQL SELECT  NUM_OF_ACC_PERIODS , ACC_ENTITY_CODE,
		                 NO_OF_DECIMAL
              INTO       :d_sy_num_acc_per, :nd_acc_entity_code,
			             :nd_no_of_decimal
              FROM        SY_ACC_ENTITY
		      where       ACC_ENTITY_ID = :nd_facility_id;



     if (OERROR)
        err_mesg("SELECT failed on table SY_ACC_ENTITY",0,"");

d_curr_year  = atoi(curr_acc_year.arr);
d_curr_month = atoi(curr_acc_month.arr);
d_summ_flag  = gl_summ_pro_flag.arr[0];

}

ltrim(l_str)
char *l_str;
{
   char *ptr;
   ptr = l_str;
   while (*ptr== ' ') ptr++;
   for(;*ptr!='\0';ptr++,l_str++)
    *l_str = *ptr;
   *l_str = '\0';
}

fetch_detls()
{
    EXEC SQL SELECT ACCOUNTING_NAME,
		    TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'),
                    USER 
	     INTO   :comp_name,
		    :rep_date,
		    :oper_id
	     FROM   SY_ACC_ENTITY
		 where       ACC_ENTITY_ID = :nd_facility_id;;

    if(OERROR)
	    err_mesg("SELECT failed on table  SY_ACC_ENTITY",0,"");

    comp_name.arr[comp_name.len] = '\0';
    rep_date.arr[rep_date.len] = '\0';
    oper_id.arr[oper_id.len] = '\0';


}

open_files()
{
   if ((f1 = fopen(filename,"w")) == NULL)
   {
        err_mesg("\nError while opening File arborpst.lis\n",0,"");
        exit(0);
   }

}


chk_break(nol)
int nol;
{

	if(line_no+nol >= 55) {
           fprintf(f1,"");
           line_no = 1;
           ++page_no;
	   put_hdr();
	}

}


put_hdr()
{

    fprintf(f1,"MDL : AR                                       %30s                                       %s\n",comp_name.arr,rep_date.arr);

    fprintf(f1,"OPR : %s\n",oper_id.arr);

    fprintf(f1,"REP : ARBORPST                                        CASHIER RECEIPTS - POSTING                                         PAGE : %4d\n",page_no);

    fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"DOCUMENT  DOCUMENT    DOCUMENT     POST       DOCUMENT          CUSTOMER   CUSTOMER NAME                                   DOCUMENT \n");
    fprintf(f1,"TYPE        NUMBER    DATE         MTH/YR     REFERENCE         CODE                                                         AMOUNT \n");
    fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n");
    fprintf(f1,"\n");

    line_no=12;

}

put_doc_hdr()
{

    varchar s_amt[20];

    d_amt_local             = 0;
    d_conv_date_doc.arr[0]  = '\0';
    d_conv_date_bank.arr[0] = '\0';

    EXEC SQL SELECT TO_NUMBER(:d_rc_hdr_amt_local),
		    TO_CHAR(TO_DATE(:d_rc_hdr_doc_date,'DD/MON/YYYY'),'DD/MM/YYYY'),
		    TO_CHAR(TO_DATE(:d_rc_hdr_cheque_date,'DD/MON/YYYY'),'DD/MM/YYYY')
	     INTO   :d_amt_local,
		    :d_conv_date_doc,
		    :d_conv_date_bank
	     FROM   DUAL;

    if(OERROR)
	err_mesg("SELECT failed on table DUAL",0,"");

    d_conv_date_doc.arr[d_conv_date_doc.len] = '\0';
    d_conv_date_bank.arr[d_conv_date_bank.len] = '\0';

    g_tot += d_amt_local;

    if (nd_no_of_decimal == 3)
	   sprintf(s_amt,"%15.3f",d_amt_local);
    else
	   sprintf(s_amt,"%15.2f",d_amt_local);
	
	format_amt(s_amt,nd_no_of_decimal);

    chk_break(4); 

    fprintf(f1,"%-8s  %8s    %-12s  %2s/%4s",d_rc_hdr_doc_type_code.arr,
	    d_rc_hdr_doc_num.arr,d_conv_date_doc.arr,
	    d_rc_hdr_post_month.arr,d_rc_hdr_post_year.arr);

    fprintf(f1,"   %-15s   %-10s %-30s        %15s\n",d_rc_hdr_doc_ref.arr,
	    d_rc_hdr_cust_code.arr,d_ar_cust_long_name.arr,s_amt);
    fprintf(f1,"CHEQUE NO    : %-10s DATED : %-10s DRAWN ON BANK : %-30s\n",
	    d_rc_hdr_cheque_num.arr,d_conv_date_bank.arr,
	    d_rc_hdr_bank_desc.arr);
    get_acct_desc();
    fprintf(f1,"BANK A/C     : %s-%s %s %s-%s %s-%s   DESC : %s\n",
    d_rc_hdr_main_acc1_code_bk.arr, d_rc_hdr_main_acc2_code_bk.arr ,
    d_rc_hdr_dept_code_bk.arr ,d_rc_hdr_pr_group_code_bk.arr,
    d_rc_hdr_pr_line_code_bk.arr,d_rc_hdr_subl_group_code_bk.arr, 
    d_rc_hdr_subl_line_code_bk.arr,d_acct_desc_bank.arr);

    fprintf(f1,"SUSPENSE A/C : %s-%s %s %s-%s %s-%s   DESC : %s\n",
    d_rc_hdr_main_acc1_code_sp.arr, d_rc_hdr_main_acc2_code_sp.arr ,
    d_rc_hdr_dept_code_sp.arr ,d_rc_hdr_pr_group_code_sp.arr,
    d_rc_hdr_pr_line_code_sp.arr,d_rc_hdr_subl_group_code_sp.arr, 
    d_rc_hdr_subl_line_code_sp.arr,d_acct_desc_susp.arr);

    fprintf(f1,"NARRATION    : %s\n",d_rc_hdr_narration.arr);

    fprintf(f1,"\n\n");

    line_no += 7;

}


put_inp_parm()
{
    fprintf(f1,"MDL : AR                                       %30s                                       %s\n",comp_name.arr,rep_date.arr);
    fprintf(f1,"OPR : %s\n",oper_id.arr);
    fprintf(f1,"REP : ARBORPST                                        CASHIER RECEIPTS - POSTING                                         PAGE : %4d\n",page_no);
    fprintf(f1,"------------------------------------------------------------------------------------------------------------------------------------\n\n");


    fprintf(f1,"\n\n");
    fprintf(f1,"\n\n");
    fprintf(f1,"\tINPUT PARAMETERS\n");
    fprintf(f1,"\t----------------\n\n");
    fprintf(f1,"\t\tDOCUMENT TYPE   FROM  : %s\n",nd_fm_doc_type.arr);
    fprintf(f1,"\t\t                TO    : %s\n\n",nd_to_doc_type.arr);
    fprintf(f1,"\t\tDOCUMENT NUMBER FROM  : %s\n",nd_fm_doc_num.arr);
    fprintf(f1,"\t\t                TO    : %s\n\n",nd_to_doc_num.arr);
    fprintf(f1,"\t\tDOCUMENT DATE   FROM  : %s\n",nd_conv_fm_date.arr);
    fprintf(f1,"\t\t                TO    : %s\n\n",nd_conv_to_date.arr);
    fprintf(f1,"");
    ++page_no;


}


fetch_cust_dets()
{
    EXEC SQL OPEN AR_CUSTOMER_CUR;

    if (OERROR)
         err_mesg("OPEN failed on cursor AR_CUSTOMER_CUR",0,"");

    d_ar_cust_long_name.arr[0]          = '\0';
    d_ar_cust_long_name.len             = 0;

    EXEC SQL FETCH AR_CUSTOMER_CUR
              INTO :d_ar_cust_long_name;

    if (OERROR)
         err_mesg("FETCH failed on cursor AR_CUSTOMER_CUR",0,"");

     d_ar_cust_long_name.arr[d_ar_cust_long_name.len] = '\0';

}

get_acct_desc()
{

    d_acct_desc_bank.arr[0] = '\0';
    d_acct_desc_susp.arr[0] = '\0';

    EXEC SQL SELECT CONCAT_POST_ACC_DESC
	     INTO   :d_acct_desc_bank
	     FROM   GL_POSTING_ACC
	     WHERE  MAIN_ACC1_CODE       =  :d_rc_hdr_main_acc1_code_bk
	     AND    MAIN_ACC2_CODE       =  :d_rc_hdr_main_acc2_code_bk
	     AND    DEPT_CODE            =  :d_rc_hdr_dept_code_bk
	     AND    PRODUCT_GROUP_CODE   =  :d_rc_hdr_pr_group_code_bk
	     AND    PRODUCT_LINE_CODE    =  :d_rc_hdr_pr_line_code_bk
	     AND    SUBLEDGER_GROUP_CODE =  :d_rc_hdr_subl_group_code_bk
	     AND    SUBLEDGER_LINE_CODE  =  :d_rc_hdr_subl_line_code_bk;

    if(OERROR)
	err_mesg("SELECT failed on table GL_POSTING_ACC",0,"");


    d_acct_desc_bank.arr[d_acct_desc_bank.len] = '\0';

    EXEC SQL SELECT CONCAT_POST_ACC_DESC
	     INTO   :d_acct_desc_susp
	     FROM   GL_POSTING_ACC
	     WHERE  MAIN_ACC1_CODE       =  :d_rc_hdr_main_acc1_code_sp
	     AND    MAIN_ACC2_CODE       =  :d_rc_hdr_main_acc2_code_sp
	     AND    DEPT_CODE            =  :d_rc_hdr_dept_code_sp
	     AND    PRODUCT_GROUP_CODE   =  :d_rc_hdr_pr_group_code_sp
	     AND    PRODUCT_LINE_CODE    =  :d_rc_hdr_pr_line_code_sp
	     AND    SUBLEDGER_GROUP_CODE =  :d_rc_hdr_subl_group_code_sp
	     AND    SUBLEDGER_LINE_CODE  =  :d_rc_hdr_subl_line_code_sp;

    if(OERROR)
	err_mesg("SELECT failed on table GL_POSTING_ACC",0,"");


    d_acct_desc_susp.arr[d_acct_desc_susp.len] = '\0';

}


print_end_of_rep()
{
    varchar s_amt[20];

    if (nd_no_of_decimal == 3)
	   sprintf(s_amt,"%15.3f",g_tot);
    else
       sprintf(s_amt,"%15.2f",g_tot);
	
	format_amt(s_amt,nd_no_of_decimal);
    
	chk_break(5);

    fprintf(f1,"\n\n                                                                                    TOTAL  ------>                  %15s\n",s_amt);
    fprintf(f1,"\n\n                                              ** END OF REPORT **                                                               \n");
}
   