
/* Preprocessor Directives  */

#include <stdio.h>
#include <string.h>       
#include <math.h>
EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;
//#include <sqlca.h>
//#include <sqlda.h>  
#include <bl.h>
#include <winproc.h>   

/* Macros */

#define NODATAFOUND sqlca.sqlcode==1403
#define OERROR (sqlca.sqlcode < 0) 
#define MAX_LINES 55

/* Declarations */

EXEC SQL BEGIN DECLARE SECTION;	

	VARCHAR uid_pwd 	        [95],	        
	     	nd_sysdate              [31],		
		nd_user_id  	        [31],	
		nd_hospital_name	[61],		
		nd_patient_id		[21],
		nd_patient_name		[61],
		nd_patient_name1	[61],
		nd_blng_group		[3],
		nd_hcard_no		[21], 
		nd_nationality		[16] ,
		nd_new_expiry_date	[11],
		nd_initial_expiry_date	[11],
		nd_from_expiry_date	[11],
		nd_to_expiry_date	[11],
		nd_to_tran_date		[11],
		nd_from_tran_date	[11],
		nd_doc_date		[20],
		nd_doc_type		[7] ,
		nd_hcard_status		[2] ,
		nd_prev_hcard_status	[2] ,
		nd_not_conv_stat	[2] ,
		nd_conv_stat		[2] ,
		nd_report_type		[2] ,
		nd_session_id		[20],
		nd_pgm_date		[30],
		nd_p_facility_id	[4],
		nd_pgm_id		[20];		

	char    nd_filename	        [100];
		

	long  	nd_doc_no		,
		nd_tot_hcard		,
		check	= 2		,
		nd_fmt_string		;

	double	nd_doc_amt		,
		nd_tot_doc_amt		;
		

EXEC SQL END DECLARE SECTION;

	FILE 	*f1;
	int	page = 0;
	int	line = 0;

void proc_main(argc, argv)
		int 	argc;
		char 	*argv[];
{    
   void prt_line(int l, char spl_symbol[1]);
   void prt_hdr_initial();
   void prt_hdr();    
   void dec_cursor();
   void open_cursor();
   void close_cursor();
   int  fetch_cursor();  
   void report_process();
   void line_check();
   void rec_prt();
   void tot_amt();
   

/* INPUT ARGUMENT CHECK */

     if(argc < 8) 
     {
	     disp_message(ORA_MESG, "Usage BLRHIBCL uid/passwd@db Session Pgm-Date From-Expiry-Date To-Expiry-Date Converted-Status Not-Converted-Status Facility");
	     proc_exit();
     }

     strcpy(nd_pgm_id.arr, argv[0]);
     nd_pgm_id.len = strlen(nd_pgm_id.arr);      
     strcpy(g_pgm_id, nd_pgm_id.arr);

     strcpy(uid_pwd.arr, argv[1]);
     uid_pwd.len = strlen(uid_pwd.arr);      

     strcpy(nd_session_id.arr, argv[2]);
     nd_session_id.len = strlen(nd_session_id.arr);      	 
     strcpy(g_session_id,nd_session_id.arr);

     strcpy(nd_pgm_date.arr, argv[3]);
     nd_pgm_date.len = strlen(nd_pgm_date.arr);      	 	     
     strcpy(g_pgm_date,nd_pgm_date.arr);
	
     strcpy(nd_from_expiry_date.arr,argv[5]);
     nd_from_expiry_date.len = strlen(nd_from_expiry_date.arr); 

     strcpy(nd_to_expiry_date.arr,argv[6]);
     nd_to_expiry_date.len = strlen(nd_to_expiry_date.arr); 

     strcpy(nd_from_tran_date.arr,argv[7]);
     nd_from_tran_date.len = strlen(nd_from_tran_date.arr); 

     strcpy(nd_to_tran_date.arr,argv[8]);
     nd_to_tran_date.len = strlen(nd_to_tran_date.arr); 

     strcpy(nd_conv_stat.arr,argv[9]);
     nd_conv_stat.len = strlen(nd_conv_stat.arr); 

     strcpy(nd_not_conv_stat.arr,argv[10]);
     nd_not_conv_stat.len = strlen(nd_not_conv_stat.arr); 

     strcpy(nd_p_facility_id.arr, argv[11]);
     nd_p_facility_id.len = strlen(nd_p_facility_id.arr);      	 
     strcpy(g_facility_id,nd_p_facility_id.arr);
       
/* DB LOGIN */

    EXEC SQL CONNECT :uid_pwd;
    if (OERROR) 
    {
    	disp_message (ORA_MESG, "USERID/PASSWORD failed to Connect");
        proc_exit();  
    }	  	

    set_meduser_role();

/* OUTPUT FILE */     

	strcpy(nd_filename,WORKING_DIR);   
	strcat(nd_filename,argv[0]);
	strcat(nd_filename,".lis");
	if((f1 = fopen(nd_filename, "w")) == NULL) 
	{
		 disp_message (ERR_MESG, " Error opening output file ....");
		 proc_exit();
        } 
	
  nd_sysdate.arr[0]		= '\0';  
  nd_sysdate.len		= 0;
  EXEC SQL SELECT to_char(SYSDATE,'DD/MM/YYYY HH24:MI') INTO :nd_sysdate FROM dual;
  nd_sysdate.arr[nd_sysdate.len]       = '\0';  

  nd_user_id.arr[0]		= '\0';  
  nd_user_id.len		=0;  
  EXEC SQL SELECT USER INTO :nd_user_id FROM dual;
  nd_user_id.arr[nd_user_id.len]       = '\0';  
  
  nd_hospital_name.arr[0]	= '\0';         
  nd_hospital_name.len 		= 0;     
  EXEC SQL SELECT accounting_name INTO :nd_hospital_name FROM sy_acc_entity
           WHERE acc_entity_id = :nd_p_facility_id;

  nd_hospital_name.arr[nd_hospital_name.len]	= '\0';  


/* PROCESS */   
  
   prt_hdr_initial();  
   report_process(); 
  
/* CLOSE FILE */
   EXEC SQL COMMIT RELEASE; 
   fclose(f1);   
   return;
   
}

void line_check()
{
   if (line > MAX_LINES)
   {
	fprintf(f1,"\f");	
	prt_hdr();
   }
}       

void prt_hdr_initial()
{     
   line = 0;    
   page = page +1;
   fprintf(f1,"\n");       
   fprintf(f1,"MDL : BL");
   prt_line(45," "); 
   fprintf(f1,"%-31s",nd_hospital_name.arr);
   prt_line(29," "); 
   fprintf(f1,"%-20s",nd_sysdate.arr);           
   fprintf(f1,"\n"); 
   fprintf(f1,"OPR : %-25s",nd_user_id.arr); 
   fprintf(f1,"Health Card Status Changed / Not Changed from Temporary to Permanent");               

   fprintf(f1,"             	Page :%-4d",page);           
   fprintf(f1,"\n"); 
   fprintf(f1,"REP : BLRHIBCL"); 
   fprintf(f1,"					Period From %-10s TO %-10s ",nd_from_expiry_date.arr,nd_to_expiry_date.arr);
   fprintf(f1,"\n"); 	
   prt_line(144,"-");     
   fprintf(f1,"\n");    
   fprintf(f1,"VER : 4.1");
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    
   fprintf(f1,"		INPUT PARAMETERS:");
   fprintf(f1,"\n");    
   fprintf(f1,"		-----------------");    
   fprintf(f1,"\n");    
   fprintf(f1,"\n");    

   fprintf(f1,"			Expiry Date 						  From : %-10s",nd_from_expiry_date.arr);
   fprintf(f1,"\n");    
   fprintf(f1,"				    						  To   : %-10s",nd_to_expiry_date.arr);
   fprintf(f1,"\n");    
   
   fprintf(f1,"			Transaction  Date 					  From : %-10s",nd_from_tran_date.arr);
   fprintf(f1,"\n");    
   fprintf(f1,"				    						  To   : %-10s",nd_to_tran_date.arr);

   fprintf(f1,"\n");    
   fprintf(f1,"			Show Health Cards not yet Converted to Permanent Status	:(Y/N) : %-2s",nd_not_conv_stat.arr);
   fprintf(f1,"\n");    
   fprintf(f1,"			Show Health Cards already Converted to Permanent Status	:(Y/N) : %-2s",nd_conv_stat.arr);
   fprintf(f1,"\n");    

   line = MAX_LINES + 1;
   
}

	
void prt_hdr()
{     
   line = 0;    
   page = page +1;
   fprintf(f1,"\n");       
   fprintf(f1,"MDL : BL");
   prt_line(45," "); 
   fprintf(f1,"%-30s",nd_hospital_name.arr);
   prt_line(29," "); 
   fprintf(f1,"%-16s",nd_sysdate.arr);           
   fprintf(f1,"\n"); 
   fprintf(f1,"OPR : %-25s",nd_user_id.arr); 
   fprintf(f1,"Health Card Status Changed / Not Changed from Temporary to Permanent");
   fprintf(f1,"			Page :%-4d",page);           
   fprintf(f1,"\n"); 
   fprintf(f1,"REP : BLRHIBCL"); 
   prt_line(15," ");    
   fprintf(f1,"      	       Expiry Date From %-10s To %-10s ",nd_from_expiry_date.arr,nd_to_expiry_date.arr);
   prt_line(25," "); 
   fprintf(f1,"\n"); 
   fprintf(f1,"\n"); 
   if (check == 1)     
   { fprintf(f1,"Report Option: Health Cards converted to Permanent Status");   }
   else	
   {  fprintf(f1,"Report Option: Health Cards not yet converted to Permanent Status"); }
   fprintf(f1,"\n");    
   prt_line(144,"-");     
   fprintf(f1,"\n");    
   if (check == 1)      
   {
   fprintf(f1,"Patinet Id Name                                Nationality     BG Health               Expiry Date Receipt           Doc Date           Amount New Expiry ");
   fprintf(f1, "\n");   
   fprintf(f1,"						   	          Card No             (Temporary)  Doc Type / No 	 	                    Date");
   }
   else
   {
   fprintf(f1,"Patinet Id Name                                Nationality     BG Health              Expiry Date Receipt           Doc Date           Amount ");
   fprintf(f1, "\n");   
   fprintf(f1,"						   	          Card No             (Temporary)  Doc Type / No 	 		   ");
   }	   
   fprintf(f1, "\n");   
   prt_line(144,"-");  
   fprintf(f1, "\n");   
   line = line + 7;  
}

void prt_line(int line_length, char spl_symbol[1])
{  
 int i;  
  for(i=1;i<=line_length;i=i+1)
	 {fprintf(f1,spl_symbol);}
}
  
void dec_cursor()
{  
  /*char xmsg[200];
  sprintf(xmsg,"[%s] [%s] ", nd_from_tran_date.arr, nd_to_tran_date.arr);
  disp_message(ERR_MESG,xmsg);
*/
  EXEC SQL DECLARE hcard_cursor CURSOR FOR   
  SELECT a.patient_id 		patient_id	,  
	a.hcard_num  		hcard_no	,
	to_char(a.hcard_doc_date,'dd/mm/yyyy')
				doc_date	,
	to_char(a.hcard_expiry_date,'dd/mm/yyyy')
				new_expiry_date	,
	to_char(b.hcard_expiry_date_initial,'dd/mm/yyyy')
				initial_expiry_date,
	a.hcard_status		hcard_status	,
	a.hcard_doc_type	doc_type	,
	a.hcard_doc_num		doc_no		,
	b.doc_amt		doc_amt	,
	substr(c.patient_name,1,25)		patient_name,
    substr(c.patient_name,26,60)	patient_name1,
	d.short_desc		nationality	,
	c.pat_ser_grp_code	blng_group	,
	e.no_of_decimal		fmt_string			
  FROM	bl_patient_fin_dtls a,
	bl_health_card_trn  b,
	mp_patient	    c,
	mp_country	    d,
	sy_acc_entity	    e
  WHERE	a.patient_id 		= b.patient_id
  AND	a.hcard_doc_type	= b.doc_type_code
  AND	a.hcard_doc_num		= b.doc_number
  AND	trunc(a.hcard_doc_date)	= trunc(b.doc_date)
  AND	a.hcard_expiry_date BETWEEN TO_DATE(:nd_from_expiry_date,'DD/MM/YYYY')
			     AND    TO_DATE(:nd_to_expiry_date  ,'DD/MM/YYYY')
  AND	b.doc_date  BETWEEN TO_DATE(:nd_from_tran_date,'DD/MM/YYYY')
			     AND    TO_DATE(:nd_to_tran_date  ,'DD/MM/YYYY')
  AND	((b.hcard_status_initial='T' AND a.hcard_status = 'P' AND 
	:nd_conv_stat = 'Y') OR 
	(b.hcard_status_initial='T' AND a.hcard_status = 'T' AND 
	:nd_not_conv_stat = 'Y'))
  AND	c.patient_id		= b.patient_id
  AND	nvl(c.active_yn,'N')    =       'Y'  
  AND	d.country_code		= c.nationality_code   
  AND   b.operating_facility_id     = e.acc_entity_id
  AND   b.operating_facility_id     = :nd_p_facility_id
  ORDER BY a.hcard_status desc,
	 a.hcard_expiry_date;
return;

 }

void open_cursor()
{ 
 EXEC SQL OPEN hcard_cursor;
 if (sqlca.sqlcode < 0) 
 {     disp_message (ORA_MESG, "Open HCard Cursor Failed");
       proc_exit();
 } 
 return;
 }

int fetch_cursor()
{ 

		nd_patient_id.arr[0]		= '\0';
		nd_hcard_no.arr[0]		= '\0';
		nd_doc_date.arr[0]		= '\0';
		nd_new_expiry_date.arr[0]	= '\0';
		nd_initial_expiry_date.arr[0]	= '\0';
		nd_hcard_status.arr[0]		= '\0';
		nd_doc_type.arr[0]		= '\0';
		nd_doc_no = 0;
		nd_doc_amt			= 0;
		nd_patient_name.arr[0]		= '\0';
		nd_patient_name1.arr[0]		= '\0';
		nd_nationality.arr[0]		= '\0';
		nd_blng_group.arr[0]		= '\0';
		nd_fmt_string	= 0;


		nd_patient_id.len = 0;
		nd_hcard_no.len =0;
		nd_doc_date.len =0;
		nd_new_expiry_date.len =0;
		nd_initial_expiry_date.len =0;
		nd_hcard_status.len =0;
		nd_doc_type.len =0;	
		nd_patient_name.len =0;
		nd_patient_name1.len =0;
		nd_nationality.len =0;
		nd_blng_group.len =0;


  EXEC SQL FETCH hcard_cursor 
	   INTO :nd_patient_id		,
		:nd_hcard_no		,		
		:nd_doc_date		,
		:nd_new_expiry_date	,
		:nd_initial_expiry_date	,
		:nd_hcard_status	,
		:nd_doc_type		,
		:nd_doc_no		,
		:nd_doc_amt		,
		:nd_patient_name	,
		:nd_patient_name1   ,
		:nd_nationality		,
		:nd_blng_group		,
		:nd_fmt_string		;

    if (NODATAFOUND)
    return 0;

    nd_patient_id.arr[nd_patient_id.len]		= '\0';
    nd_hcard_no.arr[nd_hcard_no.len]		 	= '\0';
    nd_doc_date.arr[nd_doc_date.len]			= '\0';
    nd_new_expiry_date.arr[nd_new_expiry_date.len]	= '\0';
    nd_initial_expiry_date.arr[nd_initial_expiry_date.len]= '\0';
    nd_hcard_status.arr[nd_hcard_status.len]		= '\0';	
    nd_doc_type.arr[nd_doc_type.len]			= '\0';	
    nd_blng_group.arr[nd_blng_group.len]		= '\0';
    nd_patient_name.arr[nd_patient_name.len]		= '\0';
	nd_patient_name1.arr[nd_patient_name1.len]		= '\0';
    nd_nationality.arr[nd_nationality.len]		= '\0';

    return 1;	

 }

void close_cursor()
{ 
 EXEC SQL CLOSE hcard_cursor;
 return;
 }

print_formated(loc_amount)
double loc_amount;
{
	char s_amt[30], str_amt[30];	

    if(loc_amount < 0)
	{
        put_val(s_amt,-loc_amount);
        format_amt(s_amt);
	strcat(s_amt,"-");
        sprintf(str_amt,"%15s",s_amt);        
        fprintf(f1,"%15s",str_amt);
        }
    else 
	{
        put_val(s_amt,loc_amount);        
        format_amt(s_amt);	
        sprintf(str_amt,"%15s",s_amt);
        fprintf(f1,"%15s",str_amt);
        }
}


void rec_prt()
{
     
	fprintf(f1,"%-20.20s"		,nd_patient_id.arr); 				
	fprintf(f1," %-25.25s"     	,nd_patient_name.arr);
	fprintf(f1," %-15s"   		,nd_nationality.arr);
	fprintf(f1," %-2s"  		,nd_blng_group.arr);
	fprintf(f1," %-20.20s"  	,nd_hcard_no.arr);
        if (strcmp(nd_hcard_status.arr,"T") == 0)
	{fprintf(f1," %-11s"  		,nd_new_expiry_date.arr);}
	else
	{fprintf(f1," %-11s"  		,nd_initial_expiry_date.arr);}
	fprintf(f1," %-6s / %-8d"	,nd_doc_type.arr,nd_doc_no);        
	fprintf(f1," %-10s"		,nd_doc_date.arr);	
	/*
	if (nd_fmt_string == 3)
        {
	fprintf(f1," %-6.3f"		,nd_doc_amt);
	}
        else
	{
	fprintf(f1," %-6.2f"		,nd_doc_amt);
	}
	*/
	
	print_formated(nd_doc_amt);

	if (strcmp(nd_hcard_status.arr,"P")==0)
	fprintf(f1," %-10s"  		,nd_new_expiry_date.arr);
      
        fprintf(f1, "\n");   	
    
	if(strlen(nd_patient_name1.arr) > 2)
	{
		fprintf(f1,"%20s %s \n"," ",nd_patient_name1.arr);
		line++;
	}


	line = line + 1;	
	line_check();
}	


void tot_amt()
{	/*
        if (nd_fmt_string == 3 )
        { fprintf(f1, "                          Total:   %-12.3f",nd_tot_doc_amt);}
        else
	{fprintf(f1, "      Total:   %-12.2f",nd_tot_doc_amt);}
	*/           
	fprintf(f1, "Total: ");
	print_formated(nd_tot_doc_amt);
}


void report_process()
{        
    int fetch_cursor_check;
	
	nd_tot_hcard	= 0;
	nd_tot_doc_amt	= 0;	

	dec_cursor();
	open_cursor();	 	

        fetch_cursor_check = fetch_cursor();   
	strcpy(nd_prev_hcard_status.arr,nd_hcard_status.arr);	
        nd_prev_hcard_status.len = strlen(nd_prev_hcard_status.arr); 	

	if (strcmp(nd_hcard_status.arr,"T") ==0 )
        {check = 0;}
        else
	{check = 1;}
	line_check();
         
  while(fetch_cursor_check)    
  {
   if (strcmp(nd_prev_hcard_status.arr,nd_hcard_status.arr)==0)
     {
	rec_prt();
	
     }
     else
     {  
	fprintf(f1, "\n");   		
	line = line + 1;	
	line_check();
        prt_line(66," ");
        fprintf(f1, "                     Total No. of Health Cards : %-5d ",nd_tot_hcard);

	tot_amt();        

	nd_tot_doc_amt = 0;
        nd_tot_hcard   = 0;
	
        line = MAX_LINES + 1; 

	if (strcmp(nd_hcard_status.arr,"T") ==0 )
        {check = 0;}
        else
	{check = 1;}

        line_check();	

	rec_prt();	
     }
	nd_tot_hcard = nd_tot_hcard + 1;
	nd_tot_doc_amt = nd_tot_doc_amt + nd_doc_amt;

	strcpy(nd_prev_hcard_status.arr,nd_hcard_status.arr);	
        nd_prev_hcard_status.len = strlen(nd_prev_hcard_status.arr); 	
	
        fetch_cursor_check = fetch_cursor();      
    }


	fprintf(f1, "\n");   		
	line = line + 1;	
	line_check();
	prt_line(66," ");
        fprintf(f1, "                    Total No. of Health Cards : %-5d ",nd_tot_hcard);
	
        tot_amt();
     
 	 fprintf(f1,"\n");
	 fprintf(f1,"\n");
	 prt_line(58," "); 
	 fprintf(f1,"*** End Of Report ***");
         fprintf(f1, "\n");   	 
	 close_cursor();
}
