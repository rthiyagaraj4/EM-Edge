/************************************************************************/
/* OCS MEDICOM VER 1.0                                                     */
/************************************************************************/
/* PROGRAM NAME          : GLBCBMSL.PC                                  */
/* AUTHOR                : S. SRIRAM                                    */
/* DATE WRITTEN          : 14-FEB-1993                                  */
/*                                                                      */
/* CONVERTED BY 		 : C. Ganesan ( 28/01/96 )                      */
/*                                                                      */
/* CALLED FROM           :                                               */
/*                                                                      */
/*  FUNCTION             :   Creates combination of records in          */
/*                           GL_MAIN_SUBLEDGER                          */
/*                                                                      */
/*  TABLE DETAILS                                                       */
/*                                                                      */
/*        S. No.       TABLENAMES             INPUT/OUTPUT              */
/*                                                                      */
/*          1.        GL_MAIN_SUBLEDGER       Query/Insert              */
/*          2.        GL_ACC_CHART               Lookup                 */
/*          4.        GL_PARAMETER               Lookup                 */
/*          5.        GL_SUBLEDGER_GROUP         Lookup                 */
/*          6.        GL_SUBLEDGER_LINE          Lookup                 */
/*          7.        SY_PROG_MSG                Insert                 */
/*          8.        SY_PROG_CONTROL         Query/Update              */
/*                                                                      */
/*  PARAMETERS           :                                              */
/*                                                                      */
/*      S. No.       Field Names                Default Values          */
/*                                                                      */
/*          1.  MAIN_ACC1_CODE From                Spaces               */
/*          2.  MAIN_ACC1_CODE To                 '~~~~~~'              */
/*          3.  MAIN_ACC2_CODE From                Spaces               */
/*          4.  MAIN_ACC2_CODE To                  '~~~~'               */
/*          5.  SUBLEDGER_GROUP_CODE From          Spaces               */
/*          6.  SUBLEDGER_GROUP_CODE To            '~~~'                */
/*          7.  SUBLEDGER_LINE_CODE From           Spaces               */
/*          8.  SUBLEDGER_LINE_CODE To            '~~~~~~~~'            */
/*                                                                      */
/*                                                                      */
/************************************************************************/

#include <stdio.h>
#include <string.h>
#include "gl.h" 
#include "bl.h"

#define LAST_ROW (sqlca.sqlcode == 1403)

#define NOT_FOUND (sqlca.sqlerrd[2] == 0)
/*
#define DEBUG 0
*/
#define SL_APPL  (d_subledger_applicable_flag.arr[0] == 'Y')  
#define VIEW_LOG_FILE   1

EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR uid_pwd[40];  
                                                   /* LENGTH */
   VARCHAR  nd_session_id                [16],      
            nd_fm_main_acc1_code         [8],       /*   6    */
            nd_to_main_acc1_code         [8],       /*   6    */
            nd_fm_main_acc2_code         [6],       /*   4    */
            nd_to_main_acc2_code         [6],       /*   4    */
            nd_fm_subledger_group_code   [4],       /*   3    */
            nd_to_subledger_group_code   [4],       /*   3    */
            nd_fm_subledger_line_code    [10],      /*   8    */
            nd_to_subledger_line_code    [10],      /*   8    */
 
            d_subledger_applicable_flag  [2],       /*   1    */
            d_main_acc1_code             [8],       /*   6    */
            d_main_acc2_code             [6],       /*   4    */
            d_subledger_group_code       [4],       /*   3    */
            d_subledger_line_code        [10],      /*   8    */
	    d_pgm_date                   [14],      /*   12   */
            dummy                        [10][10];
 
EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA.H;
EXEC SQL INCLUDE SQLDA.H;

#include "winproc.h"

void declare_cursors(),
     fetch_param(),
     open_acc_chart_cur(),
     open_subledger_group(),
     open_subledger_line(),
     del_param(),
     insert_combination();

int fetch_acc_chart(),
    fetch_subledger_group(),
    fetch_subledger_line(),
    sql_connect();


void chk_active();
void start_prog_msg();
void start_prog_control();
void end_prog_msg();
void end_prog_control();
void err_mesg(char *, int, char *);
int  get_message(char *, char *);


     
void proc_main(argc,argv)
char *argv[];
int argc;
{
   if (argc != 5)
   {
      disp_message ( ERR_MESG, "Usage glbcbmsl uid/passwd session_id pgm_date facility_id");
      proc_exit();
   }

   
   strcpy(nd_session_id.arr,argv[2]);
   nd_session_id.len = strlen(nd_session_id.arr);

   
   strcpy(uid_pwd.arr,argv[1]);
   uid_pwd.len = strlen(uid_pwd.arr);
   strcpy(g_pgm_id,"GLBCBMSL");

  
   strcpy(d_pgm_date.arr,argv[3]);
   d_pgm_date.len = strlen(d_pgm_date.arr);
   strcpy(g_pgm_date,argv[3]);

  
   if(sql_connect() == -1)
   {
      disp_message (ERR_MESG, "Error in connecting to Oracle");
      if (uid_pwd.len == 0)
         disp_message (ERR_MESG, "Null oracle uid/pwd");  
      proc_exit(); 
   }

   set_meduser_role();

   chk_active();

   EXEC SQL SELECT PARAM1,PARAM2,PARAM3,PARAM4,
                   PARAM5,PARAM6,PARAM7,PARAM8
              INTO :nd_fm_main_acc1_code,
                   :nd_fm_main_acc2_code,
                   :nd_to_main_acc1_code,
                   :nd_to_main_acc2_code,
                   :nd_fm_subledger_group_code,
                   :nd_fm_subledger_line_code,
                   :nd_to_subledger_group_code,
                   :nd_to_subledger_line_code
              FROM SY_PROG_PARAM
             WHERE PGM_ID     = 'GLBCBMSL' 
               AND SESSION_ID = :nd_session_id 
	       AND PGM_DATE   = :d_pgm_date;

    if (OERROR) err_mesg("Error while Fetching the Parameters",0,"");

    if (NOT_FOUND) 
    {
      char err_msg[68];
      sprintf (err_msg, "Session_id <%s> & Pgm_id GLBCBMSL\n",nd_session_id.arr);
      disp_message ( ERR_MESG, err_msg);
      err_mesg("Record not existing in Parameter Table\n",0,"");
    } 

 nd_fm_main_acc1_code.arr[nd_fm_main_acc1_code.len]             = '\0';
 nd_to_main_acc1_code.arr[nd_to_main_acc1_code.len]             = '\0';
 nd_fm_main_acc2_code.arr[nd_fm_main_acc2_code.len]             = '\0';
 nd_to_main_acc2_code.arr[nd_to_main_acc2_code.len]             = '\0';
 nd_fm_subledger_group_code.arr[nd_fm_subledger_group_code.len] = '\0';
 nd_to_subledger_group_code.arr[nd_to_subledger_group_code.len] = '\0';
 nd_fm_subledger_line_code.arr[nd_fm_subledger_line_code.len]   = '\0';
 nd_to_subledger_line_code.arr[nd_to_subledger_line_code.len]   = '\0';

/*

#ifdef DEBUG

   printf("acc1 fr is <%s>\n",nd_fm_main_acc1_code.arr);
   printf("acc1 to is <%s>\n",nd_to_main_acc1_code.arr);
   printf("acc2 fr is <%s>\n",nd_fm_main_acc2_code.arr);
   printf("acc2 to is <%s>\n",nd_to_main_acc2_code.arr);
   printf("subledger gr fr is <%s>\n",nd_fm_subledger_group_code.arr);
   printf("subledger gr to is <%s>\n",nd_to_subledger_group_code.arr);
   printf("subledger ln fr is <%s>\n",nd_fm_subledger_line_code.arr);
   printf("subledger ln to is <%s>\n",nd_to_subledger_line_code.arr);
#endif

*/

   start_prog_control();
   
   start_prog_msg();
   
   fetch_param();
  
   declare_cursors();
   

    if (SL_APPL)
    {
       open_acc_chart_cur();
/*
#ifdef DEBUG
  printf("After opening cursor\n");
#endif
*/
       while (fetch_acc_chart())
       {
/*
#ifdef DEBUG
  printf("After fetching Main acc <%s> - <%s>\n",d_main_acc1_code.arr,
                  d_main_acc2_code.arr);
#endif
*/ 
          open_subledger_group();
            while (fetch_subledger_group())
            {
                open_subledger_line();
                while (fetch_subledger_line())
                {
                  insert_combination();
                }
            }
        }
        EXEC SQL COMMIT WORK;
    }
    end_prog_msg();
    end_prog_control();
    del_param();
    EXEC SQL COMMIT WORK RELEASE;
    return;
}
 
void declare_cursors()
{

    EXEC SQL DECLARE   GL_ACC_CHART_CUR CURSOR FOR
              SELECT   MAIN_ACC1_CODE,
                       MAIN_ACC2_CODE
                FROM   GL_ACC_CHART
               WHERE   MAIN_ACC1_CODE||MAIN_ACC2_CODE >= 
                               NVL(:nd_fm_main_acc1_code,'      ')||
                               NVL(:nd_fm_main_acc2_code,'    ')
                 AND   MAIN_ACC1_CODE||MAIN_ACC2_CODE <= 
                               NVL(:nd_to_main_acc1_code,'~~~~~~')||
                               NVL(:nd_to_main_acc2_code,'~~~~')
                 AND   NVL(SUMMARY_ACC_FLAG,'X')  != 'Y'
                 AND   STATUS IS NULL
                 AND   SUBLEDGER_ENTRY_FLAG = 'Y';

    EXEC SQL DECLARE   GL_SUBLEDGER_GROUP_CUR CURSOR FOR
              SELECT   SUBLEDGER_GROUP_CODE
                FROM   GL_SUBLEDGER_GROUP
               WHERE   SUBLEDGER_GROUP_CODE >=
                              NVL(:nd_fm_subledger_group_code,'   ')
                 AND   SUBLEDGER_GROUP_CODE <=
                              NVL(:nd_to_subledger_group_code,'~~~')
                 AND   STATUS IS NULL;

    EXEC SQL DECLARE   GL_SUBLEDGER_LINE_CUR CURSOR FOR
              SELECT   SUBLEDGER_LINE_CODE
                FROM   GL_SUBLEDGER_LINE
               WHERE   SUBLEDGER_GROUP_CODE = :d_subledger_group_code
                 AND   SUBLEDGER_GROUP_CODE || SUBLEDGER_LINE_CODE >=
                              NVL(:nd_fm_subledger_group_code,'   ')||
                              NVL(:nd_fm_subledger_line_code,'        ')
                 AND   SUBLEDGER_GROUP_CODE || SUBLEDGER_LINE_CODE <=
                              NVL(:nd_to_subledger_group_code,'~~~')||
                              NVL(:nd_to_subledger_line_code,'~~~~~~~~')
                 AND   STATUS IS NULL;
}

void fetch_param()
{
  d_subledger_applicable_flag.arr[0]     = '\0';
  d_subledger_applicable_flag.len        = 0;

   EXEC SQL SELECT   SUBLEDGER_APPLICABLE_FLAG
              INTO   :d_subledger_applicable_flag
              FROM   GL_PARAMETER;

    if (OERROR) err_mesg("Error while Fetching Parameters..",0,"");

    d_subledger_applicable_flag.arr[d_subledger_applicable_flag.len]     = '\0';

    if (NOT_FOUND)
    {
       err_mesg("No Record Exists in GL_PARAMETER",0,"");
    }
}

void open_acc_chart_cur()
{
    EXEC SQL OPEN GL_ACC_CHART_CUR;
    if (OERROR) err_mesg("Error while opening GL_ACC_CHART_CURSOR..",0,"");
}

int fetch_acc_chart()
{
 
    d_main_acc1_code.arr[0]       = '\0';
    d_main_acc2_code.arr[0]       = '\0';

    d_main_acc1_code.len          = 0;
    d_main_acc2_code.len          = 0;

    EXEC SQL FETCH   GL_ACC_CHART_CUR
              INTO   :d_main_acc1_code,
                     :d_main_acc2_code;

    if (OERROR) err_mesg("Error while Fetching GL_ACC_CHART_CURSOR..",0,"");

    d_main_acc1_code.arr[d_main_acc1_code.len]             = '\0';
    d_main_acc2_code.arr[d_main_acc2_code.len]             = '\0';
 
    if (LAST_ROW)
        return (0);
    else
        return (1);
}

void open_subledger_group()
{
   EXEC SQL OPEN GL_SUBLEDGER_GROUP_CUR;

   if (OERROR) err_mesg("Error while opening GL_SUBLEDGER_GROUP_CUR",0,"");
}

int fetch_subledger_group()
{
    d_subledger_group_code.arr[0] = '\0';
    d_subledger_group_code.len    = 0;

    EXEC SQL FETCH   GL_SUBLEDGER_GROUP_CUR
              INTO   :d_subledger_group_code;

    if (OERROR) err_mesg("Error while fetching GL_SUBLEDGER_GROUP_CUR",0,"");
  
    d_subledger_group_code.arr[d_subledger_group_code.len] = '\0';
/*
#ifdef DEBUG
   printf("Subledger gr is <%s> <%d>\n",d_subledger_group_code.arr,
                     d_subledger_group_code.len);
#endif
*/

    if (LAST_ROW)
       return(0);
    else 
       return(1); 
}

void open_subledger_line()
{
   EXEC SQL OPEN GL_SUBLEDGER_LINE_CUR;

   if (OERROR) err_mesg("Error while opening GL_SUBLEDGER_LINE_CUR",0,"");
}

int fetch_subledger_line()
{
    d_subledger_line_code.arr[0]  = '\0';
    d_subledger_line_code.len     = 0;

    EXEC SQL FETCH   GL_SUBLEDGER_LINE_CUR
              INTO   :d_subledger_line_code;

   if (OERROR) err_mesg("Error while fetching GL_SUBLEDGER_LINE_CUR",0,"");
 
   d_subledger_line_code.arr[d_subledger_line_code.len]  = '\0';
/*  
#ifdef DEBUG
   printf("Subledger ln is <%s> <%d>\n",d_subledger_line_code.arr,
                     d_subledger_line_code.len);
#endif
*/

   if (LAST_ROW)
      return(0);
   else 
      return(1); 
}

int sql_connect()
{

  EXEC SQL CONNECT :uid_pwd;

  if (sqlca.sqlcode < 0)
      return(-1);
  return(0);
}

void del_param()
{
	EXEC SQL DELETE SY_PROG_PARAM
	         WHERE  PGM_ID     = 'GLBCBMSL' 
		 AND    SESSION_ID = :nd_session_id 
	         AND    PGM_DATE   = :d_pgm_date;
    if(OERROR) 
	err_mesg("Deleting records from SY_PROG_PARAM",0,""); 
}

void insert_combination()
{
 
    EXEC SQL SELECT 'X' 
               INTO :dummy
               FROM GL_MAIN_SUBLEDGER
              WHERE MAIN_ACC1_CODE = :d_main_acc1_code
                AND MAIN_ACC2_CODE = :d_main_acc2_code
                AND SUBLEDGER_GROUP_CODE = :d_subledger_group_code
                AND SUBLEDGER_LINE_CODE = :d_subledger_line_code;

    if (OERROR)
         err_mesg("SELECT failed on table GL_MAIN_SUBLEDGER",0,"");
        
    if (NOT_FOUND)
    {
       EXEC SQL INSERT INTO GL_MAIN_SUBLEDGER
                     (
                       MAIN_ACC1_CODE,
                       MAIN_ACC2_CODE,
                       SUBLEDGER_GROUP_CODE,
                       SUBLEDGER_LINE_CODE
                     )
               VALUES 
                     (
                       :d_main_acc1_code,
                       :d_main_acc2_code,
                       :d_subledger_group_code,
                       :d_subledger_line_code
                     );
         if (OERROR)
               err_mesg("INSERT failed on table GL_MAIN_SUBLEDGER",0,"");
      }

}
